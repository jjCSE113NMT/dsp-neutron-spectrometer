
STM32F469I-DISCO-REV-AU1.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000216c4  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002a18  08021884  08021884  00031884  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 000000bc  0802429c  0802429c  0003429c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  08024358  08024358  0048e7d4  2**0
                  CONTENTS
  5 .ARM          00000008  08024358  08024358  00034358  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  08024360  08024360  0048e7d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  08024360  08024360  00034360  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  08024378  08024378  00034378  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000140  20000000  08024380  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          00011fac  20000140  080244c0  00040140  2**3
                  ALLOC
 11 ._user_heap_stack 00002004  200120ec  080244c0  000420ec  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  0048e7d4  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 0043d5ac  90000000  90000000  00050000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 14 FontFlashSection 00001104  9043d5ac  9043d5ac  0048d5ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 00000124  9043e6b0  9043e6b0  0048e6b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   00062ddd  00000000  00000000  0048e804  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   001023ab  00000000  00000000  004f15e1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 0001a89e  00000000  00000000  005f398c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00003470  00000000  00000000  0060e230  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    0013c377  00000000  00000000  006116a0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 00006990  00000000  00000000  0074da18  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    0002fde5  00000000  00000000  007543a8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  0003bc3e  00000000  00000000  0078418d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000cf  00000000  00000000  007bfdcb  2**0
                  CONTENTS, READONLY
 25 .debug_frame  000098b8  00000000  00000000  007bfe9c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000140 	.word	0x20000140
 80001dc:	00000000 	.word	0x00000000
 80001e0:	0802186c 	.word	0x0802186c

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000144 	.word	0x20000144
 80001fc:	0802186c 	.word	0x0802186c

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_drsub>:
 80002a0:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 80002a4:	e002      	b.n	80002ac <__adddf3>
 80002a6:	bf00      	nop

080002a8 <__aeabi_dsub>:
 80002a8:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

080002ac <__adddf3>:
 80002ac:	b530      	push	{r4, r5, lr}
 80002ae:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002b2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002b6:	ea94 0f05 	teq	r4, r5
 80002ba:	bf08      	it	eq
 80002bc:	ea90 0f02 	teqeq	r0, r2
 80002c0:	bf1f      	itttt	ne
 80002c2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002c6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ca:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002ce:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002d2:	f000 80e2 	beq.w	800049a <__adddf3+0x1ee>
 80002d6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002da:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002de:	bfb8      	it	lt
 80002e0:	426d      	neglt	r5, r5
 80002e2:	dd0c      	ble.n	80002fe <__adddf3+0x52>
 80002e4:	442c      	add	r4, r5
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	ea82 0000 	eor.w	r0, r2, r0
 80002f2:	ea83 0101 	eor.w	r1, r3, r1
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	2d36      	cmp	r5, #54	; 0x36
 8000300:	bf88      	it	hi
 8000302:	bd30      	pophi	{r4, r5, pc}
 8000304:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000308:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800030c:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000310:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000314:	d002      	beq.n	800031c <__adddf3+0x70>
 8000316:	4240      	negs	r0, r0
 8000318:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800031c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000320:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000324:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000328:	d002      	beq.n	8000330 <__adddf3+0x84>
 800032a:	4252      	negs	r2, r2
 800032c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000330:	ea94 0f05 	teq	r4, r5
 8000334:	f000 80a7 	beq.w	8000486 <__adddf3+0x1da>
 8000338:	f1a4 0401 	sub.w	r4, r4, #1
 800033c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000340:	db0d      	blt.n	800035e <__adddf3+0xb2>
 8000342:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000346:	fa22 f205 	lsr.w	r2, r2, r5
 800034a:	1880      	adds	r0, r0, r2
 800034c:	f141 0100 	adc.w	r1, r1, #0
 8000350:	fa03 f20e 	lsl.w	r2, r3, lr
 8000354:	1880      	adds	r0, r0, r2
 8000356:	fa43 f305 	asr.w	r3, r3, r5
 800035a:	4159      	adcs	r1, r3
 800035c:	e00e      	b.n	800037c <__adddf3+0xd0>
 800035e:	f1a5 0520 	sub.w	r5, r5, #32
 8000362:	f10e 0e20 	add.w	lr, lr, #32
 8000366:	2a01      	cmp	r2, #1
 8000368:	fa03 fc0e 	lsl.w	ip, r3, lr
 800036c:	bf28      	it	cs
 800036e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000372:	fa43 f305 	asr.w	r3, r3, r5
 8000376:	18c0      	adds	r0, r0, r3
 8000378:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800037c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000380:	d507      	bpl.n	8000392 <__adddf3+0xe6>
 8000382:	f04f 0e00 	mov.w	lr, #0
 8000386:	f1dc 0c00 	rsbs	ip, ip, #0
 800038a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800038e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000392:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000396:	d31b      	bcc.n	80003d0 <__adddf3+0x124>
 8000398:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800039c:	d30c      	bcc.n	80003b8 <__adddf3+0x10c>
 800039e:	0849      	lsrs	r1, r1, #1
 80003a0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003a4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003a8:	f104 0401 	add.w	r4, r4, #1
 80003ac:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003b0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003b4:	f080 809a 	bcs.w	80004ec <__adddf3+0x240>
 80003b8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003bc:	bf08      	it	eq
 80003be:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003c2:	f150 0000 	adcs.w	r0, r0, #0
 80003c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ca:	ea41 0105 	orr.w	r1, r1, r5
 80003ce:	bd30      	pop	{r4, r5, pc}
 80003d0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003d4:	4140      	adcs	r0, r0
 80003d6:	eb41 0101 	adc.w	r1, r1, r1
 80003da:	3c01      	subs	r4, #1
 80003dc:	bf28      	it	cs
 80003de:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003e2:	d2e9      	bcs.n	80003b8 <__adddf3+0x10c>
 80003e4:	f091 0f00 	teq	r1, #0
 80003e8:	bf04      	itt	eq
 80003ea:	4601      	moveq	r1, r0
 80003ec:	2000      	moveq	r0, #0
 80003ee:	fab1 f381 	clz	r3, r1
 80003f2:	bf08      	it	eq
 80003f4:	3320      	addeq	r3, #32
 80003f6:	f1a3 030b 	sub.w	r3, r3, #11
 80003fa:	f1b3 0220 	subs.w	r2, r3, #32
 80003fe:	da0c      	bge.n	800041a <__adddf3+0x16e>
 8000400:	320c      	adds	r2, #12
 8000402:	dd08      	ble.n	8000416 <__adddf3+0x16a>
 8000404:	f102 0c14 	add.w	ip, r2, #20
 8000408:	f1c2 020c 	rsb	r2, r2, #12
 800040c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000410:	fa21 f102 	lsr.w	r1, r1, r2
 8000414:	e00c      	b.n	8000430 <__adddf3+0x184>
 8000416:	f102 0214 	add.w	r2, r2, #20
 800041a:	bfd8      	it	le
 800041c:	f1c2 0c20 	rsble	ip, r2, #32
 8000420:	fa01 f102 	lsl.w	r1, r1, r2
 8000424:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000428:	bfdc      	itt	le
 800042a:	ea41 010c 	orrle.w	r1, r1, ip
 800042e:	4090      	lslle	r0, r2
 8000430:	1ae4      	subs	r4, r4, r3
 8000432:	bfa2      	ittt	ge
 8000434:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000438:	4329      	orrge	r1, r5
 800043a:	bd30      	popge	{r4, r5, pc}
 800043c:	ea6f 0404 	mvn.w	r4, r4
 8000440:	3c1f      	subs	r4, #31
 8000442:	da1c      	bge.n	800047e <__adddf3+0x1d2>
 8000444:	340c      	adds	r4, #12
 8000446:	dc0e      	bgt.n	8000466 <__adddf3+0x1ba>
 8000448:	f104 0414 	add.w	r4, r4, #20
 800044c:	f1c4 0220 	rsb	r2, r4, #32
 8000450:	fa20 f004 	lsr.w	r0, r0, r4
 8000454:	fa01 f302 	lsl.w	r3, r1, r2
 8000458:	ea40 0003 	orr.w	r0, r0, r3
 800045c:	fa21 f304 	lsr.w	r3, r1, r4
 8000460:	ea45 0103 	orr.w	r1, r5, r3
 8000464:	bd30      	pop	{r4, r5, pc}
 8000466:	f1c4 040c 	rsb	r4, r4, #12
 800046a:	f1c4 0220 	rsb	r2, r4, #32
 800046e:	fa20 f002 	lsr.w	r0, r0, r2
 8000472:	fa01 f304 	lsl.w	r3, r1, r4
 8000476:	ea40 0003 	orr.w	r0, r0, r3
 800047a:	4629      	mov	r1, r5
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	fa21 f004 	lsr.w	r0, r1, r4
 8000482:	4629      	mov	r1, r5
 8000484:	bd30      	pop	{r4, r5, pc}
 8000486:	f094 0f00 	teq	r4, #0
 800048a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800048e:	bf06      	itte	eq
 8000490:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000494:	3401      	addeq	r4, #1
 8000496:	3d01      	subne	r5, #1
 8000498:	e74e      	b.n	8000338 <__adddf3+0x8c>
 800049a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800049e:	bf18      	it	ne
 80004a0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004a4:	d029      	beq.n	80004fa <__adddf3+0x24e>
 80004a6:	ea94 0f05 	teq	r4, r5
 80004aa:	bf08      	it	eq
 80004ac:	ea90 0f02 	teqeq	r0, r2
 80004b0:	d005      	beq.n	80004be <__adddf3+0x212>
 80004b2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004b6:	bf04      	itt	eq
 80004b8:	4619      	moveq	r1, r3
 80004ba:	4610      	moveq	r0, r2
 80004bc:	bd30      	pop	{r4, r5, pc}
 80004be:	ea91 0f03 	teq	r1, r3
 80004c2:	bf1e      	ittt	ne
 80004c4:	2100      	movne	r1, #0
 80004c6:	2000      	movne	r0, #0
 80004c8:	bd30      	popne	{r4, r5, pc}
 80004ca:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004ce:	d105      	bne.n	80004dc <__adddf3+0x230>
 80004d0:	0040      	lsls	r0, r0, #1
 80004d2:	4149      	adcs	r1, r1
 80004d4:	bf28      	it	cs
 80004d6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004da:	bd30      	pop	{r4, r5, pc}
 80004dc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004e0:	bf3c      	itt	cc
 80004e2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004e6:	bd30      	popcc	{r4, r5, pc}
 80004e8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004ec:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004f0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004f4:	f04f 0000 	mov.w	r0, #0
 80004f8:	bd30      	pop	{r4, r5, pc}
 80004fa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004fe:	bf1a      	itte	ne
 8000500:	4619      	movne	r1, r3
 8000502:	4610      	movne	r0, r2
 8000504:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000508:	bf1c      	itt	ne
 800050a:	460b      	movne	r3, r1
 800050c:	4602      	movne	r2, r0
 800050e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000512:	bf06      	itte	eq
 8000514:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000518:	ea91 0f03 	teqeq	r1, r3
 800051c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000520:	bd30      	pop	{r4, r5, pc}
 8000522:	bf00      	nop

08000524 <__aeabi_ui2d>:
 8000524:	f090 0f00 	teq	r0, #0
 8000528:	bf04      	itt	eq
 800052a:	2100      	moveq	r1, #0
 800052c:	4770      	bxeq	lr
 800052e:	b530      	push	{r4, r5, lr}
 8000530:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000534:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000538:	f04f 0500 	mov.w	r5, #0
 800053c:	f04f 0100 	mov.w	r1, #0
 8000540:	e750      	b.n	80003e4 <__adddf3+0x138>
 8000542:	bf00      	nop

08000544 <__aeabi_i2d>:
 8000544:	f090 0f00 	teq	r0, #0
 8000548:	bf04      	itt	eq
 800054a:	2100      	moveq	r1, #0
 800054c:	4770      	bxeq	lr
 800054e:	b530      	push	{r4, r5, lr}
 8000550:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000554:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000558:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800055c:	bf48      	it	mi
 800055e:	4240      	negmi	r0, r0
 8000560:	f04f 0100 	mov.w	r1, #0
 8000564:	e73e      	b.n	80003e4 <__adddf3+0x138>
 8000566:	bf00      	nop

08000568 <__aeabi_f2d>:
 8000568:	0042      	lsls	r2, r0, #1
 800056a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800056e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000572:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000576:	bf1f      	itttt	ne
 8000578:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800057c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000580:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000584:	4770      	bxne	lr
 8000586:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800058a:	bf08      	it	eq
 800058c:	4770      	bxeq	lr
 800058e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000592:	bf04      	itt	eq
 8000594:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000598:	4770      	bxeq	lr
 800059a:	b530      	push	{r4, r5, lr}
 800059c:	f44f 7460 	mov.w	r4, #896	; 0x380
 80005a0:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80005a4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80005a8:	e71c      	b.n	80003e4 <__adddf3+0x138>
 80005aa:	bf00      	nop

080005ac <__aeabi_ul2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f04f 0500 	mov.w	r5, #0
 80005ba:	e00a      	b.n	80005d2 <__aeabi_l2d+0x16>

080005bc <__aeabi_l2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ca:	d502      	bpl.n	80005d2 <__aeabi_l2d+0x16>
 80005cc:	4240      	negs	r0, r0
 80005ce:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005d2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005d6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005da:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005de:	f43f aed8 	beq.w	8000392 <__adddf3+0xe6>
 80005e2:	f04f 0203 	mov.w	r2, #3
 80005e6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005ea:	bf18      	it	ne
 80005ec:	3203      	addne	r2, #3
 80005ee:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005f2:	bf18      	it	ne
 80005f4:	3203      	addne	r2, #3
 80005f6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005fa:	f1c2 0320 	rsb	r3, r2, #32
 80005fe:	fa00 fc03 	lsl.w	ip, r0, r3
 8000602:	fa20 f002 	lsr.w	r0, r0, r2
 8000606:	fa01 fe03 	lsl.w	lr, r1, r3
 800060a:	ea40 000e 	orr.w	r0, r0, lr
 800060e:	fa21 f102 	lsr.w	r1, r1, r2
 8000612:	4414      	add	r4, r2
 8000614:	e6bd      	b.n	8000392 <__adddf3+0xe6>
 8000616:	bf00      	nop

08000618 <__aeabi_dmul>:
 8000618:	b570      	push	{r4, r5, r6, lr}
 800061a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800061e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000622:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000626:	bf1d      	ittte	ne
 8000628:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800062c:	ea94 0f0c 	teqne	r4, ip
 8000630:	ea95 0f0c 	teqne	r5, ip
 8000634:	f000 f8de 	bleq	80007f4 <__aeabi_dmul+0x1dc>
 8000638:	442c      	add	r4, r5
 800063a:	ea81 0603 	eor.w	r6, r1, r3
 800063e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000642:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000646:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800064a:	bf18      	it	ne
 800064c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000650:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000654:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000658:	d038      	beq.n	80006cc <__aeabi_dmul+0xb4>
 800065a:	fba0 ce02 	umull	ip, lr, r0, r2
 800065e:	f04f 0500 	mov.w	r5, #0
 8000662:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000666:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800066a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800066e:	f04f 0600 	mov.w	r6, #0
 8000672:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000676:	f09c 0f00 	teq	ip, #0
 800067a:	bf18      	it	ne
 800067c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000680:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000684:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000688:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800068c:	d204      	bcs.n	8000698 <__aeabi_dmul+0x80>
 800068e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000692:	416d      	adcs	r5, r5
 8000694:	eb46 0606 	adc.w	r6, r6, r6
 8000698:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800069c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006a0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006a4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006a8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006ac:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006b0:	bf88      	it	hi
 80006b2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006b6:	d81e      	bhi.n	80006f6 <__aeabi_dmul+0xde>
 80006b8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006bc:	bf08      	it	eq
 80006be:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006c2:	f150 0000 	adcs.w	r0, r0, #0
 80006c6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ca:	bd70      	pop	{r4, r5, r6, pc}
 80006cc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006d0:	ea46 0101 	orr.w	r1, r6, r1
 80006d4:	ea40 0002 	orr.w	r0, r0, r2
 80006d8:	ea81 0103 	eor.w	r1, r1, r3
 80006dc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006e0:	bfc2      	ittt	gt
 80006e2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006e6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006ea:	bd70      	popgt	{r4, r5, r6, pc}
 80006ec:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006f0:	f04f 0e00 	mov.w	lr, #0
 80006f4:	3c01      	subs	r4, #1
 80006f6:	f300 80ab 	bgt.w	8000850 <__aeabi_dmul+0x238>
 80006fa:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006fe:	bfde      	ittt	le
 8000700:	2000      	movle	r0, #0
 8000702:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 8000706:	bd70      	pople	{r4, r5, r6, pc}
 8000708:	f1c4 0400 	rsb	r4, r4, #0
 800070c:	3c20      	subs	r4, #32
 800070e:	da35      	bge.n	800077c <__aeabi_dmul+0x164>
 8000710:	340c      	adds	r4, #12
 8000712:	dc1b      	bgt.n	800074c <__aeabi_dmul+0x134>
 8000714:	f104 0414 	add.w	r4, r4, #20
 8000718:	f1c4 0520 	rsb	r5, r4, #32
 800071c:	fa00 f305 	lsl.w	r3, r0, r5
 8000720:	fa20 f004 	lsr.w	r0, r0, r4
 8000724:	fa01 f205 	lsl.w	r2, r1, r5
 8000728:	ea40 0002 	orr.w	r0, r0, r2
 800072c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000730:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000734:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000738:	fa21 f604 	lsr.w	r6, r1, r4
 800073c:	eb42 0106 	adc.w	r1, r2, r6
 8000740:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000744:	bf08      	it	eq
 8000746:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800074a:	bd70      	pop	{r4, r5, r6, pc}
 800074c:	f1c4 040c 	rsb	r4, r4, #12
 8000750:	f1c4 0520 	rsb	r5, r4, #32
 8000754:	fa00 f304 	lsl.w	r3, r0, r4
 8000758:	fa20 f005 	lsr.w	r0, r0, r5
 800075c:	fa01 f204 	lsl.w	r2, r1, r4
 8000760:	ea40 0002 	orr.w	r0, r0, r2
 8000764:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000768:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800076c:	f141 0100 	adc.w	r1, r1, #0
 8000770:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000774:	bf08      	it	eq
 8000776:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800077a:	bd70      	pop	{r4, r5, r6, pc}
 800077c:	f1c4 0520 	rsb	r5, r4, #32
 8000780:	fa00 f205 	lsl.w	r2, r0, r5
 8000784:	ea4e 0e02 	orr.w	lr, lr, r2
 8000788:	fa20 f304 	lsr.w	r3, r0, r4
 800078c:	fa01 f205 	lsl.w	r2, r1, r5
 8000790:	ea43 0302 	orr.w	r3, r3, r2
 8000794:	fa21 f004 	lsr.w	r0, r1, r4
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800079c:	fa21 f204 	lsr.w	r2, r1, r4
 80007a0:	ea20 0002 	bic.w	r0, r0, r2
 80007a4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007ac:	bf08      	it	eq
 80007ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007b2:	bd70      	pop	{r4, r5, r6, pc}
 80007b4:	f094 0f00 	teq	r4, #0
 80007b8:	d10f      	bne.n	80007da <__aeabi_dmul+0x1c2>
 80007ba:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007be:	0040      	lsls	r0, r0, #1
 80007c0:	eb41 0101 	adc.w	r1, r1, r1
 80007c4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007c8:	bf08      	it	eq
 80007ca:	3c01      	subeq	r4, #1
 80007cc:	d0f7      	beq.n	80007be <__aeabi_dmul+0x1a6>
 80007ce:	ea41 0106 	orr.w	r1, r1, r6
 80007d2:	f095 0f00 	teq	r5, #0
 80007d6:	bf18      	it	ne
 80007d8:	4770      	bxne	lr
 80007da:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007de:	0052      	lsls	r2, r2, #1
 80007e0:	eb43 0303 	adc.w	r3, r3, r3
 80007e4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007e8:	bf08      	it	eq
 80007ea:	3d01      	subeq	r5, #1
 80007ec:	d0f7      	beq.n	80007de <__aeabi_dmul+0x1c6>
 80007ee:	ea43 0306 	orr.w	r3, r3, r6
 80007f2:	4770      	bx	lr
 80007f4:	ea94 0f0c 	teq	r4, ip
 80007f8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007fc:	bf18      	it	ne
 80007fe:	ea95 0f0c 	teqne	r5, ip
 8000802:	d00c      	beq.n	800081e <__aeabi_dmul+0x206>
 8000804:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000808:	bf18      	it	ne
 800080a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800080e:	d1d1      	bne.n	80007b4 <__aeabi_dmul+0x19c>
 8000810:	ea81 0103 	eor.w	r1, r1, r3
 8000814:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000818:	f04f 0000 	mov.w	r0, #0
 800081c:	bd70      	pop	{r4, r5, r6, pc}
 800081e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000822:	bf06      	itte	eq
 8000824:	4610      	moveq	r0, r2
 8000826:	4619      	moveq	r1, r3
 8000828:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800082c:	d019      	beq.n	8000862 <__aeabi_dmul+0x24a>
 800082e:	ea94 0f0c 	teq	r4, ip
 8000832:	d102      	bne.n	800083a <__aeabi_dmul+0x222>
 8000834:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000838:	d113      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800083a:	ea95 0f0c 	teq	r5, ip
 800083e:	d105      	bne.n	800084c <__aeabi_dmul+0x234>
 8000840:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000844:	bf1c      	itt	ne
 8000846:	4610      	movne	r0, r2
 8000848:	4619      	movne	r1, r3
 800084a:	d10a      	bne.n	8000862 <__aeabi_dmul+0x24a>
 800084c:	ea81 0103 	eor.w	r1, r1, r3
 8000850:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000854:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000858:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800085c:	f04f 0000 	mov.w	r0, #0
 8000860:	bd70      	pop	{r4, r5, r6, pc}
 8000862:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000866:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800086a:	bd70      	pop	{r4, r5, r6, pc}

0800086c <__aeabi_ddiv>:
 800086c:	b570      	push	{r4, r5, r6, lr}
 800086e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000872:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000876:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800087a:	bf1d      	ittte	ne
 800087c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000880:	ea94 0f0c 	teqne	r4, ip
 8000884:	ea95 0f0c 	teqne	r5, ip
 8000888:	f000 f8a7 	bleq	80009da <__aeabi_ddiv+0x16e>
 800088c:	eba4 0405 	sub.w	r4, r4, r5
 8000890:	ea81 0e03 	eor.w	lr, r1, r3
 8000894:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000898:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800089c:	f000 8088 	beq.w	80009b0 <__aeabi_ddiv+0x144>
 80008a0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008a4:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 80008a8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008ac:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008b0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008b4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008b8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008bc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008c0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008c4:	429d      	cmp	r5, r3
 80008c6:	bf08      	it	eq
 80008c8:	4296      	cmpeq	r6, r2
 80008ca:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008ce:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008d2:	d202      	bcs.n	80008da <__aeabi_ddiv+0x6e>
 80008d4:	085b      	lsrs	r3, r3, #1
 80008d6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008da:	1ab6      	subs	r6, r6, r2
 80008dc:	eb65 0503 	sbc.w	r5, r5, r3
 80008e0:	085b      	lsrs	r3, r3, #1
 80008e2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008e6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008ea:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80008f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008f6:	bf22      	ittt	cs
 80008f8:	1ab6      	subcs	r6, r6, r2
 80008fa:	4675      	movcs	r5, lr
 80008fc:	ea40 000c 	orrcs.w	r0, r0, ip
 8000900:	085b      	lsrs	r3, r3, #1
 8000902:	ea4f 0232 	mov.w	r2, r2, rrx
 8000906:	ebb6 0e02 	subs.w	lr, r6, r2
 800090a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800090e:	bf22      	ittt	cs
 8000910:	1ab6      	subcs	r6, r6, r2
 8000912:	4675      	movcs	r5, lr
 8000914:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000918:	085b      	lsrs	r3, r3, #1
 800091a:	ea4f 0232 	mov.w	r2, r2, rrx
 800091e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000922:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000926:	bf22      	ittt	cs
 8000928:	1ab6      	subcs	r6, r6, r2
 800092a:	4675      	movcs	r5, lr
 800092c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000930:	085b      	lsrs	r3, r3, #1
 8000932:	ea4f 0232 	mov.w	r2, r2, rrx
 8000936:	ebb6 0e02 	subs.w	lr, r6, r2
 800093a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800093e:	bf22      	ittt	cs
 8000940:	1ab6      	subcs	r6, r6, r2
 8000942:	4675      	movcs	r5, lr
 8000944:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000948:	ea55 0e06 	orrs.w	lr, r5, r6
 800094c:	d018      	beq.n	8000980 <__aeabi_ddiv+0x114>
 800094e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000952:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000956:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800095a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800095e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000962:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000966:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800096a:	d1c0      	bne.n	80008ee <__aeabi_ddiv+0x82>
 800096c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000970:	d10b      	bne.n	800098a <__aeabi_ddiv+0x11e>
 8000972:	ea41 0100 	orr.w	r1, r1, r0
 8000976:	f04f 0000 	mov.w	r0, #0
 800097a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800097e:	e7b6      	b.n	80008ee <__aeabi_ddiv+0x82>
 8000980:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000984:	bf04      	itt	eq
 8000986:	4301      	orreq	r1, r0
 8000988:	2000      	moveq	r0, #0
 800098a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800098e:	bf88      	it	hi
 8000990:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000994:	f63f aeaf 	bhi.w	80006f6 <__aeabi_dmul+0xde>
 8000998:	ebb5 0c03 	subs.w	ip, r5, r3
 800099c:	bf04      	itt	eq
 800099e:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009a2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009a6:	f150 0000 	adcs.w	r0, r0, #0
 80009aa:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009ae:	bd70      	pop	{r4, r5, r6, pc}
 80009b0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009b4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009b8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009bc:	bfc2      	ittt	gt
 80009be:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009c2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009c6:	bd70      	popgt	{r4, r5, r6, pc}
 80009c8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009cc:	f04f 0e00 	mov.w	lr, #0
 80009d0:	3c01      	subs	r4, #1
 80009d2:	e690      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009d4:	ea45 0e06 	orr.w	lr, r5, r6
 80009d8:	e68d      	b.n	80006f6 <__aeabi_dmul+0xde>
 80009da:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009de:	ea94 0f0c 	teq	r4, ip
 80009e2:	bf08      	it	eq
 80009e4:	ea95 0f0c 	teqeq	r5, ip
 80009e8:	f43f af3b 	beq.w	8000862 <__aeabi_dmul+0x24a>
 80009ec:	ea94 0f0c 	teq	r4, ip
 80009f0:	d10a      	bne.n	8000a08 <__aeabi_ddiv+0x19c>
 80009f2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009f6:	f47f af34 	bne.w	8000862 <__aeabi_dmul+0x24a>
 80009fa:	ea95 0f0c 	teq	r5, ip
 80009fe:	f47f af25 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a02:	4610      	mov	r0, r2
 8000a04:	4619      	mov	r1, r3
 8000a06:	e72c      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a08:	ea95 0f0c 	teq	r5, ip
 8000a0c:	d106      	bne.n	8000a1c <__aeabi_ddiv+0x1b0>
 8000a0e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a12:	f43f aefd 	beq.w	8000810 <__aeabi_dmul+0x1f8>
 8000a16:	4610      	mov	r0, r2
 8000a18:	4619      	mov	r1, r3
 8000a1a:	e722      	b.n	8000862 <__aeabi_dmul+0x24a>
 8000a1c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a20:	bf18      	it	ne
 8000a22:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a26:	f47f aec5 	bne.w	80007b4 <__aeabi_dmul+0x19c>
 8000a2a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a2e:	f47f af0d 	bne.w	800084c <__aeabi_dmul+0x234>
 8000a32:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a36:	f47f aeeb 	bne.w	8000810 <__aeabi_dmul+0x1f8>
 8000a3a:	e712      	b.n	8000862 <__aeabi_dmul+0x24a>

08000a3c <__gedf2>:
 8000a3c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a40:	e006      	b.n	8000a50 <__cmpdf2+0x4>
 8000a42:	bf00      	nop

08000a44 <__ledf2>:
 8000a44:	f04f 0c01 	mov.w	ip, #1
 8000a48:	e002      	b.n	8000a50 <__cmpdf2+0x4>
 8000a4a:	bf00      	nop

08000a4c <__cmpdf2>:
 8000a4c:	f04f 0c01 	mov.w	ip, #1
 8000a50:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a54:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a58:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a5c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a60:	bf18      	it	ne
 8000a62:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a66:	d01b      	beq.n	8000aa0 <__cmpdf2+0x54>
 8000a68:	b001      	add	sp, #4
 8000a6a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a6e:	bf0c      	ite	eq
 8000a70:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a74:	ea91 0f03 	teqne	r1, r3
 8000a78:	bf02      	ittt	eq
 8000a7a:	ea90 0f02 	teqeq	r0, r2
 8000a7e:	2000      	moveq	r0, #0
 8000a80:	4770      	bxeq	lr
 8000a82:	f110 0f00 	cmn.w	r0, #0
 8000a86:	ea91 0f03 	teq	r1, r3
 8000a8a:	bf58      	it	pl
 8000a8c:	4299      	cmppl	r1, r3
 8000a8e:	bf08      	it	eq
 8000a90:	4290      	cmpeq	r0, r2
 8000a92:	bf2c      	ite	cs
 8000a94:	17d8      	asrcs	r0, r3, #31
 8000a96:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a9a:	f040 0001 	orr.w	r0, r0, #1
 8000a9e:	4770      	bx	lr
 8000aa0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d102      	bne.n	8000ab0 <__cmpdf2+0x64>
 8000aaa:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000aae:	d107      	bne.n	8000ac0 <__cmpdf2+0x74>
 8000ab0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d1d6      	bne.n	8000a68 <__cmpdf2+0x1c>
 8000aba:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000abe:	d0d3      	beq.n	8000a68 <__cmpdf2+0x1c>
 8000ac0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ac4:	4770      	bx	lr
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdrcmple>:
 8000ac8:	4684      	mov	ip, r0
 8000aca:	4610      	mov	r0, r2
 8000acc:	4662      	mov	r2, ip
 8000ace:	468c      	mov	ip, r1
 8000ad0:	4619      	mov	r1, r3
 8000ad2:	4663      	mov	r3, ip
 8000ad4:	e000      	b.n	8000ad8 <__aeabi_cdcmpeq>
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdcmpeq>:
 8000ad8:	b501      	push	{r0, lr}
 8000ada:	f7ff ffb7 	bl	8000a4c <__cmpdf2>
 8000ade:	2800      	cmp	r0, #0
 8000ae0:	bf48      	it	mi
 8000ae2:	f110 0f00 	cmnmi.w	r0, #0
 8000ae6:	bd01      	pop	{r0, pc}

08000ae8 <__aeabi_dcmpeq>:
 8000ae8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aec:	f7ff fff4 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000af0:	bf0c      	ite	eq
 8000af2:	2001      	moveq	r0, #1
 8000af4:	2000      	movne	r0, #0
 8000af6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afa:	bf00      	nop

08000afc <__aeabi_dcmplt>:
 8000afc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b00:	f7ff ffea 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b04:	bf34      	ite	cc
 8000b06:	2001      	movcc	r0, #1
 8000b08:	2000      	movcs	r0, #0
 8000b0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0e:	bf00      	nop

08000b10 <__aeabi_dcmple>:
 8000b10:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b14:	f7ff ffe0 	bl	8000ad8 <__aeabi_cdcmpeq>
 8000b18:	bf94      	ite	ls
 8000b1a:	2001      	movls	r0, #1
 8000b1c:	2000      	movhi	r0, #0
 8000b1e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b22:	bf00      	nop

08000b24 <__aeabi_dcmpge>:
 8000b24:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b28:	f7ff ffce 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b2c:	bf94      	ite	ls
 8000b2e:	2001      	movls	r0, #1
 8000b30:	2000      	movhi	r0, #0
 8000b32:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b36:	bf00      	nop

08000b38 <__aeabi_dcmpgt>:
 8000b38:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b3c:	f7ff ffc4 	bl	8000ac8 <__aeabi_cdrcmple>
 8000b40:	bf34      	ite	cc
 8000b42:	2001      	movcc	r0, #1
 8000b44:	2000      	movcs	r0, #0
 8000b46:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b4a:	bf00      	nop

08000b4c <__aeabi_d2uiz>:
 8000b4c:	004a      	lsls	r2, r1, #1
 8000b4e:	d211      	bcs.n	8000b74 <__aeabi_d2uiz+0x28>
 8000b50:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b54:	d211      	bcs.n	8000b7a <__aeabi_d2uiz+0x2e>
 8000b56:	d50d      	bpl.n	8000b74 <__aeabi_d2uiz+0x28>
 8000b58:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b5c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b60:	d40e      	bmi.n	8000b80 <__aeabi_d2uiz+0x34>
 8000b62:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b66:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b6a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b6e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b72:	4770      	bx	lr
 8000b74:	f04f 0000 	mov.w	r0, #0
 8000b78:	4770      	bx	lr
 8000b7a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b7e:	d102      	bne.n	8000b86 <__aeabi_d2uiz+0x3a>
 8000b80:	f04f 30ff 	mov.w	r0, #4294967295
 8000b84:	4770      	bx	lr
 8000b86:	f04f 0000 	mov.w	r0, #0
 8000b8a:	4770      	bx	lr

08000b8c <__aeabi_uldivmod>:
 8000b8c:	b953      	cbnz	r3, 8000ba4 <__aeabi_uldivmod+0x18>
 8000b8e:	b94a      	cbnz	r2, 8000ba4 <__aeabi_uldivmod+0x18>
 8000b90:	2900      	cmp	r1, #0
 8000b92:	bf08      	it	eq
 8000b94:	2800      	cmpeq	r0, #0
 8000b96:	bf1c      	itt	ne
 8000b98:	f04f 31ff 	movne.w	r1, #4294967295
 8000b9c:	f04f 30ff 	movne.w	r0, #4294967295
 8000ba0:	f000 b974 	b.w	8000e8c <__aeabi_idiv0>
 8000ba4:	f1ad 0c08 	sub.w	ip, sp, #8
 8000ba8:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bac:	f000 f806 	bl	8000bbc <__udivmoddi4>
 8000bb0:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bb4:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bb8:	b004      	add	sp, #16
 8000bba:	4770      	bx	lr

08000bbc <__udivmoddi4>:
 8000bbc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bc0:	9d08      	ldr	r5, [sp, #32]
 8000bc2:	4604      	mov	r4, r0
 8000bc4:	468e      	mov	lr, r1
 8000bc6:	2b00      	cmp	r3, #0
 8000bc8:	d14d      	bne.n	8000c66 <__udivmoddi4+0xaa>
 8000bca:	428a      	cmp	r2, r1
 8000bcc:	4694      	mov	ip, r2
 8000bce:	d969      	bls.n	8000ca4 <__udivmoddi4+0xe8>
 8000bd0:	fab2 f282 	clz	r2, r2
 8000bd4:	b152      	cbz	r2, 8000bec <__udivmoddi4+0x30>
 8000bd6:	fa01 f302 	lsl.w	r3, r1, r2
 8000bda:	f1c2 0120 	rsb	r1, r2, #32
 8000bde:	fa20 f101 	lsr.w	r1, r0, r1
 8000be2:	fa0c fc02 	lsl.w	ip, ip, r2
 8000be6:	ea41 0e03 	orr.w	lr, r1, r3
 8000bea:	4094      	lsls	r4, r2
 8000bec:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000bf0:	0c21      	lsrs	r1, r4, #16
 8000bf2:	fbbe f6f8 	udiv	r6, lr, r8
 8000bf6:	fa1f f78c 	uxth.w	r7, ip
 8000bfa:	fb08 e316 	mls	r3, r8, r6, lr
 8000bfe:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8000c02:	fb06 f107 	mul.w	r1, r6, r7
 8000c06:	4299      	cmp	r1, r3
 8000c08:	d90a      	bls.n	8000c20 <__udivmoddi4+0x64>
 8000c0a:	eb1c 0303 	adds.w	r3, ip, r3
 8000c0e:	f106 30ff 	add.w	r0, r6, #4294967295
 8000c12:	f080 811f 	bcs.w	8000e54 <__udivmoddi4+0x298>
 8000c16:	4299      	cmp	r1, r3
 8000c18:	f240 811c 	bls.w	8000e54 <__udivmoddi4+0x298>
 8000c1c:	3e02      	subs	r6, #2
 8000c1e:	4463      	add	r3, ip
 8000c20:	1a5b      	subs	r3, r3, r1
 8000c22:	b2a4      	uxth	r4, r4
 8000c24:	fbb3 f0f8 	udiv	r0, r3, r8
 8000c28:	fb08 3310 	mls	r3, r8, r0, r3
 8000c2c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000c30:	fb00 f707 	mul.w	r7, r0, r7
 8000c34:	42a7      	cmp	r7, r4
 8000c36:	d90a      	bls.n	8000c4e <__udivmoddi4+0x92>
 8000c38:	eb1c 0404 	adds.w	r4, ip, r4
 8000c3c:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c40:	f080 810a 	bcs.w	8000e58 <__udivmoddi4+0x29c>
 8000c44:	42a7      	cmp	r7, r4
 8000c46:	f240 8107 	bls.w	8000e58 <__udivmoddi4+0x29c>
 8000c4a:	4464      	add	r4, ip
 8000c4c:	3802      	subs	r0, #2
 8000c4e:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000c52:	1be4      	subs	r4, r4, r7
 8000c54:	2600      	movs	r6, #0
 8000c56:	b11d      	cbz	r5, 8000c60 <__udivmoddi4+0xa4>
 8000c58:	40d4      	lsrs	r4, r2
 8000c5a:	2300      	movs	r3, #0
 8000c5c:	e9c5 4300 	strd	r4, r3, [r5]
 8000c60:	4631      	mov	r1, r6
 8000c62:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c66:	428b      	cmp	r3, r1
 8000c68:	d909      	bls.n	8000c7e <__udivmoddi4+0xc2>
 8000c6a:	2d00      	cmp	r5, #0
 8000c6c:	f000 80ef 	beq.w	8000e4e <__udivmoddi4+0x292>
 8000c70:	2600      	movs	r6, #0
 8000c72:	e9c5 0100 	strd	r0, r1, [r5]
 8000c76:	4630      	mov	r0, r6
 8000c78:	4631      	mov	r1, r6
 8000c7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c7e:	fab3 f683 	clz	r6, r3
 8000c82:	2e00      	cmp	r6, #0
 8000c84:	d14a      	bne.n	8000d1c <__udivmoddi4+0x160>
 8000c86:	428b      	cmp	r3, r1
 8000c88:	d302      	bcc.n	8000c90 <__udivmoddi4+0xd4>
 8000c8a:	4282      	cmp	r2, r0
 8000c8c:	f200 80f9 	bhi.w	8000e82 <__udivmoddi4+0x2c6>
 8000c90:	1a84      	subs	r4, r0, r2
 8000c92:	eb61 0303 	sbc.w	r3, r1, r3
 8000c96:	2001      	movs	r0, #1
 8000c98:	469e      	mov	lr, r3
 8000c9a:	2d00      	cmp	r5, #0
 8000c9c:	d0e0      	beq.n	8000c60 <__udivmoddi4+0xa4>
 8000c9e:	e9c5 4e00 	strd	r4, lr, [r5]
 8000ca2:	e7dd      	b.n	8000c60 <__udivmoddi4+0xa4>
 8000ca4:	b902      	cbnz	r2, 8000ca8 <__udivmoddi4+0xec>
 8000ca6:	deff      	udf	#255	; 0xff
 8000ca8:	fab2 f282 	clz	r2, r2
 8000cac:	2a00      	cmp	r2, #0
 8000cae:	f040 8092 	bne.w	8000dd6 <__udivmoddi4+0x21a>
 8000cb2:	eba1 010c 	sub.w	r1, r1, ip
 8000cb6:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000cba:	fa1f fe8c 	uxth.w	lr, ip
 8000cbe:	2601      	movs	r6, #1
 8000cc0:	0c20      	lsrs	r0, r4, #16
 8000cc2:	fbb1 f3f7 	udiv	r3, r1, r7
 8000cc6:	fb07 1113 	mls	r1, r7, r3, r1
 8000cca:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000cce:	fb0e f003 	mul.w	r0, lr, r3
 8000cd2:	4288      	cmp	r0, r1
 8000cd4:	d908      	bls.n	8000ce8 <__udivmoddi4+0x12c>
 8000cd6:	eb1c 0101 	adds.w	r1, ip, r1
 8000cda:	f103 38ff 	add.w	r8, r3, #4294967295
 8000cde:	d202      	bcs.n	8000ce6 <__udivmoddi4+0x12a>
 8000ce0:	4288      	cmp	r0, r1
 8000ce2:	f200 80cb 	bhi.w	8000e7c <__udivmoddi4+0x2c0>
 8000ce6:	4643      	mov	r3, r8
 8000ce8:	1a09      	subs	r1, r1, r0
 8000cea:	b2a4      	uxth	r4, r4
 8000cec:	fbb1 f0f7 	udiv	r0, r1, r7
 8000cf0:	fb07 1110 	mls	r1, r7, r0, r1
 8000cf4:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 8000cf8:	fb0e fe00 	mul.w	lr, lr, r0
 8000cfc:	45a6      	cmp	lr, r4
 8000cfe:	d908      	bls.n	8000d12 <__udivmoddi4+0x156>
 8000d00:	eb1c 0404 	adds.w	r4, ip, r4
 8000d04:	f100 31ff 	add.w	r1, r0, #4294967295
 8000d08:	d202      	bcs.n	8000d10 <__udivmoddi4+0x154>
 8000d0a:	45a6      	cmp	lr, r4
 8000d0c:	f200 80bb 	bhi.w	8000e86 <__udivmoddi4+0x2ca>
 8000d10:	4608      	mov	r0, r1
 8000d12:	eba4 040e 	sub.w	r4, r4, lr
 8000d16:	ea40 4003 	orr.w	r0, r0, r3, lsl #16
 8000d1a:	e79c      	b.n	8000c56 <__udivmoddi4+0x9a>
 8000d1c:	f1c6 0720 	rsb	r7, r6, #32
 8000d20:	40b3      	lsls	r3, r6
 8000d22:	fa22 fc07 	lsr.w	ip, r2, r7
 8000d26:	ea4c 0c03 	orr.w	ip, ip, r3
 8000d2a:	fa20 f407 	lsr.w	r4, r0, r7
 8000d2e:	fa01 f306 	lsl.w	r3, r1, r6
 8000d32:	431c      	orrs	r4, r3
 8000d34:	40f9      	lsrs	r1, r7
 8000d36:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000d3a:	fa00 f306 	lsl.w	r3, r0, r6
 8000d3e:	fbb1 f8f9 	udiv	r8, r1, r9
 8000d42:	0c20      	lsrs	r0, r4, #16
 8000d44:	fa1f fe8c 	uxth.w	lr, ip
 8000d48:	fb09 1118 	mls	r1, r9, r8, r1
 8000d4c:	ea40 4101 	orr.w	r1, r0, r1, lsl #16
 8000d50:	fb08 f00e 	mul.w	r0, r8, lr
 8000d54:	4288      	cmp	r0, r1
 8000d56:	fa02 f206 	lsl.w	r2, r2, r6
 8000d5a:	d90b      	bls.n	8000d74 <__udivmoddi4+0x1b8>
 8000d5c:	eb1c 0101 	adds.w	r1, ip, r1
 8000d60:	f108 3aff 	add.w	sl, r8, #4294967295
 8000d64:	f080 8088 	bcs.w	8000e78 <__udivmoddi4+0x2bc>
 8000d68:	4288      	cmp	r0, r1
 8000d6a:	f240 8085 	bls.w	8000e78 <__udivmoddi4+0x2bc>
 8000d6e:	f1a8 0802 	sub.w	r8, r8, #2
 8000d72:	4461      	add	r1, ip
 8000d74:	1a09      	subs	r1, r1, r0
 8000d76:	b2a4      	uxth	r4, r4
 8000d78:	fbb1 f0f9 	udiv	r0, r1, r9
 8000d7c:	fb09 1110 	mls	r1, r9, r0, r1
 8000d80:	ea44 4101 	orr.w	r1, r4, r1, lsl #16
 8000d84:	fb00 fe0e 	mul.w	lr, r0, lr
 8000d88:	458e      	cmp	lr, r1
 8000d8a:	d908      	bls.n	8000d9e <__udivmoddi4+0x1e2>
 8000d8c:	eb1c 0101 	adds.w	r1, ip, r1
 8000d90:	f100 34ff 	add.w	r4, r0, #4294967295
 8000d94:	d26c      	bcs.n	8000e70 <__udivmoddi4+0x2b4>
 8000d96:	458e      	cmp	lr, r1
 8000d98:	d96a      	bls.n	8000e70 <__udivmoddi4+0x2b4>
 8000d9a:	3802      	subs	r0, #2
 8000d9c:	4461      	add	r1, ip
 8000d9e:	ea40 4008 	orr.w	r0, r0, r8, lsl #16
 8000da2:	fba0 9402 	umull	r9, r4, r0, r2
 8000da6:	eba1 010e 	sub.w	r1, r1, lr
 8000daa:	42a1      	cmp	r1, r4
 8000dac:	46c8      	mov	r8, r9
 8000dae:	46a6      	mov	lr, r4
 8000db0:	d356      	bcc.n	8000e60 <__udivmoddi4+0x2a4>
 8000db2:	d053      	beq.n	8000e5c <__udivmoddi4+0x2a0>
 8000db4:	b15d      	cbz	r5, 8000dce <__udivmoddi4+0x212>
 8000db6:	ebb3 0208 	subs.w	r2, r3, r8
 8000dba:	eb61 010e 	sbc.w	r1, r1, lr
 8000dbe:	fa01 f707 	lsl.w	r7, r1, r7
 8000dc2:	fa22 f306 	lsr.w	r3, r2, r6
 8000dc6:	40f1      	lsrs	r1, r6
 8000dc8:	431f      	orrs	r7, r3
 8000dca:	e9c5 7100 	strd	r7, r1, [r5]
 8000dce:	2600      	movs	r6, #0
 8000dd0:	4631      	mov	r1, r6
 8000dd2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dd6:	f1c2 0320 	rsb	r3, r2, #32
 8000dda:	40d8      	lsrs	r0, r3
 8000ddc:	fa0c fc02 	lsl.w	ip, ip, r2
 8000de0:	fa21 f303 	lsr.w	r3, r1, r3
 8000de4:	4091      	lsls	r1, r2
 8000de6:	4301      	orrs	r1, r0
 8000de8:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000dec:	fa1f fe8c 	uxth.w	lr, ip
 8000df0:	fbb3 f0f7 	udiv	r0, r3, r7
 8000df4:	fb07 3610 	mls	r6, r7, r0, r3
 8000df8:	0c0b      	lsrs	r3, r1, #16
 8000dfa:	ea43 4306 	orr.w	r3, r3, r6, lsl #16
 8000dfe:	fb00 f60e 	mul.w	r6, r0, lr
 8000e02:	429e      	cmp	r6, r3
 8000e04:	fa04 f402 	lsl.w	r4, r4, r2
 8000e08:	d908      	bls.n	8000e1c <__udivmoddi4+0x260>
 8000e0a:	eb1c 0303 	adds.w	r3, ip, r3
 8000e0e:	f100 38ff 	add.w	r8, r0, #4294967295
 8000e12:	d22f      	bcs.n	8000e74 <__udivmoddi4+0x2b8>
 8000e14:	429e      	cmp	r6, r3
 8000e16:	d92d      	bls.n	8000e74 <__udivmoddi4+0x2b8>
 8000e18:	3802      	subs	r0, #2
 8000e1a:	4463      	add	r3, ip
 8000e1c:	1b9b      	subs	r3, r3, r6
 8000e1e:	b289      	uxth	r1, r1
 8000e20:	fbb3 f6f7 	udiv	r6, r3, r7
 8000e24:	fb07 3316 	mls	r3, r7, r6, r3
 8000e28:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e2c:	fb06 f30e 	mul.w	r3, r6, lr
 8000e30:	428b      	cmp	r3, r1
 8000e32:	d908      	bls.n	8000e46 <__udivmoddi4+0x28a>
 8000e34:	eb1c 0101 	adds.w	r1, ip, r1
 8000e38:	f106 38ff 	add.w	r8, r6, #4294967295
 8000e3c:	d216      	bcs.n	8000e6c <__udivmoddi4+0x2b0>
 8000e3e:	428b      	cmp	r3, r1
 8000e40:	d914      	bls.n	8000e6c <__udivmoddi4+0x2b0>
 8000e42:	3e02      	subs	r6, #2
 8000e44:	4461      	add	r1, ip
 8000e46:	1ac9      	subs	r1, r1, r3
 8000e48:	ea46 4600 	orr.w	r6, r6, r0, lsl #16
 8000e4c:	e738      	b.n	8000cc0 <__udivmoddi4+0x104>
 8000e4e:	462e      	mov	r6, r5
 8000e50:	4628      	mov	r0, r5
 8000e52:	e705      	b.n	8000c60 <__udivmoddi4+0xa4>
 8000e54:	4606      	mov	r6, r0
 8000e56:	e6e3      	b.n	8000c20 <__udivmoddi4+0x64>
 8000e58:	4618      	mov	r0, r3
 8000e5a:	e6f8      	b.n	8000c4e <__udivmoddi4+0x92>
 8000e5c:	454b      	cmp	r3, r9
 8000e5e:	d2a9      	bcs.n	8000db4 <__udivmoddi4+0x1f8>
 8000e60:	ebb9 0802 	subs.w	r8, r9, r2
 8000e64:	eb64 0e0c 	sbc.w	lr, r4, ip
 8000e68:	3801      	subs	r0, #1
 8000e6a:	e7a3      	b.n	8000db4 <__udivmoddi4+0x1f8>
 8000e6c:	4646      	mov	r6, r8
 8000e6e:	e7ea      	b.n	8000e46 <__udivmoddi4+0x28a>
 8000e70:	4620      	mov	r0, r4
 8000e72:	e794      	b.n	8000d9e <__udivmoddi4+0x1e2>
 8000e74:	4640      	mov	r0, r8
 8000e76:	e7d1      	b.n	8000e1c <__udivmoddi4+0x260>
 8000e78:	46d0      	mov	r8, sl
 8000e7a:	e77b      	b.n	8000d74 <__udivmoddi4+0x1b8>
 8000e7c:	3b02      	subs	r3, #2
 8000e7e:	4461      	add	r1, ip
 8000e80:	e732      	b.n	8000ce8 <__udivmoddi4+0x12c>
 8000e82:	4630      	mov	r0, r6
 8000e84:	e709      	b.n	8000c9a <__udivmoddi4+0xde>
 8000e86:	4464      	add	r4, ip
 8000e88:	3802      	subs	r0, #2
 8000e8a:	e742      	b.n	8000d12 <__udivmoddi4+0x156>

08000e8c <__aeabi_idiv0>:
 8000e8c:	4770      	bx	lr
 8000e8e:	bf00      	nop

08000e90 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000e90:	f8df d034 	ldr.w	sp, [pc, #52]	; 8000ec8 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 8000e94:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 8000e96:	e003      	b.n	8000ea0 <LoopCopyDataInit>

08000e98 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 8000e98:	4b0c      	ldr	r3, [pc, #48]	; (8000ecc <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 8000e9a:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 8000e9c:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 8000e9e:	3104      	adds	r1, #4

08000ea0 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 8000ea0:	480b      	ldr	r0, [pc, #44]	; (8000ed0 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 8000ea2:	4b0c      	ldr	r3, [pc, #48]	; (8000ed4 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 8000ea4:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 8000ea6:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 8000ea8:	d3f6      	bcc.n	8000e98 <CopyDataInit>
  ldr  r2, =_sbss
 8000eaa:	4a0b      	ldr	r2, [pc, #44]	; (8000ed8 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 8000eac:	e002      	b.n	8000eb4 <LoopFillZerobss>

08000eae <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 8000eae:	2300      	movs	r3, #0
  str  r3, [r2], #4
 8000eb0:	f842 3b04 	str.w	r3, [r2], #4

08000eb4 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 8000eb4:	4b09      	ldr	r3, [pc, #36]	; (8000edc <LoopFillZerobss+0x28>)
  cmp  r2, r3
 8000eb6:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8000eb8:	d3f9      	bcc.n	8000eae <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 8000eba:	f005 fa27 	bl	800630c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8000ebe:	f01f fc6f 	bl	80207a0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 8000ec2:	f000 ffe7 	bl	8001e94 <main>
  bx  lr    
 8000ec6:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 8000ec8:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 8000ecc:	08024380 	.word	0x08024380
  ldr  r0, =_sdata
 8000ed0:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 8000ed4:	20000140 	.word	0x20000140
  ldr  r2, =_sbss
 8000ed8:	20000140 	.word	0x20000140
  ldr  r3, = _ebss
 8000edc:	200120ec 	.word	0x200120ec

08000ee0 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8000ee0:	e7fe      	b.n	8000ee0 <ADC_IRQHandler>

08000ee2 <MX_TouchGFX_PreOSInit>:
/**
 * PreOS Initialization function
 */
void MX_TouchGFX_PreOSInit(void)
{
}
 8000ee2:	4770      	bx	lr

08000ee4 <MX_TouchGFX_Init>:

/**
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
 8000ee4:	b508      	push	{r3, lr}
  // Calling forward to touchgfx_init in C++ domain
  touchgfx_components_init();
 8000ee6:	f000 fe8b 	bl	8001c00 <touchgfx_components_init>
  touchgfx_init();
}
 8000eea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  touchgfx_init();
 8000eee:	f000 be13 	b.w	8001b18 <touchgfx_init>

08000ef2 <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling forward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 8000ef2:	f000 be87 	b.w	8001c04 <touchgfx_taskEntry>

08000ef6 <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 8000ef6:	2100      	movs	r1, #0
 8000ef8:	4608      	mov	r0, r1
 8000efa:	f004 bd6f 	b.w	80059dc <BSP_PB_Init>

08000efe <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 8000efe:	2000      	movs	r0, #0
 8000f00:	f004 bda6 	b.w	8005a50 <BSP_PB_GetState>

08000f04 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000f04:	6840      	ldr	r0, [r0, #4]
    }
 8000f06:	4770      	bx	lr

08000f08 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000f08:	6041      	str	r1, [r0, #4]
    }
 8000f0a:	4770      	bx	lr

08000f0c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000f0c:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8000f10:	f8d2 3dfc 	ldr.w	r3, [r2, #3580]	; 0xdfc
 8000f14:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000f18:	f8c2 3dfc 	str.w	r3, [r2, #3580]	; 0xdfc
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000f1c:	f5a2 4250 	sub.w	r2, r2, #53248	; 0xd000
 8000f20:	6813      	ldr	r3, [r2, #0]
 8000f22:	f043 0301 	orr.w	r3, r3, #1
 8000f26:	6013      	str	r3, [r2, #0]
}
 8000f28:	4770      	bx	lr

08000f2a <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000f2a:	1a51      	subs	r1, r2, r1
 8000f2c:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 8000f30:	fbb1 f0f3 	udiv	r0, r1, r3
 8000f34:	4770      	bx	lr
	...

08000f38 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000f38:	4b01      	ldr	r3, [pc, #4]	; (8000f40 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000f3a:	6858      	ldr	r0, [r3, #4]
}
 8000f3c:	4770      	bx	lr
 8000f3e:	bf00      	nop
 8000f40:	e0001000 	.word	0xe0001000

08000f44 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8000f44:	4770      	bx	lr

08000f46 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8000f46:	b510      	push	{r4, lr}
 8000f48:	210c      	movs	r1, #12
 8000f4a:	4604      	mov	r4, r0
 8000f4c:	f01f fbb0 	bl	80206b0 <_ZdlPvj>
 8000f50:	4620      	mov	r0, r4
 8000f52:	bd10      	pop	{r4, pc}

08000f54 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000f54:	6803      	ldr	r3, [r0, #0]
{
 8000f56:	b510      	push	{r4, lr}
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000f58:	691b      	ldr	r3, [r3, #16]
{
 8000f5a:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000f5c:	b131      	cbz	r1, 8000f6c <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
        uint32_t cc_temp = getCPUCycles() - cc_in;
 8000f5e:	4798      	blx	r3
 8000f60:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 8000f62:	6863      	ldr	r3, [r4, #4]
 8000f64:	1a9b      	subs	r3, r3, r2
 8000f66:	4418      	add	r0, r3
 8000f68:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000f6a:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000f6c:	4798      	blx	r3
 8000f6e:	60a0      	str	r0, [r4, #8]
}
 8000f70:	e7fb      	b.n	8000f6a <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

08000f72 <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 8000f72:	4770      	bx	lr

08000f74 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8000f74:	4770      	bx	lr
	...

08000f78 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000f78:	b508      	push	{r3, lr}
    Buttons::init();
 8000f7a:	f7ff ffbc 	bl	8000ef6 <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 8000f7e:	4b02      	ldr	r3, [pc, #8]	; (8000f88 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 8000f80:	2200      	movs	r2, #0
 8000f82:	601a      	str	r2, [r3, #0]
}
 8000f84:	bd08      	pop	{r3, pc}
 8000f86:	bf00      	nop
 8000f88:	2000015c 	.word	0x2000015c

08000f8c <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000f8c:	b570      	push	{r4, r5, r6, lr}
 8000f8e:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 8000f90:	f7ff ffb5 	bl	8000efe <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 8000f94:	4a0b      	ldr	r2, [pc, #44]	; (8000fc4 <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 8000f96:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 8000f98:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 8000f9a:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 8000f9c:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 8000f9e:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 8000fa0:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 8000fa4:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 8000fa6:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 8000fa8:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 8000faa:	d00a      	beq.n	8000fc2 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 8000fac:	f016 0001 	ands.w	r0, r6, #1
 8000fb0:	d007      	beq.n	8000fc2 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 8000fb2:	f011 0001 	ands.w	r0, r1, #1
 8000fb6:	d004      	beq.n	8000fc2 <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 8000fb8:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 8000fba:	bf5a      	itte	pl
 8000fbc:	2001      	movpl	r0, #1
 8000fbe:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 8000fc0:	2000      	movmi	r0, #0
}
 8000fc2:	bd70      	pop	{r4, r5, r6, pc}
 8000fc4:	2000015c 	.word	0x2000015c

08000fc8 <_ZN8touchgfx10KeySamplerD0Ev>:
 8000fc8:	b510      	push	{r4, lr}
 8000fca:	2104      	movs	r1, #4
 8000fcc:	4604      	mov	r4, r0
 8000fce:	f01f fb6f 	bl	80206b0 <_ZdlPvj>
 8000fd2:	4620      	mov	r0, r4
 8000fd4:	bd10      	pop	{r4, pc}

08000fd6 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 8000fd6:	4770      	bx	lr

08000fd8 <_ZN20STM32TouchControllerD0Ev>:
 8000fd8:	b510      	push	{r4, lr}
 8000fda:	2104      	movs	r1, #4
 8000fdc:	4604      	mov	r4, r0
 8000fde:	f01f fb67 	bl	80206b0 <_ZdlPvj>
 8000fe2:	4620      	mov	r0, r4
 8000fe4:	bd10      	pop	{r4, pc}
	...

08000fe8 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 8000fe8:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 8000fea:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8000fee:	f44f 7048 	mov.w	r0, #800	; 0x320
 8000ff2:	f005 f8dd 	bl	80061b0 <BSP_TS_Init>
 8000ff6:	4b07      	ldr	r3, [pc, #28]	; (8001014 <_ZN20STM32TouchController4initEv+0x2c>)
 8000ff8:	b910      	cbnz	r0, 8001000 <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 8000ffa:	2201      	movs	r2, #1
 8000ffc:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 8000ffe:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 8001000:	781b      	ldrb	r3, [r3, #0]
 8001002:	2b00      	cmp	r3, #0
 8001004:	d1fb      	bne.n	8000ffe <_ZN20STM32TouchController4initEv+0x16>
 8001006:	4b04      	ldr	r3, [pc, #16]	; (8001018 <_ZN20STM32TouchController4initEv+0x30>)
 8001008:	4a04      	ldr	r2, [pc, #16]	; (800101c <_ZN20STM32TouchController4initEv+0x34>)
 800100a:	4805      	ldr	r0, [pc, #20]	; (8001020 <_ZN20STM32TouchController4initEv+0x38>)
 800100c:	2127      	movs	r1, #39	; 0x27
 800100e:	f01f fb7d 	bl	802070c <__assert_func>
 8001012:	bf00      	nop
 8001014:	20000160 	.word	0x20000160
 8001018:	080219ec 	.word	0x080219ec
 800101c:	080219ff 	.word	0x080219ff
 8001020:	08021a29 	.word	0x08021a29

08001024 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8001024:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 8001026:	4b0b      	ldr	r3, [pc, #44]	; (8001054 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8001028:	781c      	ldrb	r4, [r3, #0]
{
 800102a:	460e      	mov	r6, r1
 800102c:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 800102e:	b15c      	cbz	r4, 8001048 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 8001030:	a801      	add	r0, sp, #4
 8001032:	f005 f8f5 	bl	8006220 <BSP_TS_GetState>
        if (state.touchDetected)
 8001036:	f89d 3004 	ldrb.w	r3, [sp, #4]
 800103a:	b143      	cbz	r3, 800104e <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 800103c:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8001040:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 8001042:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8001046:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8001048:	4620      	mov	r0, r4
 800104a:	b004      	add	sp, #16
 800104c:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 800104e:	461c      	mov	r4, r3
 8001050:	e7fa      	b.n	8001048 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 8001052:	bf00      	nop
 8001054:	20000160 	.word	0x20000160

08001058 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8001058:	2803      	cmp	r0, #3
 800105a:	d823      	bhi.n	80010a4 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x4c>
 800105c:	e8df f000 	tbb	[pc, r0]
 8001060:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 8001064:	4b10      	ldr	r3, [pc, #64]	; (80010a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8001066:	681a      	ldr	r2, [r3, #0]
 8001068:	fab2 f282 	clz	r2, r2
 800106c:	0952      	lsrs	r2, r2, #5
 800106e:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8001070:	480e      	ldr	r0, [pc, #56]	; (80010ac <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x54>)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8001072:	f006 b96f 	b.w	8007354 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 8001076:	4b0c      	ldr	r3, [pc, #48]	; (80010a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8001078:	685a      	ldr	r2, [r3, #4]
 800107a:	fab2 f282 	clz	r2, r2
 800107e:	0952      	lsrs	r2, r2, #5
 8001080:	2140      	movs	r1, #64	; 0x40
 8001082:	e7f5      	b.n	8001070 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_SET(id));
 8001084:	4b08      	ldr	r3, [pc, #32]	; (80010a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8001086:	689a      	ldr	r2, [r3, #8]
 8001088:	fab2 f282 	clz	r2, r2
 800108c:	0952      	lsrs	r2, r2, #5
 800108e:	2102      	movs	r1, #2
 8001090:	e7ee      	b.n	8001070 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_SET(id));
 8001092:	4b05      	ldr	r3, [pc, #20]	; (80010a8 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x50>)
 8001094:	4806      	ldr	r0, [pc, #24]	; (80010b0 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x58>)
 8001096:	68da      	ldr	r2, [r3, #12]
 8001098:	fab2 f282 	clz	r2, r2
 800109c:	0952      	lsrs	r2, r2, #5
 800109e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80010a2:	e7e6      	b.n	8001072 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 80010a4:	4770      	bx	lr
 80010a6:	bf00      	nop
 80010a8:	20000164 	.word	0x20000164
 80010ac:	40020000 	.word	0x40020000
 80010b0:	40021800 	.word	0x40021800

080010b4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 80010b4:	2803      	cmp	r0, #3
 80010b6:	d823      	bhi.n	8001100 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x4c>
 80010b8:	e8df f000 	tbb	[pc, r0]
 80010bc:	19120b02 	.word	0x19120b02
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 80010c0:	4b10      	ldr	r3, [pc, #64]	; (8001104 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80010c2:	681a      	ldr	r2, [r3, #0]
 80010c4:	3a00      	subs	r2, #0
 80010c6:	bf18      	it	ne
 80010c8:	2201      	movne	r2, #1
 80010ca:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80010cc:	480e      	ldr	r0, [pc, #56]	; (8001108 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x54>)
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80010ce:	f006 b941 	b.w	8007354 <HAL_GPIO_WritePin>
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80010d2:	4b0c      	ldr	r3, [pc, #48]	; (8001104 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80010d4:	685a      	ldr	r2, [r3, #4]
 80010d6:	3a00      	subs	r2, #0
 80010d8:	bf18      	it	ne
 80010da:	2201      	movne	r2, #1
 80010dc:	2140      	movs	r1, #64	; 0x40
 80010de:	e7f5      	b.n	80010cc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin, M_GPIO_PIN_RESET(id));
 80010e0:	4b08      	ldr	r3, [pc, #32]	; (8001104 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80010e2:	689a      	ldr	r2, [r3, #8]
 80010e4:	3a00      	subs	r2, #0
 80010e6:	bf18      	it	ne
 80010e8:	2201      	movne	r2, #1
 80010ea:	2102      	movs	r1, #2
 80010ec:	e7ee      	b.n	80010cc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, M_GPIO_PIN_RESET(id));
 80010ee:	4b05      	ldr	r3, [pc, #20]	; (8001104 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x50>)
 80010f0:	4806      	ldr	r0, [pc, #24]	; (800110c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x58>)
 80010f2:	68da      	ldr	r2, [r3, #12]
 80010f4:	3a00      	subs	r2, #0
 80010f6:	bf18      	it	ne
 80010f8:	2201      	movne	r2, #1
 80010fa:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80010fe:	e7e6      	b.n	80010ce <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
#endif
        break;
    }
}
 8001100:	4770      	bx	lr
 8001102:	bf00      	nop
 8001104:	20000164 	.word	0x20000164
 8001108:	40020000 	.word	0x40020000
 800110c:	40021800 	.word	0x40021800

08001110 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 8001110:	2803      	cmp	r0, #3
 8001112:	d80f      	bhi.n	8001134 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x24>
 8001114:	e8df f000 	tbb	[pc, r0]
 8001118:	0a080602 	.word	0x0a080602
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800111c:	2104      	movs	r1, #4
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800111e:	4806      	ldr	r0, [pc, #24]	; (8001138 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x28>)
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001120:	f006 b91d 	b.w	800735e <HAL_GPIO_TogglePin>
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8001124:	2140      	movs	r1, #64	; 0x40
 8001126:	e7fa      	b.n	800111e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001128:	2102      	movs	r1, #2
 800112a:	e7f8      	b.n	800111e <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xe>
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 800112c:	4803      	ldr	r0, [pc, #12]	; (800113c <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2c>)
 800112e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8001132:	e7f5      	b.n	8001120 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
#endif
        break;
    }
}
 8001134:	4770      	bx	lr
 8001136:	bf00      	nop
 8001138:	40020000 	.word	0x40020000
 800113c:	40021800 	.word	0x40021800

08001140 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 8001140:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 8001142:	2803      	cmp	r0, #3
 8001144:	d813      	bhi.n	800116e <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x2e>
 8001146:	e8df f000 	tbb	[pc, r0]
 800114a:	0a02      	.short	0x0a02
 800114c:	0e0c      	.short	0x0e0c
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 800114e:	2104      	movs	r1, #4
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
#endif
        break;
    case GPIO::FRAME_RATE:
#if defined(FRAME_RATE_GPIO_Port) && defined(FRAME_RATE_Pin)
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001150:	4808      	ldr	r0, [pc, #32]	; (8001174 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x34>)
#endif
        break;
    case GPIO::MCU_ACTIVE:
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001152:	f006 f8f9 	bl	8007348 <HAL_GPIO_ReadPin>
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 8001156:	1e43      	subs	r3, r0, #1
 8001158:	4258      	negs	r0, r3
 800115a:	4158      	adcs	r0, r3
 800115c:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 800115e:	2140      	movs	r1, #64	; 0x40
 8001160:	e7f6      	b.n	8001150 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(FRAME_RATE_GPIO_Port, FRAME_RATE_Pin);
 8001162:	2102      	movs	r1, #2
 8001164:	e7f4      	b.n	8001150 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x10>
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
 8001166:	4804      	ldr	r0, [pc, #16]	; (8001178 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x38>)
 8001168:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 800116c:	e7f1      	b.n	8001152 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
    switch (id)
 800116e:	2000      	movs	r0, #0
 8001170:	e7f1      	b.n	8001156 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8001172:	bf00      	nop
 8001174:	40020000 	.word	0x40020000
 8001178:	40021800 	.word	0x40021800

0800117c <_ZN8touchgfx4GPIO4initEv>:
{
 800117c:	b570      	push	{r4, r5, r6, lr}
 800117e:	4d08      	ldr	r5, [pc, #32]	; (80011a0 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8001180:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8001182:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8001184:	b2e0      	uxtb	r0, r4
 8001186:	f7ff ffdb 	bl	8001140 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800118a:	b118      	cbz	r0, 8001194 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 800118c:	682b      	ldr	r3, [r5, #0]
 800118e:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8001190:	bf18      	it	ne
 8001192:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8001194:	3401      	adds	r4, #1
 8001196:	2c05      	cmp	r4, #5
 8001198:	f105 0504 	add.w	r5, r5, #4
 800119c:	d1f2      	bne.n	8001184 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 800119e:	bd70      	pop	{r4, r5, r6, pc}
 80011a0:	20000164 	.word	0x20000164

080011a4 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 80011a4:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 80011a6:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 80011aa:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 80011ae:	4770      	bx	lr

080011b0 <_ZN8touchgfx3HAL9sampleKeyERh>:
     */
    virtual bool sampleKey(uint8_t& key)
    {
        (void)key; // Unused variable
        return false;
    }
 80011b0:	2000      	movs	r0, #0
 80011b2:	4770      	bx	lr

080011b4 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
     * @see setFrameBufferStartAddresses
     */
    virtual void setAnimationStorage(void* animationStorage)
    {
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80011b4:	4b03      	ldr	r3, [pc, #12]	; (80011c4 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x10>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80011b6:	6441      	str	r1, [r0, #68]	; 0x44
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80011b8:	3900      	subs	r1, #0
 80011ba:	bf18      	it	ne
 80011bc:	2101      	movne	r1, #1
 80011be:	7019      	strb	r1, [r3, #0]
    }
 80011c0:	4770      	bx	lr
 80011c2:	bf00      	nop
 80011c4:	20011e3f 	.word	0x20011e3f

080011c8 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 80011c8:	2000      	movs	r0, #0
 80011ca:	4770      	bx	lr

080011cc <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 80011cc:	6b83      	ldr	r3, [r0, #56]	; 0x38
 80011ce:	b10b      	cbz	r3, 80011d4 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 80011d0:	4608      	mov	r0, r1
 80011d2:	4718      	bx	r3
        }
    }
 80011d4:	4770      	bx	lr

080011d6 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 80011d6:	f64f 70ff 	movw	r0, #65535	; 0xffff
 80011da:	4770      	bx	lr

080011dc <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 80011dc:	6840      	ldr	r0, [r0, #4]
 80011de:	6803      	ldr	r3, [r0, #0]
 80011e0:	699b      	ldr	r3, [r3, #24]
 80011e2:	4718      	bx	r3

080011e4 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 80011e4:	4770      	bx	lr

080011e6 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 80011e6:	4770      	bx	lr

080011e8 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 80011e8:	4b01      	ldr	r3, [pc, #4]	; (80011f0 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 80011ea:	6818      	ldr	r0, [r3, #0]
 80011ec:	4770      	bx	lr
 80011ee:	bf00      	nop
 80011f0:	20000174 	.word	0x20000174

080011f4 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 80011f4:	4770      	bx	lr
	...

080011f8 <_ZN11TouchGFXHAL10initializeEv>:
{
 80011f8:	b538      	push	{r3, r4, r5, lr}
 80011fa:	4604      	mov	r4, r0
    mcuInstr.init();
 80011fc:	4d09      	ldr	r5, [pc, #36]	; (8001224 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 80011fe:	f7ff ffbd 	bl	800117c <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 8001202:	4620      	mov	r0, r4
 8001204:	f000 fdc2 	bl	8001d8c <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 8001208:	2300      	movs	r3, #0
 800120a:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 800120e:	4628      	mov	r0, r5
 8001210:	f7ff fe7c 	bl	8000f0c <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8001214:	2301      	movs	r3, #1
 8001216:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 800121a:	4b03      	ldr	r3, [pc, #12]	; (8001228 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 800121c:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 800121e:	6163      	str	r3, [r4, #20]
}
 8001220:	bd38      	pop	{r3, r4, r5, pc}
 8001222:	bf00      	nop
 8001224:	20000180 	.word	0x20000180
 8001228:	2000017c 	.word	0x2000017c

0800122c <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 800122c:	6803      	ldr	r3, [r0, #0]
{
 800122e:	4604      	mov	r4, r0
 8001230:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 8001232:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8001236:	4798      	blx	r3
    enableInterrupts();
 8001238:	6823      	ldr	r3, [r4, #0]
 800123a:	4620      	mov	r0, r4
 800123c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800123e:	4798      	blx	r3
    OSWrappers::waitForVSync();
 8001240:	f000 fa2e 	bl	80016a0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 8001244:	6823      	ldr	r3, [r4, #0]
 8001246:	4620      	mov	r0, r4
 8001248:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800124a:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_NT35510_ID, DSI_DCS_SHORT_PKT_WRITE_P1, NT35510_CMD_DISPON, 0x00);
 800124c:	2100      	movs	r1, #0
 800124e:	4806      	ldr	r0, [pc, #24]	; (8001268 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 8001250:	9100      	str	r1, [sp, #0]
 8001252:	2329      	movs	r3, #41	; 0x29
 8001254:	2215      	movs	r2, #21
 8001256:	f005 fe66 	bl	8006f26 <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 800125a:	f000 fa21 	bl	80016a0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 800125e:	6823      	ldr	r3, [r4, #0]
 8001260:	4620      	mov	r0, r4
 8001262:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8001264:	4798      	blx	r3
    for (;;)
 8001266:	e7f8      	b.n	800125a <_ZN11TouchGFXHAL9taskEntryEv+0x2e>
 8001268:	20008bb8 	.word	0x20008bb8

0800126c <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 800126c:	b510      	push	{r4, lr}
 800126e:	4604      	mov	r4, r0
        swapFrameBuffers();
 8001270:	f00b fec8 	bl	800d004 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 8001274:	6823      	ldr	r3, [r4, #0]
 8001276:	4620      	mov	r0, r4
 8001278:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
    }
 800127c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8001280:	4718      	bx	r3

08001282 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8001282:	f000 bd82 	b.w	8001d8a <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08001286 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8001286:	f000 bd98 	b.w	8001dba <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800128a <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800128a:	f000 bd98 	b.w	8001dbe <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

0800128e <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800128e:	f000 bd6b 	b.w	8001d68 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08001292 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8001292:	f000 bd71 	b.w	8001d78 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08001296 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8001296:	f000 bd9b 	b.w	8001dd0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

0800129c <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 800129c:	4b02      	ldr	r3, [pc, #8]	; (80012a8 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 800129e:	2200      	movs	r2, #0
 80012a0:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 80012a2:	f00b b951 	b.w	800c548 <_ZN8touchgfx3HAL10beginFrameEv>
 80012a6:	bf00      	nop
 80012a8:	20000014 	.word	0x20000014

080012ac <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 80012ac:	b510      	push	{r4, lr}
 80012ae:	4604      	mov	r4, r0
    HAL::endFrame();
 80012b0:	f00b f956 	bl	800c560 <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 80012b4:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 80012b8:	b113      	cbz	r3, 80012c0 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 80012ba:	4b02      	ldr	r3, [pc, #8]	; (80012c4 <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 80012bc:	2201      	movs	r2, #1
 80012be:	701a      	strb	r2, [r3, #0]
    }
}
 80012c0:	bd10      	pop	{r4, pc}
 80012c2:	bf00      	nop
 80012c4:	20000014 	.word	0x20000014

080012c8 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 80012c8:	f00b b901 	b.w	800c4ce <_ZN8touchgfx3HAL16flushFrameBufferEv>

080012cc <_ZN11TouchGFXHALD0Ev>:
 80012cc:	b510      	push	{r4, lr}
 80012ce:	217c      	movs	r1, #124	; 0x7c
 80012d0:	4604      	mov	r4, r0
 80012d2:	f01f f9ed 	bl	80206b0 <_ZdlPvj>
 80012d6:	4620      	mov	r0, r4
 80012d8:	bd10      	pop	{r4, pc}

080012da <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 80012da:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 80012de:	b11b      	cbz	r3, 80012e8 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 80012e0:	6840      	ldr	r0, [r0, #4]
 80012e2:	6803      	ldr	r3, [r0, #0]
 80012e4:	681b      	ldr	r3, [r3, #0]
 80012e6:	4718      	bx	r3
    }
 80012e8:	4618      	mov	r0, r3
 80012ea:	4770      	bx	lr

080012ec <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 80012ec:	b510      	push	{r4, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 80012ee:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 80012f2:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
            if (DISPLAY_ROTATION == rotate0)
 80012f6:	4b0c      	ldr	r3, [pc, #48]	; (8001328 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>)
        if (requestedOrientation != nativeDisplayOrientation)
 80012f8:	428c      	cmp	r4, r1
            if (DISPLAY_ROTATION == rotate0)
 80012fa:	781a      	ldrb	r2, [r3, #0]
        if (requestedOrientation != nativeDisplayOrientation)
 80012fc:	d009      	beq.n	8001312 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x26>
            if (DISPLAY_ROTATION == rotate0)
 80012fe:	b93a      	cbnz	r2, 8001310 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001300:	4a0a      	ldr	r2, [pc, #40]	; (800132c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001302:	490b      	ldr	r1, [pc, #44]	; (8001330 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001304:	8814      	ldrh	r4, [r2, #0]
                const uint16_t tmp = DISPLAY_HEIGHT;
 8001306:	8808      	ldrh	r0, [r1, #0]
                DISPLAY_WIDTH = tmp;
 8001308:	8010      	strh	r0, [r2, #0]
                DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800130a:	800c      	strh	r4, [r1, #0]
                DISPLAY_ROTATION = rotate90;
 800130c:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 800130e:	701a      	strb	r2, [r3, #0]
    }
 8001310:	bd10      	pop	{r4, pc}
        else if (DISPLAY_ROTATION != rotate0)
 8001312:	2a00      	cmp	r2, #0
 8001314:	d0fc      	beq.n	8001310 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x24>
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001316:	4a05      	ldr	r2, [pc, #20]	; (800132c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x40>)
            const uint16_t tmp = DISPLAY_HEIGHT;
 8001318:	4905      	ldr	r1, [pc, #20]	; (8001330 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x44>)
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 800131a:	8814      	ldrh	r4, [r2, #0]
            const uint16_t tmp = DISPLAY_HEIGHT;
 800131c:	8808      	ldrh	r0, [r1, #0]
            DISPLAY_WIDTH = tmp;
 800131e:	8010      	strh	r0, [r2, #0]
            DISPLAY_HEIGHT = DISPLAY_WIDTH;
 8001320:	800c      	strh	r4, [r1, #0]
            DISPLAY_ROTATION = rotate0;
 8001322:	2200      	movs	r2, #0
 8001324:	e7f3      	b.n	800130e <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x22>
 8001326:	bf00      	nop
 8001328:	20011e38 	.word	0x20011e38
 800132c:	20011e34 	.word	0x20011e34
 8001330:	20011e36 	.word	0x20011e36

08001334 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
    virtual void setFrameBufferSize(uint16_t width, uint16_t height)
 8001334:	b508      	push	{r3, lr}
        assert(width >= DISPLAY_WIDTH && height >= DISPLAY_HEIGHT && "Framebuffer cannot be smaller than display");
 8001336:	4b09      	ldr	r3, [pc, #36]	; (800135c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x28>)
 8001338:	881b      	ldrh	r3, [r3, #0]
 800133a:	428b      	cmp	r3, r1
 800133c:	d803      	bhi.n	8001346 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x12>
 800133e:	4b08      	ldr	r3, [pc, #32]	; (8001360 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x2c>)
 8001340:	881b      	ldrh	r3, [r3, #0]
 8001342:	4293      	cmp	r3, r2
 8001344:	d905      	bls.n	8001352 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x1e>
 8001346:	4b07      	ldr	r3, [pc, #28]	; (8001364 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>)
 8001348:	4a07      	ldr	r2, [pc, #28]	; (8001368 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x34>)
 800134a:	4808      	ldr	r0, [pc, #32]	; (800136c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x38>)
 800134c:	219e      	movs	r1, #158	; 0x9e
 800134e:	f01f f9dd 	bl	802070c <__assert_func>
        FRAME_BUFFER_WIDTH = width;
 8001352:	4b07      	ldr	r3, [pc, #28]	; (8001370 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x3c>)
 8001354:	8019      	strh	r1, [r3, #0]
        FRAME_BUFFER_HEIGHT = height;
 8001356:	4b07      	ldr	r3, [pc, #28]	; (8001374 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x40>)
 8001358:	801a      	strh	r2, [r3, #0]
    }
 800135a:	bd08      	pop	{r3, pc}
 800135c:	20011e34 	.word	0x20011e34
 8001360:	20011e36 	.word	0x20011e36
 8001364:	08021aa8 	.word	0x08021aa8
 8001368:	08021b0b 	.word	0x08021b0b
 800136c:	08021b4e 	.word	0x08021b4e
 8001370:	20011e3a 	.word	0x20011e3a
 8001374:	20011e3c 	.word	0x20011e3c

08001378 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 8001378:	b570      	push	{r4, r5, r6, lr}
 800137a:	460d      	mov	r5, r1
 800137c:	4619      	mov	r1, r3
    currFbBase = (uint16_t*)frameBuffer;
 800137e:	4b0b      	ldr	r3, [pc, #44]	; (80013ac <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 8001380:	601d      	str	r5, [r3, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 8001382:	b935      	cbnz	r5, 8001392 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x1a>
 8001384:	4b0a      	ldr	r3, [pc, #40]	; (80013b0 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 8001386:	4a0b      	ldr	r2, [pc, #44]	; (80013b4 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 8001388:	480b      	ldr	r0, [pc, #44]	; (80013b8 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 800138a:	f240 21d2 	movw	r1, #722	; 0x2d2
 800138e:	f01f f9bd 	bl	802070c <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 8001392:	e9c0 520f 	strd	r5, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 8001396:	4b09      	ldr	r3, [pc, #36]	; (80013bc <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
 8001398:	3a00      	subs	r2, #0
 800139a:	bf18      	it	ne
 800139c:	2201      	movne	r2, #1
 800139e:	701a      	strb	r2, [r3, #0]
        setAnimationStorage(animationStorage);
 80013a0:	6803      	ldr	r3, [r0, #0]
}
 80013a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80013a6:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80013aa:	4718      	bx	r3
 80013ac:	20000174 	.word	0x20000174
 80013b0:	08021b93 	.word	0x08021b93
 80013b4:	08021bcb 	.word	0x08021bcb
 80013b8:	08021b4e 	.word	0x08021b4e
 80013bc:	20011e3e 	.word	0x20011e3e

080013c0 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 80013c0:	2801      	cmp	r0, #1
    {
 80013c2:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 80013c4:	d80a      	bhi.n	80013dc <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_NT35510_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 80013c6:	784b      	ldrb	r3, [r1, #1]
 80013c8:	9300      	str	r3, [sp, #0]
 80013ca:	780b      	ldrb	r3, [r1, #0]
 80013cc:	4808      	ldr	r0, [pc, #32]	; (80013f0 <DSI_IO_WriteCmd+0x30>)
 80013ce:	2215      	movs	r2, #21
 80013d0:	2100      	movs	r1, #0
 80013d2:	f005 fda8 	bl	8006f26 <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_NT35510_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 80013d6:	b003      	add	sp, #12
 80013d8:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_NT35510_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 80013dc:	9101      	str	r1, [sp, #4]
 80013de:	5c0b      	ldrb	r3, [r1, r0]
 80013e0:	9300      	str	r3, [sp, #0]
 80013e2:	2239      	movs	r2, #57	; 0x39
 80013e4:	4603      	mov	r3, r0
 80013e6:	2100      	movs	r1, #0
 80013e8:	4801      	ldr	r0, [pc, #4]	; (80013f0 <DSI_IO_WriteCmd+0x30>)
 80013ea:	f005 fdad 	bl	8006f48 <HAL_DSI_LongWrite>
    }
 80013ee:	e7f2      	b.n	80013d6 <DSI_IO_WriteCmd+0x16>
 80013f0:	20008bb8 	.word	0x20008bb8

080013f4 <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 80013f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 80013f6:	4a0b      	ldr	r2, [pc, #44]	; (8001424 <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 80013f8:	4c0b      	ldr	r4, [pc, #44]	; (8001428 <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 80013fa:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 80013fc:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 80013fe:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8001400:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8001402:	9201      	str	r2, [sp, #4]
 8001404:	2244      	movs	r2, #68	; 0x44
 8001406:	9200      	str	r2, [sp, #0]
 8001408:	2100      	movs	r1, #0
 800140a:	2239      	movs	r2, #57	; 0x39
 800140c:	4620      	mov	r0, r4
 800140e:	f005 fd9b 	bl	8006f48 <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8001412:	2100      	movs	r1, #0
 8001414:	9100      	str	r1, [sp, #0]
 8001416:	2335      	movs	r3, #53	; 0x35
 8001418:	462a      	mov	r2, r5
 800141a:	4620      	mov	r0, r4
 800141c:	f005 fd83 	bl	8006f26 <HAL_DSI_ShortWrite>
    }
 8001420:	b003      	add	sp, #12
 8001422:	bd30      	pop	{r4, r5, pc}
 8001424:	2000018c 	.word	0x2000018c
 8001428:	20008bb8 	.word	0x20008bb8

0800142c <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 800142c:	b507      	push	{r0, r1, r2, lr}
 800142e:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8001430:	f7ff ffe0 	bl	80013f4 <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8001434:	9801      	ldr	r0, [sp, #4]
}
 8001436:	b003      	add	sp, #12
 8001438:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 800143c:	f000 bca4 	b.w	8001d88 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08001440 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8001440:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, NT35510_CMD_CASET, pCols[idx]);
 8001442:	4b07      	ldr	r3, [pc, #28]	; (8001460 <LCD_SetUpdateRegion+0x20>)
 8001444:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8001448:	232a      	movs	r3, #42	; 0x2a
 800144a:	9001      	str	r0, [sp, #4]
 800144c:	9300      	str	r3, [sp, #0]
 800144e:	2239      	movs	r2, #57	; 0x39
 8001450:	2304      	movs	r3, #4
 8001452:	2100      	movs	r1, #0
 8001454:	4803      	ldr	r0, [pc, #12]	; (8001464 <LCD_SetUpdateRegion+0x24>)
 8001456:	f005 fd77 	bl	8006f48 <HAL_DSI_LongWrite>
    }
 800145a:	b003      	add	sp, #12
 800145c:	f85d fb04 	ldr.w	pc, [sp], #4
 8001460:	20000004 	.word	0x20000004
 8001464:	20008bb8 	.word	0x20008bb8

08001468 <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, NT35510_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8001468:	b570      	push	{r4, r5, r6, lr}
        return instance;
 800146a:	4d15      	ldr	r5, [pc, #84]	; (80014c0 <HAL_DSI_TearingEffectCallback+0x58>)
 800146c:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 800146e:	2000      	movs	r0, #0
 8001470:	f7ff fdf2 	bl	8001058 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8001474:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8001476:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 800147a:	3301      	adds	r3, #1
 800147c:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8001480:	f000 f902 	bl	8001688 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8001484:	4b0f      	ldr	r3, [pc, #60]	; (80014c4 <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8001486:	6828      	ldr	r0, [r5, #0]
 8001488:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 800148a:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 800148c:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8001490:	b123      	cbz	r3, 800149c <HAL_DSI_TearingEffectCallback+0x34>
 8001492:	4d0d      	ldr	r5, [pc, #52]	; (80014c8 <HAL_DSI_TearingEffectCallback+0x60>)
 8001494:	782b      	ldrb	r3, [r5, #0]
 8001496:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 800149a:	b123      	cbz	r3, 80014a6 <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 800149c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 80014a0:	2000      	movs	r0, #0
 80014a2:	f7ff be07 	b.w	80010b4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 80014a6:	f00b fdad 	bl	800d004 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 80014aa:	4b08      	ldr	r3, [pc, #32]	; (80014cc <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 80014ac:	4630      	mov	r0, r6
            updateRegion = 0;
 80014ae:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 80014b0:	f7ff ffc6 	bl	8001440 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 80014b4:	4620      	mov	r0, r4
 80014b6:	f005 fd26 	bl	8006f06 <HAL_DSI_Refresh>
            displayRefreshing = true;
 80014ba:	2301      	movs	r3, #1
 80014bc:	702b      	strb	r3, [r5, #0]
    }
 80014be:	bd70      	pop	{r4, r5, r6, pc}
 80014c0:	20011e40 	.word	0x20011e40
 80014c4:	20000014 	.word	0x20000014
 80014c8:	2000018e 	.word	0x2000018e
 80014cc:	20000178 	.word	0x20000178

080014d0 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 80014d0:	4b33      	ldr	r3, [pc, #204]	; (80015a0 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 80014d2:	681a      	ldr	r2, [r3, #0]
 80014d4:	3201      	adds	r2, #1
    {
 80014d6:	b570      	push	{r4, r5, r6, lr}
        updateRegion++;
 80014d8:	601a      	str	r2, [r3, #0]
        if (updateRegion < 4)
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 80014da:	4b32      	ldr	r3, [pc, #200]	; (80015a4 <HAL_DSI_EndOfRefreshCallback+0xd4>)
 80014dc:	4c32      	ldr	r4, [pc, #200]	; (80015a8 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 80014de:	6819      	ldr	r1, [r3, #0]
 80014e0:	4b32      	ldr	r3, [pc, #200]	; (80015ac <HAL_DSI_EndOfRefreshCallback+0xdc>)
        if (updateRegion < 4)
 80014e2:	2a03      	cmp	r2, #3
    {
 80014e4:	4605      	mov	r5, r0
        if (updateRegion < 4)
 80014e6:	dc2e      	bgt.n	8001546 <HAL_DSI_EndOfRefreshCallback+0x76>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 80014e8:	f8d4 0404 	ldr.w	r0, [r4, #1028]	; 0x404
 80014ec:	f020 0008 	bic.w	r0, r0, #8
 80014f0:	f8c4 0404 	str.w	r0, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 80014f4:	f44f 70c8 	mov.w	r0, #400	; 0x190
 80014f8:	fb00 1102 	mla	r1, r0, r2, r1
 80014fc:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8001500:	bf0c      	ite	eq
 8001502:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8001504:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8001506:	3302      	adds	r3, #2
 8001508:	4928      	ldr	r1, [pc, #160]	; (80015ac <HAL_DSI_EndOfRefreshCallback+0xdc>)
 800150a:	041b      	lsls	r3, r3, #16
 800150c:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8001510:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8001512:	4b27      	ldr	r3, [pc, #156]	; (80015b0 <HAL_DSI_EndOfRefreshCallback+0xe0>)
 8001514:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8001516:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 800151a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 800151e:	4b25      	ldr	r3, [pc, #148]	; (80015b4 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8001520:	f8c1 30b0 	str.w	r3, [r1, #176]	; 0xb0

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001524:	2301      	movs	r3, #1
            LCD_SetUpdateRegion(updateRegion);
 8001526:	4610      	mov	r0, r2
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8001528:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 800152a:	f7ff ff89 	bl	8001440 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 800152e:	4a1e      	ldr	r2, [pc, #120]	; (80015a8 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8001530:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8001534:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8001538:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 800153a:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 800153e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8001542:	f005 bce0 	b.w	8006f06 <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8001546:	f8d4 2404 	ldr.w	r2, [r4, #1028]	; 0x404
 800154a:	f022 0208 	bic.w	r2, r2, #8
 800154e:	f8c4 2404 	str.w	r2, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8001552:	4a19      	ldr	r2, [pc, #100]	; (80015b8 <HAL_DSI_EndOfRefreshCallback+0xe8>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8001554:	f8c3 10ac 	str.w	r1, [r3, #172]	; 0xac
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8001558:	611a      	str	r2, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 800155a:	f102 1201 	add.w	r2, r2, #65537	; 0x10001
 800155e:	615a      	str	r2, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8001560:	4a16      	ldr	r2, [pc, #88]	; (80015bc <HAL_DSI_EndOfRefreshCallback+0xec>)
 8001562:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8001566:	4a13      	ldr	r2, [pc, #76]	; (80015b4 <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8001568:	f8c3 20b0 	str.w	r2, [r3, #176]	; 0xb0
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 800156c:	2201      	movs	r2, #1
 800156e:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8001570:	2000      	movs	r0, #0
 8001572:	f7ff ff65 	bl	8001440 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8001576:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 800157a:	f043 0308 	orr.w	r3, r3, #8
 800157e:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8001582:	2000      	movs	r0, #0
 8001584:	f7ff fd96 	bl	80010b4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8001588:	4b0d      	ldr	r3, [pc, #52]	; (80015c0 <HAL_DSI_EndOfRefreshCallback+0xf0>)
 800158a:	2200      	movs	r2, #0
 800158c:	701a      	strb	r2, [r3, #0]
        return instance;
 800158e:	4b0d      	ldr	r3, [pc, #52]	; (80015c4 <HAL_DSI_EndOfRefreshCallback+0xf4>)
 8001590:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8001592:	b120      	cbz	r0, 800159e <HAL_DSI_EndOfRefreshCallback+0xce>
        allowDMATransfers();
 8001594:	6803      	ldr	r3, [r0, #0]
    }
 8001596:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800159a:	6a1b      	ldr	r3, [r3, #32]
 800159c:	4718      	bx	r3
 800159e:	bd70      	pop	{r4, r5, r6, pc}
 80015a0:	20000178 	.word	0x20000178
 80015a4:	20000174 	.word	0x20000174
 80015a8:	40016c00 	.word	0x40016c00
 80015ac:	40016800 	.word	0x40016800
 80015b0:	00ca01e3 	.word	0x00ca01e3
 80015b4:	06800193 	.word	0x06800193
 80015b8:	00ca01e2 	.word	0x00ca01e2
 80015bc:	00ca0003 	.word	0x00ca0003
 80015c0:	2000018e 	.word	0x2000018e
 80015c4:	20011e40 	.word	0x20011e40

080015c8 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 80015c8:	b508      	push	{r3, lr}
        return instance;
 80015ca:	4b04      	ldr	r3, [pc, #16]	; (80015dc <IdleTaskHook+0x14>)
 80015cc:	4601      	mov	r1, r0
 80015ce:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 80015d0:	b101      	cbz	r1, 80015d4 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 80015d2:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 80015d4:	f00b fd30 	bl	800d038 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 80015d8:	2001      	movs	r0, #1
 80015da:	bd08      	pop	{r3, pc}
 80015dc:	20011e40 	.word	0x20011e40

080015e0 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 80015e0:	4b05      	ldr	r3, [pc, #20]	; (80015f8 <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 80015e2:	4806      	ldr	r0, [pc, #24]	; (80015fc <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 80015e4:	2200      	movs	r2, #0
 80015e6:	605a      	str	r2, [r3, #4]
 80015e8:	609a      	str	r2, [r3, #8]
 80015ea:	4a05      	ldr	r2, [pc, #20]	; (8001600 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 80015ec:	601a      	str	r2, [r3, #0]
 80015ee:	4b05      	ldr	r3, [pc, #20]	; (8001604 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 80015f0:	6003      	str	r3, [r0, #0]
        init();
 80015f2:	f7ff bcc1 	b.w	8000f78 <_ZN8touchgfx10KeySampler4initEv>
 80015f6:	bf00      	nop
 80015f8:	20000180 	.word	0x20000180
 80015fc:	2000017c 	.word	0x2000017c
 8001600:	080219b0 	.word	0x080219b0
 8001604:	080219d8 	.word	0x080219d8

08001608 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8001608:	2101      	movs	r1, #1
{
 800160a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 800160c:	2200      	movs	r2, #0
 800160e:	4608      	mov	r0, r1
 8001610:	f008 f931 	bl	8009876 <osSemaphoreNew>
 8001614:	4b0a      	ldr	r3, [pc, #40]	; (8001640 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8001616:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8001618:	b928      	cbnz	r0, 8001626 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 800161a:	4b0a      	ldr	r3, [pc, #40]	; (8001644 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 800161c:	4a0a      	ldr	r2, [pc, #40]	; (8001648 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800161e:	2128      	movs	r1, #40	; 0x28

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001620:	480a      	ldr	r0, [pc, #40]	; (800164c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8001622:	f01f f873 	bl	802070c <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8001626:	2200      	movs	r2, #0
 8001628:	2104      	movs	r1, #4
 800162a:	2001      	movs	r0, #1
 800162c:	f008 f9c0 	bl	80099b0 <osMessageQueueNew>
 8001630:	4b07      	ldr	r3, [pc, #28]	; (8001650 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8001632:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8001634:	b918      	cbnz	r0, 800163e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8001636:	4b07      	ldr	r3, [pc, #28]	; (8001654 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8001638:	4a03      	ldr	r2, [pc, #12]	; (8001648 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 800163a:	212c      	movs	r1, #44	; 0x2c
 800163c:	e7f0      	b.n	8001620 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 800163e:	bd08      	pop	{r3, pc}
 8001640:	20000194 	.word	0x20000194
 8001644:	08021cf4 	.word	0x08021cf4
 8001648:	08021d3d 	.word	0x08021d3d
 800164c:	08021d6c 	.word	0x08021d6c
 8001650:	20000190 	.word	0x20000190
 8001654:	08021dd1 	.word	0x08021dd1

08001658 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8001658:	4b02      	ldr	r3, [pc, #8]	; (8001664 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 800165a:	f04f 31ff 	mov.w	r1, #4294967295
 800165e:	6818      	ldr	r0, [r3, #0]
 8001660:	f008 b953 	b.w	800990a <osSemaphoreAcquire>
 8001664:	20000194 	.word	0x20000194

08001668 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8001668:	4b01      	ldr	r3, [pc, #4]	; (8001670 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 800166a:	6818      	ldr	r0, [r3, #0]
 800166c:	f008 b978 	b.w	8009960 <osSemaphoreRelease>
 8001670:	20000194 	.word	0x20000194

08001674 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8001674:	4b02      	ldr	r3, [pc, #8]	; (8001680 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8001676:	2100      	movs	r1, #0
 8001678:	6818      	ldr	r0, [r3, #0]
 800167a:	f008 b946 	b.w	800990a <osSemaphoreAcquire>
 800167e:	bf00      	nop
 8001680:	20000194 	.word	0x20000194

08001684 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8001684:	f7ff bff0 	b.w	8001668 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08001688 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8001688:	4803      	ldr	r0, [pc, #12]	; (8001698 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 800168a:	4904      	ldr	r1, [pc, #16]	; (800169c <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800168c:	6800      	ldr	r0, [r0, #0]
 800168e:	2300      	movs	r3, #0
 8001690:	461a      	mov	r2, r3
 8001692:	f008 b9c8 	b.w	8009a26 <osMessageQueuePut>
 8001696:	bf00      	nop
 8001698:	20000190 	.word	0x20000190
 800169c:	20000018 	.word	0x20000018

080016a0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 80016a0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 80016a2:	4c08      	ldr	r4, [pc, #32]	; (80016c4 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 80016a4:	2300      	movs	r3, #0
 80016a6:	461a      	mov	r2, r3
 80016a8:	a901      	add	r1, sp, #4
 80016aa:	6820      	ldr	r0, [r4, #0]
 80016ac:	f008 f9eb 	bl	8009a86 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 80016b0:	6820      	ldr	r0, [r4, #0]
 80016b2:	f04f 33ff 	mov.w	r3, #4294967295
 80016b6:	2200      	movs	r2, #0
 80016b8:	a901      	add	r1, sp, #4
 80016ba:	f008 f9e4 	bl	8009a86 <osMessageQueueGet>
}
 80016be:	b002      	add	sp, #8
 80016c0:	bd10      	pop	{r4, pc}
 80016c2:	bf00      	nop
 80016c4:	20000190 	.word	0x20000190

080016c8 <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 80016c8:	6803      	ldr	r3, [r0, #0]
 80016ca:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80016cc:	4718      	bx	r3

080016ce <_ZN8STM32DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 80016ce:	2001      	movs	r0, #1
 80016d0:	4770      	bx	lr

080016d2 <_ZN8STM32DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 80016d2:	6803      	ldr	r3, [r0, #0]
 80016d4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80016d6:	4718      	bx	r3

080016d8 <_ZN8STM32DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32DMA::initialize()
{
 80016d8:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80016da:	2300      	movs	r3, #0
 80016dc:	9301      	str	r3, [sp, #4]
 80016de:	4b0d      	ldr	r3, [pc, #52]	; (8001714 <_ZN8STM32DMA10initializeEv+0x3c>)
 80016e0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80016e2:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80016e6:	631a      	str	r2, [r3, #48]	; 0x30
 80016e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80016ea:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 80016ee:	9201      	str	r2, [sp, #4]
 80016f0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 80016f2:	691a      	ldr	r2, [r3, #16]
 80016f4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 80016f8:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 80016fa:	691a      	ldr	r2, [r3, #16]
 80016fc:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8001700:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8001702:	4b05      	ldr	r3, [pc, #20]	; (8001718 <_ZN8STM32DMA10initializeEv+0x40>)
 8001704:	4a05      	ldr	r2, [pc, #20]	; (800171c <_ZN8STM32DMA10initializeEv+0x44>)
 8001706:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001708:	4b05      	ldr	r3, [pc, #20]	; (8001720 <_ZN8STM32DMA10initializeEv+0x48>)
 800170a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800170e:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001710:	b002      	add	sp, #8
 8001712:	4770      	bx	lr
 8001714:	40023800 	.word	0x40023800
 8001718:	20008b78 	.word	0x20008b78
 800171c:	08001765 	.word	0x08001765
 8001720:	e000e100 	.word	0xe000e100

08001724 <_ZN8STM32DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8001724:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8001728:	4770      	bx	lr
	...

0800172c <_ZN8STM32DMAD1Ev>:
STM32DMA::~STM32DMA()
 800172c:	4b05      	ldr	r3, [pc, #20]	; (8001744 <_ZN8STM32DMAD1Ev+0x18>)
 800172e:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001730:	4b05      	ldr	r3, [pc, #20]	; (8001748 <_ZN8STM32DMAD1Ev+0x1c>)
 8001732:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001736:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 800173a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800173e:	f3bf 8f6f 	isb	sy
}
 8001742:	4770      	bx	lr
 8001744:	08021f88 	.word	0x08021f88
 8001748:	e000e100 	.word	0xe000e100

0800174c <_ZN8STM32DMAD0Ev>:
STM32DMA::~STM32DMA()
 800174c:	b510      	push	{r4, lr}
 800174e:	4604      	mov	r4, r0
}
 8001750:	f44f 615a 	mov.w	r1, #3488	; 0xda0
 8001754:	f7ff ffea 	bl	800172c <_ZN8STM32DMAD1Ev>
 8001758:	4620      	mov	r0, r4
 800175a:	f01e ffa9 	bl	80206b0 <_ZdlPvj>
 800175e:	4620      	mov	r0, r4
 8001760:	bd10      	pop	{r4, pc}
	...

08001764 <DMA2D_XferCpltCallback>:
 8001764:	4b02      	ldr	r3, [pc, #8]	; (8001770 <DMA2D_XferCpltCallback+0xc>)
 8001766:	681b      	ldr	r3, [r3, #0]
 8001768:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 800176a:	6803      	ldr	r3, [r0, #0]
 800176c:	695b      	ldr	r3, [r3, #20]
 800176e:	4718      	bx	r3
 8001770:	20011e40 	.word	0x20011e40

08001774 <_ZN8STM32DMAC1Ev>:
STM32DMA::STM32DMA()
 8001774:	b570      	push	{r4, r5, r6, lr}
 8001776:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001778:	4625      	mov	r5, r4
 800177a:	4b0a      	ldr	r3, [pc, #40]	; (80017a4 <_ZN8STM32DMAC1Ev+0x30>)
 800177c:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 800177e:	2600      	movs	r6, #0
 8001780:	6060      	str	r0, [r4, #4]
 8001782:	7226      	strb	r6, [r4, #8]
 8001784:	7266      	strb	r6, [r4, #9]
 8001786:	f845 3b20 	str.w	r3, [r5], #32
 800178a:	2260      	movs	r2, #96	; 0x60
 800178c:	4629      	mov	r1, r5
 800178e:	f00b fd8f 	bl	800d2b0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 8001792:	f504 635a 	add.w	r3, r4, #3488	; 0xda0
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 8001796:	60ee      	str	r6, [r5, #12]
 8001798:	3524      	adds	r5, #36	; 0x24
 800179a:	42ab      	cmp	r3, r5
 800179c:	d1fb      	bne.n	8001796 <_ZN8STM32DMAC1Ev+0x22>
}
 800179e:	4620      	mov	r0, r4
 80017a0:	bd70      	pop	{r4, r5, r6, pc}
 80017a2:	bf00      	nop
 80017a4:	08021f88 	.word	0x08021f88

080017a8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 80017a8:	b508      	push	{r3, lr}
    switch (format)
 80017aa:	290b      	cmp	r1, #11
 80017ac:	d80b      	bhi.n	80017c6 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1e>
 80017ae:	e8df f001 	tbb	[pc, r1]
 80017b2:	0612      	.short	0x0612
 80017b4:	0a0a0a10 	.word	0x0a0a0a10
 80017b8:	0808080a 	.word	0x0808080a
 80017bc:	0808      	.short	0x0808
 80017be:	2001      	movs	r0, #1
}
 80017c0:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 80017c2:	2005      	movs	r0, #5
        break;
 80017c4:	e7fc      	b.n	80017c0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        assert(0 && "Unsupported Format!");
 80017c6:	4b05      	ldr	r3, [pc, #20]	; (80017dc <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 80017c8:	4a05      	ldr	r2, [pc, #20]	; (80017e0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 80017ca:	4806      	ldr	r0, [pc, #24]	; (80017e4 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x3c>)
 80017cc:	2166      	movs	r1, #102	; 0x66
 80017ce:	f01e ff9d 	bl	802070c <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 80017d2:	2000      	movs	r0, #0
 80017d4:	e7f4      	b.n	80017c0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 80017d6:	2002      	movs	r0, #2
    return dma2dColorMode;
 80017d8:	e7f2      	b.n	80017c0 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 80017da:	bf00      	nop
 80017dc:	08021e13 	.word	0x08021e13
 80017e0:	08021e2e 	.word	0x08021e2e
 80017e4:	08021e78 	.word	0x08021e78

080017e8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>:
{
 80017e8:	b508      	push	{r3, lr}
    switch (format)
 80017ea:	290a      	cmp	r1, #10
 80017ec:	d809      	bhi.n	8001802 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x1a>
 80017ee:	e8df f001 	tbb	[pc, r1]
 80017f2:	0610      	.short	0x0610
 80017f4:	0808080e 	.word	0x0808080e
 80017f8:	06060608 	.word	0x06060608
 80017fc:	06          	.byte	0x06
 80017fd:	00          	.byte	0x00
 80017fe:	2001      	movs	r0, #1
}
 8001800:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8001802:	4b05      	ldr	r3, [pc, #20]	; (8001818 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x30>)
 8001804:	4a05      	ldr	r2, [pc, #20]	; (800181c <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x34>)
 8001806:	4806      	ldr	r0, [pc, #24]	; (8001820 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x38>)
 8001808:	2187      	movs	r1, #135	; 0x87
 800180a:	f01e ff7f 	bl	802070c <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 800180e:	2000      	movs	r0, #0
 8001810:	e7f6      	b.n	8001800 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8001812:	2002      	movs	r0, #2
    return dma2dColorMode;
 8001814:	e7f4      	b.n	8001800 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE+0x18>
 8001816:	bf00      	nop
 8001818:	08021e13 	.word	0x08021e13
 800181c:	08021edb 	.word	0x08021edb
 8001820:	08021e78 	.word	0x08021e78

08001824 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32DMA::setupDataCopy(const BlitOp& blitOp)
{
 8001824:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001828:	7f4f      	ldrb	r7, [r1, #29]
{
 800182a:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 800182c:	4639      	mov	r1, r7
{
 800182e:	4681      	mov	r9, r0
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001830:	f7ff ffba 	bl	80017a8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001834:	f894 801e 	ldrb.w	r8, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8001838:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 800183a:	4641      	mov	r1, r8
 800183c:	4648      	mov	r0, r9
 800183e:	f7ff ffb3 	bl	80017a8 <_ZN8STM32DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE>
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001842:	4641      	mov	r1, r8
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001844:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001846:	4648      	mov	r0, r9
 8001848:	f7ff ffce 	bl	80017e8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800184c:	8aa1      	ldrh	r1, [r4, #20]
 800184e:	8b62      	ldrh	r2, [r4, #26]
 8001850:	4b42      	ldr	r3, [pc, #264]	; (800195c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001852:	1a52      	subs	r2, r2, r1
 8001854:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration */
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001856:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration */
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8001858:	8b22      	ldrh	r2, [r4, #24]
 800185a:	1a52      	subs	r2, r2, r1
 800185c:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800185e:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001860:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001862:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8001866:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001868:	6920      	ldr	r0, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 800186a:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 800186c:	63d8      	str	r0, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 800186e:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8001870:	6821      	ldr	r1, [r4, #0]
    {
    case BLIT_OP_COPY_A4:
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001872:	f894 c01c 	ldrb.w	ip, [r4, #28]
    switch (blitOp.operation)
 8001876:	2980      	cmp	r1, #128	; 0x80
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001878:	ea4f 620c 	mov.w	r2, ip, lsl #24
    switch (blitOp.operation)
 800187c:	d026      	beq.n	80018cc <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa8>
 800187e:	d810      	bhi.n	80018a2 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7e>
 8001880:	2920      	cmp	r1, #32
 8001882:	ea45 0402 	orr.w	r4, r5, r2
 8001886:	d061      	beq.n	800194c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 8001888:	2940      	cmp	r1, #64	; 0x40
 800188a:	d05f      	beq.n	800194c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
 800188c:	2904      	cmp	r1, #4
 800188e:	d05d      	beq.n	800194c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x128>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8001890:	4b32      	ldr	r3, [pc, #200]	; (800195c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 8001892:	432a      	orrs	r2, r5
 8001894:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8001898:	4547      	cmp	r7, r8
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800189a:	61da      	str	r2, [r3, #28]
        if (blitOp.srcFormat != blitOp.dstFormat)
 800189c:	d05a      	beq.n	8001954 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x130>
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 800189e:	4a30      	ldr	r2, [pc, #192]	; (8001960 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x13c>)
 80018a0:	e040      	b.n	8001924 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
    switch (blitOp.operation)
 80018a2:	f5b1 7f80 	cmp.w	r1, #256	; 0x100
 80018a6:	d007      	beq.n	80018b8 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x94>
 80018a8:	f5b1 7f00 	cmp.w	r1, #512	; 0x200
 80018ac:	d1f0      	bne.n	8001890 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x6c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80018ae:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80018b2:	f042 0209 	orr.w	r2, r2, #9
 80018b6:	e003      	b.n	80018c0 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9c>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80018b8:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 80018bc:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80018c0:	61da      	str	r2, [r3, #28]
     *
     * @return The result of the operation.
     */
    operator uint32_t() const
    {
        return color;
 80018c2:	68e2      	ldr	r2, [r4, #12]
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80018c4:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80018c6:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80018c8:	6158      	str	r0, [r3, #20]
 80018ca:	e02a      	b.n	8001922 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfe>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 80018cc:	68a4      	ldr	r4, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80018ce:	432a      	orrs	r2, r5
 80018d0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 80018d4:	1d21      	adds	r1, r4, #4
 80018d6:	62d9      	str	r1, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 80018d8:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 80018da:	7822      	ldrb	r2, [r4, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80018dc:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80018de:	6158      	str	r0, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 80018e0:	b142      	cbz	r2, 80018f4 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd0>
 80018e2:	2a01      	cmp	r2, #1
 80018e4:	d021      	beq.n	800192a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x106>
                assert(0 && "Unsupported format");
 80018e6:	4b1f      	ldr	r3, [pc, #124]	; (8001964 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x140>)
 80018e8:	4a1f      	ldr	r2, [pc, #124]	; (8001968 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x144>)
 80018ea:	4820      	ldr	r0, [pc, #128]	; (800196c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>)
 80018ec:	f240 1111 	movw	r1, #273	; 0x111
 80018f0:	f01e ff0c 	bl	802070c <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 80018f4:	69da      	ldr	r2, [r3, #28]
 80018f6:	8861      	ldrh	r1, [r4, #2]
 80018f8:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 80018fc:	3901      	subs	r1, #1
 80018fe:	f022 0210 	bic.w	r2, r2, #16
 8001902:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8001906:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8001908:	2001      	movs	r0, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 800190a:	4b14      	ldr	r3, [pc, #80]	; (800195c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x138>)
 800190c:	69da      	ldr	r2, [r3, #28]
 800190e:	f042 0220 	orr.w	r2, r2, #32
 8001912:	61da      	str	r2, [r3, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8001914:	69da      	ldr	r2, [r3, #28]
 8001916:	0692      	lsls	r2, r2, #26
 8001918:	d4fc      	bmi.n	8001914 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xf0>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 800191a:	2210      	movs	r2, #16
 800191c:	609a      	str	r2, [r3, #8]
            if(blend)
 800191e:	2800      	cmp	r0, #0
 8001920:	d0bd      	beq.n	800189e <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x7a>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8001922:	4a13      	ldr	r2, [pc, #76]	; (8001970 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x14c>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001924:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8001926:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 800192a:	8862      	ldrh	r2, [r4, #2]
 800192c:	69d9      	ldr	r1, [r3, #28]
 800192e:	1e54      	subs	r4, r2, #1
 8001930:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8001934:	f022 0210 	bic.w	r2, r2, #16
 8001938:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
                if(blitOp.alpha == 255)
 800193c:	f1bc 00ff 	subs.w	r0, ip, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001940:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8001944:	bf18      	it	ne
 8001946:	2001      	movne	r0, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8001948:	61da      	str	r2, [r3, #28]
                break;
 800194a:	e7de      	b.n	800190a <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xe6>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 800194c:	f444 3400 	orr.w	r4, r4, #131072	; 0x20000
 8001950:	61dc      	str	r4, [r3, #28]
 8001952:	e7b8      	b.n	80018c6 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa2>
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8001954:	f240 2201 	movw	r2, #513	; 0x201
 8001958:	e7e4      	b.n	8001924 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x100>
 800195a:	bf00      	nop
 800195c:	4002b000 	.word	0x4002b000
 8001960:	00010201 	.word	0x00010201
 8001964:	08021f26 	.word	0x08021f26
 8001968:	08021f40 	.word	0x08021f40
 800196c:	08021e78 	.word	0x08021e78
 8001970:	00020201 	.word	0x00020201

08001974 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32DMA::setupDataFill(const BlitOp& blitOp)
{
 8001974:	b570      	push	{r4, r5, r6, lr}
 8001976:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8001978:	7f89      	ldrb	r1, [r1, #30]
 800197a:	f7ff ff35 	bl	80017e8 <_ZN8STM32DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE>

    /* DMA2D OPFCCR register configuration */
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800197e:	8aa6      	ldrh	r6, [r4, #20]
 8001980:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration */
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001982:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001984:	4b15      	ldr	r3, [pc, #84]	; (80019dc <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001986:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8001988:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 800198a:	ea41 4106 	orr.w	r1, r1, r6, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 800198e:	1b92      	subs	r2, r2, r6
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8001990:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8001992:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8001994:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8001996:	6826      	ldr	r6, [r4, #0]
 8001998:	68e1      	ldr	r1, [r4, #12]
 800199a:	2e08      	cmp	r6, #8
 800199c:	d10d      	bne.n	80019ba <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x46>
    {
        /* DMA2D BGOR register configuration */
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 800199e:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration */
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 80019a0:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 80019a2:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_FGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_FGPFCCR_ALPHA));
 80019a4:	7f20      	ldrb	r0, [r4, #28]
 80019a6:	4a0e      	ldr	r2, [pc, #56]	; (80019e0 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6c>)
 80019a8:	ea42 6200 	orr.w	r2, r2, r0, lsl #24
 80019ac:	61da      	str	r2, [r3, #28]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 80019ae:	4a0d      	ldr	r2, [pc, #52]	; (80019e4 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x70>)
        WRITE_REG(DMA2D->FGCOLR, blitOp.color);
 80019b0:	6219      	str	r1, [r3, #32]
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80019b2:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 80019b4:	60dd      	str	r5, [r3, #12]

        /* Set color */
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 80019b6:	601a      	str	r2, [r3, #0]
    }
}
 80019b8:	bd70      	pop	{r4, r5, r6, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 80019ba:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_FGPFCCR_AM_Pos));
 80019bc:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 80019be:	611a      	str	r2, [r3, #16]
        WRITE_REG(DMA2D->OCOLR, ((blitOp.color >> 8) & 0xF800) | ((blitOp.color >> 5) & 0x07E0) | ((blitOp.color >> 3) & 0x001F));
 80019c0:	0948      	lsrs	r0, r1, #5
 80019c2:	0a0a      	lsrs	r2, r1, #8
 80019c4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 80019c8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80019cc:	4302      	orrs	r2, r0
 80019ce:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 80019d2:	430a      	orrs	r2, r1
 80019d4:	639a      	str	r2, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 80019d6:	4a04      	ldr	r2, [pc, #16]	; (80019e8 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x74>)
 80019d8:	e7ed      	b.n	80019b6 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x42>
 80019da:	bf00      	nop
 80019dc:	4002b000 	.word	0x4002b000
 80019e0:	00010009 	.word	0x00010009
 80019e4:	00020201 	.word	0x00020201
 80019e8:	00030201 	.word	0x00030201

080019ec <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15BlockTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80019ec:	2001      	movs	r0, #1
 80019ee:	4770      	bx	lr

080019f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15BlockTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80019f0:	2014      	movs	r0, #20
 80019f2:	4770      	bx	lr

080019f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15BlockTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80019f4:	2314      	movs	r3, #20
 80019f6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80019fa:	3008      	adds	r0, #8
 80019fc:	4770      	bx	lr

080019fe <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_15BlockTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80019fe:	2314      	movs	r3, #20
 8001a00:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001a04:	3008      	adds	r0, #8
 8001a06:	4770      	bx	lr

08001a08 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI17PulseSpectrumViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001a08:	2001      	movs	r0, #1
 8001a0a:	4770      	bx	lr

08001a0c <_ZN8touchgfx9PartitionINS_4meta8TypeListI17PulseSpectrumViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001a0c:	f246 2020 	movw	r0, #25120	; 0x6220
 8001a10:	4770      	bx	lr

08001a12 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17PulseSpectrumViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001a12:	f246 2320 	movw	r3, #25120	; 0x6220
 8001a16:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001a1a:	3008      	adds	r0, #8
 8001a1c:	4770      	bx	lr

08001a1e <_ZNK8touchgfx9PartitionINS_4meta8TypeListI17PulseSpectrumViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001a1e:	f246 2320 	movw	r3, #25120	; 0x6220
 8001a22:	fb03 0001 	mla	r0, r3, r1, r0
    }
 8001a26:	3008      	adds	r0, #8
 8001a28:	4770      	bx	lr

08001a2a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI17pwmSetupPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 8001a2a:	2001      	movs	r0, #1
 8001a2c:	4770      	bx	lr

08001a2e <_ZN8touchgfx9PartitionINS_4meta8TypeListI17pwmSetupPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 8001a2e:	2010      	movs	r0, #16
 8001a30:	4770      	bx	lr

08001a32 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17pwmSetupPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001a32:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001a36:	3008      	adds	r0, #8
 8001a38:	4770      	bx	lr

08001a3a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI17pwmSetupPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 8001a3a:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 8001a3e:	3008      	adds	r0, #8
 8001a40:	4770      	bx	lr

08001a42 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoStartupScreenNoTransition();
 8001a42:	4608      	mov	r0, r1
 8001a44:	f001 bcf6 	b.w	8003434 <_ZN23FrontendApplicationBase29gotoStartupScreenNoTransitionEv>

08001a48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15BlockTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 8001a48:	b510      	push	{r4, lr}
 8001a4a:	4b03      	ldr	r3, [pc, #12]	; (8001a58 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15BlockTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001a4c:	6003      	str	r3, [r0, #0]
 8001a4e:	4604      	mov	r4, r0
 8001a50:	f009 ffcb 	bl	800b9ea <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001a54:	4620      	mov	r0, r4
 8001a56:	bd10      	pop	{r4, pc}
 8001a58:	08022040 	.word	0x08022040

08001a5c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15BlockTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001a5c:	b510      	push	{r4, lr}
 8001a5e:	4604      	mov	r4, r0
 8001a60:	f7ff fff2 	bl	8001a48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15BlockTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001a64:	4620      	mov	r0, r4
 8001a66:	211c      	movs	r1, #28
 8001a68:	f01e fe22 	bl	80206b0 <_ZdlPvj>
 8001a6c:	4620      	mov	r0, r4
 8001a6e:	bd10      	pop	{r4, pc}

08001a70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17PulseSpectrumViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001a70:	b510      	push	{r4, lr}
 8001a72:	4b03      	ldr	r3, [pc, #12]	; (8001a80 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17PulseSpectrumViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001a74:	6003      	str	r3, [r0, #0]
 8001a76:	4604      	mov	r4, r0
 8001a78:	f009 ffb7 	bl	800b9ea <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001a7c:	4620      	mov	r0, r4
 8001a7e:	bd10      	pop	{r4, pc}
 8001a80:	0802200c 	.word	0x0802200c

08001a84 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17PulseSpectrumViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001a84:	b510      	push	{r4, lr}
 8001a86:	4604      	mov	r4, r0
 8001a88:	f7ff fff2 	bl	8001a70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17PulseSpectrumViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001a8c:	4620      	mov	r0, r4
 8001a8e:	f246 2128 	movw	r1, #25128	; 0x6228
 8001a92:	f01e fe0d 	bl	80206b0 <_ZdlPvj>
 8001a96:	4620      	mov	r0, r4
 8001a98:	bd10      	pop	{r4, pc}
	...

08001a9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI17pwmSetupPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001a9c:	b510      	push	{r4, lr}
 8001a9e:	4b03      	ldr	r3, [pc, #12]	; (8001aac <_ZN8touchgfx9PartitionINS_4meta8TypeListI17pwmSetupPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001aa0:	6003      	str	r3, [r0, #0]
 8001aa2:	4604      	mov	r4, r0
 8001aa4:	f009 ffa1 	bl	800b9ea <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001aa8:	4620      	mov	r0, r4
 8001aaa:	bd10      	pop	{r4, pc}
 8001aac:	08021fd8 	.word	0x08021fd8

08001ab0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17pwmSetupPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001ab0:	b510      	push	{r4, lr}
 8001ab2:	4604      	mov	r4, r0
 8001ab4:	f7ff fff2 	bl	8001a9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI17pwmSetupPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001ab8:	4620      	mov	r0, r4
 8001aba:	2118      	movs	r1, #24
 8001abc:	f01e fdf8 	bl	80206b0 <_ZdlPvj>
 8001ac0:	4620      	mov	r0, r4
 8001ac2:	bd10      	pop	{r4, pc}

08001ac4 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001ac4:	b510      	push	{r4, lr}
 8001ac6:	4b09      	ldr	r3, [pc, #36]	; (8001aec <_ZN12FrontendHeapD1Ev+0x28>)
 8001ac8:	6003      	str	r3, [r0, #0]
 8001aca:	4604      	mov	r4, r0
 8001acc:	f500 40c4 	add.w	r0, r0, #25088	; 0x6200
 8001ad0:	3054      	adds	r0, #84	; 0x54
 8001ad2:	f7ff ffb9 	bl	8001a48 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_15BlockTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001ad6:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001ada:	f7ff ffc9 	bl	8001a70 <_ZN8touchgfx9PartitionINS_4meta8TypeListI17PulseSpectrumViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001ade:	f104 0014 	add.w	r0, r4, #20
 8001ae2:	f7ff ffdb 	bl	8001a9c <_ZN8touchgfx9PartitionINS_4meta8TypeListI17pwmSetupPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001ae6:	4620      	mov	r0, r4
 8001ae8:	bd10      	pop	{r4, pc}
 8001aea:	bf00      	nop
 8001aec:	08022074 	.word	0x08022074

08001af0 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001af0:	b508      	push	{r3, lr}
 8001af2:	4802      	ldr	r0, [pc, #8]	; (8001afc <__tcf_0+0xc>)
 8001af4:	f7ff ffe6 	bl	8001ac4 <_ZN12FrontendHeapD1Ev>
 8001af8:	bd08      	pop	{r3, pc}
 8001afa:	bf00      	nop
 8001afc:	2000019c 	.word	0x2000019c

08001b00 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 8001b00:	b510      	push	{r4, lr}
 8001b02:	4604      	mov	r4, r0
 8001b04:	f7ff ffde 	bl	8001ac4 <_ZN12FrontendHeapD1Ev>
 8001b08:	4620      	mov	r0, r4
 8001b0a:	f246 31d0 	movw	r1, #25552	; 0x63d0
 8001b0e:	f01e fdcf 	bl	80206b0 <_ZdlPvj>
 8001b12:	4620      	mov	r0, r4
 8001b14:	bd10      	pop	{r4, pc}
	...

08001b18 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 8001b18:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 8001b1c:	f001 fab0 	bl	8003080 <_ZN14BitmapDatabase11getInstanceEv>
 8001b20:	4605      	mov	r5, r0
 8001b22:	f001 fab1 	bl	8003088 <_ZN14BitmapDatabase15getInstanceSizeEv>
 8001b26:	2400      	movs	r4, #0
 8001b28:	4601      	mov	r1, r0
 8001b2a:	4623      	mov	r3, r4
 8001b2c:	4628      	mov	r0, r5
 8001b2e:	4622      	mov	r2, r4
 8001b30:	9400      	str	r4, [sp, #0]
 8001b32:	f012 ffb1 	bl	8014a98 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 8001b36:	4b26      	ldr	r3, [pc, #152]	; (8001bd0 <touchgfx_init+0xb8>)
 8001b38:	4a26      	ldr	r2, [pc, #152]	; (8001bd4 <touchgfx_init+0xbc>)
        static FrontendHeap instance;
 8001b3a:	4d27      	ldr	r5, [pc, #156]	; (8001bd8 <touchgfx_init+0xc0>)
 8001b3c:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 8001b3e:	4620      	mov	r0, r4
 8001b40:	f003 f90e 	bl	8004d60 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 8001b44:	4825      	ldr	r0, [pc, #148]	; (8001bdc <touchgfx_init+0xc4>)
 8001b46:	f012 ff0f 	bl	8014968 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 8001b4a:	782b      	ldrb	r3, [r5, #0]
 8001b4c:	f3bf 8f5b 	dmb	ish
 8001b50:	07db      	lsls	r3, r3, #31
 8001b52:	d436      	bmi.n	8001bc2 <touchgfx_init+0xaa>
 8001b54:	4628      	mov	r0, r5
 8001b56:	f01e fdad 	bl	80206b4 <__cxa_guard_acquire>
 8001b5a:	b390      	cbz	r0, 8001bc2 <touchgfx_init+0xaa>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001b5c:	4c20      	ldr	r4, [pc, #128]	; (8001be0 <touchgfx_init+0xc8>)
 8001b5e:	4f21      	ldr	r7, [pc, #132]	; (8001be4 <touchgfx_init+0xcc>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001b60:	4b21      	ldr	r3, [pc, #132]	; (8001be8 <touchgfx_init+0xd0>)
 8001b62:	6023      	str	r3, [r4, #0]
 8001b64:	f107 0620 	add.w	r6, r7, #32
 8001b68:	f104 0014 	add.w	r0, r4, #20
 8001b6c:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8001b70:	6060      	str	r0, [r4, #4]
 8001b72:	f8c4 8008 	str.w	r8, [r4, #8]
 8001b76:	60e7      	str	r7, [r4, #12]
 8001b78:	6126      	str	r6, [r4, #16]
 8001b7a:	f009 ff37 	bl	800b9ec <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001b7e:	4b1b      	ldr	r3, [pc, #108]	; (8001bec <touchgfx_init+0xd4>)
 8001b80:	6163      	str	r3, [r4, #20]
 8001b82:	4640      	mov	r0, r8
 8001b84:	f009 ff32 	bl	800b9ec <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001b88:	4b19      	ldr	r3, [pc, #100]	; (8001bf0 <touchgfx_init+0xd8>)
 8001b8a:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001b8c:	4638      	mov	r0, r7
 8001b8e:	f009 ff2d 	bl	800b9ec <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001b92:	f504 43c0 	add.w	r3, r4, #24576	; 0x6000
 8001b96:	4a17      	ldr	r2, [pc, #92]	; (8001bf4 <touchgfx_init+0xdc>)
 8001b98:	f8c3 2254 	str.w	r2, [r3, #596]	; 0x254
 8001b9c:	f503 701c 	add.w	r0, r3, #624	; 0x270
 8001ba0:	f003 fb74 	bl	800528c <_ZN5ModelC1Ev>
 8001ba4:	4622      	mov	r2, r4
 8001ba6:	f107 011c 	add.w	r1, r7, #28
 8001baa:	4630      	mov	r0, r6
 8001bac:	f003 fb22 	bl	80051f4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001bb0:	4630      	mov	r0, r6
 8001bb2:	f001 fc3f 	bl	8003434 <_ZN23FrontendApplicationBase29gotoStartupScreenNoTransitionEv>
        static FrontendHeap instance;
 8001bb6:	4810      	ldr	r0, [pc, #64]	; (8001bf8 <touchgfx_init+0xe0>)
 8001bb8:	f01e fdc6 	bl	8020748 <atexit>
 8001bbc:	4628      	mov	r0, r5
 8001bbe:	f01e fd85 	bl	80206cc <__cxa_guard_release>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001bc2:	480e      	ldr	r0, [pc, #56]	; (8001bfc <touchgfx_init+0xe4>)
}
 8001bc4:	b002      	add	sp, #8
 8001bc6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001bca:	f7ff bb15 	b.w	80011f8 <_ZN11TouchGFXHAL10initializeEv>
 8001bce:	bf00      	nop
 8001bd0:	20011ea4 	.word	0x20011ea4
 8001bd4:	2000738c 	.word	0x2000738c
 8001bd8:	20000198 	.word	0x20000198
 8001bdc:	2000001c 	.word	0x2000001c
 8001be0:	2000019c 	.word	0x2000019c
 8001be4:	200063f0 	.word	0x200063f0
 8001be8:	08022074 	.word	0x08022074
 8001bec:	08021fd8 	.word	0x08021fd8
 8001bf0:	0802200c 	.word	0x0802200c
 8001bf4:	08022040 	.word	0x08022040
 8001bf8:	08001af1 	.word	0x08001af1
 8001bfc:	20007310 	.word	0x20007310

08001c00 <touchgfx_components_init>:

void touchgfx_components_init()
{
}
 8001c00:	4770      	bx	lr
	...

08001c04 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 8001c04:	4801      	ldr	r0, [pc, #4]	; (8001c0c <touchgfx_taskEntry+0x8>)
 8001c06:	f7ff bb11 	b.w	800122c <_ZN11TouchGFXHAL9taskEntryEv>
 8001c0a:	bf00      	nop
 8001c0c:	20007310 	.word	0x20007310

08001c10 <_GLOBAL__sub_I_touchgfx_init>:
}
 8001c10:	b570      	push	{r4, r5, r6, lr}
static STM32DMA dma;
 8001c12:	4e23      	ldr	r6, [pc, #140]	; (8001ca0 <_GLOBAL__sub_I_touchgfx_init+0x90>)
{
public:

    STM32TouchController() {}
 8001c14:	4c23      	ldr	r4, [pc, #140]	; (8001ca4 <_GLOBAL__sub_I_touchgfx_init+0x94>)
static LCD16bpp display;
 8001c16:	4d24      	ldr	r5, [pc, #144]	; (8001ca8 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 8001c18:	4b24      	ldr	r3, [pc, #144]	; (8001cac <_GLOBAL__sub_I_touchgfx_init+0x9c>)
 8001c1a:	6023      	str	r3, [r4, #0]
static STM32DMA dma;
 8001c1c:	4630      	mov	r0, r6
 8001c1e:	f7ff fda9 	bl	8001774 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 8001c22:	4628      	mov	r0, r5
 8001c24:	f016 f842 	bl	8017cac <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 8001c28:	4b21      	ldr	r3, [pc, #132]	; (8001cb0 <_GLOBAL__sub_I_touchgfx_init+0xa0>)
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001c2a:	4822      	ldr	r0, [pc, #136]	; (8001cb4 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
          lastRenderMethod(HARDWARE)
 8001c2c:	60dc      	str	r4, [r3, #12]
 8001c2e:	2200      	movs	r2, #0
 8001c30:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001c34:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 8001c38:	491f      	ldr	r1, [pc, #124]	; (8001cb8 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001c3a:	861a      	strh	r2, [r3, #48]	; 0x30
 8001c3c:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
 8001c40:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 8001c44:	6759      	str	r1, [r3, #116]	; 0x74
 8001c46:	2101      	movs	r1, #1
 8001c48:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 8001c4c:	491b      	ldr	r1, [pc, #108]	; (8001cbc <_GLOBAL__sub_I_touchgfx_init+0xac>)
          lastRenderMethod(HARDWARE)
 8001c4e:	661a      	str	r2, [r3, #96]	; 0x60
        instance = this;
 8001c50:	600b      	str	r3, [r1, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001c52:	f44f 7150 	mov.w	r1, #832	; 0x340
 8001c56:	8001      	strh	r1, [r0, #0]
 8001c58:	4819      	ldr	r0, [pc, #100]	; (8001cc0 <_GLOBAL__sub_I_touchgfx_init+0xb0>)
          lastRenderMethod(HARDWARE)
 8001c5a:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 8001c5e:	8001      	strh	r1, [r0, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001c60:	4818      	ldr	r0, [pc, #96]	; (8001cc4 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
          lastRenderMethod(HARDWARE)
 8001c62:	671a      	str	r2, [r3, #112]	; 0x70
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001c64:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
          lastRenderMethod(HARDWARE)
 8001c68:	e9c3 2204 	strd	r2, r2, [r3, #16]
 8001c6c:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001c70:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001c74:	e9c3 220a 	strd	r2, r2, [r3, #40]	; 0x28
 8001c78:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001c7c:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 8001c80:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8001c84:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8001c88:	e9c3 6501 	strd	r6, r5, [r3, #4]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001c8c:	8001      	strh	r1, [r0, #0]
 8001c8e:	480e      	ldr	r0, [pc, #56]	; (8001cc8 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 8001c90:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 8001c94:	8001      	strh	r1, [r0, #0]
        DISPLAY_ROTATION = rotate0;
 8001c96:	490d      	ldr	r1, [pc, #52]	; (8001ccc <_GLOBAL__sub_I_touchgfx_init+0xbc>)
 8001c98:	700a      	strb	r2, [r1, #0]
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 8001c9a:	4a0d      	ldr	r2, [pc, #52]	; (8001cd0 <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001c9c:	601a      	str	r2, [r3, #0]
}
 8001c9e:	bd70      	pop	{r4, r5, r6, pc}
 8001ca0:	20006570 	.word	0x20006570
 8001ca4:	2000656c 	.word	0x2000656c
 8001ca8:	20007390 	.word	0x20007390
 8001cac:	08021a98 	.word	0x08021a98
 8001cb0:	20007310 	.word	0x20007310
 8001cb4:	20011e34 	.word	0x20011e34
 8001cb8:	01000001 	.word	0x01000001
 8001cbc:	20011e40 	.word	0x20011e40
 8001cc0:	20011e3a 	.word	0x20011e3a
 8001cc4:	20011e36 	.word	0x20011e36
 8001cc8:	20011e3c 	.word	0x20011e3c
 8001ccc:	20011e38 	.word	0x20011e38
 8001cd0:	08021c24 	.word	0x08021c24

08001cd4 <_GLOBAL__sub_D_touchgfx_init>:
static STM32DMA dma;
 8001cd4:	4801      	ldr	r0, [pc, #4]	; (8001cdc <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001cd6:	f7ff bd29 	b.w	800172c <_ZN8STM32DMAD1Ev>
 8001cda:	bf00      	nop
 8001cdc:	20006570 	.word	0x20006570

08001ce0 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8001ce0:	2000      	movs	r0, #0
 8001ce2:	4770      	bx	lr

08001ce4 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8001ce4:	8081      	strh	r1, [r0, #4]
    }
 8001ce6:	4770      	bx	lr

08001ce8 <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 8001ce8:	80c1      	strh	r1, [r0, #6]
    }
 8001cea:	4770      	bx	lr

08001cec <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8001cec:	8101      	strh	r1, [r0, #8]
    }
 8001cee:	4770      	bx	lr

08001cf0 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8001cf0:	8141      	strh	r1, [r0, #10]
    }
 8001cf2:	4770      	bx	lr

08001cf4 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8001cf4:	4770      	bx	lr

08001cf6 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
        (void)event; // Unused variable
    }
 8001cf6:	4770      	bx	lr

08001cf8 <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
        (void)event; // Unused variable
    }
 8001cf8:	4770      	bx	lr

08001cfa <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
        (void)event; // Unused variable
    }
 8001cfa:	4770      	bx	lr

08001cfc <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8001cfc:	4770      	bx	lr

08001cfe <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8001cfe:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8001d00:	88c4      	ldrh	r4, [r0, #6]
 8001d02:	6803      	ldr	r3, [r0, #0]
 8001d04:	1b12      	subs	r2, r2, r4
 8001d06:	8884      	ldrh	r4, [r0, #4]
 8001d08:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8001d0a:	1b09      	subs	r1, r1, r4
 8001d0c:	b212      	sxth	r2, r2
    }
 8001d0e:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8001d12:	b209      	sxth	r1, r1
 8001d14:	4718      	bx	r3

08001d16 <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8001d16:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8001d1a:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8001d1c:	f04f 33ff 	mov.w	r3, #4294967295
 8001d20:	6203      	str	r3, [r0, #32]
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8001d22:	6813      	ldr	r3, [r2, #0]
 8001d24:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 8001d26:	6010      	str	r0, [r2, #0]
    }
 8001d28:	4770      	bx	lr

08001d2a <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
    {
        if (isVisible() && isTouchable())
 8001d2a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001d2e:	b11a      	cbz	r2, 8001d38 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 8001d30:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 8001d34:	b102      	cbz	r2, 8001d38 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 8001d36:	6018      	str	r0, [r3, #0]
        }
    }
 8001d38:	4770      	bx	lr

08001d3a <_ZN8touchgfx12CanvasWidget8setAlphaEh>:
    }

    /** @copydoc Image::setAlpha */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8001d3a:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
    }
 8001d3e:	4770      	bx	lr

08001d40 <_ZNK8touchgfx12CanvasWidget8getAlphaEv>:

    /** @copydoc Image::getAlpha() */
    virtual uint8_t getAlpha() const
    {
        return alpha;
    }
 8001d40:	f890 0026 	ldrb.w	r0, [r0, #38]	; 0x26
 8001d44:	4770      	bx	lr

08001d46 <_ZNK8touchgfx12CanvasWidget14getMinimalRectEv>:
     * overwritten in subclasses and return the minimal rectangle containing the shape. See
     * classes such as Circle for example implementations.
     *
     * @return The minimal rectangle containing the shape drawn.
     */
    virtual Rect getMinimalRect() const
 8001d46:	b510      	push	{r4, lr}
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8001d48:	2200      	movs	r2, #0
        return rect.width;
 8001d4a:	f9b1 4008 	ldrsh.w	r4, [r1, #8]
        return rect.height;
 8001d4e:	f9b1 100a 	ldrsh.w	r1, [r1, #10]
 8001d52:	8002      	strh	r2, [r0, #0]
 8001d54:	8042      	strh	r2, [r0, #2]
 8001d56:	8084      	strh	r4, [r0, #4]
 8001d58:	80c1      	strh	r1, [r0, #6]
    {
        return Rect(0, 0, getWidth(), getHeight());
    }
 8001d5a:	bd10      	pop	{r4, pc}

08001d5c <_ZNK8touchgfx12CanvasWidget12getSolidRectEv>:
        : x(0), y(0), width(0), height(0)
 8001d5c:	2200      	movs	r2, #0
 8001d5e:	8002      	strh	r2, [r0, #0]
 8001d60:	8042      	strh	r2, [r0, #2]
 8001d62:	8082      	strh	r2, [r0, #4]
 8001d64:	80c2      	strh	r2, [r0, #6]
     *       lines will not be drawn and may cause strange display artifacts.
     */
    virtual Rect getSolidRect() const
    {
        return Rect();
    }
 8001d66:	4770      	bx	lr

08001d68 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001d68:	4b02      	ldr	r3, [pc, #8]	; (8001d74 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8001d6a:	2290      	movs	r2, #144	; 0x90
 8001d6c:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 8001d70:	4770      	bx	lr
 8001d72:	bf00      	nop
 8001d74:	e000e100 	.word	0xe000e100

08001d78 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001d78:	4b02      	ldr	r3, [pc, #8]	; (8001d84 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8001d7a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001d7e:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001d80:	4770      	bx	lr
 8001d82:	bf00      	nop
 8001d84:	e000e100 	.word	0xe000e100

08001d88 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 8001d88:	4770      	bx	lr

08001d8a <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 8001d8a:	4770      	bx	lr

08001d8c <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 8001d8c:	b570      	push	{r4, r5, r6, lr}
 8001d8e:	4604      	mov	r4, r0
    HAL::initialize();
 8001d90:	f00a fbf3 	bl	800c57a <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 8001d94:	6823      	ldr	r3, [r4, #0]
 8001d96:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 8001d98:	f00f fd4e 	bl	8011838 <_ZN8touchgfx11Application11getInstanceEv>
 8001d9c:	4601      	mov	r1, r0
 8001d9e:	4620      	mov	r0, r4
 8001da0:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 8001da2:	6823      	ldr	r3, [r4, #0]
 8001da4:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 8001da8:	2300      	movs	r3, #0
 8001daa:	4620      	mov	r0, r4
 8001dac:	46ac      	mov	ip, r5
 8001dae:	461a      	mov	r2, r3
}
 8001db0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 8001db4:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 8001db8:	4760      	bx	ip

08001dba <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 8001dba:	f00a bb8e 	b.w	800c4da <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

08001dbe <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 8001dbe:	f00a bcea 	b.w	800c796 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

08001dc2 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
        if (visible)
 8001dc2:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 8001dc6:	b112      	cbz	r2, 8001dce <_ZNK8touchgfx8Drawable17invalidateContentEv+0xc>
            invalidate();
 8001dc8:	6803      	ldr	r3, [r0, #0]
 8001dca:	695b      	ldr	r3, [r3, #20]
 8001dcc:	4718      	bx	r3
    }
 8001dce:	4770      	bx	lr

08001dd0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001dd0:	4b04      	ldr	r3, [pc, #16]	; (8001de4 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 8001dd2:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001dd6:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 8001dda:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001dde:	f3bf 8f6f 	isb	sy
}
 8001de2:	4770      	bx	lr
 8001de4:	e000e100 	.word	0xe000e100

08001de8 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 8001de8:	4901      	ldr	r1, [pc, #4]	; (8001df0 <vApplicationIdleHook+0x8>)
 8001dea:	2000      	movs	r0, #0
 8001dec:	f009 b982 	b.w	800b0f4 <vTaskSetApplicationTaskTag>
 8001df0:	080015c9 	.word	0x080015c9

08001df4 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001df4:	b530      	push	{r4, r5, lr}
 8001df6:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001df8:	2210      	movs	r2, #16
 8001dfa:	2100      	movs	r1, #0
 8001dfc:	a809      	add	r0, sp, #36	; 0x24
 8001dfe:	f01e fd11 	bl	8020824 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001e02:	2214      	movs	r2, #20
 8001e04:	2100      	movs	r1, #0
 8001e06:	a802      	add	r0, sp, #8
 8001e08:	f01e fd0c 	bl	8020824 <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001e0c:	2400      	movs	r4, #0
 8001e0e:	4b1f      	ldr	r3, [pc, #124]	; (8001e8c <SystemClock_Config+0x98>)
 8001e10:	9400      	str	r4, [sp, #0]
 8001e12:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8001e14:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001e18:	641a      	str	r2, [r3, #64]	; 0x40
 8001e1a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e1c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001e20:	9300      	str	r3, [sp, #0]
 8001e22:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001e24:	4b1a      	ldr	r3, [pc, #104]	; (8001e90 <SystemClock_Config+0x9c>)
 8001e26:	9401      	str	r4, [sp, #4]
 8001e28:	681a      	ldr	r2, [r3, #0]
 8001e2a:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001e2e:	601a      	str	r2, [r3, #0]
 8001e30:	681b      	ldr	r3, [r3, #0]
 8001e32:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8001e36:	9301      	str	r3, [sp, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001e38:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001e3a:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001e3c:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001e40:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001e44:	2502      	movs	r5, #2
 8001e46:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLM = 8;
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001e4a:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001e4c:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001e50:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001e54:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
  RCC_OscInitStruct.PLL.PLLQ = 4;
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001e58:	2004      	movs	r0, #4
 8001e5a:	2306      	movs	r3, #6
 8001e5c:	e9cd 0312 	strd	r0, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001e60:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001e62:	9511      	str	r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001e64:	f006 fe30 	bl	8008ac8 <HAL_RCC_OscConfig>
    Error_Handler();
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001e68:	f006 f884 	bl	8007f74 <HAL_PWREx_EnableOverDrive>
    Error_Handler();
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001e6c:	230f      	movs	r3, #15
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001e6e:	e9cd 3502 	strd	r3, r5, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001e72:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001e74:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001e78:	f44f 54a0 	mov.w	r4, #5120	; 0x1400

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001e7c:	2105      	movs	r1, #5
 8001e7e:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001e80:	e9cd 4305 	strd	r4, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001e84:	f006 fbf4 	bl	8008670 <HAL_RCC_ClockConfig>
  {
    Error_Handler();
  }
}
 8001e88:	b015      	add	sp, #84	; 0x54
 8001e8a:	bd30      	pop	{r4, r5, pc}
 8001e8c:	40023800 	.word	0x40023800
 8001e90:	40007000 	.word	0x40007000

08001e94 <main>:
{
 8001e94:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 8001e98:	b0bb      	sub	sp, #236	; 0xec
  HAL_Init();
 8001e9a:	f004 fa45 	bl	8006328 <HAL_Init>
  SystemClock_Config();
 8001e9e:	f7ff ffa9 	bl	8001df4 <SystemClock_Config>
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ea2:	2214      	movs	r2, #20
 8001ea4:	2100      	movs	r1, #0
 8001ea6:	a82d      	add	r0, sp, #180	; 0xb4

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001ea8:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001eaa:	f01e fcbb 	bl	8020824 <memset>
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001eae:	4bc4      	ldr	r3, [pc, #784]	; (80021c0 <main+0x32c>)
 8001eb0:	9403      	str	r4, [sp, #12]
 8001eb2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  __HAL_RCC_GPIOK_CLK_ENABLE();
  __HAL_RCC_GPIOH_CLK_ENABLE();
  __HAL_RCC_GPIOJ_CLK_ENABLE();

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, RD_Pin|MCU_ACTIVE_Pin|CS_Pin, GPIO_PIN_RESET);
 8001eb4:	48c3      	ldr	r0, [pc, #780]	; (80021c4 <main+0x330>)
  hdma2d.Instance = DMA2D;
 8001eb6:	4ec4      	ldr	r6, [pc, #784]	; (80021c8 <main+0x334>)
  __HAL_RCC_GPIOG_CLK_ENABLE();
 8001eb8:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8001ebc:	631a      	str	r2, [r3, #48]	; 0x30
 8001ebe:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ec0:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001ec4:	9203      	str	r2, [sp, #12]
 8001ec6:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8001ec8:	9404      	str	r4, [sp, #16]
 8001eca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ecc:	f042 0210 	orr.w	r2, r2, #16
 8001ed0:	631a      	str	r2, [r3, #48]	; 0x30
 8001ed2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ed4:	f002 0210 	and.w	r2, r2, #16
 8001ed8:	9204      	str	r2, [sp, #16]
 8001eda:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8001edc:	9405      	str	r4, [sp, #20]
 8001ede:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ee0:	f042 0202 	orr.w	r2, r2, #2
 8001ee4:	631a      	str	r2, [r3, #48]	; 0x30
 8001ee6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ee8:	f002 0202 	and.w	r2, r2, #2
 8001eec:	9205      	str	r2, [sp, #20]
 8001eee:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8001ef0:	9406      	str	r4, [sp, #24]
 8001ef2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001ef4:	f042 0201 	orr.w	r2, r2, #1
 8001ef8:	631a      	str	r2, [r3, #48]	; 0x30
 8001efa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001efc:	f002 0201 	and.w	r2, r2, #1
 8001f00:	9206      	str	r2, [sp, #24]
 8001f02:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001f04:	9407      	str	r4, [sp, #28]
 8001f06:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f08:	f042 0208 	orr.w	r2, r2, #8
 8001f0c:	631a      	str	r2, [r3, #48]	; 0x30
 8001f0e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f10:	f002 0208 	and.w	r2, r2, #8
 8001f14:	9207      	str	r2, [sp, #28]
 8001f16:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 8001f18:	9408      	str	r4, [sp, #32]
 8001f1a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f1c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001f20:	631a      	str	r2, [r3, #48]	; 0x30
 8001f22:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f24:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8001f28:	9208      	str	r2, [sp, #32]
 8001f2a:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001f2c:	9409      	str	r4, [sp, #36]	; 0x24
 8001f2e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f30:	f042 0204 	orr.w	r2, r2, #4
 8001f34:	631a      	str	r2, [r3, #48]	; 0x30
 8001f36:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f38:	f002 0204 	and.w	r2, r2, #4
 8001f3c:	9209      	str	r2, [sp, #36]	; 0x24
 8001f3e:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOF_CLK_ENABLE();
 8001f40:	940a      	str	r4, [sp, #40]	; 0x28
 8001f42:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f44:	f042 0220 	orr.w	r2, r2, #32
 8001f48:	631a      	str	r2, [r3, #48]	; 0x30
 8001f4a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f4c:	f002 0220 	and.w	r2, r2, #32
 8001f50:	920a      	str	r2, [sp, #40]	; 0x28
 8001f52:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8001f54:	940b      	str	r4, [sp, #44]	; 0x2c
 8001f56:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f58:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8001f5c:	631a      	str	r2, [r3, #48]	; 0x30
 8001f5e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f60:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001f64:	920b      	str	r2, [sp, #44]	; 0x2c
 8001f66:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001f68:	940c      	str	r4, [sp, #48]	; 0x30
 8001f6a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f6c:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8001f70:	631a      	str	r2, [r3, #48]	; 0x30
 8001f72:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f74:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001f78:	920c      	str	r2, [sp, #48]	; 0x30
 8001f7a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001f7c:	940d      	str	r4, [sp, #52]	; 0x34
 8001f7e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001f80:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001f84:	631a      	str	r2, [r3, #48]	; 0x30
 8001f86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001f88:	f403 7300 	and.w	r3, r3, #512	; 0x200
  HAL_GPIO_WritePin(GPIOG, RD_Pin|MCU_ACTIVE_Pin|CS_Pin, GPIO_PIN_RESET);
 8001f8c:	4622      	mov	r2, r4
 8001f8e:	f44f 51e0 	mov.w	r1, #7168	; 0x1c00
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001f92:	930d      	str	r3, [sp, #52]	; 0x34
 8001f94:	9b0d      	ldr	r3, [sp, #52]	; 0x34
  HAL_GPIO_WritePin(GPIOG, RD_Pin|MCU_ACTIVE_Pin|CS_Pin, GPIO_PIN_RESET);
 8001f96:	f005 f9dd 	bl	8007354 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 8001f9a:	488c      	ldr	r0, [pc, #560]	; (80021cc <main+0x338>)
 8001f9c:	2201      	movs	r2, #1
 8001f9e:	2108      	movs	r1, #8
 8001fa0:	f005 f9d8 	bl	8007354 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin, GPIO_PIN_RESET);
 8001fa4:	488a      	ldr	r0, [pc, #552]	; (80021d0 <main+0x33c>)
 8001fa6:	4622      	mov	r2, r4
 8001fa8:	2146      	movs	r1, #70	; 0x46
 8001faa:	f005 f9d3 	bl	8007354 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001fae:	4622      	mov	r2, r4
 8001fb0:	4888      	ldr	r0, [pc, #544]	; (80021d4 <main+0x340>)
 8001fb2:	2180      	movs	r1, #128	; 0x80
 8001fb4:	f005 f9ce 	bl	8007354 <HAL_GPIO_WritePin>

  /*Configure GPIO pins : D12_9_Pin D12_10_Pin D12_8_Pin */
  GPIO_InitStruct.Pin = D12_9_Pin|D12_10_Pin|D12_8_Pin;
 8001fb8:	f44f 43c4 	mov.w	r3, #25088	; 0x6200
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001fbc:	4881      	ldr	r0, [pc, #516]	; (80021c4 <main+0x330>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001fbe:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001fc0:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001fc2:	e9cd 342d 	strd	r3, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001fc6:	f005 f837 	bl	8007038 <HAL_GPIO_Init>

  /*Configure GPIO pins : D12_2_Pin D12_0_Pin D12_7_Pin */
  GPIO_InitStruct.Pin = D12_2_Pin|D12_0_Pin|D12_7_Pin;
 8001fca:	f242 0330 	movw	r3, #8240	; 0x2030
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001fce:	4882      	ldr	r0, [pc, #520]	; (80021d8 <main+0x344>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001fd0:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001fd2:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001fd4:	e9cd 342d 	strd	r3, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001fd8:	f005 f82e 	bl	8007038 <HAL_GPIO_Init>

  /*Configure GPIO pins : D12_3_Pin D12_1_Pin */
  GPIO_InitStruct.Pin = D12_3_Pin|D12_1_Pin;
 8001fdc:	f248 0320 	movw	r3, #32800	; 0x8020
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fe0:	487b      	ldr	r0, [pc, #492]	; (80021d0 <main+0x33c>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001fe2:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001fe4:	a92d      	add	r1, sp, #180	; 0xb4

  /*Configure GPIO pins : RD_Pin CS_Pin */
  GPIO_InitStruct.Pin = RD_Pin|CS_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001fe6:	2701      	movs	r7, #1
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8001fe8:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8001fec:	e9cd 342d 	strd	r3, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001ff0:	f005 f822 	bl	8007038 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001ff4:	f44f 6340 	mov.w	r3, #3072	; 0xc00
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ff8:	4872      	ldr	r0, [pc, #456]	; (80021c4 <main+0x330>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001ffa:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001ffc:	a92d      	add	r1, sp, #180	; 0xb4

  /*Configure GPIO pin : MCU_ACTIVE_Pin */
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001ffe:	f04f 0b03 	mov.w	fp, #3
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002002:	e9cd 372d 	strd	r3, r7, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 8002006:	f8cd 80c0 	str.w	r8, [sp, #192]	; 0xc0
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 800200a:	f005 f815 	bl	8007038 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = MCU_ACTIVE_Pin;
 800200e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8002012:	486c      	ldr	r0, [pc, #432]	; (80021c4 <main+0x330>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002014:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8002016:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002018:	e9cd 372d 	strd	r3, r7, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800201c:	f8cd b0c0 	str.w	fp, [sp, #192]	; 0xc0
  HAL_GPIO_Init(MCU_ACTIVE_GPIO_Port, &GPIO_InitStruct);
 8002020:	f005 f80a 	bl	8007038 <HAL_GPIO_Init>

  /*Configure GPIO pins : D12_4_Pin D12_6_Pin D12_5_Pin D12_11_Pin */
  GPIO_InitStruct.Pin = D12_4_Pin|D12_6_Pin|D12_5_Pin|D12_11_Pin;
 8002024:	f242 03c2 	movw	r3, #8386	; 0x20c2
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002028:	486c      	ldr	r0, [pc, #432]	; (80021dc <main+0x348>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800202a:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800202c:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 800202e:	e9cd 342d 	strd	r3, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002032:	f005 f801 	bl	8007038 <HAL_GPIO_Init>

  /*Configure GPIO pin : PK3 */
  GPIO_InitStruct.Pin = GPIO_PIN_3;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8002036:	2208      	movs	r2, #8
 8002038:	2311      	movs	r3, #17
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 800203a:	4864      	ldr	r0, [pc, #400]	; (80021cc <main+0x338>)
 800203c:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 800203e:	e9cd 232d 	strd	r2, r3, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002042:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 8002046:	f004 fff7 	bl	8007038 <HAL_GPIO_Init>

  /*Configure GPIO pin : BUSY_Pin */
  GPIO_InitStruct.Pin = BUSY_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 800204a:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 800204e:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 8002052:	e9cd 132d 	strd	r1, r3, [sp, #180]	; 0xb4
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  HAL_GPIO_Init(BUSY_GPIO_Port, &GPIO_InitStruct);
 8002056:	4860      	ldr	r0, [pc, #384]	; (80021d8 <main+0x344>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002058:	942f      	str	r4, [sp, #188]	; 0xbc
  HAL_GPIO_Init(BUSY_GPIO_Port, &GPIO_InitStruct);
 800205a:	a92d      	add	r1, sp, #180	; 0xb4
 800205c:	f004 ffec 	bl	8007038 <HAL_GPIO_Init>

  /*Configure GPIO pins : FRAME_RATE_Pin VSYNC_FREQ_Pin RENDER_TIME_Pin */
  GPIO_InitStruct.Pin = FRAME_RATE_Pin|VSYNC_FREQ_Pin|RENDER_TIME_Pin;
 8002060:	2346      	movs	r3, #70	; 0x46
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002062:	485b      	ldr	r0, [pc, #364]	; (80021d0 <main+0x33c>)
 8002064:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002066:	e9cd 372d 	strd	r3, r7, [sp, #180]	; 0xb4

  /*Configure GPIO pin : PH7 */
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 800206a:	2580      	movs	r5, #128	; 0x80
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800206c:	e9cd 4b2f 	strd	r4, fp, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002070:	f004 ffe2 	bl	8007038 <HAL_GPIO_Init>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  GPIO_InitStruct.Pull = GPIO_NOPULL;
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8002074:	4857      	ldr	r0, [pc, #348]	; (80021d4 <main+0x340>)
 8002076:	a92d      	add	r1, sp, #180	; 0xb4
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002078:	e9cd 572d 	strd	r5, r7, [sp, #180]	; 0xb4
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800207c:	e9cd 4b2f 	strd	r4, fp, [sp, #188]	; 0xbc
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8002080:	f004 ffda 	bl	8007038 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 5, 0);
 8002084:	2105      	movs	r1, #5
 8002086:	4622      	mov	r2, r4
 8002088:	2028      	movs	r0, #40	; 0x28
 800208a:	f004 f99f 	bl	80063cc <HAL_NVIC_SetPriority>
  hcrc.Instance = CRC;
 800208e:	4854      	ldr	r0, [pc, #336]	; (80021e0 <main+0x34c>)
 8002090:	4a54      	ldr	r2, [pc, #336]	; (80021e4 <main+0x350>)
 8002092:	6002      	str	r2, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8002094:	f004 f9ee 	bl	8006474 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 8002098:	4a53      	ldr	r2, [pc, #332]	; (80021e8 <main+0x354>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 800209a:	e9c6 440a 	strd	r4, r4, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 800209e:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80020a2:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 80020a4:	e9c6 2400 	strd	r2, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 80020a8:	e9c6 4402 	strd	r4, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 80020ac:	f004 faf6 	bl	800669c <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 80020b0:	4639      	mov	r1, r7
 80020b2:	4630      	mov	r0, r6
 80020b4:	f004 fbaa 	bl	800680c <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80020b8:	4629      	mov	r1, r5
 80020ba:	4622      	mov	r2, r4
 80020bc:	4845      	ldr	r0, [pc, #276]	; (80021d4 <main+0x340>)
  hdsi.Instance = DSI;
 80020be:	4e4b      	ldr	r6, [pc, #300]	; (80021ec <main+0x358>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80020c0:	f005 f948 	bl	8007354 <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 80020c4:	2014      	movs	r0, #20
 80020c6:	f004 f95b 	bl	8006380 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 80020ca:	4629      	mov	r1, r5
 80020cc:	463a      	mov	r2, r7
 80020ce:	4841      	ldr	r0, [pc, #260]	; (80021d4 <main+0x340>)
 80020d0:	f005 f940 	bl	8007354 <HAL_GPIO_WritePin>
  HAL_Delay(10);
 80020d4:	200a      	movs	r0, #10
 80020d6:	f004 f953 	bl	8006380 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 80020da:	2224      	movs	r2, #36	; 0x24
 80020dc:	4621      	mov	r1, r4
 80020de:	a817      	add	r0, sp, #92	; 0x5c
  DSI_PLLInitTypeDef PLLInit = {0};
 80020e0:	9410      	str	r4, [sp, #64]	; 0x40
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 80020e2:	f01e fb9f 	bl	8020824 <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 80020e6:	2218      	movs	r2, #24
 80020e8:	4621      	mov	r1, r4
 80020ea:	a811      	add	r0, sp, #68	; 0x44
 80020ec:	f01e fb9a 	bl	8020824 <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 80020f0:	2234      	movs	r2, #52	; 0x34
 80020f2:	4621      	mov	r1, r4
 80020f4:	a82d      	add	r0, sp, #180	; 0xb4
 80020f6:	f01e fb95 	bl	8020824 <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 80020fa:	222c      	movs	r2, #44	; 0x2c
 80020fc:	4621      	mov	r1, r4
 80020fe:	eb0d 0005 	add.w	r0, sp, r5
 8002102:	f01e fb8f 	bl	8020824 <memset>
  hdsi.Instance = DSI;
 8002106:	4a3a      	ldr	r2, [pc, #232]	; (80021f0 <main+0x35c>)
  hdsi.Init.TXEscapeCkdiv = 4;
 8002108:	f04f 0904 	mov.w	r9, #4
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 800210c:	e9c6 2400 	strd	r2, r4, [r6]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8002110:	a90e      	add	r1, sp, #56	; 0x38
  PLLInit.PLLNDIV = 125;
 8002112:	227d      	movs	r2, #125	; 0x7d
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8002114:	4630      	mov	r0, r6
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 8002116:	e9cd 280e 	strd	r2, r8, [sp, #56]	; 0x38
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 800211a:	e9c6 9702 	strd	r9, r7, [r6, #8]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 800211e:	f004 fc3d 	bl	800699c <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 8002122:	a917      	add	r1, sp, #92	; 0x5c
 8002124:	4630      	mov	r0, r6
  PhyTimings.ClockLaneLP2HSTime = 33;
 8002126:	f04f 0a1c 	mov.w	sl, #28
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 800212a:	e9cd 7417 	strd	r7, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedReadTimeout = 0;
 800212e:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.HighSpeedWriteTimeout = 0;
 8002132:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.LowPowerWriteTimeout = 0;
 8002136:	e9cd 441d 	strd	r4, r4, [sp, #116]	; 0x74
  HostTimeouts.BTATimeout = 0;
 800213a:	941f      	str	r4, [sp, #124]	; 0x7c
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 800213c:	f004 fe5a 	bl	8006df4 <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 8002140:	2221      	movs	r2, #33	; 0x21
 8002142:	e9cd a211 	strd	sl, r2, [sp, #68]	; 0x44
  PhyTimings.DataLaneLP2HSTime = 25;
 8002146:	200f      	movs	r0, #15
 8002148:	2219      	movs	r2, #25
 800214a:	e9cd 0213 	strd	r0, r2, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 800214e:	a911      	add	r1, sp, #68	; 0x44
 8002150:	4630      	mov	r0, r6
  PhyTimings.StopWaitTime = 0;
 8002152:	e9cd 4415 	strd	r4, r4, [sp, #84]	; 0x54
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 8002156:	f004 fe10 	bl	8006d7a <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 800215a:	4649      	mov	r1, r9
 800215c:	4630      	mov	r0, r6
 800215e:	f004 fdfb 	bl	8006d58 <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 8002162:	f242 7110 	movw	r1, #10000	; 0x2710
 8002166:	4630      	mov	r0, r6
 8002168:	f004 ff4f 	bl	800700a <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 800216c:	4621      	mov	r1, r4
 800216e:	4630      	mov	r0, r6
 8002170:	f004 fbb1 	bl	80068d6 <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 8002174:	f44f 7c80 	mov.w	ip, #256	; 0x100
 8002178:	f44f 7200 	mov.w	r2, #512	; 0x200
 800217c:	e9cd c22d 	strd	ip, r2, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8002180:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8002184:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8002188:	e9cd 322f 	strd	r3, r2, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 800218c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8002190:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8002194:	e9cd 3231 	strd	r3, r2, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8002198:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 800219c:	f44f 3280 	mov.w	r2, #65536	; 0x10000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 80021a0:	f44f 3e00 	mov.w	lr, #131072	; 0x20000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 80021a4:	e9cd 3233 	strd	r3, r2, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 80021a8:	f44f 2280 	mov.w	r2, #262144	; 0x40000
 80021ac:	e9cd e235 	strd	lr, r2, [sp, #212]	; 0xd4
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 80021b0:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 80021b4:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 80021b8:	a92d      	add	r1, sp, #180	; 0xb4
 80021ba:	4630      	mov	r0, r6
 80021bc:	e01a      	b.n	80021f4 <main+0x360>
 80021be:	bf00      	nop
 80021c0:	40023800 	.word	0x40023800
 80021c4:	40021800 	.word	0x40021800
 80021c8:	20008b78 	.word	0x20008b78
 80021cc:	40022800 	.word	0x40022800
 80021d0:	40020000 	.word	0x40020000
 80021d4:	40021c00 	.word	0x40021c00
 80021d8:	40020400 	.word	0x40020400
 80021dc:	40020800 	.word	0x40020800
 80021e0:	20008b70 	.word	0x20008b70
 80021e4:	40023000 	.word	0x40023000
 80021e8:	4002b000 	.word	0x4002b000
 80021ec:	20008bb8 	.word	0x20008bb8
 80021f0:	40016c00 	.word	0x40016c00
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 80021f4:	e9cd 3237 	strd	r3, r2, [sp, #220]	; 0xdc
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 80021f8:	f8cd 80e4 	str.w	r8, [sp, #228]	; 0xe4
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 80021fc:	f004 fd78 	bl	8006cf0 <HAL_DSI_ConfigCommand>
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 8002200:	22c8      	movs	r2, #200	; 0xc8
 8002202:	2310      	movs	r3, #16
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8002204:	eb0d 0105 	add.w	r1, sp, r5
 8002208:	4630      	mov	r0, r6
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 800220a:	e9cd 2322 	strd	r2, r3, [sp, #136]	; 0x88
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 800220e:	e9cd 5428 	strd	r5, r4, [sp, #160]	; 0xa0
  CmdCfg.ColorCoding = DSI_RGB565;
 8002212:	e9cd 4420 	strd	r4, r4, [sp, #128]	; 0x80
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_HIGH;
 8002216:	e9cd 4424 	strd	r4, r4, [sp, #144]	; 0x90
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 800221a:	e9cd 4426 	strd	r4, r4, [sp, #152]	; 0x98
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 800221e:	972a      	str	r7, [sp, #168]	; 0xa8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8002220:	f004 fcf4 	bl	8006c0c <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 8002224:	4621      	mov	r1, r4
 8002226:	4630      	mov	r0, r6
 8002228:	f004 fcdf 	bl	8006bea <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800222c:	488b      	ldr	r0, [pc, #556]	; (800245c <main+0x5c8>)
 800222e:	4b8c      	ldr	r3, [pc, #560]	; (8002460 <main+0x5cc>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 8002230:	6204      	str	r4, [r0, #32]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8002232:	e9c0 3400 	strd	r3, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8002236:	2120      	movs	r1, #32
 8002238:	2340      	movs	r3, #64	; 0x40
 800223a:	e9c0 1304 	strd	r1, r3, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800223e:	f44f 73c0 	mov.w	r3, #384	; 0x180
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 8002242:	f44f 5c80 	mov.w	ip, #4096	; 0x1000
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8002246:	e9c0 3406 	strd	r3, r4, [r0, #24]
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 800224a:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 800224e:	e9c0 c309 	strd	ip, r3, [r0, #36]	; 0x24
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8002252:	a92d      	add	r1, sp, #180	; 0xb4
  SdramTiming.ExitSelfRefreshDelay = 7;
 8002254:	2307      	movs	r3, #7
  SdramTiming.SelfRefreshTime = 4;
 8002256:	e9cd 392e 	strd	r3, r9, [sp, #184]	; 0xb8
  SdramTiming.WriteRecoveryTime = 3;
 800225a:	e9cd 3b30 	strd	r3, fp, [sp, #192]	; 0xc0
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 800225e:	e9c0 4902 	strd	r4, r9, [r0, #8]
  SdramTiming.RCDDelay = 2;
 8002262:	e9cd 8832 	strd	r8, r8, [sp, #200]	; 0xc8
  SdramTiming.LoadToActiveDelay = 2;
 8002266:	f8cd 80b4 	str.w	r8, [sp, #180]	; 0xb4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 800226a:	f006 fde7 	bl	8008e3c <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 800226e:	f003 ff89 	bl	8006184 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 8002272:	f003 ff39 	bl	80060e8 <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 8002276:	2234      	movs	r2, #52	; 0x34
 8002278:	4621      	mov	r1, r4
 800227a:	eb0d 0005 	add.w	r0, sp, r5
 800227e:	f01e fad1 	bl	8020824 <memset>
  hltdc.Instance = LTDC;
 8002282:	4d78      	ldr	r5, [pc, #480]	; (8002464 <main+0x5d0>)
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AH;
 8002284:	f8df e21c 	ldr.w	lr, [pc, #540]	; 80024a4 <main+0x610>
  hltdc.Init.Backcolor.Blue = 0;
 8002288:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AH;
 800228a:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 800228e:	e9c5 e300 	strd	lr, r3, [r5]
  hltdc.Init.VSPolarity = LTDC_VSPOLARITY_AH;
 8002292:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 8002296:	e9c5 3402 	strd	r3, r4, [r5, #8]
  hltdc.Init.AccumulatedActiveH = 482;
 800229a:	22ca      	movs	r2, #202	; 0xca
 800229c:	f44f 73f1 	mov.w	r3, #482	; 0x1e2
 80022a0:	e9c5 2309 	strd	r2, r3, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 80022a4:	21cb      	movs	r1, #203	; 0xcb
 80022a6:	f240 13e3 	movw	r3, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80022aa:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 483;
 80022ac:	e9c5 130b 	strd	r1, r3, [r5, #44]	; 0x2c
  hltdc.Init.HorizontalSync = 1;
 80022b0:	e9c5 4704 	strd	r4, r7, [r5, #16]
  hltdc.Init.AccumulatedHBP = 2;
 80022b4:	e9c5 7806 	strd	r7, r8, [r5, #24]
  hltdc.Init.AccumulatedVBP = 2;
 80022b8:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 80022bc:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80022c0:	f005 fd22 	bl	8007d08 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 80022c4:	22ff      	movs	r2, #255	; 0xff
  pLayerCfg.Alpha0 = 0;
 80022c6:	e9cd 2425 	strd	r2, r4, [sp, #148]	; 0x94
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80022ca:	f44f 6080 	mov.w	r0, #1024	; 0x400
 80022ce:	2205      	movs	r2, #5
  pLayerCfg.ImageWidth = 200;
 80022d0:	f04f 4c40 	mov.w	ip, #3221225472	; 0xc0000000
  pLayerCfg.BlendingFactor2 = LTDC_BLENDING_FACTOR2_CA;
 80022d4:	e9cd 0227 	strd	r0, r2, [sp, #156]	; 0x9c
  pLayerCfg.WindowX1 = 200;
 80022d8:	23c8      	movs	r3, #200	; 0xc8
  pLayerCfg.ImageWidth = 200;
 80022da:	22c8      	movs	r2, #200	; 0xc8
 80022dc:	e9cd c229 	strd	ip, r2, [sp, #164]	; 0xa4
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80022e0:	a920      	add	r1, sp, #128	; 0x80
  pLayerCfg.WindowY0 = 0;
 80022e2:	e9cd 3421 	strd	r3, r4, [sp, #132]	; 0x84
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80022e6:	4622      	mov	r2, r4
  pLayerCfg.WindowY1 = 480;
 80022e8:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80022ec:	4628      	mov	r0, r5
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 80022ee:	e9cd 3823 	strd	r3, r8, [sp, #140]	; 0x8c
  pLayerCfg.ImageHeight = 480;
 80022f2:	932b      	str	r3, [sp, #172]	; 0xac
  pLayerCfg.WindowX0 = 0;
 80022f4:	9420      	str	r4, [sp, #128]	; 0x80
  pLayerCfg.Backcolor.Blue = 0;
 80022f6:	f8ad 40b0 	strh.w	r4, [sp, #176]	; 0xb0
  pLayerCfg.Backcolor.Red = 0;
 80022fa:	f88d 40b2 	strb.w	r4, [sp, #178]	; 0xb2
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 80022fe:	f005 fdcf 	bl	8007ea0 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 8002302:	682a      	ldr	r2, [r5, #0]
 8002304:	6993      	ldr	r3, [r2, #24]
 8002306:	f023 0301 	bic.w	r3, r3, #1
 800230a:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 800230c:	4630      	mov	r0, r6
 800230e:	f004 fdd7 	bl	8006ec0 <HAL_DSI_Start>
  NT35510_Init(NT35510_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 8002312:	4639      	mov	r1, r7
 8002314:	4640      	mov	r0, r8
 8002316:	f003 f98b 	bl	8005630 <NT35510_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, NT35510_CMD_DISPOFF, 0x00);
 800231a:	2328      	movs	r3, #40	; 0x28
 800231c:	2215      	movs	r2, #21
 800231e:	4621      	mov	r1, r4
 8002320:	4630      	mov	r0, r6
 8002322:	9400      	str	r4, [sp, #0]
 8002324:	f004 fdff 	bl	8006f26 <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8002328:	a92d      	add	r1, sp, #180	; 0xb4
 800232a:	4630      	mov	r0, r6
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 800232c:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 8002330:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 8002334:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 8002338:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 800233c:	e9cd 4435 	strd	r4, r4, [sp, #212]	; 0xd4
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 8002340:	9437      	str	r4, [sp, #220]	; 0xdc
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8002342:	f004 fcd5 	bl	8006cf0 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 8002346:	f44f 7148 	mov.w	r1, #800	; 0x320
 800234a:	4622      	mov	r2, r4
 800234c:	4628      	mov	r0, r5
 800234e:	f005 fdd5 	bl	8007efc <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 8002352:	682a      	ldr	r2, [r5, #0]
  hqspi.Instance = QUADSPI;
 8002354:	4844      	ldr	r0, [pc, #272]	; (8002468 <main+0x5d4>)
  __HAL_LTDC_ENABLE(&hltdc);
 8002356:	6993      	ldr	r3, [r2, #24]
  htim14.Instance = TIM14;
 8002358:	4d44      	ldr	r5, [pc, #272]	; (800246c <main+0x5d8>)
  hqspi.Init.FifoThreshold = 1;
 800235a:	6087      	str	r7, [r0, #8]
  __HAL_LTDC_ENABLE(&hltdc);
 800235c:	433b      	orrs	r3, r7
 800235e:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 8002360:	4b43      	ldr	r3, [pc, #268]	; (8002470 <main+0x5dc>)
  hqspi.Init.FlashSize = 27;
 8002362:	f04f 0e10 	mov.w	lr, #16
  hqspi.Init.ClockPrescaler = 1;
 8002366:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.FlashSize = 27;
 800236a:	231b      	movs	r3, #27
 800236c:	e9c0 e303 	strd	lr, r3, [r0, #12]
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8002370:	f44f 6380 	mov.w	r3, #1024	; 0x400
  hqspi.Init.ClockMode = QSPI_CLOCK_MODE_0;
 8002374:	e9c0 3405 	strd	r3, r4, [r0, #20]
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 8002378:	e9c0 4407 	strd	r4, r4, [r0, #28]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 800237c:	f005 ff08 	bl	8008190 <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 8002380:	f003 fd78 	bl	8005e74 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 8002384:	f003 fcac 	bl	8005ce0 <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 8002388:	f003 fc22 	bl	8005bd0 <BSP_QSPI_EnableMemoryMappedMode>
  TIM_OC_InitTypeDef sConfigOC = {0};
 800238c:	4621      	mov	r1, r4
 800238e:	4652      	mov	r2, sl
 8002390:	a82d      	add	r0, sp, #180	; 0xb4
 8002392:	f01e fa47 	bl	8020824 <memset>
  htim14.Init.Prescaler = 11-1;
 8002396:	4a37      	ldr	r2, [pc, #220]	; (8002474 <main+0x5e0>)
  htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002398:	612c      	str	r4, [r5, #16]
  htim14.Init.Prescaler = 11-1;
 800239a:	230a      	movs	r3, #10
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 800239c:	4628      	mov	r0, r5
  htim14.Init.Prescaler = 11-1;
 800239e:	e9c5 2300 	strd	r2, r3, [r5]
  htim14.Init.Period = 4-1;
 80023a2:	e9c5 4b02 	strd	r4, fp, [r5, #8]
  htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80023a6:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 80023a8:	f006 ff80 	bl	80092ac <HAL_TIM_Base_Init>
  if (HAL_TIM_PWM_Init(&htim14) != HAL_OK)
 80023ac:	4628      	mov	r0, r5
 80023ae:	f006 ffa9 	bl	8009304 <HAL_TIM_PWM_Init>
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80023b2:	2660      	movs	r6, #96	; 0x60
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80023b4:	4622      	mov	r2, r4
 80023b6:	a92d      	add	r1, sp, #180	; 0xb4
 80023b8:	4628      	mov	r0, r5
  sConfigOC.Pulse = 4/2;
 80023ba:	e9cd 682d 	strd	r6, r8, [sp, #180]	; 0xb4
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80023be:	942f      	str	r4, [sp, #188]	; 0xbc
  sConfigOC.OCFastMode = TIM_OCFAST_ENABLE;
 80023c0:	f8cd 90c4 	str.w	r9, [sp, #196]	; 0xc4
  if (HAL_TIM_PWM_ConfigChannel(&htim14, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80023c4:	f007 f800 	bl	80093c8 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim14);
 80023c8:	4628      	mov	r0, r5
 80023ca:	f000 fc77 	bl	8002cbc <HAL_TIM_MspPostInit>
  hi2c1.Instance = I2C1;
 80023ce:	482a      	ldr	r0, [pc, #168]	; (8002478 <main+0x5e4>)
  hi2c1.Init.ClockSpeed = 100000;
 80023d0:	492a      	ldr	r1, [pc, #168]	; (800247c <main+0x5e8>)
 80023d2:	4b2b      	ldr	r3, [pc, #172]	; (8002480 <main+0x5ec>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80023d4:	6204      	str	r4, [r0, #32]
  hi2c1.Init.ClockSpeed = 100000;
 80023d6:	e9c0 1300 	strd	r1, r3, [r0]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80023da:	f44f 4380 	mov.w	r3, #16384	; 0x4000
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80023de:	e9c0 3404 	strd	r3, r4, [r0, #16]
  hi2c1.Init.OwnAddress1 = 0;
 80023e2:	e9c0 4402 	strd	r4, r4, [r0, #8]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80023e6:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80023ea:	f005 f9a9 	bl	8007740 <HAL_I2C_Init>
  TIM_OC_InitTypeDef sConfigOC = {0};
 80023ee:	4652      	mov	r2, sl
 80023f0:	4621      	mov	r1, r4
 80023f2:	a82d      	add	r0, sp, #180	; 0xb4
 80023f4:	f01e fa16 	bl	8020824 <memset>
  htim12.Instance = TIM12;
 80023f8:	4d22      	ldr	r5, [pc, #136]	; (8002484 <main+0x5f0>)
  htim12.Init.Prescaler = 2250-1;
 80023fa:	4823      	ldr	r0, [pc, #140]	; (8002488 <main+0x5f4>)
  htim12.Init.CounterMode = TIM_COUNTERMODE_UP;
 80023fc:	60ac      	str	r4, [r5, #8]
  htim12.Init.Prescaler = 2250-1;
 80023fe:	f640 03c9 	movw	r3, #2249	; 0x8c9
 8002402:	e9c5 0300 	strd	r0, r3, [r5]
  htim12.Init.Period = 40-1;
 8002406:	2327      	movs	r3, #39	; 0x27
  if (HAL_TIM_PWM_Init(&htim12) != HAL_OK)
 8002408:	4628      	mov	r0, r5
  htim12.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800240a:	e9c5 3403 	strd	r3, r4, [r5, #12]
  htim12.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800240e:	61ac      	str	r4, [r5, #24]
  if (HAL_TIM_PWM_Init(&htim12) != HAL_OK)
 8002410:	f006 ff78 	bl	8009304 <HAL_TIM_PWM_Init>
  if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8002414:	4622      	mov	r2, r4
 8002416:	a92d      	add	r1, sp, #180	; 0xb4
 8002418:	4628      	mov	r0, r5
  sConfigOC.Pulse = 2;
 800241a:	e9cd 682d 	strd	r6, r8, [sp, #180]	; 0xb4
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 800241e:	942f      	str	r4, [sp, #188]	; 0xbc
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8002420:	9431      	str	r4, [sp, #196]	; 0xc4
  if (HAL_TIM_PWM_ConfigChannel(&htim12, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8002422:	f006 ffd1 	bl	80093c8 <HAL_TIM_PWM_ConfigChannel>
  HAL_TIM_MspPostInit(&htim12);
 8002426:	4628      	mov	r0, r5
 8002428:	f000 fc48 	bl	8002cbc <HAL_TIM_MspPostInit>
  MX_TouchGFX_Init();
 800242c:	f7fe fd5a 	bl	8000ee4 <MX_TouchGFX_Init>
  MX_TouchGFX_PreOSInit();
 8002430:	f7fe fd57 	bl	8000ee2 <MX_TouchGFX_PreOSInit>
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8002434:	4a15      	ldr	r2, [pc, #84]	; (800248c <main+0x5f8>)
 8002436:	4816      	ldr	r0, [pc, #88]	; (8002490 <main+0x5fc>)
 8002438:	4621      	mov	r1, r4
 800243a:	f007 f9c7 	bl	80097cc <osThreadNew>
 800243e:	4b15      	ldr	r3, [pc, #84]	; (8002494 <main+0x600>)
  dspTaskHandle = osThreadNew(dsp_Task, NULL, &dspTask_attributes);
 8002440:	4a15      	ldr	r2, [pc, #84]	; (8002498 <main+0x604>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 8002442:	6018      	str	r0, [r3, #0]
  dspTaskHandle = osThreadNew(dsp_Task, NULL, &dspTask_attributes);
 8002444:	4621      	mov	r1, r4
 8002446:	4815      	ldr	r0, [pc, #84]	; (800249c <main+0x608>)
 8002448:	f007 f9c0 	bl	80097cc <osThreadNew>
 800244c:	4b14      	ldr	r3, [pc, #80]	; (80024a0 <main+0x60c>)
 800244e:	6018      	str	r0, [r3, #0]
  osKernelInitialize();
 8002450:	f007 f990 	bl	8009774 <osKernelInitialize>
  osKernelStart();
 8002454:	f007 f9a0 	bl	8009798 <osKernelStart>
  while (1)
 8002458:	e7fe      	b.n	8002458 <main+0x5c4>
 800245a:	bf00      	nop
 800245c:	20008d1c 	.word	0x20008d1c
 8002460:	a0000140 	.word	0xa0000140
 8002464:	20008c28 	.word	0x20008c28
 8002468:	20008cd0 	.word	0x20008cd0
 800246c:	20008d98 	.word	0x20008d98
 8002470:	a0001000 	.word	0xa0001000
 8002474:	40002000 	.word	0x40002000
 8002478:	20008bd4 	.word	0x20008bd4
 800247c:	40005400 	.word	0x40005400
 8002480:	000186a0 	.word	0x000186a0
 8002484:	20008d50 	.word	0x20008d50
 8002488:	40001800 	.word	0x40001800
 800248c:	080220a4 	.word	0x080220a4
 8002490:	08000ef3 	.word	0x08000ef3
 8002494:	2000740c 	.word	0x2000740c
 8002498:	080220c8 	.word	0x080220c8
 800249c:	0800286d 	.word	0x0800286d
 80024a0:	20008b6c 	.word	0x20008b6c
 80024a4:	40016800 	.word	0x40016800

080024a8 <HAL_GPIO_EXTI_Callback>:
DSP filter task will read this non-circular adcBuffer when it has a chance to run
filter will read this adcBuffer as-if it were real-time data being input
(put adcBuffer values into own circular adcBuffer then do dsp algorithms)*/
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
    if(GPIO_Pin == BUSY_Pin) // If The INT Source Is EXTI Line[15:10] (PB12 Pin)
 80024a8:	f5b0 5f80 	cmp.w	r0, #4096	; 0x1000
{
 80024ac:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    if(GPIO_Pin == BUSY_Pin) // If The INT Source Is EXTI Line[15:10] (PB12 Pin)
 80024ae:	d176      	bne.n	800259e <HAL_GPIO_EXTI_Callback+0xf6>
    {

    	//left shift bits of pins and bitwise or them together into one int
    	adcRead=
    							HAL_GPIO_ReadPin(GPIOB, D12_0_Pin)
 80024b0:	f100 4080 	add.w	r0, r0, #1073741824	; 0x40000000
 80024b4:	2110      	movs	r1, #16
 80024b6:	f500 30fa 	add.w	r0, r0, #128000	; 0x1f400
 80024ba:	f004 ff45 	bl	8007348 <HAL_GPIO_ReadPin>
								 |(HAL_GPIO_ReadPin(GPIOA, D12_1_Pin)<<1)
 80024be:	2120      	movs	r1, #32
    							HAL_GPIO_ReadPin(GPIOB, D12_0_Pin)
 80024c0:	4607      	mov	r7, r0
								 |(HAL_GPIO_ReadPin(GPIOA, D12_1_Pin)<<1)
 80024c2:	4837      	ldr	r0, [pc, #220]	; (80025a0 <HAL_GPIO_EXTI_Callback+0xf8>)
 80024c4:	f004 ff40 	bl	8007348 <HAL_GPIO_ReadPin>
								 |(HAL_GPIO_ReadPin(GPIOB, D12_2_Pin)<<2)
 80024c8:	2120      	movs	r1, #32
								 |(HAL_GPIO_ReadPin(GPIOA, D12_1_Pin)<<1)
 80024ca:	4604      	mov	r4, r0
								 |(HAL_GPIO_ReadPin(GPIOB, D12_2_Pin)<<2)
 80024cc:	4835      	ldr	r0, [pc, #212]	; (80025a4 <HAL_GPIO_EXTI_Callback+0xfc>)
 80024ce:	f004 ff3b 	bl	8007348 <HAL_GPIO_ReadPin>
 80024d2:	0082      	lsls	r2, r0, #2
 80024d4:	ea42 0344 	orr.w	r3, r2, r4, lsl #1
								 |(HAL_GPIO_ReadPin(GPIOA, D12_3_Pin)<<3)
 80024d8:	f44f 4100 	mov.w	r1, #32768	; 0x8000
 80024dc:	4830      	ldr	r0, [pc, #192]	; (80025a0 <HAL_GPIO_EXTI_Callback+0xf8>)
								 |(HAL_GPIO_ReadPin(GPIOB, D12_2_Pin)<<2)
 80024de:	ea43 0407 	orr.w	r4, r3, r7
								 |(HAL_GPIO_ReadPin(GPIOA, D12_3_Pin)<<3)
 80024e2:	f004 ff31 	bl	8007348 <HAL_GPIO_ReadPin>
								 |(HAL_GPIO_ReadPin(GPIOB, D12_2_Pin)<<2)
 80024e6:	b224      	sxth	r4, r4
								 |(HAL_GPIO_ReadPin(GPIOA, D12_3_Pin)<<3)
 80024e8:	ea44 00c0 	orr.w	r0, r4, r0, lsl #3
 80024ec:	b207      	sxth	r7, r0
								 |(HAL_GPIO_ReadPin(GPIOC, D12_4_Pin)<<4)
 80024ee:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 80024f2:	482d      	ldr	r0, [pc, #180]	; (80025a8 <HAL_GPIO_EXTI_Callback+0x100>)
 80024f4:	f004 ff28 	bl	8007348 <HAL_GPIO_ReadPin>
 80024f8:	ea47 1000 	orr.w	r0, r7, r0, lsl #4
 80024fc:	b206      	sxth	r6, r0
								 |(HAL_GPIO_ReadPin(GPIOC, D12_5_Pin)<<5)
 80024fe:	2140      	movs	r1, #64	; 0x40
 8002500:	4829      	ldr	r0, [pc, #164]	; (80025a8 <HAL_GPIO_EXTI_Callback+0x100>)
 8002502:	f004 ff21 	bl	8007348 <HAL_GPIO_ReadPin>
 8002506:	ea46 1040 	orr.w	r0, r6, r0, lsl #5
 800250a:	b205      	sxth	r5, r0
								 |(HAL_GPIO_ReadPin(GPIOC, D12_6_Pin)<<6)
 800250c:	2180      	movs	r1, #128	; 0x80
 800250e:	4826      	ldr	r0, [pc, #152]	; (80025a8 <HAL_GPIO_EXTI_Callback+0x100>)
 8002510:	f004 ff1a 	bl	8007348 <HAL_GPIO_ReadPin>
 8002514:	ea45 1080 	orr.w	r0, r5, r0, lsl #6
 8002518:	b204      	sxth	r4, r0
								 |(HAL_GPIO_ReadPin(GPIOB, D12_7_Pin)<<7)
 800251a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800251e:	4821      	ldr	r0, [pc, #132]	; (80025a4 <HAL_GPIO_EXTI_Callback+0xfc>)
 8002520:	f004 ff12 	bl	8007348 <HAL_GPIO_ReadPin>
 8002524:	ea44 10c0 	orr.w	r0, r4, r0, lsl #7
 8002528:	b207      	sxth	r7, r0
								 |(HAL_GPIO_ReadPin(GPIOG, D12_8_Pin)<<8)
 800252a:	f44f 7100 	mov.w	r1, #512	; 0x200
 800252e:	481f      	ldr	r0, [pc, #124]	; (80025ac <HAL_GPIO_EXTI_Callback+0x104>)
 8002530:	f004 ff0a 	bl	8007348 <HAL_GPIO_ReadPin>
 8002534:	ea47 2000 	orr.w	r0, r7, r0, lsl #8
 8002538:	b206      	sxth	r6, r0
								 |(HAL_GPIO_ReadPin(GPIOG, D12_9_Pin)<<9)
 800253a:	f44f 4180 	mov.w	r1, #16384	; 0x4000
 800253e:	481b      	ldr	r0, [pc, #108]	; (80025ac <HAL_GPIO_EXTI_Callback+0x104>)
 8002540:	f004 ff02 	bl	8007348 <HAL_GPIO_ReadPin>
 8002544:	ea46 2040 	orr.w	r0, r6, r0, lsl #9
 8002548:	b205      	sxth	r5, r0
								 |(HAL_GPIO_ReadPin(GPIOG, D12_10_Pin)<<10)
 800254a:	f44f 5100 	mov.w	r1, #8192	; 0x2000
 800254e:	4817      	ldr	r0, [pc, #92]	; (80025ac <HAL_GPIO_EXTI_Callback+0x104>)
 8002550:	f004 fefa 	bl	8007348 <HAL_GPIO_ReadPin>
 8002554:	ea45 2080 	orr.w	r0, r5, r0, lsl #10
 8002558:	b204      	sxth	r4, r0
								 |(HAL_GPIO_ReadPin(GPIOC, D12_11_Pin)<<11);
 800255a:	2102      	movs	r1, #2
 800255c:	4812      	ldr	r0, [pc, #72]	; (80025a8 <HAL_GPIO_EXTI_Callback+0x100>)
 800255e:	f004 fef3 	bl	8007348 <HAL_GPIO_ReadPin>
    	adcRead=
 8002562:	4913      	ldr	r1, [pc, #76]	; (80025b0 <HAL_GPIO_EXTI_Callback+0x108>)

    	if(n>=N)
 8002564:	4a13      	ldr	r2, [pc, #76]	; (80025b4 <HAL_GPIO_EXTI_Callback+0x10c>)
								 |(HAL_GPIO_ReadPin(GPIOC, D12_11_Pin)<<11);
 8002566:	ea44 20c0 	orr.w	r0, r4, r0, lsl #11
 800256a:	b280      	uxth	r0, r0
    	adcRead=
 800256c:	8008      	strh	r0, [r1, #0]
    	if(n>=N)
 800256e:	8813      	ldrh	r3, [r2, #0]
 8002570:	b29b      	uxth	r3, r3
 8002572:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8002576:	d307      	bcc.n	8002588 <HAL_GPIO_EXTI_Callback+0xe0>
    	{
    		adcBufferFull = 1;
 8002578:	4b0f      	ldr	r3, [pc, #60]	; (80025b8 <HAL_GPIO_EXTI_Callback+0x110>)
 800257a:	2201      	movs	r2, #1
 800257c:	801a      	strh	r2, [r3, #0]
    		HAL_NVIC_DisableIRQ(EXTI15_10_IRQn); //disable interrupt when adcBuffer is full
 800257e:	2028      	movs	r0, #40	; 0x28
			adcBuffer[n] = adcRead;	//write temp adc value to buffer
			n++;
    	}

    }
}
 8002580:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
    		HAL_NVIC_DisableIRQ(EXTI15_10_IRQn); //disable interrupt when adcBuffer is full
 8002584:	f003 bf62 	b.w	800644c <HAL_NVIC_DisableIRQ>
			adcBuffer[n] = adcRead;	//write temp adc value to buffer
 8002588:	8813      	ldrh	r3, [r2, #0]
 800258a:	8809      	ldrh	r1, [r1, #0]
 800258c:	480b      	ldr	r0, [pc, #44]	; (80025bc <HAL_GPIO_EXTI_Callback+0x114>)
 800258e:	b29b      	uxth	r3, r3
 8002590:	b289      	uxth	r1, r1
 8002592:	f820 1013 	strh.w	r1, [r0, r3, lsl #1]
			n++;
 8002596:	8813      	ldrh	r3, [r2, #0]
 8002598:	3301      	adds	r3, #1
 800259a:	b29b      	uxth	r3, r3
 800259c:	8013      	strh	r3, [r2, #0]
}
 800259e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80025a0:	40020000 	.word	0x40020000
 80025a4:	40020400 	.word	0x40020400
 80025a8:	40020800 	.word	0x40020800
 80025ac:	40021800 	.word	0x40021800
 80025b0:	20008b6a 	.word	0x20008b6a
 80025b4:	20008de0 	.word	0x20008de0
 80025b8:	20008b68 	.word	0x20008b68
 80025bc:	20007bc8 	.word	0x20007bc8

080025c0 <SmoothedTrapezoidalFilter>:
 * Shaping time is determined by RISETIME and FLATTIME.
 * Smoothing is determined by MOVETIME.
 * Vin: Input voltage sample.
 * Returns the shaped output voltage of the filter.
 */
double SmoothedTrapezoidalFilter(double Vin) {
 80025c0:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	unsigned k;
	double Vav_t1;
	double Vav_t2;
	double Vav_t3;

	V1[na] = Vin; // Input into Circular Buffer
 80025c4:	4d49      	ldr	r5, [pc, #292]	; (80026ec <SmoothedTrapezoidalFilter+0x12c>)
 80025c6:	4b4a      	ldr	r3, [pc, #296]	; (80026f0 <SmoothedTrapezoidalFilter+0x130>)
 80025c8:	682a      	ldr	r2, [r5, #0]
		/* Correct for Decay; turn tail pulse into square steps */
		V2[na] = (V2[(na + 1) % Na] + V1[na] - V1[(na + 1) % Na] * (1 - 1 / dbTau));
		V3[nb] = V2[na];
	} else {
		/* Decay rate not specified; skip */
		V3[nb] = V1[na];
 80025ca:	4c4a      	ldr	r4, [pc, #296]	; (80026f4 <SmoothedTrapezoidalFilter+0x134>)
	V1[na] = Vin; // Input into Circular Buffer
 80025cc:	eb03 02c2 	add.w	r2, r3, r2, lsl #3
 80025d0:	ed82 0b00 	vstr	d0, [r2]
		V3[nb] = V1[na];
 80025d4:	6829      	ldr	r1, [r5, #0]
 80025d6:	6822      	ldr	r2, [r4, #0]
 80025d8:	eb03 03c1 	add.w	r3, r3, r1, lsl #3
 80025dc:	e9d3 0100 	ldrd	r0, r1, [r3]
 80025e0:	4b45      	ldr	r3, [pc, #276]	; (80026f8 <SmoothedTrapezoidalFilter+0x138>)
 80025e2:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80025e6:	e9c3 0100 	strd	r0, r1, [r3]
	}

	/* Trapezoid Shaping Filter */
	Vav_t1 = 0.0;
	Vav_t2 = 0.0;
 80025ea:	f04f 0800 	mov.w	r8, #0
 80025ee:	f04f 0900 	mov.w	r9, #0
	Vav_t1 = 0.0;
 80025f2:	4646      	mov	r6, r8
 80025f4:	464f      	mov	r7, r9
	// Difference of two moving averages, separated by FLATTIME samples
	for (k = 0; k < RISETIME; k++) {
 80025f6:	f04f 0a00 	mov.w	sl, #0
		Vav_t1 = Vav_t1 + V3[(nb + k) % Nb]; // Moving Average #1
 80025fa:	f04f 0bc8 	mov.w	fp, #200	; 0xc8
 80025fe:	6823      	ldr	r3, [r4, #0]
 8002600:	4453      	add	r3, sl
 8002602:	fbb3 f2fb 	udiv	r2, r3, fp
 8002606:	fb0b 3312 	mls	r3, fp, r2, r3
 800260a:	4a3b      	ldr	r2, [pc, #236]	; (80026f8 <SmoothedTrapezoidalFilter+0x138>)
 800260c:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8002610:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002614:	4630      	mov	r0, r6
 8002616:	4639      	mov	r1, r7
 8002618:	f7fd fe48 	bl	80002ac <__adddf3>
		Vav_t2 = Vav_t2 + V3[(RISETIME + FLATTIME + nb + k) % Nb]; // Moving Average #2
 800261c:	6823      	ldr	r3, [r4, #0]
 800261e:	3378      	adds	r3, #120	; 0x78
 8002620:	4453      	add	r3, sl
 8002622:	fbb3 f2fb 	udiv	r2, r3, fp
 8002626:	fb0b 3312 	mls	r3, fp, r2, r3
 800262a:	4a33      	ldr	r2, [pc, #204]	; (80026f8 <SmoothedTrapezoidalFilter+0x138>)
 800262c:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 8002630:	e9d3 2300 	ldrd	r2, r3, [r3]
		Vav_t1 = Vav_t1 + V3[(nb + k) % Nb]; // Moving Average #1
 8002634:	4606      	mov	r6, r0
 8002636:	460f      	mov	r7, r1
		Vav_t2 = Vav_t2 + V3[(RISETIME + FLATTIME + nb + k) % Nb]; // Moving Average #2
 8002638:	4640      	mov	r0, r8
 800263a:	4649      	mov	r1, r9
 800263c:	f7fd fe36 	bl	80002ac <__adddf3>
	for (k = 0; k < RISETIME; k++) {
 8002640:	f10a 0a01 	add.w	sl, sl, #1
 8002644:	f1ba 0f50 	cmp.w	sl, #80	; 0x50
		Vav_t2 = Vav_t2 + V3[(RISETIME + FLATTIME + nb + k) % Nb]; // Moving Average #2
 8002648:	4680      	mov	r8, r0
 800264a:	4689      	mov	r9, r1
	for (k = 0; k < RISETIME; k++) {
 800264c:	d1d7      	bne.n	80025fe <SmoothedTrapezoidalFilter+0x3e>
	}
	V4[nc] = (Vav_t2 - Vav_t1) / dbRiseTime; // Difference of Moving Averages
 800264e:	4632      	mov	r2, r6
 8002650:	463b      	mov	r3, r7
 8002652:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 8002704 <SmoothedTrapezoidalFilter+0x144>
 8002656:	f8df a0b0 	ldr.w	sl, [pc, #176]	; 8002708 <SmoothedTrapezoidalFilter+0x148>
 800265a:	f8d8 9000 	ldr.w	r9, [r8]
 800265e:	f7fd fe23 	bl	80002a8 <__aeabi_dsub>
 8002662:	4b26      	ldr	r3, [pc, #152]	; (80026fc <SmoothedTrapezoidalFilter+0x13c>)
 8002664:	2200      	movs	r2, #0
 8002666:	f7fe f901 	bl	800086c <__aeabi_ddiv>
 800266a:	eb0a 09c9 	add.w	r9, sl, r9, lsl #3
 800266e:	e9c9 0100 	strd	r0, r1, [r9]

	/* Moving Average Filter (low-pass smoothing) */
	Vav_t3 = 0.0;
 8002672:	2600      	movs	r6, #0
 8002674:	2700      	movs	r7, #0
	for (k = 0; k < MOVETIME; k++) {
 8002676:	f04f 0900 	mov.w	r9, #0
		Vav_t3 = Vav_t3 + V4[(nc + k) % Nc];
 800267a:	f04f 0b28 	mov.w	fp, #40	; 0x28
 800267e:	f8d8 3000 	ldr.w	r3, [r8]
 8002682:	444b      	add	r3, r9
 8002684:	fbb3 f2fb 	udiv	r2, r3, fp
 8002688:	fb0b 3312 	mls	r3, fp, r2, r3
 800268c:	eb0a 03c3 	add.w	r3, sl, r3, lsl #3
 8002690:	4630      	mov	r0, r6
 8002692:	4639      	mov	r1, r7
 8002694:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002698:	f7fd fe08 	bl	80002ac <__adddf3>
	for (k = 0; k < MOVETIME; k++) {
 800269c:	f109 0901 	add.w	r9, r9, #1
 80026a0:	f1b9 0f28 	cmp.w	r9, #40	; 0x28
		Vav_t3 = Vav_t3 + V4[(nc + k) % Nc];
 80026a4:	4606      	mov	r6, r0
 80026a6:	460f      	mov	r7, r1
	for (k = 0; k < MOVETIME; k++) {
 80026a8:	d1e9      	bne.n	800267e <SmoothedTrapezoidalFilter+0xbe>
	}
	Vav_t3 = Vav_t3 / dbMoveTime;
 80026aa:	4b15      	ldr	r3, [pc, #84]	; (8002700 <SmoothedTrapezoidalFilter+0x140>)
 80026ac:	2200      	movs	r2, #0
 80026ae:	f7fe f8dd 	bl	800086c <__aeabi_ddiv>

	/* Increment Buffer Indexes */
	if (++na >= Na) {
 80026b2:	682b      	ldr	r3, [r5, #0]
 80026b4:	3301      	adds	r3, #1
 80026b6:	2b01      	cmp	r3, #1
 80026b8:	602b      	str	r3, [r5, #0]
		na = 0;
 80026ba:	bf84      	itt	hi
 80026bc:	2300      	movhi	r3, #0
 80026be:	602b      	strhi	r3, [r5, #0]
	}
	if (++nb >= Nb) {
 80026c0:	6823      	ldr	r3, [r4, #0]
 80026c2:	3301      	adds	r3, #1
 80026c4:	2bc7      	cmp	r3, #199	; 0xc7
 80026c6:	6023      	str	r3, [r4, #0]
		nb = 0;
 80026c8:	bf84      	itt	hi
 80026ca:	2300      	movhi	r3, #0
 80026cc:	6023      	strhi	r3, [r4, #0]
	}
	if (++nc >= Nc) {
 80026ce:	f8d8 3000 	ldr.w	r3, [r8]
 80026d2:	3301      	adds	r3, #1
 80026d4:	2b27      	cmp	r3, #39	; 0x27
 80026d6:	f8c8 3000 	str.w	r3, [r8]
		nc = 0;
 80026da:	bf88      	it	hi
 80026dc:	2300      	movhi	r3, #0
	Vav_t3 = Vav_t3 / dbMoveTime;
 80026de:	ec41 0b10 	vmov	d0, r0, r1
		nc = 0;
 80026e2:	bf88      	it	hi
 80026e4:	f8c8 3000 	strhi.w	r3, [r8]
	}

	return Vav_t3;
}
 80026e8:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80026ec:	20008de4 	.word	0x20008de4
 80026f0:	20007410 	.word	0x20007410
 80026f4:	20008de8 	.word	0x20008de8
 80026f8:	20007430 	.word	0x20007430
 80026fc:	40540000 	.word	0x40540000
 8002700:	40440000 	.word	0x40440000
 8002704:	20008dec 	.word	0x20008dec
 8002708:	20007a70 	.word	0x20007a70
 800270c:	00000000 	.word	0x00000000

08002710 <PeakDetector>:
 * Rejects duplicate peaks found within FLATTIME samples.
 * Vin: Input voltage sample.
 * Returns the peak voltage value if a valid peak is detected.
 * Returns 0 if no valid peak is detected.
 */
double PeakDetector(double Vin) {
 8002710:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
	double Vpeak = 0.0;
	double Vprev;
	double Vcurr;
	double Vnext;

	Vp[np] = Vin; // Input into Circular Buffer
 8002714:	4e30      	ldr	r6, [pc, #192]	; (80027d8 <PeakDetector+0xc8>)
 8002716:	f8df c0cc 	ldr.w	ip, [pc, #204]	; 80027e4 <PeakDetector+0xd4>
 800271a:	6833      	ldr	r3, [r6, #0]

	if (PeakCooldown > 0) {
 800271c:	4f2f      	ldr	r7, [pc, #188]	; (80027dc <PeakDetector+0xcc>)
	Vp[np] = Vin; // Input into Circular Buffer
 800271e:	eb0c 03c3 	add.w	r3, ip, r3, lsl #3
 8002722:	ed83 0b00 	vstr	d0, [r3]
	if (PeakCooldown > 0) {
 8002726:	683b      	ldr	r3, [r7, #0]
 8002728:	2b00      	cmp	r3, #0
 800272a:	dd05      	ble.n	8002738 <PeakDetector+0x28>
		/* Recently detected a peak; ignore subsequent input for now */
		PeakCooldown--;
 800272c:	683b      	ldr	r3, [r7, #0]
 800272e:	3b01      	subs	r3, #1
 8002730:	603b      	str	r3, [r7, #0]
	double Vpeak = 0.0;
 8002732:	2400      	movs	r4, #0
 8002734:	2500      	movs	r5, #0
 8002736:	e03c      	b.n	80027b2 <PeakDetector+0xa2>
	} else {
		/* Check for a valid peak */
		// Circular buffer magic
		Vprev = Vp[(np + 1) % Np]; // Equivalent to Vp[np - 2]
 8002738:	6832      	ldr	r2, [r6, #0]
 800273a:	2403      	movs	r4, #3
 800273c:	3201      	adds	r2, #1
 800273e:	fbb2 f3f4 	udiv	r3, r2, r4
 8002742:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8002746:	1ad2      	subs	r2, r2, r3
 8002748:	eb0c 02c2 	add.w	r2, ip, r2, lsl #3
 800274c:	e9d2 0100 	ldrd	r0, r1, [r2]
		Vcurr = Vp[(np + 2) % Np]; // Equivalent to Vp[np - 1]
 8002750:	6833      	ldr	r3, [r6, #0]
 8002752:	3302      	adds	r3, #2
 8002754:	fbb3 f2f4 	udiv	r2, r3, r4
 8002758:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800275c:	1a9b      	subs	r3, r3, r2
 800275e:	eb0c 03c3 	add.w	r3, ip, r3, lsl #3
 8002762:	e9d3 4500 	ldrd	r4, r5, [r3]
		Vnext = Vp[np];
 8002766:	6833      	ldr	r3, [r6, #0]

		if ((Vcurr >= Vprev) && (Vcurr >= Vnext) && // If Vcurr is a "high point"...
 8002768:	4622      	mov	r2, r4
		Vnext = Vp[np];
 800276a:	eb0c 0cc3 	add.w	ip, ip, r3, lsl #3
		if ((Vcurr >= Vprev) && (Vcurr >= Vnext) && // If Vcurr is a "high point"...
 800276e:	462b      	mov	r3, r5
		Vnext = Vp[np];
 8002770:	e9dc 8900 	ldrd	r8, r9, [ip]
		if ((Vcurr >= Vprev) && (Vcurr >= Vnext) && // If Vcurr is a "high point"...
 8002774:	f7fe f9cc 	bl	8000b10 <__aeabi_dcmple>
 8002778:	2800      	cmp	r0, #0
 800277a:	d0da      	beq.n	8002732 <PeakDetector+0x22>
 800277c:	4642      	mov	r2, r8
 800277e:	464b      	mov	r3, r9
 8002780:	4620      	mov	r0, r4
 8002782:	4629      	mov	r1, r5
 8002784:	f7fe f9ce 	bl	8000b24 <__aeabi_dcmpge>
 8002788:	2800      	cmp	r0, #0
 800278a:	d0d2      	beq.n	8002732 <PeakDetector+0x22>
 800278c:	4b14      	ldr	r3, [pc, #80]	; (80027e0 <PeakDetector+0xd0>)
 800278e:	2200      	movs	r2, #0
 8002790:	4620      	mov	r0, r4
 8002792:	4629      	mov	r1, r5
 8002794:	f7fe f9c6 	bl	8000b24 <__aeabi_dcmpge>
 8002798:	2800      	cmp	r0, #0
 800279a:	d0ca      	beq.n	8002732 <PeakDetector+0x22>
			(Vcurr >= PEAKTHRESH_LOWER) && (Vcurr <= PEAKTHRESH_UPPER)) { // and within thresholds...
 800279c:	a30c      	add	r3, pc, #48	; (adr r3, 80027d0 <PeakDetector+0xc0>)
 800279e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80027a2:	4620      	mov	r0, r4
 80027a4:	4629      	mov	r1, r5
 80027a6:	f7fe f9b3 	bl	8000b10 <__aeabi_dcmple>
 80027aa:	2800      	cmp	r0, #0
 80027ac:	d0c1      	beq.n	8002732 <PeakDetector+0x22>
			Vpeak = Vcurr; // Register as a peak value
			PeakCooldown = FLATTIME; // Prevent double-counting noisy peaks
 80027ae:	2328      	movs	r3, #40	; 0x28
 80027b0:	603b      	str	r3, [r7, #0]
		}
	}

	/* Increment Buffer Index */
	if (++np >= Np) {
 80027b2:	6833      	ldr	r3, [r6, #0]
 80027b4:	3301      	adds	r3, #1
 80027b6:	2b02      	cmp	r3, #2
 80027b8:	6033      	str	r3, [r6, #0]
		np = 0;
 80027ba:	bf88      	it	hi
 80027bc:	2300      	movhi	r3, #0
	}

	return Vpeak;
}
 80027be:	ec45 4b10 	vmov	d0, r4, r5
		np = 0;
 80027c2:	bf88      	it	hi
 80027c4:	6033      	strhi	r3, [r6, #0]
}
 80027c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80027ca:	bf00      	nop
 80027cc:	f3af 8000 	nop.w
 80027d0:	00000000 	.word	0x00000000
 80027d4:	40b38800 	.word	0x40b38800
 80027d8:	20008df0 	.word	0x20008df0
 80027dc:	20007408 	.word	0x20007408
 80027e0:	40690000 	.word	0x40690000
 80027e4:	20007bb0 	.word	0x20007bb0

080027e8 <CleanBuffers>:
void CleanBuffers(void) {
	unsigned i;

	for (i = 0; i < Na; i++) {
		V1[i] = 0.0;
		V2[i] = 0.0;
 80027e8:	4917      	ldr	r1, [pc, #92]	; (8002848 <CleanBuffers+0x60>)
		V1[i] = 0.0;
 80027ea:	4818      	ldr	r0, [pc, #96]	; (800284c <CleanBuffers+0x64>)
void CleanBuffers(void) {
 80027ec:	b510      	push	{r4, lr}
		V1[i] = 0.0;
 80027ee:	2200      	movs	r2, #0
 80027f0:	2300      	movs	r3, #0
	}
	for (i = 0; i < Nb; i++) {
		V3[i] = 0.0;
 80027f2:	4c17      	ldr	r4, [pc, #92]	; (8002850 <CleanBuffers+0x68>)
		V1[i] = 0.0;
 80027f4:	e9c0 2300 	strd	r2, r3, [r0]
		V2[i] = 0.0;
 80027f8:	e9c1 2300 	strd	r2, r3, [r1]
		V1[i] = 0.0;
 80027fc:	e9c0 2302 	strd	r2, r3, [r0, #8]
		V2[i] = 0.0;
 8002800:	e9c1 2302 	strd	r2, r3, [r1, #8]
	for (i = 0; i < Nb; i++) {
 8002804:	2100      	movs	r1, #0
		V3[i] = 0.0;
 8002806:	eb04 00c1 	add.w	r0, r4, r1, lsl #3
	for (i = 0; i < Nb; i++) {
 800280a:	3101      	adds	r1, #1
 800280c:	29c8      	cmp	r1, #200	; 0xc8
		V3[i] = 0.0;
 800280e:	e9c0 2300 	strd	r2, r3, [r0]
	for (i = 0; i < Nb; i++) {
 8002812:	d1f8      	bne.n	8002806 <CleanBuffers+0x1e>
	}
	for (i = 0; i < Nc; i++) {
		V4[i] = 0.0;
 8002814:	4c0f      	ldr	r4, [pc, #60]	; (8002854 <CleanBuffers+0x6c>)
	for (i = 0; i < Nc; i++) {
 8002816:	2100      	movs	r1, #0
		V4[i] = 0.0;
 8002818:	eb04 00c1 	add.w	r0, r4, r1, lsl #3
	for (i = 0; i < Nc; i++) {
 800281c:	3101      	adds	r1, #1
 800281e:	2928      	cmp	r1, #40	; 0x28
		V4[i] = 0.0;
 8002820:	e9c0 2300 	strd	r2, r3, [r0]
	for (i = 0; i < Nc; i++) {
 8002824:	d1f8      	bne.n	8002818 <CleanBuffers+0x30>
	}
	for (i = 0; i < Np; i++) {
		Vp[i] = 0.0;
 8002826:	490c      	ldr	r1, [pc, #48]	; (8002858 <CleanBuffers+0x70>)
 8002828:	e9c1 2300 	strd	r2, r3, [r1]
 800282c:	e9c1 2302 	strd	r2, r3, [r1, #8]
 8002830:	e9c1 2304 	strd	r2, r3, [r1, #16]
	}

	na = 0;
 8002834:	4a09      	ldr	r2, [pc, #36]	; (800285c <CleanBuffers+0x74>)
 8002836:	2300      	movs	r3, #0
 8002838:	6013      	str	r3, [r2, #0]
	nb = 0;
 800283a:	4a09      	ldr	r2, [pc, #36]	; (8002860 <CleanBuffers+0x78>)
 800283c:	6013      	str	r3, [r2, #0]
	nc = 0;
 800283e:	4a09      	ldr	r2, [pc, #36]	; (8002864 <CleanBuffers+0x7c>)
 8002840:	6013      	str	r3, [r2, #0]
	np = 0;
 8002842:	4a09      	ldr	r2, [pc, #36]	; (8002868 <CleanBuffers+0x80>)
 8002844:	6013      	str	r3, [r2, #0]
}
 8002846:	bd10      	pop	{r4, pc}
 8002848:	20007420 	.word	0x20007420
 800284c:	20007410 	.word	0x20007410
 8002850:	20007430 	.word	0x20007430
 8002854:	20007a70 	.word	0x20007a70
 8002858:	20007bb0 	.word	0x20007bb0
 800285c:	20008de4 	.word	0x20008de4
 8002860:	20008de8 	.word	0x20008de8
 8002864:	20008dec 	.word	0x20008dec
 8002868:	20008df0 	.word	0x20008df0

0800286c <dsp_Task>:
{
 800286c:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	adcRead = 0;
 8002870:	4b23      	ldr	r3, [pc, #140]	; (8002900 <dsp_Task+0x94>)
	n=0;
 8002872:	f8df 809c 	ldr.w	r8, [pc, #156]	; 8002910 <dsp_Task+0xa4>
	adcBufferFull = 0;
 8002876:	4d23      	ldr	r5, [pc, #140]	; (8002904 <dsp_Task+0x98>)
	HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);	//api to start timer14
 8002878:	4823      	ldr	r0, [pc, #140]	; (8002908 <dsp_Task+0x9c>)
		  			pulseHeight = Vpeak;
 800287a:	f8df 9098 	ldr.w	r9, [pc, #152]	; 8002914 <dsp_Task+0xa8>
	n=0;
 800287e:	2100      	movs	r1, #0
 8002880:	f8a8 1000 	strh.w	r1, [r8]
	adcRead = 0;
 8002884:	8019      	strh	r1, [r3, #0]
	adcBufferFull = 0;
 8002886:	8029      	strh	r1, [r5, #0]
	HAL_TIM_PWM_Start(&htim14, TIM_CHANNEL_1);	//api to start timer14
 8002888:	f006 fe70 	bl	800956c <HAL_TIM_PWM_Start>
	HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);	//enable busy_pin exint !always comment out the other after MX generate
 800288c:	2028      	movs	r0, #40	; 0x28
 800288e:	f003 fdcf 	bl	8006430 <HAL_NVIC_EnableIRQ>
		  		if (Vpeak > 0)
 8002892:	f04f 0a00 	mov.w	sl, #0
 8002896:	f04f 0b00 	mov.w	fp, #0
	  if(adcBufferFull==1)//when adcBuffer is full execute
 800289a:	882b      	ldrh	r3, [r5, #0]
 800289c:	b29b      	uxth	r3, r3
 800289e:	2b01      	cmp	r3, #1
 80028a0:	d1fb      	bne.n	800289a <dsp_Task+0x2e>
		  	for (i = 0; i < N; i++)
 80028a2:	2400      	movs	r4, #0
		  		Vin = adcBuffer[i];
 80028a4:	4b19      	ldr	r3, [pc, #100]	; (800290c <dsp_Task+0xa0>)
 80028a6:	f833 0014 	ldrh.w	r0, [r3, r4, lsl #1]
 80028aa:	b280      	uxth	r0, r0
 80028ac:	f7fd fe3a 	bl	8000524 <__aeabi_ui2d>
		  		Vout = SmoothedTrapezoidalFilter(Vin); // Feed input samples into filter
 80028b0:	ec41 0b10 	vmov	d0, r0, r1
 80028b4:	f7ff fe84 	bl	80025c0 <SmoothedTrapezoidalFilter>
		  		Vpeak = PeakDetector(Vout); // Feed filter output into peak detector
 80028b8:	f7ff ff2a 	bl	8002710 <PeakDetector>
 80028bc:	ec57 6b10 	vmov	r6, r7, d0
		  		if (Vpeak > 0)
 80028c0:	ee10 0a10 	vmov	r0, s0
 80028c4:	4652      	mov	r2, sl
 80028c6:	465b      	mov	r3, fp
 80028c8:	4639      	mov	r1, r7
 80028ca:	f7fe f935 	bl	8000b38 <__aeabi_dcmpgt>
 80028ce:	b148      	cbz	r0, 80028e4 <dsp_Task+0x78>
		  			pulseHeight = Vpeak;
 80028d0:	4630      	mov	r0, r6
 80028d2:	4639      	mov	r1, r7
 80028d4:	f7fe f93a 	bl	8000b4c <__aeabi_d2uiz>
 80028d8:	b280      	uxth	r0, r0
 80028da:	f8a9 0000 	strh.w	r0, [r9]
		  			osDelay(22);	//wait exactly this amount of time after updating pulseHeight to give model a chance
 80028de:	2016      	movs	r0, #22
 80028e0:	f006 ffbd 	bl	800985e <osDelay>
		  	for (i = 0; i < N; i++)
 80028e4:	3401      	adds	r4, #1
 80028e6:	f5b4 6ffa 	cmp.w	r4, #2000	; 0x7d0
 80028ea:	d1db      	bne.n	80028a4 <dsp_Task+0x38>
		  	CleanBuffers();
 80028ec:	f7ff ff7c 	bl	80027e8 <CleanBuffers>
		  n=0; //reset adcBuffer write index
 80028f0:	2300      	movs	r3, #0
		  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);	//reenable interrupts from adc
 80028f2:	2028      	movs	r0, #40	; 0x28
		  n=0; //reset adcBuffer write index
 80028f4:	f8a8 3000 	strh.w	r3, [r8]
		  adcBufferFull = 0;
 80028f8:	802b      	strh	r3, [r5, #0]
		  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);	//reenable interrupts from adc
 80028fa:	f003 fd99 	bl	8006430 <HAL_NVIC_EnableIRQ>
 80028fe:	e7cc      	b.n	800289a <dsp_Task+0x2e>
 8002900:	20008b6a 	.word	0x20008b6a
 8002904:	20008b68 	.word	0x20008b68
 8002908:	20008d98 	.word	0x20008d98
 800290c:	20007bc8 	.word	0x20007bc8
 8002910:	20008de0 	.word	0x20008de0
 8002914:	20008df4 	.word	0x20008df4

08002918 <HAL_TIM_PeriodElapsedCallback>:
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM6) {
 8002918:	6802      	ldr	r2, [r0, #0]
 800291a:	4b03      	ldr	r3, [pc, #12]	; (8002928 <HAL_TIM_PeriodElapsedCallback+0x10>)
 800291c:	429a      	cmp	r2, r3
 800291e:	d101      	bne.n	8002924 <HAL_TIM_PeriodElapsedCallback+0xc>
    HAL_IncTick();
 8002920:	f003 bd1c 	b.w	800635c <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 8002924:	4770      	bx	lr
 8002926:	bf00      	nop
 8002928:	40001000 	.word	0x40001000

0800292c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 800292c:	4770      	bx	lr
	...

08002930 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002930:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002932:	4b0e      	ldr	r3, [pc, #56]	; (800296c <HAL_MspInit+0x3c>)
 8002934:	2200      	movs	r2, #0
 8002936:	9200      	str	r2, [sp, #0]
 8002938:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800293a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800293e:	6459      	str	r1, [r3, #68]	; 0x44
 8002940:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8002942:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8002946:	9100      	str	r1, [sp, #0]
 8002948:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800294a:	9201      	str	r2, [sp, #4]
 800294c:	6c19      	ldr	r1, [r3, #64]	; 0x40
 800294e:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8002952:	6419      	str	r1, [r3, #64]	; 0x40
 8002954:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002956:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800295a:	9301      	str	r3, [sp, #4]
 800295c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800295e:	210f      	movs	r1, #15
 8002960:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002964:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 8002966:	f003 bd31 	b.w	80063cc <HAL_NVIC_SetPriority>
 800296a:	bf00      	nop
 800296c:	40023800 	.word	0x40023800

08002970 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 8002970:	6802      	ldr	r2, [r0, #0]
 8002972:	4b09      	ldr	r3, [pc, #36]	; (8002998 <HAL_CRC_MspInit+0x28>)
 8002974:	429a      	cmp	r2, r3
{
 8002976:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 8002978:	d10b      	bne.n	8002992 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 800297a:	2300      	movs	r3, #0
 800297c:	9301      	str	r3, [sp, #4]
 800297e:	4b07      	ldr	r3, [pc, #28]	; (800299c <HAL_CRC_MspInit+0x2c>)
 8002980:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002982:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 8002986:	631a      	str	r2, [r3, #48]	; 0x30
 8002988:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800298a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800298e:	9301      	str	r3, [sp, #4]
 8002990:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 8002992:	b002      	add	sp, #8
 8002994:	4770      	bx	lr
 8002996:	bf00      	nop
 8002998:	40023000 	.word	0x40023000
 800299c:	40023800 	.word	0x40023800

080029a0 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 80029a0:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 80029a2:	4b0f      	ldr	r3, [pc, #60]	; (80029e0 <HAL_DMA2D_MspInit+0x40>)
 80029a4:	6802      	ldr	r2, [r0, #0]
 80029a6:	429a      	cmp	r2, r3
 80029a8:	d116      	bne.n	80029d8 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80029aa:	2200      	movs	r2, #0
 80029ac:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 80029b0:	9201      	str	r2, [sp, #4]
 80029b2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80029b4:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 80029b8:	6319      	str	r1, [r3, #48]	; 0x30
 80029ba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80029bc:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 80029c0:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80029c2:	2105      	movs	r1, #5
 80029c4:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80029c6:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 80029c8:	f003 fd00 	bl	80063cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80029cc:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 80029ce:	b003      	add	sp, #12
 80029d0:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 80029d4:	f003 bd2c 	b.w	8006430 <HAL_NVIC_EnableIRQ>
}
 80029d8:	b003      	add	sp, #12
 80029da:	f85d fb04 	ldr.w	pc, [sp], #4
 80029de:	bf00      	nop
 80029e0:	4002b000 	.word	0x4002b000

080029e4 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 80029e4:	b510      	push	{r4, lr}
 80029e6:	4604      	mov	r4, r0
 80029e8:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80029ea:	2214      	movs	r2, #20
 80029ec:	2100      	movs	r1, #0
 80029ee:	a803      	add	r0, sp, #12
 80029f0:	f01d ff18 	bl	8020824 <memset>
  if(hdsi->Instance==DSI)
 80029f4:	6822      	ldr	r2, [r4, #0]
 80029f6:	4b17      	ldr	r3, [pc, #92]	; (8002a54 <HAL_DSI_MspInit+0x70>)
 80029f8:	429a      	cmp	r2, r3
 80029fa:	d128      	bne.n	8002a4e <HAL_DSI_MspInit+0x6a>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 80029fc:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8002a00:	2400      	movs	r4, #0
 8002a02:	9401      	str	r4, [sp, #4]
 8002a04:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8002a06:	4814      	ldr	r0, [pc, #80]	; (8002a58 <HAL_DSI_MspInit+0x74>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8002a08:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8002a0c:	645a      	str	r2, [r3, #68]	; 0x44
 8002a0e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8002a10:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8002a14:	9201      	str	r2, [sp, #4]
 8002a16:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8002a18:	9402      	str	r4, [sp, #8]
 8002a1a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002a1c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8002a20:	631a      	str	r2, [r3, #48]	; 0x30
 8002a22:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002a24:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002a28:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a2a:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8002a2c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002a2e:	2302      	movs	r3, #2
 8002a30:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8002a34:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8002a36:	230d      	movs	r3, #13
 8002a38:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8002a3a:	f004 fafd 	bl	8007038 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8002a3e:	205c      	movs	r0, #92	; 0x5c
 8002a40:	4622      	mov	r2, r4
 8002a42:	2105      	movs	r1, #5
 8002a44:	f003 fcc2 	bl	80063cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8002a48:	205c      	movs	r0, #92	; 0x5c
 8002a4a:	f003 fcf1 	bl	8006430 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8002a4e:	b008      	add	sp, #32
 8002a50:	bd10      	pop	{r4, pc}
 8002a52:	bf00      	nop
 8002a54:	40016c00 	.word	0x40016c00
 8002a58:	40022400 	.word	0x40022400

08002a5c <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002a5c:	b530      	push	{r4, r5, lr}
 8002a5e:	4604      	mov	r4, r0
 8002a60:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002a62:	2214      	movs	r2, #20
 8002a64:	2100      	movs	r1, #0
 8002a66:	a803      	add	r0, sp, #12
 8002a68:	f01d fedc 	bl	8020824 <memset>
  if(hi2c->Instance==I2C1)
 8002a6c:	6822      	ldr	r2, [r4, #0]
 8002a6e:	4b14      	ldr	r3, [pc, #80]	; (8002ac0 <HAL_I2C_MspInit+0x64>)
 8002a70:	429a      	cmp	r2, r3
 8002a72:	d122      	bne.n	8002aba <HAL_I2C_MspInit+0x5e>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002a74:	4c13      	ldr	r4, [pc, #76]	; (8002ac4 <HAL_I2C_MspInit+0x68>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002a76:	4814      	ldr	r0, [pc, #80]	; (8002ac8 <HAL_I2C_MspInit+0x6c>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002a78:	2500      	movs	r5, #0
 8002a7a:	9501      	str	r5, [sp, #4]
 8002a7c:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002a7e:	f043 0302 	orr.w	r3, r3, #2
 8002a82:	6323      	str	r3, [r4, #48]	; 0x30
 8002a84:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8002a86:	f003 0302 	and.w	r3, r3, #2
 8002a8a:	9301      	str	r3, [sp, #4]
 8002a8c:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002a8e:	f44f 7240 	mov.w	r2, #768	; 0x300
 8002a92:	2312      	movs	r3, #18
 8002a94:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8002a98:	2103      	movs	r1, #3
 8002a9a:	2304      	movs	r3, #4
 8002a9c:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002aa0:	a903      	add	r1, sp, #12
 8002aa2:	f004 fac9 	bl	8007038 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8002aa6:	9502      	str	r5, [sp, #8]
 8002aa8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8002aaa:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002aae:	6423      	str	r3, [r4, #64]	; 0x40
 8002ab0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8002ab2:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002ab6:	9302      	str	r3, [sp, #8]
 8002ab8:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8002aba:	b009      	add	sp, #36	; 0x24
 8002abc:	bd30      	pop	{r4, r5, pc}
 8002abe:	bf00      	nop
 8002ac0:	40005400 	.word	0x40005400
 8002ac4:	40023800 	.word	0x40023800
 8002ac8:	40020400 	.word	0x40020400

08002acc <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8002acc:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8002ace:	6802      	ldr	r2, [r0, #0]
 8002ad0:	4b0a      	ldr	r3, [pc, #40]	; (8002afc <HAL_I2C_MspDeInit+0x30>)
 8002ad2:	429a      	cmp	r2, r3
 8002ad4:	d110      	bne.n	8002af8 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8002ad6:	4a0a      	ldr	r2, [pc, #40]	; (8002b00 <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8002ad8:	480a      	ldr	r0, [pc, #40]	; (8002b04 <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8002ada:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8002adc:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8002ae0:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8002ae2:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002ae6:	f004 fb8d 	bl	8007204 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8002aea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8002aee:	4805      	ldr	r0, [pc, #20]	; (8002b04 <HAL_I2C_MspDeInit+0x38>)
 8002af0:	f44f 7100 	mov.w	r1, #512	; 0x200
 8002af4:	f004 bb86 	b.w	8007204 <HAL_GPIO_DeInit>
}
 8002af8:	bd08      	pop	{r3, pc}
 8002afa:	bf00      	nop
 8002afc:	40005400 	.word	0x40005400
 8002b00:	40023800 	.word	0x40023800
 8002b04:	40020400 	.word	0x40020400

08002b08 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8002b08:	b510      	push	{r4, lr}
 8002b0a:	4604      	mov	r4, r0
 8002b0c:	b090      	sub	sp, #64	; 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8002b0e:	223c      	movs	r2, #60	; 0x3c
 8002b10:	2100      	movs	r1, #0
 8002b12:	a801      	add	r0, sp, #4
 8002b14:	f01d fe86 	bl	8020824 <memset>
  if(hltdc->Instance==LTDC)
 8002b18:	6822      	ldr	r2, [r4, #0]
 8002b1a:	4b12      	ldr	r3, [pc, #72]	; (8002b64 <HAL_LTDC_MspInit+0x5c>)
 8002b1c:	429a      	cmp	r2, r3
 8002b1e:	d11f      	bne.n	8002b60 <HAL_LTDC_MspInit+0x58>

  /* USER CODE END LTDC_MspInit 0 */

  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8002b20:	2308      	movs	r3, #8
 8002b22:	9301      	str	r3, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 8002b24:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8002b28:	9305      	str	r3, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002b2a:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8002b2c:	2306      	movs	r3, #6
 8002b2e:	9308      	str	r3, [sp, #32]
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8002b30:	f005 fe68 	bl	8008804 <HAL_RCCEx_PeriphCLKConfig>
 8002b34:	b108      	cbz	r0, 8002b3a <HAL_LTDC_MspInit+0x32>
    {
      Error_Handler();
 8002b36:	f7ff fef9 	bl	800292c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002b3a:	4b0b      	ldr	r3, [pc, #44]	; (8002b68 <HAL_LTDC_MspInit+0x60>)
 8002b3c:	2200      	movs	r2, #0
 8002b3e:	9200      	str	r2, [sp, #0]
 8002b40:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8002b42:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 8002b46:	6459      	str	r1, [r3, #68]	; 0x44
 8002b48:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8002b4a:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8002b4e:	9300      	str	r3, [sp, #0]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002b50:	2058      	movs	r0, #88	; 0x58
 8002b52:	2105      	movs	r1, #5
    __HAL_RCC_LTDC_CLK_ENABLE();
 8002b54:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8002b56:	f003 fc39 	bl	80063cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8002b5a:	2058      	movs	r0, #88	; 0x58
 8002b5c:	f003 fc68 	bl	8006430 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8002b60:	b010      	add	sp, #64	; 0x40
 8002b62:	bd10      	pop	{r4, pc}
 8002b64:	40016800 	.word	0x40016800
 8002b68:	40023800 	.word	0x40023800

08002b6c <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8002b6c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002b6e:	4604      	mov	r4, r0
 8002b70:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002b72:	2214      	movs	r2, #20
 8002b74:	2100      	movs	r1, #0
 8002b76:	a803      	add	r0, sp, #12
 8002b78:	f01d fe54 	bl	8020824 <memset>
  if(hqspi->Instance==QUADSPI)
 8002b7c:	6822      	ldr	r2, [r4, #0]
 8002b7e:	4b24      	ldr	r3, [pc, #144]	; (8002c10 <HAL_QSPI_MspInit+0xa4>)
 8002b80:	429a      	cmp	r2, r3
 8002b82:	d142      	bne.n	8002c0a <HAL_QSPI_MspInit+0x9e>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8002b84:	4b23      	ldr	r3, [pc, #140]	; (8002c14 <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002b86:	4824      	ldr	r0, [pc, #144]	; (8002c18 <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8002b88:	2400      	movs	r4, #0
 8002b8a:	9400      	str	r4, [sp, #0]
 8002b8c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002b8e:	f042 0202 	orr.w	r2, r2, #2
 8002b92:	639a      	str	r2, [r3, #56]	; 0x38
 8002b94:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002b96:	f002 0202 	and.w	r2, r2, #2
 8002b9a:	9200      	str	r2, [sp, #0]
 8002b9c:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002b9e:	9401      	str	r4, [sp, #4]
 8002ba0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002ba2:	f042 0202 	orr.w	r2, r2, #2
 8002ba6:	631a      	str	r2, [r3, #48]	; 0x30
 8002ba8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002baa:	f002 0202 	and.w	r2, r2, #2
 8002bae:	9201      	str	r2, [sp, #4]
 8002bb0:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002bb2:	9402      	str	r4, [sp, #8]
 8002bb4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002bb6:	f042 0220 	orr.w	r2, r2, #32
 8002bba:	631a      	str	r2, [r3, #48]	; 0x30
 8002bbc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002bbe:	f003 0320 	and.w	r3, r3, #32
 8002bc2:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002bc4:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8002bc6:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8002bc8:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8002bca:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002bcc:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002bce:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002bd0:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8002bd4:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002bd8:	f004 fa2e 	bl	8007038 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8002bdc:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002be0:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002be4:	480d      	ldr	r0, [pc, #52]	; (8002c1c <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8002be6:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002be8:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8002bea:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002bec:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002bf0:	f004 fa22 	bl	8007038 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8002bf4:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002bf8:	4808      	ldr	r0, [pc, #32]	; (8002c1c <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8002bfa:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002bfc:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002bfe:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002c02:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002c06:	f004 fa17 	bl	8007038 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8002c0a:	b009      	add	sp, #36	; 0x24
 8002c0c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002c0e:	bf00      	nop
 8002c10:	a0001000 	.word	0xa0001000
 8002c14:	40023800 	.word	0x40023800
 8002c18:	40020400 	.word	0x40020400
 8002c1c:	40021400 	.word	0x40021400

08002c20 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8002c20:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8002c22:	6802      	ldr	r2, [r0, #0]
 8002c24:	4b09      	ldr	r3, [pc, #36]	; (8002c4c <HAL_QSPI_MspDeInit+0x2c>)
 8002c26:	429a      	cmp	r2, r3
 8002c28:	d10f      	bne.n	8002c4a <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8002c2a:	4a09      	ldr	r2, [pc, #36]	; (8002c50 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8002c2c:	4809      	ldr	r0, [pc, #36]	; (8002c54 <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8002c2e:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8002c30:	f023 0302 	bic.w	r3, r3, #2
 8002c34:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8002c36:	2140      	movs	r1, #64	; 0x40
 8002c38:	f004 fae4 	bl	8007204 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8002c3c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8002c40:	4805      	ldr	r0, [pc, #20]	; (8002c58 <HAL_QSPI_MspDeInit+0x38>)
 8002c42:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8002c46:	f004 badd 	b.w	8007204 <HAL_GPIO_DeInit>
}
 8002c4a:	bd08      	pop	{r3, pc}
 8002c4c:	a0001000 	.word	0xa0001000
 8002c50:	40023800 	.word	0x40023800
 8002c54:	40020400 	.word	0x40020400
 8002c58:	40021400 	.word	0x40021400

08002c5c <HAL_TIM_PWM_MspInit>:
* @param htim_pwm: TIM_PWM handle pointer
* @retval None
*/
void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* htim_pwm)
{
  if(htim_pwm->Instance==TIM12)
 8002c5c:	6802      	ldr	r2, [r0, #0]
 8002c5e:	4b09      	ldr	r3, [pc, #36]	; (8002c84 <HAL_TIM_PWM_MspInit+0x28>)
 8002c60:	429a      	cmp	r2, r3
{
 8002c62:	b082      	sub	sp, #8
  if(htim_pwm->Instance==TIM12)
 8002c64:	d10b      	bne.n	8002c7e <HAL_TIM_PWM_MspInit+0x22>
  {
  /* USER CODE BEGIN TIM12_MspInit 0 */

  /* USER CODE END TIM12_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM12_CLK_ENABLE();
 8002c66:	2300      	movs	r3, #0
 8002c68:	9301      	str	r3, [sp, #4]
 8002c6a:	4b07      	ldr	r3, [pc, #28]	; (8002c88 <HAL_TIM_PWM_MspInit+0x2c>)
 8002c6c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002c6e:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8002c72:	641a      	str	r2, [r3, #64]	; 0x40
 8002c74:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002c76:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8002c7a:	9301      	str	r3, [sp, #4]
 8002c7c:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN TIM12_MspInit 1 */

  /* USER CODE END TIM12_MspInit 1 */
  }

}
 8002c7e:	b002      	add	sp, #8
 8002c80:	4770      	bx	lr
 8002c82:	bf00      	nop
 8002c84:	40001800 	.word	0x40001800
 8002c88:	40023800 	.word	0x40023800

08002c8c <HAL_TIM_Base_MspInit>:
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
  if(htim_base->Instance==TIM14)
 8002c8c:	6802      	ldr	r2, [r0, #0]
 8002c8e:	4b09      	ldr	r3, [pc, #36]	; (8002cb4 <HAL_TIM_Base_MspInit+0x28>)
 8002c90:	429a      	cmp	r2, r3
{
 8002c92:	b082      	sub	sp, #8
  if(htim_base->Instance==TIM14)
 8002c94:	d10b      	bne.n	8002cae <HAL_TIM_Base_MspInit+0x22>
  {
  /* USER CODE BEGIN TIM14_MspInit 0 */

  /* USER CODE END TIM14_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM14_CLK_ENABLE();
 8002c96:	2300      	movs	r3, #0
 8002c98:	9301      	str	r3, [sp, #4]
 8002c9a:	4b07      	ldr	r3, [pc, #28]	; (8002cb8 <HAL_TIM_Base_MspInit+0x2c>)
 8002c9c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002c9e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8002ca2:	641a      	str	r2, [r3, #64]	; 0x40
 8002ca4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ca6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8002caa:	9301      	str	r3, [sp, #4]
 8002cac:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN TIM14_MspInit 1 */

  /* USER CODE END TIM14_MspInit 1 */
  }

}
 8002cae:	b002      	add	sp, #8
 8002cb0:	4770      	bx	lr
 8002cb2:	bf00      	nop
 8002cb4:	40002000 	.word	0x40002000
 8002cb8:	40023800 	.word	0x40023800

08002cbc <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8002cbc:	b510      	push	{r4, lr}
 8002cbe:	4604      	mov	r4, r0
 8002cc0:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002cc2:	2214      	movs	r2, #20
 8002cc4:	2100      	movs	r1, #0
 8002cc6:	a803      	add	r0, sp, #12
 8002cc8:	f01d fdac 	bl	8020824 <memset>
  if(htim->Instance==TIM12)
 8002ccc:	6823      	ldr	r3, [r4, #0]
 8002cce:	4a1a      	ldr	r2, [pc, #104]	; (8002d38 <HAL_TIM_MspPostInit+0x7c>)
 8002cd0:	4293      	cmp	r3, r2
 8002cd2:	d117      	bne.n	8002d04 <HAL_TIM_MspPostInit+0x48>
  {
  /* USER CODE BEGIN TIM12_MspPostInit 0 */

  /* USER CODE END TIM12_MspPostInit 0 */
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8002cd4:	2300      	movs	r3, #0
 8002cd6:	9301      	str	r3, [sp, #4]
 8002cd8:	4b18      	ldr	r3, [pc, #96]	; (8002d3c <HAL_TIM_MspPostInit+0x80>)
 8002cda:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002cdc:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8002ce0:	631a      	str	r2, [r3, #48]	; 0x30
 8002ce2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002ce4:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8002ce8:	9301      	str	r3, [sp, #4]
    /**TIM12 GPIO Configuration
    PH6     ------> TIM12_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002cea:	2040      	movs	r0, #64	; 0x40
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8002cec:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002cee:	2302      	movs	r3, #2
 8002cf0:	e9cd 0303 	strd	r0, r3, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM12;
 8002cf4:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8002cf6:	4812      	ldr	r0, [pc, #72]	; (8002d40 <HAL_TIM_MspPostInit+0x84>)
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM12;
 8002cf8:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8002cfa:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Pin = CONVST_Pin;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
    HAL_GPIO_Init(CONVST_GPIO_Port, &GPIO_InitStruct);
 8002cfc:	f004 f99c 	bl	8007038 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM14_MspPostInit 1 */

  /* USER CODE END TIM14_MspPostInit 1 */
  }

}
 8002d00:	b008      	add	sp, #32
 8002d02:	bd10      	pop	{r4, pc}
  else if(htim->Instance==TIM14)
 8002d04:	4a0f      	ldr	r2, [pc, #60]	; (8002d44 <HAL_TIM_MspPostInit+0x88>)
 8002d06:	4293      	cmp	r3, r2
 8002d08:	d1fa      	bne.n	8002d00 <HAL_TIM_MspPostInit+0x44>
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002d0a:	2300      	movs	r3, #0
 8002d0c:	9302      	str	r3, [sp, #8]
 8002d0e:	4b0b      	ldr	r3, [pc, #44]	; (8002d3c <HAL_TIM_MspPostInit+0x80>)
    HAL_GPIO_Init(CONVST_GPIO_Port, &GPIO_InitStruct);
 8002d10:	480d      	ldr	r0, [pc, #52]	; (8002d48 <HAL_TIM_MspPostInit+0x8c>)
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002d12:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002d14:	f042 0201 	orr.w	r2, r2, #1
 8002d18:	631a      	str	r2, [r3, #48]	; 0x30
 8002d1a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002d1c:	f003 0301 	and.w	r3, r3, #1
 8002d20:	9302      	str	r3, [sp, #8]
 8002d22:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d24:	2280      	movs	r2, #128	; 0x80
 8002d26:	2302      	movs	r3, #2
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 8002d28:	2103      	movs	r1, #3
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d2a:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF9_TIM14;
 8002d2e:	2309      	movs	r3, #9
 8002d30:	e9cd 1306 	strd	r1, r3, [sp, #24]
    HAL_GPIO_Init(CONVST_GPIO_Port, &GPIO_InitStruct);
 8002d34:	a903      	add	r1, sp, #12
 8002d36:	e7e1      	b.n	8002cfc <HAL_TIM_MspPostInit+0x40>
 8002d38:	40001800 	.word	0x40001800
 8002d3c:	40023800 	.word	0x40023800
 8002d40:	40021c00 	.word	0x40021c00
 8002d44:	40002000 	.word	0x40002000
 8002d48:	40020000 	.word	0x40020000

08002d4c <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8002d4c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002d4e:	b087      	sub	sp, #28
  GPIO_InitTypeDef GPIO_InitStruct ={0};
 8002d50:	2300      	movs	r3, #0
 8002d52:	9303      	str	r3, [sp, #12]
  if (FMC_Initialized) {
 8002d54:	4b30      	ldr	r3, [pc, #192]	; (8002e18 <HAL_SDRAM_MspInit+0xcc>)
 8002d56:	681c      	ldr	r4, [r3, #0]
 8002d58:	2c00      	cmp	r4, #0
 8002d5a:	d15a      	bne.n	8002e12 <HAL_SDRAM_MspInit+0xc6>
  FMC_Initialized = 1;
 8002d5c:	2201      	movs	r2, #1
 8002d5e:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8002d60:	4b2e      	ldr	r3, [pc, #184]	; (8002e1c <HAL_SDRAM_MspInit+0xd0>)
 8002d62:	9400      	str	r4, [sp, #0]
 8002d64:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002d66:	482e      	ldr	r0, [pc, #184]	; (8002e20 <HAL_SDRAM_MspInit+0xd4>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8002d68:	f042 0201 	orr.w	r2, r2, #1
 8002d6c:	639a      	str	r2, [r3, #56]	; 0x38
 8002d6e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8002d70:	f003 0301 	and.w	r3, r3, #1
 8002d74:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d76:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002d78:	2603      	movs	r6, #3
 8002d7a:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8002d7c:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002d7e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d80:	f64f 7383 	movw	r3, #65411	; 0xff83
 8002d84:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002d88:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8002d8c:	f004 f954 	bl	8007038 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8002d90:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002d94:	4823      	ldr	r0, [pc, #140]	; (8002e24 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002d96:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002d98:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002d9a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002d9e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8002da2:	f004 f949 	bl	8007038 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8002da6:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002daa:	481f      	ldr	r0, [pc, #124]	; (8002e28 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002dac:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002dae:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002db0:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002db4:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8002db8:	f004 f93e 	bl	8007038 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8002dbc:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8002dc0:	481a      	ldr	r0, [pc, #104]	; (8002e2c <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002dc2:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8002dc4:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002dc6:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002dca:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8002dce:	f004 f933 	bl	8007038 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002dd2:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002dd6:	4816      	ldr	r0, [pc, #88]	; (8002e30 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002dd8:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002dda:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002ddc:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002de0:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8002de4:	f004 f928 	bl	8007038 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8002de8:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8002dec:	4811      	ldr	r0, [pc, #68]	; (8002e34 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002dee:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8002df0:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002df2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002df6:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8002dfa:	f004 f91d 	bl	8007038 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8002dfe:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002e00:	480d      	ldr	r0, [pc, #52]	; (8002e38 <HAL_SDRAM_MspInit+0xec>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8002e02:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002e04:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002e06:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002e0a:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002e0e:	f004 f913 	bl	8007038 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8002e12:	b007      	add	sp, #28
 8002e14:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002e16:	bf00      	nop
 8002e18:	20008dfc 	.word	0x20008dfc
 8002e1c:	40023800 	.word	0x40023800
 8002e20:	40021000 	.word	0x40021000
 8002e24:	40021800 	.word	0x40021800
 8002e28:	40020c00 	.word	0x40020c00
 8002e2c:	40022000 	.word	0x40022000
 8002e30:	40021400 	.word	0x40021400
 8002e34:	40021c00 	.word	0x40021c00
 8002e38:	40020800 	.word	0x40020800

08002e3c <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8002e3c:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8002e3e:	4b17      	ldr	r3, [pc, #92]	; (8002e9c <HAL_SDRAM_MspDeInit+0x60>)
 8002e40:	681a      	ldr	r2, [r3, #0]
 8002e42:	bb52      	cbnz	r2, 8002e9a <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8002e44:	2201      	movs	r2, #1
 8002e46:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8002e48:	4a15      	ldr	r2, [pc, #84]	; (8002ea0 <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8002e4a:	4816      	ldr	r0, [pc, #88]	; (8002ea4 <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8002e4c:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8002e4e:	f023 0301 	bic.w	r3, r3, #1
 8002e52:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8002e54:	f64f 7183 	movw	r1, #65411	; 0xff83
 8002e58:	f004 f9d4 	bl	8007204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8002e5c:	4812      	ldr	r0, [pc, #72]	; (8002ea8 <HAL_SDRAM_MspDeInit+0x6c>)
 8002e5e:	f248 1133 	movw	r1, #33075	; 0x8133
 8002e62:	f004 f9cf 	bl	8007204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8002e66:	4811      	ldr	r0, [pc, #68]	; (8002eac <HAL_SDRAM_MspDeInit+0x70>)
 8002e68:	f24c 7103 	movw	r1, #50947	; 0xc703
 8002e6c:	f004 f9ca 	bl	8007204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8002e70:	480f      	ldr	r0, [pc, #60]	; (8002eb0 <HAL_SDRAM_MspDeInit+0x74>)
 8002e72:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8002e76:	f004 f9c5 	bl	8007204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8002e7a:	480e      	ldr	r0, [pc, #56]	; (8002eb4 <HAL_SDRAM_MspDeInit+0x78>)
 8002e7c:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8002e80:	f004 f9c0 	bl	8007204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8002e84:	480c      	ldr	r0, [pc, #48]	; (8002eb8 <HAL_SDRAM_MspDeInit+0x7c>)
 8002e86:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8002e8a:	f004 f9bb 	bl	8007204 <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8002e8e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8002e92:	480a      	ldr	r0, [pc, #40]	; (8002ebc <HAL_SDRAM_MspDeInit+0x80>)
 8002e94:	210d      	movs	r1, #13
 8002e96:	f004 b9b5 	b.w	8007204 <HAL_GPIO_DeInit>
}
 8002e9a:	bd08      	pop	{r3, pc}
 8002e9c:	20008df8 	.word	0x20008df8
 8002ea0:	40023800 	.word	0x40023800
 8002ea4:	40021000 	.word	0x40021000
 8002ea8:	40021800 	.word	0x40021800
 8002eac:	40020c00 	.word	0x40020c00
 8002eb0:	40022000 	.word	0x40022000
 8002eb4:	40021400 	.word	0x40021400
 8002eb8:	40021c00 	.word	0x40021c00
 8002ebc:	40020800 	.word	0x40020800

08002ec0 <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8002ec0:	b570      	push	{r4, r5, r6, lr}
 8002ec2:	b088      	sub	sp, #32
  uint32_t              uwPrescalerValue = 0U;
  uint32_t              pFLatency;
  HAL_StatusTypeDef     status;

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002ec4:	2300      	movs	r3, #0
 8002ec6:	9302      	str	r3, [sp, #8]
 8002ec8:	4b20      	ldr	r3, [pc, #128]	; (8002f4c <HAL_InitTick+0x8c>)
 8002eca:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8002ecc:	f042 0210 	orr.w	r2, r2, #16
 8002ed0:	641a      	str	r2, [r3, #64]	; 0x40
 8002ed2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8002ed4:	f003 0310 	and.w	r3, r3, #16
 8002ed8:	9302      	str	r3, [sp, #8]
{
 8002eda:	4605      	mov	r5, r0

  /* Get clock configuration */
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002edc:	a901      	add	r1, sp, #4
 8002ede:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8002ee0:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8002ee2:	f005 fc71 	bl	80087c8 <HAL_RCC_GetClockConfig>

  /* Get APB1 prescaler */
  uwAPB1Prescaler = clkconfig.APB1CLKDivider;
  /* Compute TIM6 clock */
  if (uwAPB1Prescaler == RCC_HCLK_DIV1)
 8002ee6:	9b06      	ldr	r3, [sp, #24]
 8002ee8:	bb4b      	cbnz	r3, 8002f3e <HAL_InitTick+0x7e>
  {
    uwTimclock = HAL_RCC_GetPCLK1Freq();
 8002eea:	f005 fc5d 	bl	80087a8 <HAL_RCC_GetPCLK1Freq>

  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8002eee:	4e18      	ldr	r6, [pc, #96]	; (8002f50 <HAL_InitTick+0x90>)
 8002ef0:	4b18      	ldr	r3, [pc, #96]	; (8002f54 <HAL_InitTick+0x94>)
 8002ef2:	6033      	str	r3, [r6, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8002ef4:	f240 33e7 	movw	r3, #999	; 0x3e7
 8002ef8:	60f3      	str	r3, [r6, #12]
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8002efa:	4b17      	ldr	r3, [pc, #92]	; (8002f58 <HAL_InitTick+0x98>)
 8002efc:	fbb0 f3f3 	udiv	r3, r0, r3
 8002f00:	3b01      	subs	r3, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8002f02:	6073      	str	r3, [r6, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;

  status = HAL_TIM_Base_Init(&htim6);
 8002f04:	4630      	mov	r0, r6
  htim6.Init.ClockDivision = 0;
 8002f06:	2300      	movs	r3, #0
 8002f08:	6133      	str	r3, [r6, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002f0a:	60b3      	str	r3, [r6, #8]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002f0c:	61b3      	str	r3, [r6, #24]
  status = HAL_TIM_Base_Init(&htim6);
 8002f0e:	f006 f9cd 	bl	80092ac <HAL_TIM_Base_Init>
  if (status == HAL_OK)
 8002f12:	4604      	mov	r4, r0
 8002f14:	b980      	cbnz	r0, 8002f38 <HAL_InitTick+0x78>
  {
    /* Start the TIM time Base generation in interrupt mode */
    status = HAL_TIM_Base_Start_IT(&htim6);
 8002f16:	4630      	mov	r0, r6
 8002f18:	f006 f882 	bl	8009020 <HAL_TIM_Base_Start_IT>
    if (status == HAL_OK)
 8002f1c:	4604      	mov	r4, r0
 8002f1e:	b958      	cbnz	r0, 8002f38 <HAL_InitTick+0x78>
    {
    /* Enable the TIM6 global Interrupt */
        HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002f20:	2036      	movs	r0, #54	; 0x36
 8002f22:	f003 fa85 	bl	8006430 <HAL_NVIC_EnableIRQ>
      /* Configure the SysTick IRQ priority */
      if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002f26:	2d0f      	cmp	r5, #15
 8002f28:	d80d      	bhi.n	8002f46 <HAL_InitTick+0x86>
      {
        /* Configure the TIM IRQ priority */
        HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority, 0U);
 8002f2a:	4622      	mov	r2, r4
 8002f2c:	4629      	mov	r1, r5
 8002f2e:	2036      	movs	r0, #54	; 0x36
 8002f30:	f003 fa4c 	bl	80063cc <HAL_NVIC_SetPriority>
        uwTickPrio = TickPriority;
 8002f34:	4b09      	ldr	r3, [pc, #36]	; (8002f5c <HAL_InitTick+0x9c>)
 8002f36:	601d      	str	r5, [r3, #0]
    }
  }

 /* Return function status */
  return status;
}
 8002f38:	4620      	mov	r0, r4
 8002f3a:	b008      	add	sp, #32
 8002f3c:	bd70      	pop	{r4, r5, r6, pc}
    uwTimclock = 2UL * HAL_RCC_GetPCLK1Freq();
 8002f3e:	f005 fc33 	bl	80087a8 <HAL_RCC_GetPCLK1Freq>
 8002f42:	0040      	lsls	r0, r0, #1
 8002f44:	e7d3      	b.n	8002eee <HAL_InitTick+0x2e>
        status = HAL_ERROR;
 8002f46:	2401      	movs	r4, #1
 8002f48:	e7f6      	b.n	8002f38 <HAL_InitTick+0x78>
 8002f4a:	bf00      	nop
 8002f4c:	40023800 	.word	0x40023800
 8002f50:	20008e00 	.word	0x20008e00
 8002f54:	40001000 	.word	0x40001000
 8002f58:	000f4240 	.word	0x000f4240
 8002f5c:	20000058 	.word	0x20000058

08002f60 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8002f60:	4770      	bx	lr

08002f62 <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002f62:	e7fe      	b.n	8002f62 <HardFault_Handler>

08002f64 <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002f64:	e7fe      	b.n	8002f64 <MemManage_Handler>

08002f66 <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002f66:	e7fe      	b.n	8002f66 <BusFault_Handler>

08002f68 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002f68:	e7fe      	b.n	8002f68 <UsageFault_Handler>

08002f6a <DebugMon_Handler>:
 8002f6a:	4770      	bx	lr

08002f6c <EXTI15_10_IRQHandler>:
void EXTI15_10_IRQHandler(void)
{
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(BUSY_Pin);
 8002f6c:	f44f 5080 	mov.w	r0, #4096	; 0x1000
 8002f70:	f004 b9fe 	b.w	8007370 <HAL_GPIO_EXTI_IRQHandler>

08002f74 <TIM6_DAC_IRQHandler>:
void TIM6_DAC_IRQHandler(void)
{
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 8002f74:	4801      	ldr	r0, [pc, #4]	; (8002f7c <TIM6_DAC_IRQHandler+0x8>)
 8002f76:	f006 b891 	b.w	800909c <HAL_TIM_IRQHandler>
 8002f7a:	bf00      	nop
 8002f7c:	20008e00 	.word	0x20008e00

08002f80 <LTDC_IRQHandler>:
  */
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */
  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8002f80:	4801      	ldr	r0, [pc, #4]	; (8002f88 <LTDC_IRQHandler+0x8>)
 8002f82:	f004 bf30 	b.w	8007de6 <HAL_LTDC_IRQHandler>
 8002f86:	bf00      	nop
 8002f88:	20008c28 	.word	0x20008c28

08002f8c <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8002f8c:	4801      	ldr	r0, [pc, #4]	; (8002f94 <DMA2D_IRQHandler+0x8>)
 8002f8e:	f003 bbb3 	b.w	80066f8 <HAL_DMA2D_IRQHandler>
 8002f92:	bf00      	nop
 8002f94:	20008b78 	.word	0x20008b78

08002f98 <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8002f98:	4801      	ldr	r0, [pc, #4]	; (8002fa0 <DSI_IRQHandler+0x8>)
 8002f9a:	f003 bdb4 	b.w	8006b06 <HAL_DSI_IRQHandler>
 8002f9e:	bf00      	nop
 8002fa0:	20008bb8 	.word	0x20008bb8

08002fa4 <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8002fa4:	2001      	movs	r0, #1
 8002fa6:	4770      	bx	lr

08002fa8 <_kill>:

int _kill(int pid, int sig)
{
 8002fa8:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002faa:	f01d fbe1 	bl	8020770 <__errno>
 8002fae:	2316      	movs	r3, #22
 8002fb0:	6003      	str	r3, [r0, #0]
	return -1;
}
 8002fb2:	f04f 30ff 	mov.w	r0, #4294967295
 8002fb6:	bd08      	pop	{r3, pc}

08002fb8 <_exit>:

void _exit (int status)
{
 8002fb8:	b508      	push	{r3, lr}
	errno = EINVAL;
 8002fba:	f01d fbd9 	bl	8020770 <__errno>
 8002fbe:	2316      	movs	r3, #22
 8002fc0:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8002fc2:	e7fe      	b.n	8002fc2 <_exit+0xa>

08002fc4 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002fc4:	b570      	push	{r4, r5, r6, lr}
 8002fc6:	460d      	mov	r5, r1
 8002fc8:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002fca:	460e      	mov	r6, r1
 8002fcc:	1b73      	subs	r3, r6, r5
 8002fce:	429c      	cmp	r4, r3
 8002fd0:	dc01      	bgt.n	8002fd6 <_read+0x12>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8002fd2:	4620      	mov	r0, r4
 8002fd4:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8002fd6:	f3af 8000 	nop.w
 8002fda:	f806 0b01 	strb.w	r0, [r6], #1
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002fde:	e7f5      	b.n	8002fcc <_read+0x8>

08002fe0 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002fe0:	b570      	push	{r4, r5, r6, lr}
 8002fe2:	460d      	mov	r5, r1
 8002fe4:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002fe6:	460e      	mov	r6, r1
 8002fe8:	1b73      	subs	r3, r6, r5
 8002fea:	429c      	cmp	r4, r3
 8002fec:	dc01      	bgt.n	8002ff2 <_write+0x12>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8002fee:	4620      	mov	r0, r4
 8002ff0:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8002ff2:	f816 0b01 	ldrb.w	r0, [r6], #1
 8002ff6:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002ffa:	e7f5      	b.n	8002fe8 <_write+0x8>

08002ffc <_close>:

int _close(int file)
{
	return -1;
}
 8002ffc:	f04f 30ff 	mov.w	r0, #4294967295
 8003000:	4770      	bx	lr

08003002 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8003002:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8003006:	604b      	str	r3, [r1, #4]
	return 0;
}
 8003008:	2000      	movs	r0, #0
 800300a:	4770      	bx	lr

0800300c <_isatty>:

int _isatty(int file)
{
	return 1;
}
 800300c:	2001      	movs	r0, #1
 800300e:	4770      	bx	lr

08003010 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8003010:	2000      	movs	r0, #0
 8003012:	4770      	bx	lr

08003014 <_sbrk>:
{
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8003014:	4a0a      	ldr	r2, [pc, #40]	; (8003040 <_sbrk+0x2c>)
 8003016:	6811      	ldr	r1, [r2, #0]
{
 8003018:	b508      	push	{r3, lr}
 800301a:	4603      	mov	r3, r0
	if (heap_end == 0)
 800301c:	b909      	cbnz	r1, 8003022 <_sbrk+0xe>
		heap_end = &end;
 800301e:	4909      	ldr	r1, [pc, #36]	; (8003044 <_sbrk+0x30>)
 8003020:	6011      	str	r1, [r2, #0]

	prev_heap_end = heap_end;
 8003022:	6810      	ldr	r0, [r2, #0]
	if (heap_end + incr > stack_ptr)
 8003024:	4669      	mov	r1, sp
 8003026:	4403      	add	r3, r0
 8003028:	428b      	cmp	r3, r1
 800302a:	d906      	bls.n	800303a <_sbrk+0x26>
	{
		errno = ENOMEM;
 800302c:	f01d fba0 	bl	8020770 <__errno>
 8003030:	230c      	movs	r3, #12
 8003032:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8003034:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8003038:	bd08      	pop	{r3, pc}
	heap_end += incr;
 800303a:	6013      	str	r3, [r2, #0]
	return (caddr_t) prev_heap_end;
 800303c:	e7fc      	b.n	8003038 <_sbrk+0x24>
 800303e:	bf00      	nop
 8003040:	20008e48 	.word	0x20008e48
 8003044:	200120f0 	.word	0x200120f0

08003048 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8003048:	4770      	bx	lr

0800304a <_ZN23ApplicationFontProviderD0Ev>:
 800304a:	b510      	push	{r4, lr}
 800304c:	2104      	movs	r1, #4
 800304e:	4604      	mov	r4, r0
 8003050:	f01d fb2e 	bl	80206b0 <_ZdlPvj>
 8003054:	4620      	mov	r0, r4
 8003056:	bd10      	pop	{r4, pc}

08003058 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8003058:	2901      	cmp	r1, #1
{
 800305a:	b508      	push	{r3, lr}
    switch (typography)
 800305c:	d006      	beq.n	800306c <_ZN23ApplicationFontProvider7getFontEt+0x14>
 800305e:	2902      	cmp	r1, #2
 8003060:	d008      	beq.n	8003074 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8003062:	b959      	cbnz	r1, 800307c <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8003064:	f001 fec8 	bl	8004df8 <_ZN17TypedTextDatabase8getFontsEv>
 8003068:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 800306a:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 800306c:	f001 fec4 	bl	8004df8 <_ZN17TypedTextDatabase8getFontsEv>
 8003070:	6840      	ldr	r0, [r0, #4]
 8003072:	e7fa      	b.n	800306a <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8003074:	f001 fec0 	bl	8004df8 <_ZN17TypedTextDatabase8getFontsEv>
 8003078:	6880      	ldr	r0, [r0, #8]
 800307a:	e7f6      	b.n	800306a <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 800307c:	2000      	movs	r0, #0
 800307e:	e7f4      	b.n	800306a <_ZN23ApplicationFontProvider7getFontEt+0x12>

08003080 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8003080:	4800      	ldr	r0, [pc, #0]	; (8003084 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8003082:	4770      	bx	lr
 8003084:	08022100 	.word	0x08022100

08003088 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8003088:	2009      	movs	r0, #9
 800308a:	4770      	bx	lr

0800308c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800308c:	b513      	push	{r0, r1, r4, lr}
 800308e:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8003090:	b151      	cbz	r1, 80030a8 <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8003092:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8003094:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8003096:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800309a:	aa01      	add	r2, sp, #4
 800309c:	689c      	ldr	r4, [r3, #8]
 800309e:	f10d 0303 	add.w	r3, sp, #3
 80030a2:	47a0      	blx	r4
        return glyph;
    }
 80030a4:	b002      	add	sp, #8
 80030a6:	bd10      	pop	{r4, pc}
            return 0;
 80030a8:	4608      	mov	r0, r1
 80030aa:	e7fb      	b.n	80030a4 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

080030ac <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 80030ac:	89c0      	ldrh	r0, [r0, #14]
 80030ae:	4770      	bx	lr

080030b0 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 80030b0:	8a00      	ldrh	r0, [r0, #16]
 80030b2:	4770      	bx	lr

080030b4 <_ZNK8touchgfx4Font11getBaselineEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
    {
        return baselineHeight;
    }
 80030b4:	88c0      	ldrh	r0, [r0, #6]
 80030b6:	4770      	bx	lr

080030b8 <_ZNK8touchgfx4Font9getHeightEv>:
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
    {
        return fontHeight;
    }
 80030b8:	8880      	ldrh	r0, [r0, #4]
 80030ba:	4770      	bx	lr

080030bc <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 80030bc:	7a80      	ldrb	r0, [r0, #10]
    }
 80030be:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 80030c2:	4770      	bx	lr

080030c4 <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 80030c4:	7a80      	ldrb	r0, [r0, #10]
    }
 80030c6:	09c0      	lsrs	r0, r0, #7
 80030c8:	4770      	bx	lr

080030ca <_ZN8touchgfx9TypedTextD1Ev>:
    }
 80030ca:	4770      	bx	lr

080030cc <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 80030cc:	b510      	push	{r4, lr}
    }
 80030ce:	2108      	movs	r1, #8
    virtual ~TypedText()
 80030d0:	4604      	mov	r4, r0
    }
 80030d2:	f01d faed 	bl	80206b0 <_ZdlPvj>
 80030d6:	4620      	mov	r0, r4
 80030d8:	bd10      	pop	{r4, pc}

080030da <_ZN8touchgfx11Application19changeToStartScreenEv>:
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
    {
    }
 80030da:	4770      	bx	lr

080030dc <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
        (void)screenId; // Unused variable
    }
 80030dc:	4770      	bx	lr

080030de <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 80030de:	f500 7398 	add.w	r3, r0, #304	; 0x130
 80030e2:	6808      	ldr	r0, [r1, #0]
 80030e4:	6849      	ldr	r1, [r1, #4]
 80030e6:	c303      	stmia	r3!, {r0, r1}
    }
 80030e8:	4770      	bx	lr

080030ea <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 80030ea:	4770      	bx	lr

080030ec <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 80030ec:	4770      	bx	lr

080030ee <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 80030ee:	6041      	str	r1, [r0, #4]
    }
 80030f0:	4770      	bx	lr

080030f2 <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 80030f2:	4770      	bx	lr

080030f4 <_ZN23FrontendApplicationBase19changeToStartScreenEv>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 80030f4:	4b06      	ldr	r3, [pc, #24]	; (8003110 <_ZN23FrontendApplicationBase19changeToStartScreenEv+0x1c>)
 80030f6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80030fa:	2300      	movs	r3, #0
 80030fc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// Startup

void FrontendApplicationBase::gotoStartupScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoStartupScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003100:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003104:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003108:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140

    virtual void changeToStartScreen()
    {
        gotoStartupScreenNoTransition();
    }
 800310c:	4770      	bx	lr
 800310e:	bf00      	nop
 8003110:	080038cd 	.word	0x080038cd

08003114 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 8003114:	2301      	movs	r3, #1
 8003116:	7203      	strb	r3, [r0, #8]
    }
 8003118:	4770      	bx	lr

0800311a <_ZN8touchgfx15BlockTransition8tearDownEv>:
        }
    }

    virtual void tearDown()
    {
    }
 800311a:	4770      	bx	lr

0800311c <_ZN8touchgfx15BlockTransition4initEv>:

    virtual void init()
    {
        Transition::init();
    }
 800311c:	4770      	bx	lr

0800311e <_ZN8touchgfx15BlockTransition10invalidateEv>:
     * Block transition does not require an invalidation. Invalidation
     * is handled by the class. Do no invalidation initially.
     */
    virtual void invalidate()
    {
    }
 800311e:	4770      	bx	lr

08003120 <_ZN8touchgfx15BlockTransitionD1Ev>:
class BlockTransition : public Transition
 8003120:	4770      	bx	lr

08003122 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8003122:	4770      	bx	lr

08003124 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 8003124:	4770      	bx	lr

08003126 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8003126:	b410      	push	{r4}
    {
        (pobject->*pmemfun)();
 8003128:	68c2      	ldr	r2, [r0, #12]
 800312a:	6841      	ldr	r1, [r0, #4]
 800312c:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800312e:	4603      	mov	r3, r0
        (pobject->*pmemfun)();
 8003130:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8003134:	07d2      	lsls	r2, r2, #31
 8003136:	bf48      	it	mi
 8003138:	590a      	ldrmi	r2, [r1, r4]
 800313a:	689b      	ldr	r3, [r3, #8]
    }
 800313c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun)();
 8003140:	bf48      	it	mi
 8003142:	58d3      	ldrmi	r3, [r2, r3]
 8003144:	4718      	bx	r3

08003146 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun != 0);
 8003146:	6843      	ldr	r3, [r0, #4]
 8003148:	b12b      	cbz	r3, 8003156 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800314a:	6883      	ldr	r3, [r0, #8]
 800314c:	b92b      	cbnz	r3, 800315a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800314e:	68c0      	ldr	r0, [r0, #12]
 8003150:	f000 0001 	and.w	r0, r0, #1
 8003154:	4770      	bx	lr
 8003156:	4618      	mov	r0, r3
 8003158:	4770      	bx	lr
 800315a:	2001      	movs	r0, #1
    }
 800315c:	4770      	bx	lr

0800315e <_ZN8touchgfx15BlockTransitionD0Ev>:
 800315e:	b510      	push	{r4, lr}
 8003160:	2114      	movs	r1, #20
 8003162:	4604      	mov	r4, r0
 8003164:	f01d faa4 	bl	80206b0 <_ZdlPvj>
 8003168:	4620      	mov	r0, r4
 800316a:	bd10      	pop	{r4, pc}

0800316c <_ZN8touchgfx12NoTransitionD0Ev>:
 800316c:	b510      	push	{r4, lr}
 800316e:	210c      	movs	r1, #12
 8003170:	4604      	mov	r4, r0
 8003172:	f01d fa9d 	bl	80206b0 <_ZdlPvj>
 8003176:	4620      	mov	r0, r4
 8003178:	bd10      	pop	{r4, pc}

0800317a <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800317a:	b510      	push	{r4, lr}
 800317c:	2110      	movs	r1, #16
 800317e:	4604      	mov	r4, r0
 8003180:	f01d fa96 	bl	80206b0 <_ZdlPvj>
 8003184:	4620      	mov	r0, r4
 8003186:	bd10      	pop	{r4, pc}

08003188 <_ZN23FrontendApplicationBaseD0Ev>:
    virtual ~FrontendApplicationBase() { }
 8003188:	b510      	push	{r4, lr}
 800318a:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 800318e:	4604      	mov	r4, r0
 8003190:	f01d fa8e 	bl	80206b0 <_ZdlPvj>
 8003194:	4620      	mov	r0, r4
 8003196:	bd10      	pop	{r4, pc}

08003198 <_ZN8touchgfx15BlockTransition15handleTickEventEv>:
    virtual void handleTickEvent()
 8003198:	b570      	push	{r4, r5, r6, lr}
 800319a:	4604      	mov	r4, r0
 800319c:	b0b2      	sub	sp, #200	; 0xc8
        const int indeces[animationSteps] = { 20, 11, 47, 14, 10, 0, 18, 28, 13, 6, 2, 41,
 800319e:	491d      	ldr	r1, [pc, #116]	; (8003214 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x7c>)
 80031a0:	22c0      	movs	r2, #192	; 0xc0
 80031a2:	a802      	add	r0, sp, #8
 80031a4:	f01d fb30 	bl	8020808 <memcpy>
        if (animationCounter >= animationSteps)
 80031a8:	7c23      	ldrb	r3, [r4, #16]
 80031aa:	2b2f      	cmp	r3, #47	; 0x2f
 80031ac:	d903      	bls.n	80031b6 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x1e>
            done = true;
 80031ae:	2301      	movs	r3, #1
 80031b0:	7223      	strb	r3, [r4, #8]
    }
 80031b2:	b032      	add	sp, #200	; 0xc8
 80031b4:	bd70      	pop	{r4, r5, r6, pc}
        if (animationCounter == 0 && HAL::USE_DOUBLE_BUFFERING)
 80031b6:	b933      	cbnz	r3, 80031c6 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x2e>
 80031b8:	4b17      	ldr	r3, [pc, #92]	; (8003218 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x80>)
 80031ba:	781b      	ldrb	r3, [r3, #0]
 80031bc:	b11b      	cbz	r3, 80031c6 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x2e>
            Application::getInstance()->copyInvalidatedAreasFromTFTToClientBuffer();
 80031be:	f00e fb3b 	bl	8011838 <_ZN8touchgfx11Application11getInstanceEv>
 80031c2:	f00e fb3f 	bl	8011844 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>
    virtual void handleTickEvent()
 80031c6:	2503      	movs	r5, #3
        while (blocks_per_tick-- > 0 && animationCounter <= animationSteps)
 80031c8:	3d01      	subs	r5, #1
 80031ca:	d0f2      	beq.n	80031b2 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x1a>
 80031cc:	7c23      	ldrb	r3, [r4, #16]
 80031ce:	2b30      	cmp	r3, #48	; 0x30
 80031d0:	d8ef      	bhi.n	80031b2 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x1a>
            const int index = indeces[animationCounter];
 80031d2:	aa32      	add	r2, sp, #200	; 0xc8
 80031d4:	eb02 0383 	add.w	r3, r2, r3, lsl #2
            const int16_t x = (index % blocksHorizontal) * blockWidth;
 80031d8:	89e6      	ldrh	r6, [r4, #14]
            const int index = indeces[animationCounter];
 80031da:	f853 3cc0 	ldr.w	r3, [r3, #-192]
            const int16_t x = (index % blocksHorizontal) * blockWidth;
 80031de:	8960      	ldrh	r0, [r4, #10]
 80031e0:	fb93 f2f6 	sdiv	r2, r3, r6
 80031e4:	fb06 3312 	mls	r3, r6, r2, r3
 80031e8:	fb13 f300 	smulbb	r3, r3, r0
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 80031ec:	f8ad 0004 	strh.w	r0, [sp, #4]
            screenContainer->invalidateRect(invRect);
 80031f0:	6860      	ldr	r0, [r4, #4]
            const int16_t y = (index / blocksHorizontal) * blockHeight;
 80031f2:	89a1      	ldrh	r1, [r4, #12]
 80031f4:	f8ad 3000 	strh.w	r3, [sp]
            screenContainer->invalidateRect(invRect);
 80031f8:	6803      	ldr	r3, [r0, #0]
 80031fa:	f8ad 1006 	strh.w	r1, [sp, #6]
            const int16_t y = (index / blocksHorizontal) * blockHeight;
 80031fe:	fb12 f201 	smulbb	r2, r2, r1
            screenContainer->invalidateRect(invRect);
 8003202:	691b      	ldr	r3, [r3, #16]
 8003204:	f8ad 2002 	strh.w	r2, [sp, #2]
 8003208:	4669      	mov	r1, sp
 800320a:	4798      	blx	r3
            animationCounter++;
 800320c:	7c23      	ldrb	r3, [r4, #16]
 800320e:	3301      	adds	r3, #1
 8003210:	7423      	strb	r3, [r4, #16]
        while (blocks_per_tick-- > 0 && animationCounter <= animationSteps)
 8003212:	e7d9      	b.n	80031c8 <_ZN8touchgfx15BlockTransition15handleTickEventEv+0x30>
 8003214:	08021884 	.word	0x08021884
 8003218:	20011e3e 	.word	0x20011e3e

0800321c <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800321c:	b508      	push	{r3, lr}
        Application::getInstance()->invalidate();
 800321e:	f00e fb0b 	bl	8011838 <_ZN8touchgfx11Application11getInstanceEv>
    }
 8003222:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
        Application::getInstance()->invalidate();
 8003226:	f00e bf77 	b.w	8012118 <_ZN8touchgfx11Application10invalidateEv>

0800322a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800322a:	b510      	push	{r4, lr}
 800322c:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800322e:	f8d0 0140 	ldr.w	r0, [r0, #320]	; 0x140
 8003232:	b158      	cbz	r0, 800324c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 8003234:	6803      	ldr	r3, [r0, #0]
 8003236:	68db      	ldr	r3, [r3, #12]
 8003238:	4798      	blx	r3
 800323a:	b138      	cbz	r0, 800324c <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 800323c:	f8d4 0140 	ldr.w	r0, [r4, #320]	; 0x140
 8003240:	6803      	ldr	r3, [r0, #0]
 8003242:	689b      	ldr	r3, [r3, #8]
 8003244:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 8003246:	2300      	movs	r3, #0
 8003248:	f8c4 3140 	str.w	r3, [r4, #320]	; 0x140
    }
 800324c:	bd10      	pop	{r4, pc}
	...

08003250 <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv>:
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoMenuScreenBlockTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotoMenuScreenBlockTransitionImpl()
{
 8003250:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
    touchgfx::makeTransition<MenuView, MenuPresenter, touchgfx::BlockTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003254:	e9d0 6955 	ldrd	r6, r9, [r0, #340]	; 0x154
{
 8003258:	4605      	mov	r5, r0
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800325a:	68b0      	ldr	r0, [r6, #8]
 800325c:	6803      	ldr	r3, [r0, #0]
 800325e:	6a1b      	ldr	r3, [r3, #32]
 8003260:	4798      	blx	r3
 8003262:	f5b0 7f9c 	cmp.w	r0, #312	; 0x138
 8003266:	d205      	bcs.n	8003274 <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x24>
 8003268:	4b50      	ldr	r3, [pc, #320]	; (80033ac <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x15c>)
 800326a:	4a51      	ldr	r2, [pc, #324]	; (80033b0 <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x160>)
 800326c:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800326e:	4851      	ldr	r0, [pc, #324]	; (80033b4 <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x164>)
 8003270:	f01d fa4c 	bl	802070c <__assert_func>
 8003274:	6870      	ldr	r0, [r6, #4]
 8003276:	6803      	ldr	r3, [r0, #0]
 8003278:	6a1b      	ldr	r3, [r3, #32]
 800327a:	4798      	blx	r3
 800327c:	280f      	cmp	r0, #15
 800327e:	d803      	bhi.n	8003288 <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x38>
 8003280:	4b4d      	ldr	r3, [pc, #308]	; (80033b8 <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x168>)
 8003282:	4a4b      	ldr	r2, [pc, #300]	; (80033b0 <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x160>)
 8003284:	21a4      	movs	r1, #164	; 0xa4
 8003286:	e7f2      	b.n	800326e <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003288:	68f0      	ldr	r0, [r6, #12]
 800328a:	6803      	ldr	r3, [r0, #0]
 800328c:	6a1b      	ldr	r3, [r3, #32]
 800328e:	4798      	blx	r3
 8003290:	2813      	cmp	r0, #19
 8003292:	d803      	bhi.n	800329c <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x4c>
 8003294:	4b49      	ldr	r3, [pc, #292]	; (80033bc <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x16c>)
 8003296:	4a46      	ldr	r2, [pc, #280]	; (80033b0 <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x160>)
 8003298:	21a5      	movs	r1, #165	; 0xa5
 800329a:	e7e8      	b.n	800326e <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 800329c:	f00e facc 	bl	8011838 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80032a0:	f8df 812c 	ldr.w	r8, [pc, #300]	; 80033d0 <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x180>

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
    {
        timerWidgets.clear();
 80032a4:	3004      	adds	r0, #4
 80032a6:	f00e fb14 	bl	80118d2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80032aa:	f8d8 0000 	ldr.w	r0, [r8]
 80032ae:	b110      	cbz	r0, 80032b6 <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80032b0:	6803      	ldr	r3, [r0, #0]
 80032b2:	68db      	ldr	r3, [r3, #12]
 80032b4:	4798      	blx	r3
    if (*currentTrans)
 80032b6:	f8d8 0000 	ldr.w	r0, [r8]
 80032ba:	b110      	cbz	r0, 80032c2 <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80032bc:	6803      	ldr	r3, [r0, #0]
 80032be:	681b      	ldr	r3, [r3, #0]
 80032c0:	4798      	blx	r3
    if (*currentScreen)
 80032c2:	4f3f      	ldr	r7, [pc, #252]	; (80033c0 <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x170>)
 80032c4:	6838      	ldr	r0, [r7, #0]
 80032c6:	b110      	cbz	r0, 80032ce <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x7e>
        (*currentScreen)->tearDownScreen();
 80032c8:	6803      	ldr	r3, [r0, #0]
 80032ca:	695b      	ldr	r3, [r3, #20]
 80032cc:	4798      	blx	r3
    if (*currentPresenter)
 80032ce:	f8d5 013c 	ldr.w	r0, [r5, #316]	; 0x13c
 80032d2:	b110      	cbz	r0, 80032da <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x8a>
        (*currentPresenter)->deactivate();
 80032d4:	6803      	ldr	r3, [r0, #0]
 80032d6:	685b      	ldr	r3, [r3, #4]
 80032d8:	4798      	blx	r3
    if (*currentScreen)
 80032da:	6838      	ldr	r0, [r7, #0]
 80032dc:	b110      	cbz	r0, 80032e4 <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x94>
        (*currentScreen)->~Screen();
 80032de:	6803      	ldr	r3, [r0, #0]
 80032e0:	681b      	ldr	r3, [r3, #0]
 80032e2:	4798      	blx	r3
    if (*currentPresenter)
 80032e4:	f8d5 013c 	ldr.w	r0, [r5, #316]	; 0x13c
 80032e8:	b110      	cbz	r0, 80032f0 <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0xa0>
        (*currentPresenter)->~Presenter();
 80032ea:	6803      	ldr	r3, [r0, #0]
 80032ec:	689b      	ldr	r3, [r3, #8]
 80032ee:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80032f0:	68f0      	ldr	r0, [r6, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80032f2:	6803      	ldr	r3, [r0, #0]
 80032f4:	2100      	movs	r1, #0
 80032f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80032f8:	4798      	blx	r3
        : screenContainer(0), done(false)
 80032fa:	2300      	movs	r3, #0
 80032fc:	6043      	str	r3, [r0, #4]
 80032fe:	7203      	strb	r3, [r0, #8]
          animationCounter(0)
 8003300:	7403      	strb	r3, [r0, #16]
        if (HAL::DISPLAY_WIDTH > HAL::DISPLAY_HEIGHT)
 8003302:	4b30      	ldr	r3, [pc, #192]	; (80033c4 <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x174>)
          animationCounter(0)
 8003304:	4a30      	ldr	r2, [pc, #192]	; (80033c8 <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x178>)
 8003306:	6002      	str	r2, [r0, #0]
        if (HAL::DISPLAY_WIDTH > HAL::DISPLAY_HEIGHT)
 8003308:	881a      	ldrh	r2, [r3, #0]
 800330a:	4b30      	ldr	r3, [pc, #192]	; (80033cc <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x17c>)
 800330c:	881b      	ldrh	r3, [r3, #0]
 800330e:	429a      	cmp	r2, r3
 8003310:	4604      	mov	r4, r0
 8003312:	d93f      	bls.n	8003394 <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x144>
            blockWidth = (HAL::DISPLAY_WIDTH + 7) / 8;
 8003314:	3207      	adds	r2, #7
 8003316:	10d2      	asrs	r2, r2, #3
 8003318:	8142      	strh	r2, [r0, #10]
            blockHeight = (HAL::DISPLAY_HEIGHT + 5) / 6;
 800331a:	3305      	adds	r3, #5
 800331c:	2206      	movs	r2, #6
 800331e:	fbb3 f3f2 	udiv	r3, r3, r2
 8003322:	8183      	strh	r3, [r0, #12]
            blocksHorizontal = 8;
 8003324:	2308      	movs	r3, #8
 8003326:	81c3      	strh	r3, [r0, #14]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8003328:	68b0      	ldr	r0, [r6, #8]
 800332a:	6803      	ldr	r3, [r0, #0]
 800332c:	2100      	movs	r1, #0
 800332e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003330:	4798      	blx	r3
 8003332:	4682      	mov	sl, r0
 8003334:	f001 ff9e 	bl	8005274 <_ZN8MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8003338:	6870      	ldr	r0, [r6, #4]
 800333a:	6803      	ldr	r3, [r0, #0]
 800333c:	2100      	movs	r1, #0
 800333e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003340:	4798      	blx	r3
 8003342:	4651      	mov	r1, sl
 8003344:	4606      	mov	r6, r0
 8003346:	f001 ff6f 	bl	8005228 <_ZN13MenuPresenterC1ER8MenuView>
    *currentTrans = newTransition;
 800334a:	f8c8 4000 	str.w	r4, [r8]
    *currentPresenter = newPresenter;
 800334e:	f8c5 613c 	str.w	r6, [r5, #316]	; 0x13c
    *currentScreen = newScreen;
 8003352:	f8c7 a000 	str.w	sl, [r7]
    model->bind(newPresenter);
 8003356:	b33e      	cbz	r6, 80033a8 <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x158>
 8003358:	1d33      	adds	r3, r6, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 800335a:	f8c9 3000 	str.w	r3, [r9]
    newScreen->setupScreen();
 800335e:	f8da 3000 	ldr.w	r3, [sl]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8003362:	f8c6 9008 	str.w	r9, [r6, #8]
 8003366:	4650      	mov	r0, sl
 8003368:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
    {
        presenter = &newPresenter;
 800336a:	f8ca 603c 	str.w	r6, [sl, #60]	; 0x3c
 800336e:	4798      	blx	r3
    newPresenter->activate();
 8003370:	6833      	ldr	r3, [r6, #0]
 8003372:	4630      	mov	r0, r6
 8003374:	681b      	ldr	r3, [r3, #0]
 8003376:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003378:	4621      	mov	r1, r4
 800337a:	4650      	mov	r0, sl
 800337c:	f010 f808 	bl	8013390 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003380:	6823      	ldr	r3, [r4, #0]
 8003382:	4620      	mov	r0, r4
 8003384:	691b      	ldr	r3, [r3, #16]
 8003386:	4798      	blx	r3
    newTransition->invalidate();
 8003388:	6823      	ldr	r3, [r4, #0]
 800338a:	4620      	mov	r0, r4
 800338c:	695b      	ldr	r3, [r3, #20]
}
 800338e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8003392:	4718      	bx	r3
            blockHeight = (HAL::DISPLAY_HEIGHT + 7) / 8;
 8003394:	3307      	adds	r3, #7
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 8003396:	2106      	movs	r1, #6
            blockHeight = (HAL::DISPLAY_HEIGHT + 7) / 8;
 8003398:	10db      	asrs	r3, r3, #3
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 800339a:	3205      	adds	r2, #5
            blockHeight = (HAL::DISPLAY_HEIGHT + 7) / 8;
 800339c:	8183      	strh	r3, [r0, #12]
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 800339e:	fbb2 f2f1 	udiv	r2, r2, r1
            blocksHorizontal = 6;
 80033a2:	81c1      	strh	r1, [r0, #14]
            blockWidth = (HAL::DISPLAY_WIDTH + 5) / 6;
 80033a4:	8142      	strh	r2, [r0, #10]
            blocksHorizontal = 6;
 80033a6:	e7bf      	b.n	8003328 <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0xd8>
    model->bind(newPresenter);
 80033a8:	4633      	mov	r3, r6
 80033aa:	e7d6      	b.n	800335a <_ZN23FrontendApplicationBase33gotoMenuScreenBlockTransitionImplEv+0x10a>
 80033ac:	080221c4 	.word	0x080221c4
 80033b0:	08022252 	.word	0x08022252
 80033b4:	08022353 	.word	0x08022353
 80033b8:	0802239a 	.word	0x0802239a
 80033bc:	0802243d 	.word	0x0802243d
 80033c0:	20011e84 	.word	0x20011e84
 80033c4:	20011e34 	.word	0x20011e34
 80033c8:	08022988 	.word	0x08022988
 80033cc:	20011e36 	.word	0x20011e36
 80033d0:	20011e88 	.word	0x20011e88

080033d4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80033d4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80033d6:	4604      	mov	r4, r0
 80033d8:	4617      	mov	r7, r2
 80033da:	460e      	mov	r6, r1
          pendingScreenTransitionCallback(0)
 80033dc:	f00e fb16 	bl	8011a0c <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80033e0:	4b10      	ldr	r3, [pc, #64]	; (8003424 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
          pendingScreenTransitionCallback(0)
 80033e2:	2500      	movs	r5, #0
      model(m)
 80033e4:	e9c4 7655 	strd	r7, r6, [r4, #340]	; 0x154
        return instance;
 80033e8:	4e0f      	ldr	r6, [pc, #60]	; (8003428 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
        instance = this;
 80033ea:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun(0)
 80033ec:	e9c4 5553 	strd	r5, r5, [r4, #332]	; 0x14c
 80033f0:	4b0e      	ldr	r3, [pc, #56]	; (800342c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x58>)
 80033f2:	6830      	ldr	r0, [r6, #0]
 80033f4:	6023      	str	r3, [r4, #0]
 80033f6:	4b0e      	ldr	r3, [pc, #56]	; (8003430 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x5c>)
 80033f8:	e9c4 3551 	strd	r3, r5, [r4, #324]	; 0x144
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80033fc:	6803      	ldr	r3, [r0, #0]
 80033fe:	4629      	mov	r1, r5
 8003400:	689b      	ldr	r3, [r3, #8]
          pendingScreenTransitionCallback(0)
 8003402:	e9c4 554f 	strd	r5, r5, [r4, #316]	; 0x13c
 8003406:	4798      	blx	r3
    touchgfx::Texts::setLanguage(GB);
 8003408:	4628      	mov	r0, r5
 800340a:	f001 fca9 	bl	8004d60 <_ZN8touchgfx5Texts11setLanguageEt>
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 800340e:	6833      	ldr	r3, [r6, #0]
 8003410:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8003414:	b10a      	cbz	r2, 800341a <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x46>
 8003416:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8003418:	b900      	cbnz	r0, 800341c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>
        return instance->lcdRef;
 800341a:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 800341c:	f016 fa2d 	bl	801987a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8003420:	4620      	mov	r0, r4
 8003422:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8003424:	20011e94 	.word	0x20011e94
 8003428:	20011e40 	.word	0x20011e40
 800342c:	08022918 	.word	0x08022918
 8003430:	08022900 	.word	0x08022900

08003434 <_ZN23FrontendApplicationBase29gotoStartupScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8003434:	4b06      	ldr	r3, [pc, #24]	; (8003450 <_ZN23FrontendApplicationBase29gotoStartupScreenNoTransitionEv+0x1c>)
 8003436:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800343a:	2300      	movs	r3, #0
 800343c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003440:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003444:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003448:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800344c:	4770      	bx	lr
 800344e:	bf00      	nop
 8003450:	080038cd 	.word	0x080038cd

08003454 <_ZN23FrontendApplicationBase29gotoMenuScreenBlockTransitionEv>:
 8003454:	4b06      	ldr	r3, [pc, #24]	; (8003470 <_ZN23FrontendApplicationBase29gotoMenuScreenBlockTransitionEv+0x1c>)
 8003456:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800345a:	2300      	movs	r3, #0
 800345c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
    pendingScreenTransitionCallback = &transitionCallback;
 8003460:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003464:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003468:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800346c:	4770      	bx	lr
 800346e:	bf00      	nop
 8003470:	08003251 	.word	0x08003251

08003474 <_ZN23FrontendApplicationBase26gotoMenuScreenNoTransitionEv>:
 8003474:	4b06      	ldr	r3, [pc, #24]	; (8003490 <_ZN23FrontendApplicationBase26gotoMenuScreenNoTransitionEv+0x1c>)
 8003476:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800347a:	2300      	movs	r3, #0
 800347c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150

void FrontendApplicationBase::gotoMenuScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoMenuScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8003480:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 8003484:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 8003488:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 800348c:	4770      	bx	lr
 800348e:	bf00      	nop
 8003490:	0800377d 	.word	0x0800377d

08003494 <_ZN23FrontendApplicationBase35gotoPulseSpectrumScreenNoTransitionEv>:
 8003494:	4b06      	ldr	r3, [pc, #24]	; (80034b0 <_ZN23FrontendApplicationBase35gotoPulseSpectrumScreenNoTransitionEv+0x1c>)
 8003496:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 800349a:	2300      	movs	r3, #0
 800349c:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// PulseSpectrum

void FrontendApplicationBase::gotoPulseSpectrumScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoPulseSpectrumScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80034a0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80034a4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80034a8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80034ac:	4770      	bx	lr
 80034ae:	bf00      	nop
 80034b0:	0800362d 	.word	0x0800362d

080034b4 <_ZN23FrontendApplicationBase30gotopwmSetupScreenNoTransitionEv>:
 80034b4:	4b06      	ldr	r3, [pc, #24]	; (80034d0 <_ZN23FrontendApplicationBase30gotopwmSetupScreenNoTransitionEv+0x1c>)
 80034b6:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
 80034ba:	2300      	movs	r3, #0
 80034bc:	f8c0 3150 	str.w	r3, [r0, #336]	; 0x150
// pwmSetup

void FrontendApplicationBase::gotopwmSetupScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotopwmSetupScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 80034c0:	f500 73a2 	add.w	r3, r0, #324	; 0x144
 80034c4:	f8c0 0148 	str.w	r0, [r0, #328]	; 0x148
 80034c8:	f8c0 3140 	str.w	r3, [r0, #320]	; 0x140
}
 80034cc:	4770      	bx	lr
 80034ce:	bf00      	nop
 80034d0:	080034dd 	.word	0x080034dd

080034d4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
 80034d4:	6803      	ldr	r3, [r0, #0]
 80034d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80034d8:	4718      	bx	r3
	...

080034dc <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotopwmSetupScreenNoTransitionImpl()
{
 80034dc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<pwmSetupView, pwmSetupPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80034e0:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80034e4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80034e6:	68a8      	ldr	r0, [r5, #8]
 80034e8:	6803      	ldr	r3, [r0, #0]
 80034ea:	6a1b      	ldr	r3, [r3, #32]
 80034ec:	4798      	blx	r3
 80034ee:	f5b0 7f35 	cmp.w	r0, #724	; 0x2d4
 80034f2:	d205      	bcs.n	8003500 <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0x24>
 80034f4:	4b45      	ldr	r3, [pc, #276]	; (800360c <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0x130>)
 80034f6:	4a46      	ldr	r2, [pc, #280]	; (8003610 <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0x134>)
 80034f8:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80034fa:	4846      	ldr	r0, [pc, #280]	; (8003614 <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0x138>)
 80034fc:	f01d f906 	bl	802070c <__assert_func>
 8003500:	6868      	ldr	r0, [r5, #4]
 8003502:	6803      	ldr	r3, [r0, #0]
 8003504:	6a1b      	ldr	r3, [r3, #32]
 8003506:	4798      	blx	r3
 8003508:	280f      	cmp	r0, #15
 800350a:	d803      	bhi.n	8003514 <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0x38>
 800350c:	4b42      	ldr	r3, [pc, #264]	; (8003618 <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0x13c>)
 800350e:	4a40      	ldr	r2, [pc, #256]	; (8003610 <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0x134>)
 8003510:	21a4      	movs	r1, #164	; 0xa4
 8003512:	e7f2      	b.n	80034fa <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003514:	68e8      	ldr	r0, [r5, #12]
 8003516:	6803      	ldr	r3, [r0, #0]
 8003518:	6a1b      	ldr	r3, [r3, #32]
 800351a:	4798      	blx	r3
 800351c:	280b      	cmp	r0, #11
 800351e:	d803      	bhi.n	8003528 <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0x4c>
 8003520:	4b3e      	ldr	r3, [pc, #248]	; (800361c <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0x140>)
 8003522:	4a3b      	ldr	r2, [pc, #236]	; (8003610 <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0x134>)
 8003524:	21a5      	movs	r1, #165	; 0xa5
 8003526:	e7e8      	b.n	80034fa <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 8003528:	f00e f986 	bl	8011838 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800352c:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 8003624 <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0x148>
 8003530:	3004      	adds	r0, #4
 8003532:	f00e f9ce 	bl	80118d2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003536:	f8d9 0000 	ldr.w	r0, [r9]
 800353a:	b110      	cbz	r0, 8003542 <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 800353c:	6803      	ldr	r3, [r0, #0]
 800353e:	68db      	ldr	r3, [r3, #12]
 8003540:	4798      	blx	r3
    if (*currentTrans)
 8003542:	f8d9 0000 	ldr.w	r0, [r9]
 8003546:	b110      	cbz	r0, 800354e <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 8003548:	6803      	ldr	r3, [r0, #0]
 800354a:	681b      	ldr	r3, [r3, #0]
 800354c:	4798      	blx	r3
    if (*currentScreen)
 800354e:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 8003628 <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0x14c>
 8003552:	f8d8 0000 	ldr.w	r0, [r8]
 8003556:	b110      	cbz	r0, 800355e <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 8003558:	6803      	ldr	r3, [r0, #0]
 800355a:	695b      	ldr	r3, [r3, #20]
 800355c:	4798      	blx	r3
    if (*currentPresenter)
 800355e:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003562:	b110      	cbz	r0, 800356a <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003564:	6803      	ldr	r3, [r0, #0]
 8003566:	685b      	ldr	r3, [r3, #4]
 8003568:	4798      	blx	r3
    if (*currentScreen)
 800356a:	f8d8 0000 	ldr.w	r0, [r8]
 800356e:	b110      	cbz	r0, 8003576 <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003570:	6803      	ldr	r3, [r0, #0]
 8003572:	681b      	ldr	r3, [r3, #0]
 8003574:	4798      	blx	r3
    if (*currentPresenter)
 8003576:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800357a:	b110      	cbz	r0, 8003582 <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800357c:	6803      	ldr	r3, [r0, #0]
 800357e:	689b      	ldr	r3, [r3, #8]
 8003580:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003582:	68e8      	ldr	r0, [r5, #12]
 8003584:	2100      	movs	r1, #0
 8003586:	f7ff ffa5 	bl	80034d4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800358a:	f04f 0b00 	mov.w	fp, #0
 800358e:	4b24      	ldr	r3, [pc, #144]	; (8003620 <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0x144>)
 8003590:	6003      	str	r3, [r0, #0]
 8003592:	4604      	mov	r4, r0
 8003594:	f8c0 b004 	str.w	fp, [r0, #4]
 8003598:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800359c:	68a8      	ldr	r0, [r5, #8]
 800359e:	6803      	ldr	r3, [r0, #0]
 80035a0:	4659      	mov	r1, fp
 80035a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035a4:	4798      	blx	r3
 80035a6:	4606      	mov	r6, r0
 80035a8:	f001 ffb4 	bl	8005514 <_ZN12pwmSetupViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80035ac:	6868      	ldr	r0, [r5, #4]
 80035ae:	6803      	ldr	r3, [r0, #0]
 80035b0:	4659      	mov	r1, fp
 80035b2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80035b4:	4798      	blx	r3
 80035b6:	4631      	mov	r1, r6
 80035b8:	4605      	mov	r5, r0
 80035ba:	f001 ff73 	bl	80054a4 <_ZN17pwmSetupPresenterC1ER12pwmSetupView>
    *currentTrans = newTransition;
 80035be:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80035c2:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80035c6:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80035ca:	b1e5      	cbz	r5, 8003606 <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0x12a>
 80035cc:	1d2b      	adds	r3, r5, #4
 80035ce:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80035d2:	6833      	ldr	r3, [r6, #0]
 80035d4:	f8c5 a008 	str.w	sl, [r5, #8]
 80035d8:	4630      	mov	r0, r6
 80035da:	68db      	ldr	r3, [r3, #12]
 80035dc:	63f5      	str	r5, [r6, #60]	; 0x3c
 80035de:	4798      	blx	r3
    newPresenter->activate();
 80035e0:	682b      	ldr	r3, [r5, #0]
 80035e2:	4628      	mov	r0, r5
 80035e4:	681b      	ldr	r3, [r3, #0]
 80035e6:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80035e8:	4621      	mov	r1, r4
 80035ea:	4630      	mov	r0, r6
 80035ec:	f00f fed0 	bl	8013390 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80035f0:	6823      	ldr	r3, [r4, #0]
 80035f2:	4620      	mov	r0, r4
 80035f4:	691b      	ldr	r3, [r3, #16]
 80035f6:	4798      	blx	r3
    newTransition->invalidate();
 80035f8:	6823      	ldr	r3, [r4, #0]
 80035fa:	695b      	ldr	r3, [r3, #20]
 80035fc:	4620      	mov	r0, r4
}
 80035fe:	b001      	add	sp, #4
 8003600:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003604:	4718      	bx	r3
    model->bind(newPresenter);
 8003606:	462b      	mov	r3, r5
 8003608:	e7e1      	b.n	80035ce <_ZN23FrontendApplicationBase34gotopwmSetupScreenNoTransitionImplEv+0xf2>
 800360a:	bf00      	nop
 800360c:	080221c4 	.word	0x080221c4
 8003610:	080224e0 	.word	0x080224e0
 8003614:	08022353 	.word	0x08022353
 8003618:	0802239a 	.word	0x0802239a
 800361c:	0802243d 	.word	0x0802243d
 8003620:	08022964 	.word	0x08022964
 8003624:	20011e88 	.word	0x20011e88
 8003628:	20011e84 	.word	0x20011e84

0800362c <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv>:
{
 800362c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<PulseSpectrumView, PulseSpectrumPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003630:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8003634:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003636:	68a8      	ldr	r0, [r5, #8]
 8003638:	6803      	ldr	r3, [r0, #0]
 800363a:	6a1b      	ldr	r3, [r3, #32]
 800363c:	4798      	blx	r3
 800363e:	f246 231f 	movw	r3, #25119	; 0x621f
 8003642:	4298      	cmp	r0, r3
 8003644:	d805      	bhi.n	8003652 <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0x26>
 8003646:	4b45      	ldr	r3, [pc, #276]	; (800375c <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0x130>)
 8003648:	4a45      	ldr	r2, [pc, #276]	; (8003760 <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0x134>)
 800364a:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800364c:	4845      	ldr	r0, [pc, #276]	; (8003764 <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0x138>)
 800364e:	f01d f85d 	bl	802070c <__assert_func>
 8003652:	6868      	ldr	r0, [r5, #4]
 8003654:	6803      	ldr	r3, [r0, #0]
 8003656:	6a1b      	ldr	r3, [r3, #32]
 8003658:	4798      	blx	r3
 800365a:	280f      	cmp	r0, #15
 800365c:	d803      	bhi.n	8003666 <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0x3a>
 800365e:	4b42      	ldr	r3, [pc, #264]	; (8003768 <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0x13c>)
 8003660:	4a3f      	ldr	r2, [pc, #252]	; (8003760 <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0x134>)
 8003662:	21a4      	movs	r1, #164	; 0xa4
 8003664:	e7f2      	b.n	800364c <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0x20>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003666:	68e8      	ldr	r0, [r5, #12]
 8003668:	6803      	ldr	r3, [r0, #0]
 800366a:	6a1b      	ldr	r3, [r3, #32]
 800366c:	4798      	blx	r3
 800366e:	280b      	cmp	r0, #11
 8003670:	d803      	bhi.n	800367a <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0x4e>
 8003672:	4b3e      	ldr	r3, [pc, #248]	; (800376c <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0x140>)
 8003674:	4a3a      	ldr	r2, [pc, #232]	; (8003760 <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0x134>)
 8003676:	21a5      	movs	r1, #165	; 0xa5
 8003678:	e7e8      	b.n	800364c <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0x20>
    Application::getInstance()->clearAllTimerWidgets();
 800367a:	f00e f8dd 	bl	8011838 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800367e:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 8003774 <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0x148>
 8003682:	3004      	adds	r0, #4
 8003684:	f00e f925 	bl	80118d2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003688:	f8d9 0000 	ldr.w	r0, [r9]
 800368c:	b110      	cbz	r0, 8003694 <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0x68>
        (*currentTrans)->tearDown();
 800368e:	6803      	ldr	r3, [r0, #0]
 8003690:	68db      	ldr	r3, [r3, #12]
 8003692:	4798      	blx	r3
    if (*currentTrans)
 8003694:	f8d9 0000 	ldr.w	r0, [r9]
 8003698:	b110      	cbz	r0, 80036a0 <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0x74>
        (*currentTrans)->~Transition();
 800369a:	6803      	ldr	r3, [r0, #0]
 800369c:	681b      	ldr	r3, [r3, #0]
 800369e:	4798      	blx	r3
    if (*currentScreen)
 80036a0:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8003778 <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0x14c>
 80036a4:	f8d8 0000 	ldr.w	r0, [r8]
 80036a8:	b110      	cbz	r0, 80036b0 <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0x84>
        (*currentScreen)->tearDownScreen();
 80036aa:	6803      	ldr	r3, [r0, #0]
 80036ac:	695b      	ldr	r3, [r3, #20]
 80036ae:	4798      	blx	r3
    if (*currentPresenter)
 80036b0:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80036b4:	b110      	cbz	r0, 80036bc <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0x90>
        (*currentPresenter)->deactivate();
 80036b6:	6803      	ldr	r3, [r0, #0]
 80036b8:	685b      	ldr	r3, [r3, #4]
 80036ba:	4798      	blx	r3
    if (*currentScreen)
 80036bc:	f8d8 0000 	ldr.w	r0, [r8]
 80036c0:	b110      	cbz	r0, 80036c8 <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0x9c>
        (*currentScreen)->~Screen();
 80036c2:	6803      	ldr	r3, [r0, #0]
 80036c4:	681b      	ldr	r3, [r3, #0]
 80036c6:	4798      	blx	r3
    if (*currentPresenter)
 80036c8:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 80036cc:	b110      	cbz	r0, 80036d4 <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0xa8>
        (*currentPresenter)->~Presenter();
 80036ce:	6803      	ldr	r3, [r0, #0]
 80036d0:	689b      	ldr	r3, [r3, #8]
 80036d2:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80036d4:	68e8      	ldr	r0, [r5, #12]
 80036d6:	2100      	movs	r1, #0
 80036d8:	f7ff fefc 	bl	80034d4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80036dc:	f04f 0b00 	mov.w	fp, #0
 80036e0:	4b23      	ldr	r3, [pc, #140]	; (8003770 <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0x144>)
 80036e2:	6003      	str	r3, [r0, #0]
 80036e4:	4604      	mov	r4, r0
 80036e6:	f8c0 b004 	str.w	fp, [r0, #4]
 80036ea:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80036ee:	68a8      	ldr	r0, [r5, #8]
 80036f0:	6803      	ldr	r3, [r0, #0]
 80036f2:	4659      	mov	r1, fp
 80036f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80036f6:	4798      	blx	r3
 80036f8:	4606      	mov	r6, r0
 80036fa:	f001 fe3d 	bl	8005378 <_ZN17PulseSpectrumViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 80036fe:	6868      	ldr	r0, [r5, #4]
 8003700:	6803      	ldr	r3, [r0, #0]
 8003702:	4659      	mov	r1, fp
 8003704:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003706:	4798      	blx	r3
 8003708:	4631      	mov	r1, r6
 800370a:	4605      	mov	r5, r0
 800370c:	f001 fe0e 	bl	800532c <_ZN22PulseSpectrumPresenterC1ER17PulseSpectrumView>
    *currentTrans = newTransition;
 8003710:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003714:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003718:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800371c:	b1e5      	cbz	r5, 8003758 <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0x12c>
 800371e:	1d2b      	adds	r3, r5, #4
 8003720:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003724:	6833      	ldr	r3, [r6, #0]
 8003726:	f8c5 a008 	str.w	sl, [r5, #8]
 800372a:	4630      	mov	r0, r6
 800372c:	68db      	ldr	r3, [r3, #12]
 800372e:	63f5      	str	r5, [r6, #60]	; 0x3c
 8003730:	4798      	blx	r3
    newPresenter->activate();
 8003732:	682b      	ldr	r3, [r5, #0]
 8003734:	4628      	mov	r0, r5
 8003736:	681b      	ldr	r3, [r3, #0]
 8003738:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800373a:	4621      	mov	r1, r4
 800373c:	4630      	mov	r0, r6
 800373e:	f00f fe27 	bl	8013390 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003742:	6823      	ldr	r3, [r4, #0]
 8003744:	4620      	mov	r0, r4
 8003746:	691b      	ldr	r3, [r3, #16]
 8003748:	4798      	blx	r3
    newTransition->invalidate();
 800374a:	6823      	ldr	r3, [r4, #0]
 800374c:	695b      	ldr	r3, [r3, #20]
 800374e:	4620      	mov	r0, r4
}
 8003750:	b001      	add	sp, #4
 8003752:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003756:	4718      	bx	r3
    model->bind(newPresenter);
 8003758:	462b      	mov	r3, r5
 800375a:	e7e1      	b.n	8003720 <_ZN23FrontendApplicationBase39gotoPulseSpectrumScreenNoTransitionImplEv+0xf4>
 800375c:	080221c4 	.word	0x080221c4
 8003760:	080225e6 	.word	0x080225e6
 8003764:	08022353 	.word	0x08022353
 8003768:	0802239a 	.word	0x0802239a
 800376c:	0802243d 	.word	0x0802243d
 8003770:	08022964 	.word	0x08022964
 8003774:	20011e88 	.word	0x20011e88
 8003778:	20011e84 	.word	0x20011e84

0800377c <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv>:
{
 800377c:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<MenuView, MenuPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8003780:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 8003784:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8003786:	68a8      	ldr	r0, [r5, #8]
 8003788:	6803      	ldr	r3, [r0, #0]
 800378a:	6a1b      	ldr	r3, [r3, #32]
 800378c:	4798      	blx	r3
 800378e:	f5b0 7f9c 	cmp.w	r0, #312	; 0x138
 8003792:	d205      	bcs.n	80037a0 <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0x24>
 8003794:	4b45      	ldr	r3, [pc, #276]	; (80038ac <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0x130>)
 8003796:	4a46      	ldr	r2, [pc, #280]	; (80038b0 <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0x134>)
 8003798:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800379a:	4846      	ldr	r0, [pc, #280]	; (80038b4 <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0x138>)
 800379c:	f01c ffb6 	bl	802070c <__assert_func>
 80037a0:	6868      	ldr	r0, [r5, #4]
 80037a2:	6803      	ldr	r3, [r0, #0]
 80037a4:	6a1b      	ldr	r3, [r3, #32]
 80037a6:	4798      	blx	r3
 80037a8:	280f      	cmp	r0, #15
 80037aa:	d803      	bhi.n	80037b4 <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0x38>
 80037ac:	4b42      	ldr	r3, [pc, #264]	; (80038b8 <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0x13c>)
 80037ae:	4a40      	ldr	r2, [pc, #256]	; (80038b0 <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0x134>)
 80037b0:	21a4      	movs	r1, #164	; 0xa4
 80037b2:	e7f2      	b.n	800379a <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0x1e>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 80037b4:	68e8      	ldr	r0, [r5, #12]
 80037b6:	6803      	ldr	r3, [r0, #0]
 80037b8:	6a1b      	ldr	r3, [r3, #32]
 80037ba:	4798      	blx	r3
 80037bc:	280b      	cmp	r0, #11
 80037be:	d803      	bhi.n	80037c8 <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0x4c>
 80037c0:	4b3e      	ldr	r3, [pc, #248]	; (80038bc <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0x140>)
 80037c2:	4a3b      	ldr	r2, [pc, #236]	; (80038b0 <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0x134>)
 80037c4:	21a5      	movs	r1, #165	; 0xa5
 80037c6:	e7e8      	b.n	800379a <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0x1e>
    Application::getInstance()->clearAllTimerWidgets();
 80037c8:	f00e f836 	bl	8011838 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 80037cc:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 80038c4 <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0x148>
 80037d0:	3004      	adds	r0, #4
 80037d2:	f00e f87e 	bl	80118d2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80037d6:	f8d9 0000 	ldr.w	r0, [r9]
 80037da:	b110      	cbz	r0, 80037e2 <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0x66>
        (*currentTrans)->tearDown();
 80037dc:	6803      	ldr	r3, [r0, #0]
 80037de:	68db      	ldr	r3, [r3, #12]
 80037e0:	4798      	blx	r3
    if (*currentTrans)
 80037e2:	f8d9 0000 	ldr.w	r0, [r9]
 80037e6:	b110      	cbz	r0, 80037ee <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0x72>
        (*currentTrans)->~Transition();
 80037e8:	6803      	ldr	r3, [r0, #0]
 80037ea:	681b      	ldr	r3, [r3, #0]
 80037ec:	4798      	blx	r3
    if (*currentScreen)
 80037ee:	f8df 80d8 	ldr.w	r8, [pc, #216]	; 80038c8 <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0x14c>
 80037f2:	f8d8 0000 	ldr.w	r0, [r8]
 80037f6:	b110      	cbz	r0, 80037fe <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0x82>
        (*currentScreen)->tearDownScreen();
 80037f8:	6803      	ldr	r3, [r0, #0]
 80037fa:	695b      	ldr	r3, [r3, #20]
 80037fc:	4798      	blx	r3
    if (*currentPresenter)
 80037fe:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003802:	b110      	cbz	r0, 800380a <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0x8e>
        (*currentPresenter)->deactivate();
 8003804:	6803      	ldr	r3, [r0, #0]
 8003806:	685b      	ldr	r3, [r3, #4]
 8003808:	4798      	blx	r3
    if (*currentScreen)
 800380a:	f8d8 0000 	ldr.w	r0, [r8]
 800380e:	b110      	cbz	r0, 8003816 <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0x9a>
        (*currentScreen)->~Screen();
 8003810:	6803      	ldr	r3, [r0, #0]
 8003812:	681b      	ldr	r3, [r3, #0]
 8003814:	4798      	blx	r3
    if (*currentPresenter)
 8003816:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 800381a:	b110      	cbz	r0, 8003822 <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0xa6>
        (*currentPresenter)->~Presenter();
 800381c:	6803      	ldr	r3, [r0, #0]
 800381e:	689b      	ldr	r3, [r3, #8]
 8003820:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003822:	68e8      	ldr	r0, [r5, #12]
 8003824:	2100      	movs	r1, #0
 8003826:	f7ff fe55 	bl	80034d4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800382a:	f04f 0b00 	mov.w	fp, #0
 800382e:	4b24      	ldr	r3, [pc, #144]	; (80038c0 <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0x144>)
 8003830:	6003      	str	r3, [r0, #0]
 8003832:	4604      	mov	r4, r0
 8003834:	f8c0 b004 	str.w	fp, [r0, #4]
 8003838:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800383c:	68a8      	ldr	r0, [r5, #8]
 800383e:	6803      	ldr	r3, [r0, #0]
 8003840:	4659      	mov	r1, fp
 8003842:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003844:	4798      	blx	r3
 8003846:	4606      	mov	r6, r0
 8003848:	f001 fd14 	bl	8005274 <_ZN8MenuViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800384c:	6868      	ldr	r0, [r5, #4]
 800384e:	6803      	ldr	r3, [r0, #0]
 8003850:	4659      	mov	r1, fp
 8003852:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003854:	4798      	blx	r3
 8003856:	4631      	mov	r1, r6
 8003858:	4605      	mov	r5, r0
 800385a:	f001 fce5 	bl	8005228 <_ZN13MenuPresenterC1ER8MenuView>
    *currentTrans = newTransition;
 800385e:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 8003862:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 8003866:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 800386a:	b1e5      	cbz	r5, 80038a6 <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0x12a>
 800386c:	1d2b      	adds	r3, r5, #4
 800386e:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8003872:	6833      	ldr	r3, [r6, #0]
 8003874:	f8c5 a008 	str.w	sl, [r5, #8]
 8003878:	4630      	mov	r0, r6
 800387a:	68db      	ldr	r3, [r3, #12]
 800387c:	63f5      	str	r5, [r6, #60]	; 0x3c
 800387e:	4798      	blx	r3
    newPresenter->activate();
 8003880:	682b      	ldr	r3, [r5, #0]
 8003882:	4628      	mov	r0, r5
 8003884:	681b      	ldr	r3, [r3, #0]
 8003886:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8003888:	4621      	mov	r1, r4
 800388a:	4630      	mov	r0, r6
 800388c:	f00f fd80 	bl	8013390 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8003890:	6823      	ldr	r3, [r4, #0]
 8003892:	4620      	mov	r0, r4
 8003894:	691b      	ldr	r3, [r3, #16]
 8003896:	4798      	blx	r3
    newTransition->invalidate();
 8003898:	6823      	ldr	r3, [r4, #0]
 800389a:	695b      	ldr	r3, [r3, #20]
 800389c:	4620      	mov	r0, r4
}
 800389e:	b001      	add	sp, #4
 80038a0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80038a4:	4718      	bx	r3
    model->bind(newPresenter);
 80038a6:	462b      	mov	r3, r5
 80038a8:	e7e1      	b.n	800386e <_ZN23FrontendApplicationBase30gotoMenuScreenNoTransitionImplEv+0xf2>
 80038aa:	bf00      	nop
 80038ac:	080221c4 	.word	0x080221c4
 80038b0:	080226f6 	.word	0x080226f6
 80038b4:	08022353 	.word	0x08022353
 80038b8:	0802239a 	.word	0x0802239a
 80038bc:	0802243d 	.word	0x0802243d
 80038c0:	08022964 	.word	0x08022964
 80038c4:	20011e88 	.word	0x20011e88
 80038c8:	20011e84 	.word	0x20011e84

080038cc <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv>:
{
 80038cc:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    touchgfx::makeTransition<StartupView, StartupPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 80038d0:	e9d0 5a55 	ldrd	r5, sl, [r0, #340]	; 0x154
{
 80038d4:	4607      	mov	r7, r0
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80038d6:	68a8      	ldr	r0, [r5, #8]
 80038d8:	6803      	ldr	r3, [r0, #0]
 80038da:	6a1b      	ldr	r3, [r3, #32]
 80038dc:	4798      	blx	r3
 80038de:	28f3      	cmp	r0, #243	; 0xf3
 80038e0:	d805      	bhi.n	80038ee <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x22>
 80038e2:	4b45      	ldr	r3, [pc, #276]	; (80039f8 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x12c>)
 80038e4:	4a45      	ldr	r2, [pc, #276]	; (80039fc <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x130>)
 80038e6:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80038e8:	4845      	ldr	r0, [pc, #276]	; (8003a00 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x134>)
 80038ea:	f01c ff0f 	bl	802070c <__assert_func>
 80038ee:	6868      	ldr	r0, [r5, #4]
 80038f0:	6803      	ldr	r3, [r0, #0]
 80038f2:	6a1b      	ldr	r3, [r3, #32]
 80038f4:	4798      	blx	r3
 80038f6:	280f      	cmp	r0, #15
 80038f8:	d803      	bhi.n	8003902 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x36>
 80038fa:	4b42      	ldr	r3, [pc, #264]	; (8003a04 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x138>)
 80038fc:	4a3f      	ldr	r2, [pc, #252]	; (80039fc <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x130>)
 80038fe:	21a4      	movs	r1, #164	; 0xa4
 8003900:	e7f2      	b.n	80038e8 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x1c>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8003902:	68e8      	ldr	r0, [r5, #12]
 8003904:	6803      	ldr	r3, [r0, #0]
 8003906:	6a1b      	ldr	r3, [r3, #32]
 8003908:	4798      	blx	r3
 800390a:	280b      	cmp	r0, #11
 800390c:	d803      	bhi.n	8003916 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x4a>
 800390e:	4b3e      	ldr	r3, [pc, #248]	; (8003a08 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x13c>)
 8003910:	4a3a      	ldr	r2, [pc, #232]	; (80039fc <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x130>)
 8003912:	21a5      	movs	r1, #165	; 0xa5
 8003914:	e7e8      	b.n	80038e8 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x1c>
    Application::getInstance()->clearAllTimerWidgets();
 8003916:	f00d ff8f 	bl	8011838 <_ZN8touchgfx11Application11getInstanceEv>
    if (*currentTrans)
 800391a:	f8df 90f4 	ldr.w	r9, [pc, #244]	; 8003a10 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x144>
 800391e:	3004      	adds	r0, #4
 8003920:	f00d ffd7 	bl	80118d2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8003924:	f8d9 0000 	ldr.w	r0, [r9]
 8003928:	b110      	cbz	r0, 8003930 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x64>
        (*currentTrans)->tearDown();
 800392a:	6803      	ldr	r3, [r0, #0]
 800392c:	68db      	ldr	r3, [r3, #12]
 800392e:	4798      	blx	r3
    if (*currentTrans)
 8003930:	f8d9 0000 	ldr.w	r0, [r9]
 8003934:	b110      	cbz	r0, 800393c <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x70>
        (*currentTrans)->~Transition();
 8003936:	6803      	ldr	r3, [r0, #0]
 8003938:	681b      	ldr	r3, [r3, #0]
 800393a:	4798      	blx	r3
    if (*currentScreen)
 800393c:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8003a14 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x148>
 8003940:	f8d8 0000 	ldr.w	r0, [r8]
 8003944:	b110      	cbz	r0, 800394c <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x80>
        (*currentScreen)->tearDownScreen();
 8003946:	6803      	ldr	r3, [r0, #0]
 8003948:	695b      	ldr	r3, [r3, #20]
 800394a:	4798      	blx	r3
    if (*currentPresenter)
 800394c:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003950:	b110      	cbz	r0, 8003958 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x8c>
        (*currentPresenter)->deactivate();
 8003952:	6803      	ldr	r3, [r0, #0]
 8003954:	685b      	ldr	r3, [r3, #4]
 8003956:	4798      	blx	r3
    if (*currentScreen)
 8003958:	f8d8 0000 	ldr.w	r0, [r8]
 800395c:	b110      	cbz	r0, 8003964 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x98>
        (*currentScreen)->~Screen();
 800395e:	6803      	ldr	r3, [r0, #0]
 8003960:	681b      	ldr	r3, [r3, #0]
 8003962:	4798      	blx	r3
    if (*currentPresenter)
 8003964:	f8d7 013c 	ldr.w	r0, [r7, #316]	; 0x13c
 8003968:	b110      	cbz	r0, 8003970 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0xa4>
        (*currentPresenter)->~Presenter();
 800396a:	6803      	ldr	r3, [r0, #0]
 800396c:	689b      	ldr	r3, [r3, #8]
 800396e:	4798      	blx	r3
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8003970:	68e8      	ldr	r0, [r5, #12]
 8003972:	2100      	movs	r1, #0
 8003974:	f7ff fdae 	bl	80034d4 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8003978:	f04f 0b00 	mov.w	fp, #0
 800397c:	4b23      	ldr	r3, [pc, #140]	; (8003a0c <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x140>)
 800397e:	6003      	str	r3, [r0, #0]
 8003980:	4604      	mov	r4, r0
 8003982:	f8c0 b004 	str.w	fp, [r0, #4]
 8003986:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800398a:	68a8      	ldr	r0, [r5, #8]
 800398c:	6803      	ldr	r3, [r0, #0]
 800398e:	4659      	mov	r1, fp
 8003990:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003992:	4798      	blx	r3
 8003994:	4606      	mov	r6, r0
 8003996:	f001 fd6b 	bl	8005470 <_ZN11StartupViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800399a:	6868      	ldr	r0, [r5, #4]
 800399c:	6803      	ldr	r3, [r0, #0]
 800399e:	4659      	mov	r1, fp
 80039a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80039a2:	4798      	blx	r3
 80039a4:	4631      	mov	r1, r6
 80039a6:	4605      	mov	r5, r0
 80039a8:	f001 fd3e 	bl	8005428 <_ZN16StartupPresenterC1ER11StartupView>
    *currentTrans = newTransition;
 80039ac:	f8c9 4000 	str.w	r4, [r9]
    *currentPresenter = newPresenter;
 80039b0:	f8c7 513c 	str.w	r5, [r7, #316]	; 0x13c
    *currentScreen = newScreen;
 80039b4:	f8c8 6000 	str.w	r6, [r8]
    model->bind(newPresenter);
 80039b8:	b1e5      	cbz	r5, 80039f4 <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0x128>
 80039ba:	1d2b      	adds	r3, r5, #4
 80039bc:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 80039c0:	6833      	ldr	r3, [r6, #0]
 80039c2:	f8c5 a008 	str.w	sl, [r5, #8]
 80039c6:	4630      	mov	r0, r6
 80039c8:	68db      	ldr	r3, [r3, #12]
 80039ca:	63f5      	str	r5, [r6, #60]	; 0x3c
 80039cc:	4798      	blx	r3
    newPresenter->activate();
 80039ce:	682b      	ldr	r3, [r5, #0]
 80039d0:	4628      	mov	r0, r5
 80039d2:	681b      	ldr	r3, [r3, #0]
 80039d4:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80039d6:	4621      	mov	r1, r4
 80039d8:	4630      	mov	r0, r6
 80039da:	f00f fcd9 	bl	8013390 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80039de:	6823      	ldr	r3, [r4, #0]
 80039e0:	4620      	mov	r0, r4
 80039e2:	691b      	ldr	r3, [r3, #16]
 80039e4:	4798      	blx	r3
    newTransition->invalidate();
 80039e6:	6823      	ldr	r3, [r4, #0]
 80039e8:	695b      	ldr	r3, [r3, #20]
 80039ea:	4620      	mov	r0, r4
}
 80039ec:	b001      	add	sp, #4
 80039ee:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80039f2:	4718      	bx	r3
    model->bind(newPresenter);
 80039f4:	462b      	mov	r3, r5
 80039f6:	e7e1      	b.n	80039bc <_ZN23FrontendApplicationBase33gotoStartupScreenNoTransitionImplEv+0xf0>
 80039f8:	080221c4 	.word	0x080221c4
 80039fc:	080227f4 	.word	0x080227f4
 8003a00:	08022353 	.word	0x08022353
 8003a04:	0802239a 	.word	0x0802239a
 8003a08:	0802243d 	.word	0x0802243d
 8003a0c:	08022964 	.word	0x08022964
 8003a10:	20011e88 	.word	0x20011e88
 8003a14:	20011e84 	.word	0x20011e84

08003a18 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 8003a18:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8003a1a:	4770      	bx	lr

08003a1c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 8003a1c:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8003a1e:	4770      	bx	lr

08003a20 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 8003a20:	4770      	bx	lr

08003a22 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 8003a22:	888b      	ldrh	r3, [r1, #4]
 8003a24:	69c0      	ldr	r0, [r0, #28]
 8003a26:	680a      	ldr	r2, [r1, #0]
 8003a28:	0adb      	lsrs	r3, r3, #11
 8003a2a:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 8003a2e:	4410      	add	r0, r2
 8003a30:	4770      	bx	lr

08003a32 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8003a32:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 8003a34:	b1c2      	cbz	r2, 8003a68 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 8003a36:	7b13      	ldrb	r3, [r2, #12]
 8003a38:	b1b3      	cbz	r3, 8003a68 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 8003a3a:	7b54      	ldrb	r4, [r2, #13]
 8003a3c:	7ad2      	ldrb	r2, [r2, #11]
 8003a3e:	0224      	lsls	r4, r4, #8
 8003a40:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8003a44:	4314      	orrs	r4, r2
 8003a46:	6a02      	ldr	r2, [r0, #32]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8003a48:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8003a4a:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 8003a4e:	8813      	ldrh	r3, [r2, #0]
 8003a50:	428b      	cmp	r3, r1
 8003a52:	d102      	bne.n	8003a5a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 8003a54:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 8003a58:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 8003a5a:	d805      	bhi.n	8003a68 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8003a5c:	3801      	subs	r0, #1
 8003a5e:	b280      	uxth	r0, r0
 8003a60:	3204      	adds	r2, #4
 8003a62:	2800      	cmp	r0, #0
 8003a64:	d1f3      	bne.n	8003a4e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 8003a66:	e7f7      	b.n	8003a58 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 8003a68:	2000      	movs	r0, #0
 8003a6a:	e7f5      	b.n	8003a58 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

08003a6c <_ZN8touchgfx13GeneratedFontD0Ev>:
 8003a6c:	b510      	push	{r4, lr}
 8003a6e:	212c      	movs	r1, #44	; 0x2c
 8003a70:	4604      	mov	r4, r0
 8003a72:	f01c fe1d 	bl	80206b0 <_ZdlPvj>
 8003a76:	4620      	mov	r0, r4
 8003a78:	bd10      	pop	{r4, pc}
	...

08003a7c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8003a7c:	b530      	push	{r4, r5, lr}
 8003a7e:	b08b      	sub	sp, #44	; 0x2c
 8003a80:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8003a82:	f8bd 5060 	ldrh.w	r5, [sp, #96]	; 0x60
 8003a86:	9508      	str	r5, [sp, #32]
 8003a88:	f8bd 505c 	ldrh.w	r5, [sp, #92]	; 0x5c
 8003a8c:	9507      	str	r5, [sp, #28]
 8003a8e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8003a92:	9506      	str	r5, [sp, #24]
 8003a94:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8003a98:	9505      	str	r5, [sp, #20]
 8003a9a:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8003a9e:	9504      	str	r5, [sp, #16]
 8003aa0:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8003aa4:	9503      	str	r5, [sp, #12]
 8003aa6:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8003aaa:	9502      	str	r5, [sp, #8]
 8003aac:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 8003ab0:	9501      	str	r5, [sp, #4]
 8003ab2:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8003ab6:	9500      	str	r5, [sp, #0]
 8003ab8:	f00e ffd8 	bl	8012a6c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 8003abc:	4b06      	ldr	r3, [pc, #24]	; (8003ad8 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x5c>)
 8003abe:	6023      	str	r3, [r4, #0]
 8003ac0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8003ac2:	61e3      	str	r3, [r4, #28]
 8003ac4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8003ac6:	6223      	str	r3, [r4, #32]
 8003ac8:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8003aca:	6263      	str	r3, [r4, #36]	; 0x24
 8003acc:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8003ace:	62a3      	str	r3, [r4, #40]	; 0x28
}
 8003ad0:	4620      	mov	r0, r4
 8003ad2:	b00b      	add	sp, #44	; 0x2c
 8003ad4:	bd30      	pop	{r4, r5, pc}
 8003ad6:	bf00      	nop
 8003ad8:	080229ac 	.word	0x080229ac

08003adc <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 8003adc:	4770      	bx	lr

08003ade <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 8003ade:	4770      	bx	lr

08003ae0 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 8003ae0:	4770      	bx	lr

08003ae2 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 8003ae2:	4770      	bx	lr

08003ae4 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
        (void)key; // Unused variable
    }
 8003ae4:	4770      	bx	lr

08003ae6 <_ZN12MenuViewBaseD1Ev>:
}

MenuViewBase::~MenuViewBase()
{

}
 8003ae6:	4770      	bx	lr

08003ae8 <_ZN12MenuViewBase11setupScreenEv>:

void MenuViewBase::setupScreen()
{

}
 8003ae8:	4770      	bx	lr

08003aea <_ZN8touchgfx8CallbackI12MenuViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003aea:	4770      	bx	lr

08003aec <_ZN8touchgfx8CallbackI12MenuViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8003aec:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003aee:	68c2      	ldr	r2, [r0, #12]
 8003af0:	6844      	ldr	r4, [r0, #4]
 8003af2:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8003af4:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8003af6:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8003afa:	07d2      	lsls	r2, r2, #31
 8003afc:	bf48      	it	mi
 8003afe:	5962      	ldrmi	r2, [r4, r5]
 8003b00:	689b      	ldr	r3, [r3, #8]
    }
 8003b02:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8003b04:	bf48      	it	mi
 8003b06:	58d3      	ldrmi	r3, [r2, r3]
 8003b08:	4718      	bx	r3

08003b0a <_ZNK8touchgfx8CallbackI12MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8003b0a:	6843      	ldr	r3, [r0, #4]
 8003b0c:	b12b      	cbz	r3, 8003b1a <_ZNK8touchgfx8CallbackI12MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8003b0e:	6883      	ldr	r3, [r0, #8]
 8003b10:	b92b      	cbnz	r3, 8003b1e <_ZNK8touchgfx8CallbackI12MenuViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8003b12:	68c0      	ldr	r0, [r0, #12]
 8003b14:	f000 0001 	and.w	r0, r0, #1
 8003b18:	4770      	bx	lr
 8003b1a:	4618      	mov	r0, r3
 8003b1c:	4770      	bx	lr
 8003b1e:	2001      	movs	r0, #1
    }
 8003b20:	4770      	bx	lr

08003b22 <_ZN8touchgfx8CallbackI12MenuViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8003b22:	b510      	push	{r4, lr}
 8003b24:	2110      	movs	r1, #16
 8003b26:	4604      	mov	r4, r0
 8003b28:	f01c fdc2 	bl	80206b0 <_ZdlPvj>
 8003b2c:	4620      	mov	r0, r4
 8003b2e:	bd10      	pop	{r4, pc}

08003b30 <_ZN12MenuViewBaseD0Ev>:
MenuViewBase::~MenuViewBase()
 8003b30:	b510      	push	{r4, lr}
}
 8003b32:	f44f 719c 	mov.w	r1, #312	; 0x138
MenuViewBase::~MenuViewBase()
 8003b36:	4604      	mov	r4, r0
}
 8003b38:	f01c fdba 	bl	80206b0 <_ZdlPvj>
 8003b3c:	4620      	mov	r0, r4
 8003b3e:	bd10      	pop	{r4, pc}

08003b40 <_ZN12MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 8003b40:	b538      	push	{r3, r4, r5, lr}
    if (&src == &PS_button)
 8003b42:	f100 0398 	add.w	r3, r0, #152	; 0x98
 8003b46:	4299      	cmp	r1, r3
{
 8003b48:	4604      	mov	r4, r0
 8003b4a:	460d      	mov	r5, r1
    if (&src == &PS_button)
 8003b4c:	d103      	bne.n	8003b56 <_ZN12MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>
    virtual ~MenuViewBase();
    virtual void setupScreen();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8003b4e:	f00d fe73 	bl	8011838 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When PS_button clicked change screen to PulseSpectrum
        //Go to PulseSpectrum with no screen transition
        application().gotoPulseSpectrumScreenNoTransition();
 8003b52:	f7ff fc9f 	bl	8003494 <_ZN23FrontendApplicationBase35gotoPulseSpectrumScreenNoTransitionEv>
    }
    if (&src == &pwmMenuButton)
 8003b56:	34e0      	adds	r4, #224	; 0xe0
 8003b58:	42a5      	cmp	r5, r4
 8003b5a:	d105      	bne.n	8003b68 <_ZN12MenuViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x28>
 8003b5c:	f00d fe6c 	bl	8011838 <_ZN8touchgfx11Application11getInstanceEv>
        //Interaction2
        //When pwmMenuButton clicked change screen to pwmSetup
        //Go to pwmSetup with no screen transition
        application().gotopwmSetupScreenNoTransition();
    }
}
 8003b60:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
        application().gotopwmSetupScreenNoTransition();
 8003b64:	f7ff bca6 	b.w	80034b4 <_ZN23FrontendApplicationBase30gotopwmSetupScreenNoTransitionEv>
}
 8003b68:	bd38      	pop	{r3, r4, r5, pc}

08003b6a <_ZN8touchgfx8Drawable5setXYEss>:
    void setXY(int16_t x, int16_t y)
 8003b6a:	b570      	push	{r4, r5, r6, lr}
        setX(x);
 8003b6c:	6803      	ldr	r3, [r0, #0]
    void setXY(int16_t x, int16_t y)
 8003b6e:	4604      	mov	r4, r0
        setX(x);
 8003b70:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    void setXY(int16_t x, int16_t y)
 8003b72:	4615      	mov	r5, r2
        setX(x);
 8003b74:	4798      	blx	r3
        setY(y);
 8003b76:	6823      	ldr	r3, [r4, #0]
 8003b78:	4629      	mov	r1, r5
 8003b7a:	4620      	mov	r0, r4
 8003b7c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
    }
 8003b7e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setY(y);
 8003b82:	4718      	bx	r3

08003b84 <_ZN8touchgfx8Drawable11setPositionEssss>:
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8003b84:	b570      	push	{r4, r5, r6, lr}
 8003b86:	4604      	mov	r4, r0
 8003b88:	461d      	mov	r5, r3
 8003b8a:	f9bd 6010 	ldrsh.w	r6, [sp, #16]
        setXY(x, y);
 8003b8e:	f7ff ffec 	bl	8003b6a <_ZN8touchgfx8Drawable5setXYEss>
        setWidth(width);
 8003b92:	6823      	ldr	r3, [r4, #0]
 8003b94:	4629      	mov	r1, r5
 8003b96:	4620      	mov	r0, r4
 8003b98:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003b9a:	4798      	blx	r3
        setHeight(height);
 8003b9c:	6823      	ldr	r3, [r4, #0]
 8003b9e:	4631      	mov	r1, r6
 8003ba0:	4620      	mov	r0, r4
 8003ba2:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
    }
 8003ba4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        setHeight(height);
 8003ba8:	4718      	bx	r3
	...

08003bac <_ZN8touchgfx3BoxC1Ev>:
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 8003bac:	4a09      	ldr	r2, [pc, #36]	; (8003bd4 <_ZN8touchgfx3BoxC1Ev+0x28>)
 8003bae:	6002      	str	r2, [r0, #0]
          visible(true)
 8003bb0:	f44f 7180 	mov.w	r1, #256	; 0x100
        : x(0), y(0), width(0), height(0)
 8003bb4:	2200      	movs	r2, #0
 8003bb6:	8481      	strh	r1, [r0, #36]	; 0x24
 8003bb8:	21ff      	movs	r1, #255	; 0xff
 8003bba:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8003bbe:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8003bc2:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8003bc6:	e9c0 2207 	strd	r2, r2, [r0, #28]
 8003bca:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
        : color(col)
 8003bce:	6282      	str	r2, [r0, #40]	; 0x28
    {
    }
 8003bd0:	4770      	bx	lr
 8003bd2:	bf00      	nop
 8003bd4:	08023c78 	.word	0x08023c78

08003bd8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>:
        return typedTextId < numberOfTypedTexts;
 8003bd8:	4b1a      	ldr	r3, [pc, #104]	; (8003c44 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x6c>)
     * change you may need to reposition the label text by calling this function to keep the
     * text horizontally centered.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     */
    void updateTextPosition()
 8003bda:	b573      	push	{r0, r1, r4, r5, r6, lr}
    {
        if (typedText.hasValidId())
 8003bdc:	881b      	ldrh	r3, [r3, #0]
 8003bde:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8003be0:	428b      	cmp	r3, r1
    void updateTextPosition()
 8003be2:	4606      	mov	r6, r0
        if (typedText.hasValidId())
 8003be4:	d92a      	bls.n	8003c3c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x64>
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 8003be6:	4b18      	ldr	r3, [pc, #96]	; (8003c48 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x70>)
 8003be8:	681b      	ldr	r3, [r3, #0]
 8003bea:	b92b      	cbnz	r3, 8003bf8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x20>
 8003bec:	4b17      	ldr	r3, [pc, #92]	; (8003c4c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x74>)
 8003bee:	4a18      	ldr	r2, [pc, #96]	; (8003c50 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x78>)
 8003bf0:	4818      	ldr	r0, [pc, #96]	; (8003c54 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x7c>)
 8003bf2:	216c      	movs	r1, #108	; 0x6c
 8003bf4:	f01c fd8a 	bl	802070c <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 8003bf8:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8003bfc:	4b16      	ldr	r3, [pc, #88]	; (8003c58 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x80>)
 8003bfe:	681b      	ldr	r3, [r3, #0]
 8003c00:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
        return texts->getText(typedTextId);
 8003c04:	4b15      	ldr	r3, [pc, #84]	; (8003c5c <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x84>)
 8003c06:	6818      	ldr	r0, [r3, #0]
 8003c08:	f001 f8e6 	bl	8004dd8 <_ZNK8touchgfx5Texts7getTextEt>
        {
            const Font* f = typedText.getFont();
            const Unicode::UnicodeChar* s = typedText.getText();
            textHeightIncludingSpacing = f->getHeight() * f->getNumberOfLines(s) + f->getSpacingAbove(s);
 8003c0c:	682b      	ldr	r3, [r5, #0]
 8003c0e:	9001      	str	r0, [sp, #4]
 8003c10:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8003c12:	4628      	mov	r0, r5
 8003c14:	4798      	blx	r3
 8003c16:	682b      	ldr	r3, [r5, #0]
 8003c18:	9901      	ldr	r1, [sp, #4]
 8003c1a:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8003c1c:	4604      	mov	r4, r0
 8003c1e:	4628      	mov	r0, r5
 8003c20:	4798      	blx	r3
 8003c22:	682b      	ldr	r3, [r5, #0]
 8003c24:	9901      	ldr	r1, [sp, #4]
 8003c26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003c28:	fb14 f400 	smulbb	r4, r4, r0
 8003c2c:	4628      	mov	r0, r5
 8003c2e:	4798      	blx	r3
 8003c30:	b2a4      	uxth	r4, r4
 8003c32:	4404      	add	r4, r0
 8003c34:	f8a6 4046 	strh.w	r4, [r6, #70]	; 0x46
        }
        else
        {
            textHeightIncludingSpacing = 0;
        }
    }
 8003c38:	b002      	add	sp, #8
 8003c3a:	bd70      	pop	{r4, r5, r6, pc}
            textHeightIncludingSpacing = 0;
 8003c3c:	2300      	movs	r3, #0
 8003c3e:	f8a0 3046 	strh.w	r3, [r0, #70]	; 0x46
    }
 8003c42:	e7f9      	b.n	8003c38 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv+0x60>
 8003c44:	20011e9c 	.word	0x20011e9c
 8003c48:	20011e98 	.word	0x20011e98
 8003c4c:	08022a04 	.word	0x08022a04
 8003c50:	08022a46 	.word	0x08022a46
 8003c54:	08022a81 	.word	0x08022a81
 8003c58:	20011ea0 	.word	0x20011ea0
 8003c5c:	20011ea4 	.word	0x20011ea4

08003c60 <_ZN12MenuViewBaseC1Ev>:
MenuViewBase::MenuViewBase() :
 8003c60:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8003c64:	4604      	mov	r4, r0
 8003c66:	b085      	sub	sp, #20
    buttonCallback(this, &MenuViewBase::buttonCallbackHandler)
 8003c68:	46a0      	mov	r8, r4
        : presenter(0)
 8003c6a:	2500      	movs	r5, #0
 8003c6c:	f00f f9e4 	bl	8013038 <_ZN8touchgfx6ScreenC1Ev>
 8003c70:	4b43      	ldr	r3, [pc, #268]	; (8003d80 <_ZN12MenuViewBaseC1Ev+0x120>)
 8003c72:	63e5      	str	r5, [r4, #60]	; 0x3c
 8003c74:	f848 3b40 	str.w	r3, [r8], #64
 8003c78:	f104 0b6c 	add.w	fp, r4, #108	; 0x6c
 8003c7c:	4640      	mov	r0, r8
 8003c7e:	f7ff ff95 	bl	8003bac <_ZN8touchgfx3BoxC1Ev>
 8003c82:	f104 0798 	add.w	r7, r4, #152	; 0x98
 8003c86:	4658      	mov	r0, fp
 8003c88:	f7ff ff90 	bl	8003bac <_ZN8touchgfx3BoxC1Ev>
 8003c8c:	f104 06e0 	add.w	r6, r4, #224	; 0xe0
 8003c90:	4638      	mov	r0, r7
 8003c92:	f00c f909 	bl	800fea8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8003c96:	4630      	mov	r0, r6
 8003c98:	f00c f906 	bl	800fea8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8003c9c:	4b39      	ldr	r3, [pc, #228]	; (8003d84 <_ZN12MenuViewBaseC1Ev+0x124>)
 8003c9e:	e9c4 344a 	strd	r3, r4, [r4, #296]	; 0x128
 8003ca2:	4b39      	ldr	r3, [pc, #228]	; (8003d88 <_ZN12MenuViewBaseC1Ev+0x128>)
 8003ca4:	e9c4 354c 	strd	r3, r5, [r4, #304]	; 0x130
    __background.setPosition(0, 0, 800, 480);
 8003ca8:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 8003cac:	f104 0904 	add.w	r9, r4, #4
 8003cb0:	462a      	mov	r2, r5
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
    {
        color = newColor;
 8003cb2:	f04f 4a7f 	mov.w	sl, #4278190080	; 0xff000000
 8003cb6:	9300      	str	r3, [sp, #0]
 8003cb8:	4629      	mov	r1, r5
 8003cba:	f44f 7348 	mov.w	r3, #800	; 0x320
 8003cbe:	4640      	mov	r0, r8
 8003cc0:	f7ff ff60 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003cc4:	4641      	mov	r1, r8
 8003cc6:	4648      	mov	r0, r9
 8003cc8:	f8c4 a068 	str.w	sl, [r4, #104]	; 0x68
 8003ccc:	f007 fea0 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(0, 0, 800, 480);
 8003cd0:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8003cd4:	462a      	mov	r2, r5
 8003cd6:	9300      	str	r3, [sp, #0]
 8003cd8:	4629      	mov	r1, r5
 8003cda:	4658      	mov	r0, fp
 8003cdc:	f44f 7348 	mov.w	r3, #800	; 0x320
 8003ce0:	f7ff ff50 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
 8003ce4:	4b29      	ldr	r3, [pc, #164]	; (8003d8c <_ZN12MenuViewBaseC1Ev+0x12c>)
 8003ce6:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8003cea:	4659      	mov	r1, fp
 8003cec:	4648      	mov	r0, r9
 8003cee:	f007 fe8f 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    PS_button.setXY(215, 130);
 8003cf2:	4638      	mov	r0, r7
 8003cf4:	2282      	movs	r2, #130	; 0x82
 8003cf6:	21d7      	movs	r1, #215	; 0xd7
 8003cf8:	f7ff ff37 	bl	8003b6a <_ZN8touchgfx8Drawable5setXYEss>
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
        : bitmapId(id)
 8003cfc:	f04f 0b01 	mov.w	fp, #1
    PS_button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_LARGE_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_LARGE_ROUND_PRESSED_ID));
 8003d00:	aa03      	add	r2, sp, #12
 8003d02:	a902      	add	r1, sp, #8
 8003d04:	4638      	mov	r0, r7
 8003d06:	f8ad 5008 	strh.w	r5, [sp, #8]
 8003d0a:	f8ad b00c 	strh.w	fp, [sp, #12]
 8003d0e:	f00b fece 	bl	800faae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8003d12:	230b      	movs	r3, #11
 8003d14:	f8a4 30d0 	strh.w	r3, [r4, #208]	; 0xd0
        updateTextPosition();
 8003d18:	4638      	mov	r0, r7
 8003d1a:	f7ff ff5d 	bl	8003bd8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
    PS_button.setAction(buttonCallback);
 8003d1e:	f504 7894 	add.w	r8, r4, #296	; 0x128
        colorPressed = col;
 8003d22:	4b1b      	ldr	r3, [pc, #108]	; (8003d90 <_ZN12MenuViewBaseC1Ev+0x130>)
 8003d24:	f8c4 30d8 	str.w	r3, [r4, #216]	; 0xd8
 8003d28:	4639      	mov	r1, r7
 8003d2a:	4648      	mov	r0, r9
        color = col;
 8003d2c:	f8c4 a0d4 	str.w	sl, [r4, #212]	; 0xd4
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
    {
        action = &callback;
 8003d30:	f8c4 80c0 	str.w	r8, [r4, #192]	; 0xc0
 8003d34:	f007 fe6c 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pwmMenuButton.setXY(215, 300);
 8003d38:	4630      	mov	r0, r6
 8003d3a:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8003d3e:	21d7      	movs	r1, #215	; 0xd7
 8003d40:	f7ff ff13 	bl	8003b6a <_ZN8touchgfx8Drawable5setXYEss>
    pwmMenuButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_LARGE_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_LARGE_ROUND_PRESSED_ID));
 8003d44:	aa03      	add	r2, sp, #12
 8003d46:	a902      	add	r1, sp, #8
 8003d48:	4630      	mov	r0, r6
 8003d4a:	f8ad 5008 	strh.w	r5, [sp, #8]
 8003d4e:	f8ad b00c 	strh.w	fp, [sp, #12]
 8003d52:	f00b feac 	bl	800faae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8003d56:	2304      	movs	r3, #4
 8003d58:	f8a4 3118 	strh.w	r3, [r4, #280]	; 0x118
        updateTextPosition();
 8003d5c:	4630      	mov	r0, r6
 8003d5e:	f7ff ff3b 	bl	8003bd8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        colorPressed = col;
 8003d62:	4b0c      	ldr	r3, [pc, #48]	; (8003d94 <_ZN12MenuViewBaseC1Ev+0x134>)
        color = col;
 8003d64:	f8c4 a11c 	str.w	sl, [r4, #284]	; 0x11c
 8003d68:	4648      	mov	r0, r9
        colorPressed = col;
 8003d6a:	f8c4 3120 	str.w	r3, [r4, #288]	; 0x120
 8003d6e:	f8c4 8108 	str.w	r8, [r4, #264]	; 0x108
 8003d72:	4631      	mov	r1, r6
 8003d74:	f007 fe4c 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8003d78:	4620      	mov	r0, r4
 8003d7a:	b005      	add	sp, #20
 8003d7c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8003d80:	08022ae8 	.word	0x08022ae8
 8003d84:	08022ad0 	.word	0x08022ad0
 8003d88:	08003b41 	.word	0x08003b41
 8003d8c:	ff541a87 	.word	0xff541a87
 8003d90:	fff2f266 	.word	0xfff2f266
 8003d94:	ffe6da37 	.word	0xffe6da37

08003d98 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
    {
        return firstChild;
    }
 8003d98:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8003d9a:	4770      	bx	lr

08003d9c <_ZNK8touchgfx17AbstractDataGraph9getScaleXEv>:
     * @see setScaleX, setScaleY, getScaleY
     */
    virtual int getScaleX() const
    {
        return xScale;
    }
 8003d9c:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8003d9e:	4770      	bx	lr

08003da0 <_ZNK8touchgfx17AbstractDataGraph9getScaleYEv>:
     * @see setScaleY, setScaleX, getScaleX
     */
    virtual int getScaleY() const
    {
        return yScale;
    }
 8003da0:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8003da2:	4770      	bx	lr

08003da4 <_ZN8touchgfx17AbstractDataGraph8setAlphaEh>:
     *
     * @note All graph elements have to take this alpha into consideration.
     */
    virtual void setAlpha(uint8_t newAlpha)
    {
        alpha = newAlpha;
 8003da4:	f880 102c 	strb.w	r1, [r0, #44]	; 0x2c
    }
 8003da8:	4770      	bx	lr

08003daa <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>:
     * @param  min The minimum x value.
     * @param  max The maximum x value.
     *
     * @note The graph as well as the area above and below are automatically redrawn (invalidated).
     */
    virtual void setGraphRangeX(int min, int max)
 8003daa:	b410      	push	{r4}
    {
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8003dac:	6803      	ldr	r3, [r0, #0]
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int int2scaledX(int i) const
    {
        return int2scaled(i, xScale);
 8003dae:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8003db0:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8003db4:	4362      	muls	r2, r4
 8003db6:	4361      	muls	r1, r4
    }
 8003db8:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXScaled(int2scaledX(min), int2scaledX(max));
 8003dbc:	4718      	bx	r3

08003dbe <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff>:
     *
     * @return The product of the two numbers, rounded to nearest integer value.
     */
    FORCE_INLINE_FUNCTION static int float2scaled(float f, int scale)
    {
        const float fs = f * (float)scale;
 8003dbe:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8003dc2:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003dc4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8003dc8:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
        const float fs = f * (float)scale;
 8003dcc:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8003dd0:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003dd4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003dd8:	db17      	blt.n	8003e0a <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4c>
        {
            return (int)(fs + 0.5f);
 8003dda:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003dde:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003de2:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003de6:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 8003dea:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8003dee:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8003df2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003df6:	db1c      	blt.n	8003e32 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x74>
            return (int)(fs + 0.5f);
 8003df8:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003dfc:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8003e00:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003e04:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXScaled(float2scaledX(min), float2scaledX(max));
 8003e08:	4718      	bx	r3
        }
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003e0a:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003e0e:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8003e12:	ee17 2a10 	vmov	r2, s14
 8003e16:	ee30 0a66 	vsub.f32	s0, s0, s13
 8003e1a:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003e1e:	ee30 0a26 	vadd.f32	s0, s0, s13
 8003e22:	1e51      	subs	r1, r2, #1
 8003e24:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003e28:	ee10 2a10 	vmov	r2, s0
 8003e2c:	440a      	add	r2, r1
 8003e2e:	4611      	mov	r1, r2
 8003e30:	e7db      	b.n	8003dea <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x2c>
 8003e32:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003e36:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003e3a:	ee17 2a90 	vmov	r2, s15
 8003e3e:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003e42:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003e46:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003e4a:	3a01      	subs	r2, #1
 8003e4c:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8003e50:	ee10 ca90 	vmov	ip, s1
 8003e54:	4494      	add	ip, r2
 8003e56:	4662      	mov	r2, ip
 8003e58:	e7d6      	b.n	8003e08 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEff+0x4a>

08003e5a <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbi>:
    virtual void setGraphRangeXAuto(bool showYaxis = true, int margin = 0)
 8003e5a:	b410      	push	{r4}
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003e5c:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003e5e:	6b04      	ldr	r4, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003e60:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8003e64:	4362      	muls	r2, r4
    }
 8003e66:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeXAutoScaled(showYaxis, int2scaledX(margin));
 8003e6a:	4718      	bx	r3

08003e6c <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf>:
        const float fs = f * (float)scale;
 8003e6c:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003e70:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003e72:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003e76:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
        const float fs = f * (float)scale;
 8003e7a:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003e7e:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003e82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003e86:	db08      	blt.n	8003e9a <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 8003e88:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003e8c:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003e90:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003e94:	ee17 2a90 	vmov	r2, s15
        setGraphRangeXAutoScaled(showYaxis, float2scaledX(margin));
 8003e98:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003e9a:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003e9e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003ea2:	ee17 2a90 	vmov	r2, s15
 8003ea6:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003eaa:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003eae:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003eb2:	3a01      	subs	r2, #1
 8003eb4:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003eb8:	ee10 ca10 	vmov	ip, s0
 8003ebc:	4494      	add	ip, r2
 8003ebe:	4662      	mov	r2, ip
 8003ec0:	e7ea      	b.n	8003e98 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeXAutoEbf+0x2c>

08003ec2 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>:
    virtual void setGraphRangeY(int min, int max)
 8003ec2:	b410      	push	{r4}
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8003ec4:	6803      	ldr	r3, [r0, #0]
        return int2scaled(i, yScale);
 8003ec6:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8003ec8:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 8003ecc:	4362      	muls	r2, r4
 8003ece:	4361      	muls	r1, r4
    }
 8003ed0:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYScaled(int2scaledY(min), int2scaledY(max));
 8003ed4:	4718      	bx	r3

08003ed6 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff>:
        const float fs = f * (float)scale;
 8003ed6:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8003eda:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003edc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8003ee0:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
        const float fs = f * (float)scale;
 8003ee4:	ee20 0a27 	vmul.f32	s0, s0, s15
        if (fs >= 0)
 8003ee8:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003eec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003ef0:	db17      	blt.n	8003f22 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4c>
            return (int)(fs + 0.5f);
 8003ef2:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8003ef6:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003efa:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003efe:	ee17 1a10 	vmov	r1, s14
        const float fs = f * (float)scale;
 8003f02:	ee60 0aa7 	vmul.f32	s1, s1, s15
        if (fs >= 0)
 8003f06:	eef5 0ac0 	vcmpe.f32	s1, #0.0
 8003f0a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003f0e:	db1c      	blt.n	8003f4a <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x74>
            return (int)(fs + 0.5f);
 8003f10:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003f14:	ee70 0aa7 	vadd.f32	s1, s1, s15
 8003f18:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003f1c:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYScaled(float2scaledY(min), float2scaledY(max));
 8003f20:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003f22:	eebd 7ac0 	vcvt.s32.f32	s14, s0
 8003f26:	eef8 6ac7 	vcvt.f32.s32	s13, s14
 8003f2a:	ee17 2a10 	vmov	r2, s14
 8003f2e:	ee30 0a66 	vsub.f32	s0, s0, s13
 8003f32:	eef7 6a08 	vmov.f32	s13, #120	; 0x3fc00000  1.5
 8003f36:	ee30 0a26 	vadd.f32	s0, s0, s13
 8003f3a:	1e51      	subs	r1, r2, #1
 8003f3c:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003f40:	ee10 2a10 	vmov	r2, s0
 8003f44:	440a      	add	r2, r1
 8003f46:	4611      	mov	r1, r2
 8003f48:	e7db      	b.n	8003f02 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x2c>
 8003f4a:	eefd 7ae0 	vcvt.s32.f32	s15, s1
 8003f4e:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003f52:	ee17 2a90 	vmov	r2, s15
 8003f56:	ee70 0ac7 	vsub.f32	s1, s1, s14
 8003f5a:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003f5e:	ee70 0a87 	vadd.f32	s1, s1, s14
 8003f62:	3a01      	subs	r2, #1
 8003f64:	eefd 0ae0 	vcvt.s32.f32	s1, s1
 8003f68:	ee10 ca90 	vmov	ip, s1
 8003f6c:	4494      	add	ip, r2
 8003f6e:	4662      	mov	r2, ip
 8003f70:	e7d6      	b.n	8003f20 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEff+0x4a>

08003f72 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbi>:
    virtual void setGraphRangeYAuto(bool showXaxis = true, int margin = 0)
 8003f72:	b410      	push	{r4}
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003f74:	6803      	ldr	r3, [r0, #0]
        return i * scale;
 8003f76:	6b44      	ldr	r4, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003f78:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 8003f7c:	4362      	muls	r2, r4
    }
 8003f7e:	f85d 4b04 	ldr.w	r4, [sp], #4
        setGraphRangeYAutoScaled(showXaxis, int2scaledY(margin));
 8003f82:	4718      	bx	r3

08003f84 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf>:
        const float fs = f * (float)scale;
 8003f84:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003f88:	6803      	ldr	r3, [r0, #0]
        const float fs = f * (float)scale;
 8003f8a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003f8e:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
        const float fs = f * (float)scale;
 8003f92:	ee27 0a80 	vmul.f32	s0, s15, s0
        if (fs >= 0)
 8003f96:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8003f9a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003f9e:	db08      	blt.n	8003fb2 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2e>
            return (int)(fs + 0.5f);
 8003fa0:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8003fa4:	ee30 0a27 	vadd.f32	s0, s0, s15
 8003fa8:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003fac:	ee17 2a90 	vmov	r2, s15
        setGraphRangeYAutoScaled(showXaxis, float2scaledY(margin));
 8003fb0:	4718      	bx	r3
        return ((int)fs - 1) + (int)(1.5f + (fs - (float)(int)fs));
 8003fb2:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8003fb6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003fba:	ee17 2a90 	vmov	r2, s15
 8003fbe:	ee30 0a47 	vsub.f32	s0, s0, s14
 8003fc2:	eeb7 7a08 	vmov.f32	s14, #120	; 0x3fc00000  1.5
 8003fc6:	ee30 0a07 	vadd.f32	s0, s0, s14
 8003fca:	3a01      	subs	r2, #1
 8003fcc:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8003fd0:	ee10 ca10 	vmov	ip, s0
 8003fd4:	4494      	add	ip, r2
 8003fd6:	4662      	mov	r2, ip
 8003fd8:	e7ea      	b.n	8003fb0 <_ZN8touchgfx17AbstractDataGraph18setGraphRangeYAutoEbf+0x2c>

08003fda <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv>:
        return scaled2intX(graphRangeMinX);
 8003fda:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
     *
     * @note For internal use.
     */
    FORCE_INLINE_FUNCTION int scaled2intX(int i) const
    {
        return scaled2int(i, xScale);
 8003fde:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 8003fe0:	2b00      	cmp	r3, #0
 8003fe2:	db07      	blt.n	8003ff4 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8003fe4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8003fe8:	fb93 f0f2 	sdiv	r0, r3, r2
 8003fec:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8003ff0:	1040      	asrs	r0, r0, #1
 8003ff2:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8003ff4:	f06f 0001 	mvn.w	r0, #1
 8003ff8:	fb00 2003 	mla	r0, r0, r3, r2
 8003ffc:	3801      	subs	r0, #1
 8003ffe:	fb90 f0f2 	sdiv	r0, r0, r2
 8004002:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8004006:	1040      	asrs	r0, r0, #1
 8004008:	4240      	negs	r0, r0
    }
 800400a:	4770      	bx	lr

0800400c <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMinAsFloatEv>:
     *
     * @return The number divided by the scale.
     */
    FORCE_INLINE_FUNCTION static float scaled2float(int i, int scale)
    {
        return (float)i / (float)scale;
 800400c:	edd0 7a4b 	vldr	s15, [r0, #300]	; 0x12c
 8004010:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8004014:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8004018:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800401c:	ee80 0a27 	vdiv.f32	s0, s0, s15
 8004020:	4770      	bx	lr

08004022 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMinScaledEv>:
    }
 8004022:	f8d0 012c 	ldr.w	r0, [r0, #300]	; 0x12c
 8004026:	4770      	bx	lr

08004028 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv>:
        return scaled2intX(graphRangeMaxX);
 8004028:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
        return scaled2int(i, xScale);
 800402c:	6b02      	ldr	r2, [r0, #48]	; 0x30
        if (i >= 0)
 800402e:	2b00      	cmp	r3, #0
 8004030:	db07      	blt.n	8004042 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeXMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8004032:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8004036:	fb93 f0f2 	sdiv	r0, r3, r2
 800403a:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800403e:	1040      	asrs	r0, r0, #1
 8004040:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8004042:	f06f 0001 	mvn.w	r0, #1
 8004046:	fb00 2003 	mla	r0, r0, r3, r2
 800404a:	3801      	subs	r0, #1
 800404c:	fb90 f0f2 	sdiv	r0, r0, r2
 8004050:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 8004054:	1040      	asrs	r0, r0, #1
 8004056:	4240      	negs	r0, r0
    }
 8004058:	4770      	bx	lr

0800405a <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeXMaxAsFloatEv>:
        return (float)i / (float)scale;
 800405a:	edd0 7a4c 	vldr	s15, [r0, #304]	; 0x130
 800405e:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 8004062:	edd0 7a0c 	vldr	s15, [r0, #48]	; 0x30
 8004066:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 800406a:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800406e:	4770      	bx	lr

08004070 <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeXMaxScaledEv>:
    }
 8004070:	f8d0 0130 	ldr.w	r0, [r0, #304]	; 0x130
 8004074:	4770      	bx	lr

08004076 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv>:
        return scaled2intY(graphRangeMinY);
 8004076:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
        return scaled2int(i, yScale);
 800407a:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 800407c:	2b00      	cmp	r3, #0
 800407e:	db07      	blt.n	8004090 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMinAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 8004080:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8004084:	fb93 f0f2 	sdiv	r0, r3, r2
 8004088:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 800408c:	1040      	asrs	r0, r0, #1
 800408e:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 8004090:	f06f 0001 	mvn.w	r0, #1
 8004094:	fb00 2003 	mla	r0, r0, r3, r2
 8004098:	3801      	subs	r0, #1
 800409a:	fb90 f0f2 	sdiv	r0, r0, r2
 800409e:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80040a2:	1040      	asrs	r0, r0, #1
 80040a4:	4240      	negs	r0, r0
    }
 80040a6:	4770      	bx	lr

080040a8 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMinAsFloatEv>:
        return (float)i / (float)scale;
 80040a8:	edd0 7a4d 	vldr	s15, [r0, #308]	; 0x134
 80040ac:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80040b0:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 80040b4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 80040b8:	ee80 0a27 	vdiv.f32	s0, s0, s15
 80040bc:	4770      	bx	lr

080040be <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMinScaledEv>:
    }
 80040be:	f8d0 0134 	ldr.w	r0, [r0, #308]	; 0x134
 80040c2:	4770      	bx	lr

080040c4 <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv>:
        return scaled2intY(graphRangeMaxY);
 80040c4:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
        return scaled2int(i, yScale);
 80040c8:	6b42      	ldr	r2, [r0, #52]	; 0x34
        if (i >= 0)
 80040ca:	2b00      	cmp	r3, #0
 80040cc:	db07      	blt.n	80040de <_ZNK8touchgfx17AbstractDataGraph22getGraphRangeYMaxAsIntEv+0x1a>
            return ((i * 2 + scale) / scale) / 2;
 80040ce:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80040d2:	fb93 f0f2 	sdiv	r0, r3, r2
 80040d6:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80040da:	1040      	asrs	r0, r0, #1
 80040dc:	4770      	bx	lr
        return -(((-i * 2 + scale - 1) / scale) / 2);
 80040de:	f06f 0001 	mvn.w	r0, #1
 80040e2:	fb00 2003 	mla	r0, r0, r3, r2
 80040e6:	3801      	subs	r0, #1
 80040e8:	fb90 f0f2 	sdiv	r0, r0, r2
 80040ec:	eb00 70d0 	add.w	r0, r0, r0, lsr #31
 80040f0:	1040      	asrs	r0, r0, #1
 80040f2:	4240      	negs	r0, r0
    }
 80040f4:	4770      	bx	lr

080040f6 <_ZNK8touchgfx17AbstractDataGraph24getGraphRangeYMaxAsFloatEv>:
        return (float)i / (float)scale;
 80040f6:	edd0 7a4e 	vldr	s15, [r0, #312]	; 0x138
 80040fa:	eeb8 0ae7 	vcvt.f32.s32	s0, s15
 80040fe:	edd0 7a0d 	vldr	s15, [r0, #52]	; 0x34
 8004102:	eef8 7ae7 	vcvt.f32.s32	s15, s15
    }
 8004106:	ee80 0a27 	vdiv.f32	s0, s0, s15
 800410a:	4770      	bx	lr

0800410c <_ZNK8touchgfx17AbstractDataGraph23getGraphRangeYMaxScaledEv>:
    }
 800410c:	f8d0 0138 	ldr.w	r0, [r0, #312]	; 0x138
 8004110:	4770      	bx	lr

08004112 <_ZNK8touchgfx15StaticDataGraph12indexToXAxisEii>:
    virtual int16_t deleteIndex(int index);

    virtual int indexToXAxis(const int /*valueScaled*/, const int labelScaled) const
    {
        return labelScaled;
    }
 8004112:	4610      	mov	r0, r2
 8004114:	4770      	bx	lr

08004116 <_ZNK8touchgfx15StaticDataGraph16indexToScreenXQ5Es>:

    virtual bool xScreenRangeToIndexRange(int16_t xMin, int16_t xMax, int16_t& indexMin, int16_t& indexMax) const;

    virtual CWRUtil::Q5 indexToScreenXQ5(int16_t index) const
    {
        return valueToScreenXQ5(xValues[index]);
 8004116:	f8d0 213c 	ldr.w	r2, [r0, #316]	; 0x13c
 800411a:	6803      	ldr	r3, [r0, #0]
 800411c:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8004120:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 8004124:	4718      	bx	r3

08004126 <_ZNK8touchgfx15StaticDataGraph16indexToScreenYQ5Es>:
    }

    virtual CWRUtil::Q5 indexToScreenYQ5(int16_t index) const
    {
        return valueToScreenYQ5(yValues[index]);
 8004126:	f8d0 2140 	ldr.w	r2, [r0, #320]	; 0x140
 800412a:	6803      	ldr	r3, [r0, #0]
 800412c:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8004130:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8004134:	4718      	bx	r3

08004136 <_ZN8touchgfx25AbstractGraphElementNoCWR8setColorENS_9colortypeE>:
     *
     * @see getColor
     */
    virtual void setColor(colortype newColor)
    {
        color = newColor;
 8004136:	62c1      	str	r1, [r0, #44]	; 0x2c
    }
 8004138:	4770      	bx	lr

0800413a <_ZNK8touchgfx25AbstractGraphElementNoCWR8getColorEv>:
     * @see setColor
     */
    virtual colortype getColor() const
    {
        return color;
    }
 800413a:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800413c:	4770      	bx	lr

0800413e <_ZNK8touchgfx25AbstractGraphElementNoCWR16drawCanvasWidgetERKNS_4RectE>:

    virtual bool drawCanvasWidget(const Rect&) const
    {
        return true;
    }
 800413e:	2001      	movs	r0, #1
 8004140:	4770      	bx	lr

08004142 <_ZN8touchgfx25AbstractGraphElementNoCWR10setPainterERNS_15AbstractPainterE>:
    void normalizeRect(Rect& r) const;

private:
    virtual void setPainter(AbstractPainter& /*painter*/)
    {
    }
 8004142:	4770      	bx	lr

08004144 <_ZN8touchgfx20GraphElementGridBase22invalidateGraphPointAtEs>:
        return lineWidth;
    }

    virtual void invalidateGraphPointAt(int16_t)
    {
    }
 8004144:	4770      	bx	lr

08004146 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
     *
     * @return The correctly scaled major interval.
     */
    virtual int getCorrectlyScaledMajorInterval(const AbstractDataGraph* graph) const
    {
        return majorGrid == 0 ? 0 : majorGrid->getCorrectlyScaledGridInterval(graph);
 8004146:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8004148:	b118      	cbz	r0, 8004152 <_ZNK8touchgfx20GraphElementGridBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800414a:	6803      	ldr	r3, [r0, #0]
 800414c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8004150:	4718      	bx	r3
    }
 8004152:	4770      	bx	lr

08004154 <_ZNK8touchgfx17GraphElementGridX13enclosingAreaEPKNS_17AbstractDataGraphE>:
    {
        return convertToGraphScaleX(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 8004154:	b530      	push	{r4, r5, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8004156:	f8b2 111a 	ldrh.w	r1, [r2, #282]	; 0x11a
        return topPadding;
 800415a:	f9b2 4114 	ldrsh.w	r4, [r2, #276]	; 0x114
        return rect.width;
 800415e:	f9b2 5040 	ldrsh.w	r5, [r2, #64]	; 0x40
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8004162:	f8b2 2042 	ldrh.w	r2, [r2, #66]	; 0x42
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8004166:	8044      	strh	r4, [r0, #2]
 8004168:	4421      	add	r1, r4
 800416a:	1a52      	subs	r2, r2, r1
 800416c:	2100      	movs	r1, #0
 800416e:	8001      	strh	r1, [r0, #0]
 8004170:	8085      	strh	r5, [r0, #4]
 8004172:	80c2      	strh	r2, [r0, #6]
    {
        return Rect(0, graph->getGraphAreaPaddingTop(), graph->getGraphAreaWidthIncludingPadding(), graph->getGraphAreaHeight());
    }
 8004174:	bd30      	pop	{r4, r5, pc}

08004176 <_ZNK8touchgfx17GraphElementGridX8lineRectEssss>:

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
 8004176:	b510      	push	{r4, lr}
 8004178:	8042      	strh	r2, [r0, #2]
 800417a:	f9bd 4008 	ldrsh.w	r4, [sp, #8]
 800417e:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8004182:	8004      	strh	r4, [r0, #0]
 8004184:	8082      	strh	r2, [r0, #4]
 8004186:	80c3      	strh	r3, [r0, #6]
    {
        return Rect(pos, start, width, length);
    }
 8004188:	bd10      	pop	{r4, pc}

0800418a <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMinScaled();
 800418a:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 800418c:	4608      	mov	r0, r1
        return graph->getGraphRangeXMinScaled();
 800418e:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 8004192:	4718      	bx	r3

08004194 <_ZNK8touchgfx17GraphElementGridX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeXMaxScaled();
 8004194:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 8004196:	4608      	mov	r0, r1
        return graph->getGraphRangeXMaxScaled();
 8004198:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800419c:	4718      	bx	r3

0800419e <_ZNK8touchgfx17GraphElementGridX17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 800419e:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 80041a2:	4770      	bx	lr

080041a4 <_ZNK8touchgfx17GraphElementGridX18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 80041a4:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 80041a8:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 80041ac:	4403      	add	r3, r0
 80041ae:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 80041b2:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 80041b4:	b200      	sxth	r0, r0
 80041b6:	4770      	bx	lr

080041b8 <_ZNK8touchgfx17GraphElementGridX20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 80041b8:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 80041bc:	4770      	bx	lr

080041be <_ZNK8touchgfx17GraphElementGridX18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80041be:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 80041c2:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 80041c6:	4403      	add	r3, r0
 80041c8:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 80041cc:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 80041ce:	b200      	sxth	r0, r0
 80041d0:	4770      	bx	lr

080041d2 <_ZNK8touchgfx17GraphElementGridX15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenXQ5(x);
 80041d2:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 80041d4:	4608      	mov	r0, r1
        return graph->valueToScreenXQ5(x);
 80041d6:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 80041da:	4611      	mov	r1, r2
 80041dc:	4718      	bx	r3

080041de <_ZNK8touchgfx17GraphElementGridY13enclosingAreaEPKNS_17AbstractDataGraphE>:
 80041de:	f8b2 1118 	ldrh.w	r1, [r2, #280]	; 0x118
    {
        return convertToGraphScaleY(graph, gridInterval, dataScale);
    }

protected:
    virtual Rect enclosingArea(const AbstractDataGraph* graph) const
 80041e2:	b530      	push	{r4, r5, lr}
        return leftPadding;
 80041e4:	f9b2 5116 	ldrsh.w	r5, [r2, #278]	; 0x116
 80041e8:	8005      	strh	r5, [r0, #0]
        return graphArea.getWidth() - (leftPadding + rightPadding);
 80041ea:	186c      	adds	r4, r5, r1
 80041ec:	f8b2 1040 	ldrh.w	r1, [r2, #64]	; 0x40
        return rect.height;
 80041f0:	f9b2 2042 	ldrsh.w	r2, [r2, #66]	; 0x42
 80041f4:	80c2      	strh	r2, [r0, #6]
 80041f6:	1b09      	subs	r1, r1, r4
 80041f8:	2400      	movs	r4, #0
 80041fa:	8044      	strh	r4, [r0, #2]
 80041fc:	8081      	strh	r1, [r0, #4]
    {
        return Rect(graph->getGraphAreaPaddingLeft(), 0, graph->getGraphAreaWidth(), graph->getGraphAreaHeightIncludingPadding());
    }
 80041fe:	bd30      	pop	{r4, r5, pc}

08004200 <_ZNK8touchgfx17GraphElementGridY8lineRectEssss>:
 8004200:	8002      	strh	r2, [r0, #0]
 8004202:	8083      	strh	r3, [r0, #4]
 8004204:	f9bd 2000 	ldrsh.w	r2, [sp]
 8004208:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800420c:	8042      	strh	r2, [r0, #2]
 800420e:	80c3      	strh	r3, [r0, #6]

    virtual Rect lineRect(int16_t start, int16_t length, int16_t pos, int16_t width) const
    {
        return Rect(start, pos, length, width);
    }
 8004210:	4770      	bx	lr

08004212 <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:

    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMinScaled();
 8004212:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMinScaled(const AbstractDataGraph* graph) const
 8004214:	4608      	mov	r0, r1
        return graph->getGraphRangeYMinScaled();
 8004216:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800421a:	4718      	bx	r3

0800421c <_ZNK8touchgfx17GraphElementGridY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
    {
        return graph->getGraphRangeYMaxScaled();
 800421c:	680b      	ldr	r3, [r1, #0]
    virtual int getGraphRangeMaxScaled(const AbstractDataGraph* graph) const
 800421e:	4608      	mov	r0, r1
        return graph->getGraphRangeYMaxScaled();
 8004220:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 8004224:	4718      	bx	r3

08004226 <_ZNK8touchgfx17GraphElementGridY17getGraphAreaStartEPKNS_17AbstractDataGraphE>:
    }

    virtual int getGraphAreaStart(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingLeft();
    }
 8004226:	f9b1 0116 	ldrsh.w	r0, [r1, #278]	; 0x116
 800422a:	4770      	bx	lr

0800422c <_ZNK8touchgfx17GraphElementGridY18getGraphAreaLengthEPKNS_17AbstractDataGraphE>:
 800422c:	f8b1 0116 	ldrh.w	r0, [r1, #278]	; 0x116
 8004230:	f8b1 3118 	ldrh.w	r3, [r1, #280]	; 0x118
 8004234:	4403      	add	r3, r0
 8004236:	f8b1 0040 	ldrh.w	r0, [r1, #64]	; 0x40
 800423a:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaLength(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaWidth();
    }
 800423c:	b200      	sxth	r0, r0
 800423e:	4770      	bx	lr

08004240 <_ZNK8touchgfx17GraphElementGridY20getGraphAreaStartPosEPKNS_17AbstractDataGraphE>:

    virtual int getGraphAreaStartPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaPaddingTop();
    }
 8004240:	f9b1 0114 	ldrsh.w	r0, [r1, #276]	; 0x114
 8004244:	4770      	bx	lr

08004246 <_ZNK8touchgfx17GraphElementGridY18getGraphAreaEndPosEPKNS_17AbstractDataGraphE>:
        return graphArea.getHeight() - (topPadding + bottomPadding);
 8004246:	f8b1 0114 	ldrh.w	r0, [r1, #276]	; 0x114
 800424a:	f8b1 311a 	ldrh.w	r3, [r1, #282]	; 0x11a
 800424e:	4403      	add	r3, r0
 8004250:	f8b1 0042 	ldrh.w	r0, [r1, #66]	; 0x42
 8004254:	1ac0      	subs	r0, r0, r3

    virtual int getGraphAreaEndPos(const AbstractDataGraph* graph) const
    {
        return graph->getGraphAreaHeight();
    }
 8004256:	b200      	sxth	r0, r0
 8004258:	4770      	bx	lr

0800425a <_ZNK8touchgfx17GraphElementGridY15valueToScreenQ5EPKNS_17AbstractDataGraphEi>:
        return graph->valueToScreenYQ5(y);
 800425a:	680b      	ldr	r3, [r1, #0]

    virtual CWRUtil::Q5 valueToScreenQ5(const AbstractDataGraph* graph, int value) const
 800425c:	4608      	mov	r0, r1
        return graph->valueToScreenYQ5(y);
 800425e:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 8004262:	4611      	mov	r1, r2
 8004264:	4718      	bx	r3

08004266 <_ZN21PulseSpectrumViewBase10clearGraphEv>:
     * Virtual Action Handlers
     */
    virtual void clearGraph()
    {
        // Override and implement this function in PulseSpectrum
    }
 8004266:	4770      	bx	lr

08004268 <_ZN21PulseSpectrumViewBase11setupScreenEv>:
}

void PulseSpectrumViewBase::setupScreen()
{

}
 8004268:	4770      	bx	lr

0800426a <_ZN8touchgfx8CallbackI21PulseSpectrumViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800426a:	4770      	bx	lr

0800426c <_ZN8touchgfx5GraphILs1000EED1Ev>:
 * The Graph will show a graph of data points, drawn from lower x valut to highest x value.
 *
 * @tparam CAPACITY The maximum number of data points on the graph.
 */
template <int16_t CAPACITY>
class Graph : public GraphData
 800426c:	4770      	bx	lr

0800426e <_ZN8touchgfx17GraphElementGridYD1Ev>:
class GraphElementGridY : public GraphElementGridBase
 800426e:	4770      	bx	lr

08004270 <_ZN8touchgfx17GraphElementGridXD1Ev>:
class GraphElementGridX : public GraphElementGridBase
 8004270:	4770      	bx	lr

08004272 <_ZN8touchgfx8CallbackI21PulseSpectrumViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004272:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004274:	68c2      	ldr	r2, [r0, #12]
 8004276:	6844      	ldr	r4, [r0, #4]
 8004278:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 800427a:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 800427c:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8004280:	07d2      	lsls	r2, r2, #31
 8004282:	bf48      	it	mi
 8004284:	5962      	ldrmi	r2, [r4, r5]
 8004286:	689b      	ldr	r3, [r3, #8]
    }
 8004288:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 800428a:	bf48      	it	mi
 800428c:	58d3      	ldrmi	r3, [r2, r3]
 800428e:	4718      	bx	r3

08004290 <_ZNK8touchgfx8CallbackI21PulseSpectrumViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8004290:	6843      	ldr	r3, [r0, #4]
 8004292:	b12b      	cbz	r3, 80042a0 <_ZNK8touchgfx8CallbackI21PulseSpectrumViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8004294:	6883      	ldr	r3, [r0, #8]
 8004296:	b92b      	cbnz	r3, 80042a4 <_ZNK8touchgfx8CallbackI21PulseSpectrumViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8004298:	68c0      	ldr	r0, [r0, #12]
 800429a:	f000 0001 	and.w	r0, r0, #1
 800429e:	4770      	bx	lr
 80042a0:	4618      	mov	r0, r3
 80042a2:	4770      	bx	lr
 80042a4:	2001      	movs	r0, #1
    }
 80042a6:	4770      	bx	lr

080042a8 <_ZN8touchgfx17GraphElementGridXD0Ev>:
 80042a8:	b510      	push	{r4, lr}
 80042aa:	2140      	movs	r1, #64	; 0x40
 80042ac:	4604      	mov	r4, r0
 80042ae:	f01c f9ff 	bl	80206b0 <_ZdlPvj>
 80042b2:	4620      	mov	r0, r4
 80042b4:	bd10      	pop	{r4, pc}

080042b6 <_ZN8touchgfx17GraphElementGridYD0Ev>:
class GraphElementGridY : public GraphElementGridBase
 80042b6:	b510      	push	{r4, lr}
 80042b8:	2140      	movs	r1, #64	; 0x40
 80042ba:	4604      	mov	r4, r0
 80042bc:	f01c f9f8 	bl	80206b0 <_ZdlPvj>
 80042c0:	4620      	mov	r0, r4
 80042c2:	bd10      	pop	{r4, pc}

080042c4 <_ZN8touchgfx5GraphILs1000EED0Ev>:
 80042c4:	b510      	push	{r4, lr}
 80042c6:	f242 0184 	movw	r1, #8324	; 0x2084
 80042ca:	4604      	mov	r4, r0
 80042cc:	f01c f9f0 	bl	80206b0 <_ZdlPvj>
 80042d0:	4620      	mov	r0, r4
 80042d2:	bd10      	pop	{r4, pc}

080042d4 <_ZN8touchgfx8CallbackI21PulseSpectrumViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 80042d4:	b510      	push	{r4, lr}
 80042d6:	2110      	movs	r1, #16
 80042d8:	4604      	mov	r4, r0
 80042da:	f01c f9e9 	bl	80206b0 <_ZdlPvj>
 80042de:	4620      	mov	r0, r4
 80042e0:	bd10      	pop	{r4, pc}

080042e2 <_ZNK8touchgfx17GraphElementGridX30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 80042e2:	b513      	push	{r0, r1, r4, lr}
 80042e4:	4603      	mov	r3, r0
 80042e6:	4608      	mov	r0, r1
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 80042e8:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 80042ec:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleX(graph, gridInterval, dataScale);
 80042ee:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 80042f0:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 80042f4:	4798      	blx	r3
 80042f6:	9901      	ldr	r1, [sp, #4]
 80042f8:	4602      	mov	r2, r0
 80042fa:	4620      	mov	r0, r4
    }
 80042fc:	b002      	add	sp, #8
 80042fe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleX());
 8004302:	f009 bc8d 	b.w	800dc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

08004306 <_ZNK8touchgfx17GraphElementGridY30getCorrectlyScaledGridIntervalEPKNS_17AbstractDataGraphE>:
    virtual int getCorrectlyScaledGridInterval(const AbstractDataGraph* graph) const
 8004306:	b513      	push	{r0, r1, r4, lr}
 8004308:	4603      	mov	r3, r0
 800430a:	4608      	mov	r0, r1
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 800430c:	e9d3 140c 	ldrd	r1, r4, [r3, #48]	; 0x30
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8004310:	6803      	ldr	r3, [r0, #0]
        return convertToGraphScaleY(graph, gridInterval, dataScale);
 8004312:	9101      	str	r1, [sp, #4]
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8004314:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8004318:	4798      	blx	r3
 800431a:	9901      	ldr	r1, [sp, #4]
 800431c:	4602      	mov	r2, r0
 800431e:	4620      	mov	r0, r4
    }
 8004320:	b002      	add	sp, #8
 8004322:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        return AbstractDataGraph::convertToNewScale(value, scale, graph->getScaleY());
 8004326:	f009 bc7b 	b.w	800dc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
	...

0800432c <_ZN21PulseSpectrumViewBaseD1Ev>:
PulseSpectrumViewBase::~PulseSpectrumViewBase()
 800432c:	b510      	push	{r4, lr}
 800432e:	4b03      	ldr	r3, [pc, #12]	; (800433c <_ZN21PulseSpectrumViewBaseD1Ev+0x10>)
 8004330:	6003      	str	r3, [r0, #0]
 8004332:	4604      	mov	r4, r0
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004334:	f00b fdf0 	bl	800ff18 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 8004338:	4620      	mov	r0, r4
 800433a:	bd10      	pop	{r4, pc}
 800433c:	08022f84 	.word	0x08022f84

08004340 <_ZN21PulseSpectrumViewBaseD0Ev>:
PulseSpectrumViewBase::~PulseSpectrumViewBase()
 8004340:	b507      	push	{r0, r1, r2, lr}
 8004342:	4b07      	ldr	r3, [pc, #28]	; (8004360 <_ZN21PulseSpectrumViewBaseD0Ev+0x20>)
 8004344:	6003      	str	r3, [r0, #0]
 8004346:	9001      	str	r0, [sp, #4]
    touchgfx::CanvasWidgetRenderer::resetBuffer();
 8004348:	f00b fde6 	bl	800ff18 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>
}
 800434c:	9801      	ldr	r0, [sp, #4]
 800434e:	f44f 41a5 	mov.w	r1, #21120	; 0x5280
 8004352:	f01c f9ad 	bl	80206b0 <_ZdlPvj>
 8004356:	9801      	ldr	r0, [sp, #4]
 8004358:	b003      	add	sp, #12
 800435a:	f85d fb04 	ldr.w	pc, [sp], #4
 800435e:	bf00      	nop
 8004360:	08022f84 	.word	0x08022f84

08004364 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv>:
    virtual void invalidateContent() const
 8004364:	b508      	push	{r3, lr}
        if (alpha > 0)
 8004366:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800436a:	b10b      	cbz	r3, 8004370 <_ZNK8touchgfx17AbstractDataGraph17invalidateContentEv+0xc>
            Container::invalidateContent();
 800436c:	f7fd fd29 	bl	8001dc2 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 8004370:	bd08      	pop	{r3, pc}
	...

08004374 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointYScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 8004374:	2900      	cmp	r1, #0
    virtual int indexToDataPointYScaled(int16_t index) const
 8004376:	b508      	push	{r3, lr}
        assert(index >= 0 && index < usedCapacity);
 8004378:	db03      	blt.n	8004382 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointYScaledEs+0xe>
 800437a:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800437e:	428b      	cmp	r3, r1
 8004380:	dc06      	bgt.n	8004390 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointYScaledEs+0x1c>
 8004382:	4b06      	ldr	r3, [pc, #24]	; (800439c <_ZNK8touchgfx15StaticDataGraph23indexToDataPointYScaledEs+0x28>)
 8004384:	4a06      	ldr	r2, [pc, #24]	; (80043a0 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointYScaledEs+0x2c>)
 8004386:	4807      	ldr	r0, [pc, #28]	; (80043a4 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointYScaledEs+0x30>)
 8004388:	f240 61f5 	movw	r1, #1781	; 0x6f5
 800438c:	f01c f9be 	bl	802070c <__assert_func>
        return yValues[index];
 8004390:	f8d0 3140 	ldr.w	r3, [r0, #320]	; 0x140
    }
 8004394:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8004398:	bd08      	pop	{r3, pc}
 800439a:	bf00      	nop
 800439c:	08022b14 	.word	0x08022b14
 80043a0:	08022b37 	.word	0x08022b37
 80043a4:	08022b85 	.word	0x08022b85

080043a8 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointXScaledEs>:
        assert(index >= 0 && index < usedCapacity);
 80043a8:	2900      	cmp	r1, #0
    virtual int indexToDataPointXScaled(int16_t index) const
 80043aa:	b508      	push	{r3, lr}
        assert(index >= 0 && index < usedCapacity);
 80043ac:	db03      	blt.n	80043b6 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointXScaledEs+0xe>
 80043ae:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 80043b2:	428b      	cmp	r3, r1
 80043b4:	dc06      	bgt.n	80043c4 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointXScaledEs+0x1c>
 80043b6:	4b06      	ldr	r3, [pc, #24]	; (80043d0 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointXScaledEs+0x28>)
 80043b8:	4a06      	ldr	r2, [pc, #24]	; (80043d4 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointXScaledEs+0x2c>)
 80043ba:	4807      	ldr	r0, [pc, #28]	; (80043d8 <_ZNK8touchgfx15StaticDataGraph23indexToDataPointXScaledEs+0x30>)
 80043bc:	f240 61e5 	movw	r1, #1765	; 0x6e5
 80043c0:	f01c f9a4 	bl	802070c <__assert_func>
        return xValues[index];
 80043c4:	f8d0 313c 	ldr.w	r3, [r0, #316]	; 0x13c
    }
 80043c8:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80043cc:	bd08      	pop	{r3, pc}
 80043ce:	bf00      	nop
 80043d0:	08022b14 	.word	0x08022b14
 80043d4:	08022be2 	.word	0x08022be2
 80043d8:	08022b85 	.word	0x08022b85

080043dc <_ZN21PulseSpectrumViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void PulseSpectrumViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &backButton)
 80043dc:	f500 530d 	add.w	r3, r0, #9024	; 0x2340
 80043e0:	3308      	adds	r3, #8
 80043e2:	4299      	cmp	r1, r3
{
 80043e4:	b570      	push	{r4, r5, r6, lr}
 80043e6:	4604      	mov	r4, r0
 80043e8:	460d      	mov	r5, r1
    if (&src == &backButton)
 80043ea:	d103      	bne.n	80043f4 <_ZN21PulseSpectrumViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x18>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80043ec:	f00d fa24 	bl	8011838 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //goBack
        //When backButton clicked change screen to Menu
        //Go to Menu with no screen transition
        application().gotoMenuScreenNoTransition();
 80043f0:	f7ff f840 	bl	8003474 <_ZN23FrontendApplicationBase26gotoMenuScreenNoTransitionEv>
    }
    if (&src == &clearButton)
 80043f4:	f504 530a 	add.w	r3, r4, #8832	; 0x2280
 80043f8:	3338      	adds	r3, #56	; 0x38
 80043fa:	429d      	cmp	r5, r3
 80043fc:	d105      	bne.n	800440a <_ZN21PulseSpectrumViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x2e>
    {
        //clearGraph
        //When clearButton clicked call virtual function
        //Call clearGraph
        clearGraph();
 80043fe:	6823      	ldr	r3, [r4, #0]
 8004400:	4620      	mov	r0, r4
 8004402:	6adb      	ldr	r3, [r3, #44]	; 0x2c
    }
}
 8004404:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        clearGraph();
 8004408:	4718      	bx	r3
}
 800440a:	bd70      	pop	{r4, r5, r6, pc}

0800440c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>:
     * @param  factor2 The second factor.
     * @param  divisor The divisor.
     *
     * @return factor1 * factor2 / divisor as a Q5
     */
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 800440c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    {
        int32_t remainder;
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 800440e:	ab01      	add	r3, sp, #4
    static Q5 muldiv_toQ5(int32_t factor1, int32_t factor2, int32_t divisor)
 8004410:	4615      	mov	r5, r2
        int32_t result = muldiv(factor1, factor2, divisor, remainder);
 8004412:	f00e fc48 	bl	8012ca6 <_ZN8touchgfx6muldivElllRl>
        if (result >= 0)
 8004416:	2800      	cmp	r0, #0
 8004418:	ea4f 1440 	mov.w	r4, r0, lsl #5
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 800441c:	9901      	ldr	r1, [sp, #4]
 800441e:	462a      	mov	r2, r5
 8004420:	f04f 0020 	mov.w	r0, #32
        if (result >= 0)
 8004424:	db04      	blt.n	8004430 <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x24>
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8004426:	f00e fc5d 	bl	8012ce4 <_ZN8touchgfx6muldivElll>
            return Q5(v + q5.v);
 800442a:	4420      	add	r0, r4
        {
            return toQ5(result) + muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
        }
        return toQ5(result) - muldivQ5(Q5(Rasterizer::POLY_BASE_SIZE), Q5(remainder), Q5(divisor));
    }
 800442c:	b003      	add	sp, #12
 800442e:	bd30      	pop	{r4, r5, pc}
        return Q5(muldiv((int)factor1, (int)factor2, (int)divisor));
 8004430:	f00e fc58 	bl	8012ce4 <_ZN8touchgfx6muldivElll>
            return Q5(v - q5.v);
 8004434:	1a20      	subs	r0, r4, r0
 8004436:	e7f9      	b.n	800442c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll+0x20>

08004438 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenYQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 8004438:	b570      	push	{r4, r5, r6, lr}
        return graphArea.getHeight() - (topPadding + bottomPadding);
 800443a:	f9b0 4114 	ldrsh.w	r4, [r0, #276]	; 0x114
 800443e:	f8b0 511a 	ldrh.w	r5, [r0, #282]	; 0x11a
 8004442:	1963      	adds	r3, r4, r5
 8004444:	f8b0 5042 	ldrh.w	r5, [r0, #66]	; 0x42
 8004448:	1aed      	subs	r5, r5, r3
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 800444a:	e9d0 324d 	ldrd	r3, r2, [r0, #308]	; 0x134
    virtual CWRUtil::Q5 valueToScreenYQ5(int y) const
 800444e:	460e      	mov	r6, r1
        return CWRUtil::toQ5(graphAreaHeight + topPadding - 1) - CWRUtil::muldiv_toQ5(y - graphRangeMinY, graphAreaHeight - 1, graphRangeMaxY - graphRangeMinY);
 8004450:	b22d      	sxth	r5, r5
 8004452:	1ad2      	subs	r2, r2, r3
 8004454:	1e69      	subs	r1, r5, #1
 8004456:	1af0      	subs	r0, r6, r3
 8004458:	f7ff ffd8 	bl	800440c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
 800445c:	442c      	add	r4, r5
 800445e:	3c01      	subs	r4, #1
    }
 8004460:	ebc0 1044 	rsb	r0, r0, r4, lsl #5
 8004464:	bd70      	pop	{r4, r5, r6, pc}

08004466 <_ZNK8touchgfx17AbstractDataGraph16valueToScreenXQ5Ei>:
    virtual CWRUtil::Q5 valueToScreenXQ5(int x) const
 8004466:	b538      	push	{r3, r4, r5, lr}
 8004468:	4604      	mov	r4, r0
 800446a:	4608      	mov	r0, r1
        return graphArea.getWidth() - (leftPadding + rightPadding);
 800446c:	f8b4 3118 	ldrh.w	r3, [r4, #280]	; 0x118
 8004470:	f8b4 1116 	ldrh.w	r1, [r4, #278]	; 0x116
 8004474:	440b      	add	r3, r1
 8004476:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 800447a:	e9d4 524b 	ldrd	r5, r2, [r4, #300]	; 0x12c
        return graphArea.getWidth() - (leftPadding + rightPadding);
 800447e:	1ac9      	subs	r1, r1, r3
        return CWRUtil::muldiv_toQ5(x - graphRangeMinX, getGraphAreaWidth() - 1, graphRangeMaxX - graphRangeMinX) + CWRUtil::toQ5(leftPadding);
 8004480:	b209      	sxth	r1, r1
 8004482:	1b52      	subs	r2, r2, r5
 8004484:	3901      	subs	r1, #1
 8004486:	1b40      	subs	r0, r0, r5
 8004488:	f7ff ffc0 	bl	800440c <_ZN8touchgfx7CWRUtil11muldiv_toQ5Elll>
            return Q5(v + q5.v);
 800448c:	f9b4 3116 	ldrsh.w	r3, [r4, #278]	; 0x116
    }
 8004490:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 8004494:	bd38      	pop	{r3, r4, r5, pc}
	...

08004498 <_ZN8touchgfx25AbstractGraphElementNoCWRC1Ev>:
    AbstractGraphElementNoCWR()
 8004498:	b510      	push	{r4, lr}
 800449a:	4604      	mov	r4, r0
        : CanvasWidget()
 800449c:	f008 ffb0 	bl	800d400 <_ZN8touchgfx12CanvasWidgetC1Ev>
        : color(0)
 80044a0:	4b02      	ldr	r3, [pc, #8]	; (80044ac <_ZN8touchgfx25AbstractGraphElementNoCWRC1Ev+0x14>)
 80044a2:	6023      	str	r3, [r4, #0]
        : color(col)
 80044a4:	2300      	movs	r3, #0
 80044a6:	62e3      	str	r3, [r4, #44]	; 0x2c
    }
 80044a8:	4620      	mov	r0, r4
 80044aa:	bd10      	pop	{r4, pc}
 80044ac:	08022c38 	.word	0x08022c38

080044b0 <_ZN8touchgfx15GraphLabelsBaseC1Ev>:
 * @see GraphLabelsX, GraphLabelsY
 */
class GraphLabelsBase : public AbstractGraphDecoration
{
public:
    GraphLabelsBase()
 80044b0:	b510      	push	{r4, lr}
        : AbstractGraphDecoration(),
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 80044b2:	2230      	movs	r2, #48	; 0x30
    GraphLabelsBase()
 80044b4:	4604      	mov	r4, r0
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 80044b6:	2100      	movs	r1, #0
 80044b8:	f01c f9b4 	bl	8020824 <memset>
class AbstractGraphDecoration : public AbstractGraphElementNoCWR
 80044bc:	4620      	mov	r0, r4
 80044be:	f7ff ffeb 	bl	8004498 <_ZN8touchgfx25AbstractGraphElementNoCWRC1Ev>
          dataScale(1), labelInterval(0), labelTypedText(TYPED_TEXT_INVALID), labelRotation(TEXT_ROTATE_0), labelDecimals(0), labelDecimalPoint('.'), majorLabel(0)
 80044c2:	4b0a      	ldr	r3, [pc, #40]	; (80044ec <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x3c>)
 80044c4:	6023      	str	r3, [r4, #0]
 80044c6:	2201      	movs	r2, #1
 80044c8:	2300      	movs	r3, #0
 80044ca:	e9c4 230c 	strd	r2, r3, [r4, #48]	; 0x30
        : typedTextId(id)
 80044ce:	4a08      	ldr	r2, [pc, #32]	; (80044f0 <_ZN8touchgfx15GraphLabelsBaseC1Ev+0x40>)
 80044d0:	63a2      	str	r2, [r4, #56]	; 0x38
 80044d2:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80044d6:	87a2      	strh	r2, [r4, #60]	; 0x3c
 80044d8:	222e      	movs	r2, #46	; 0x2e
 80044da:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80044de:	f8a4 3042 	strh.w	r3, [r4, #66]	; 0x42
 80044e2:	f8a4 2044 	strh.w	r2, [r4, #68]	; 0x44
 80044e6:	64a3      	str	r3, [r4, #72]	; 0x48
    {
    }
 80044e8:	4620      	mov	r0, r4
 80044ea:	bd10      	pop	{r4, pc}
 80044ec:	08023ad4 	.word	0x08023ad4
 80044f0:	080221bc 	.word	0x080221bc

080044f4 <_ZN8touchgfx8TextAreaC1Ev>:
          visible(true)
 80044f4:	f44f 7180 	mov.w	r1, #256	; 0x100
 80044f8:	8481      	strh	r1, [r0, #36]	; 0x24
 */
class TextArea : public Widget
{
public:
    TextArea()
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 80044fa:	490d      	ldr	r1, [pc, #52]	; (8004530 <_ZN8touchgfx8TextAreaC1Ev+0x3c>)
 80044fc:	6001      	str	r1, [r0, #0]
 80044fe:	490d      	ldr	r1, [pc, #52]	; (8004534 <_ZN8touchgfx8TextAreaC1Ev+0x40>)
 8004500:	6281      	str	r1, [r0, #40]	; 0x28
 8004502:	f64f 71ff 	movw	r1, #65535	; 0xffff
 8004506:	8581      	strh	r1, [r0, #44]	; 0x2c
 8004508:	f44f 017f 	mov.w	r1, #16711680	; 0xff0000
        : x(0), y(0), width(0), height(0)
 800450c:	2200      	movs	r2, #0
 800450e:	6341      	str	r1, [r0, #52]	; 0x34
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8004510:	f04f 31ff 	mov.w	r1, #4294967295
        : x(0), y(0), width(0), height(0)
 8004514:	e9c0 2201 	strd	r2, r2, [r0, #4]
 8004518:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800451c:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8004520:	e9c0 2207 	strd	r2, r2, [r0, #28]
        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
              text(0)
 8004524:	e9c0 1210 	strd	r1, r2, [r0, #64]	; 0x40
        : color(col)
 8004528:	6302      	str	r2, [r0, #48]	; 0x30
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800452a:	8702      	strh	r2, [r0, #56]	; 0x38
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 800452c:	63c2      	str	r2, [r0, #60]	; 0x3c
    }
 800452e:	4770      	bx	lr
 8004530:	08023be8 	.word	0x08023be8
 8004534:	080221bc 	.word	0x080221bc

08004538 <_ZN21PulseSpectrumViewBaseC1Ev>:
PulseSpectrumViewBase::PulseSpectrumViewBase() :
 8004538:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800453c:	ed2d 8b04 	vpush	{d8-d9}
 8004540:	4605      	mov	r5, r0
 8004542:	b091      	sub	sp, #68	; 0x44
    buttonCallback(this, &PulseSpectrumViewBase::buttonCallbackHandler)
 8004544:	46a9      	mov	r9, r5
 8004546:	2600      	movs	r6, #0
 8004548:	f00e fd76 	bl	8013038 <_ZN8touchgfx6ScreenC1Ev>
 800454c:	4bec      	ldr	r3, [pc, #944]	; (8004900 <_ZN21PulseSpectrumViewBaseC1Ev+0x3c8>)
 800454e:	63ee      	str	r6, [r5, #60]	; 0x3c
 8004550:	f849 3b40 	str.w	r3, [r9], #64
 8004554:	4648      	mov	r0, r9
 8004556:	f7ff fb29 	bl	8003bac <_ZN8touchgfx3BoxC1Ev>
 800455a:	f105 036c 	add.w	r3, r5, #108	; 0x6c
 800455e:	f105 0798 	add.w	r7, r5, #152	; 0x98
 8004562:	4618      	mov	r0, r3
 8004564:	ee09 3a90 	vmov	s19, r3
 8004568:	f7ff fb20 	bl	8003bac <_ZN8touchgfx3BoxC1Ev>
        : AbstractDataGraph(capacity), xValues(xvalues), yValues(yvalues)
 800456c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8004570:	4638      	mov	r0, r7
 8004572:	f009 faf1 	bl	800db58 <_ZN8touchgfx17AbstractDataGraphC1Es>
 8004576:	4be3      	ldr	r3, [pc, #908]	; (8004904 <_ZN21PulseSpectrumViewBaseC1Ev+0x3cc>)
 8004578:	f8c5 3098 	str.w	r3, [r5, #152]	; 0x98
{
public:
    Graph()
        : GraphData(CAPACITY, x, y)
 800457c:	f505 73ee 	add.w	r3, r5, #476	; 0x1dc
 8004580:	f8c5 31d4 	str.w	r3, [r5, #468]	; 0x1d4
 8004584:	f507 5387 	add.w	r3, r7, #4320	; 0x10e0
 8004588:	3304      	adds	r3, #4
        StaticDataGraph::setGraphRangeX(0, capacity - 1);
 800458a:	4631      	mov	r1, r6
 800458c:	f240 32e7 	movw	r2, #999	; 0x3e7
        : AbstractDataGraph(capacity), xValues(xvalues), yValues(yvalues)
 8004590:	f8c5 31d8 	str.w	r3, [r5, #472]	; 0x1d8
        StaticDataGraph::setGraphRangeX(0, capacity - 1);
 8004594:	4638      	mov	r0, r7
 8004596:	f7ff fc08 	bl	8003daa <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
 800459a:	4bdb      	ldr	r3, [pc, #876]	; (8004908 <_ZN21PulseSpectrumViewBaseC1Ev+0x3d0>)
 800459c:	f8c5 3098 	str.w	r3, [r5, #152]	; 0x98
 80045a0:	f505 5304 	add.w	r3, r5, #8448	; 0x2100
 80045a4:	331c      	adds	r3, #28
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 80045a6:	4618      	mov	r0, r3
 80045a8:	f505 5400 	add.w	r4, r5, #8192	; 0x2000
 80045ac:	f04f 0b01 	mov.w	fp, #1
 80045b0:	9303      	str	r3, [sp, #12]
 80045b2:	f7ff ff71 	bl	8004498 <_ZN8touchgfx25AbstractGraphElementNoCWRC1Ev>
 80045b6:	230a      	movs	r3, #10
 80045b8:	e9c4 b353 	strd	fp, r3, [r4, #332]	; 0x14c
class GraphElementGridX : public GraphElementGridBase
 80045bc:	4bd3      	ldr	r3, [pc, #844]	; (800490c <_ZN21PulseSpectrumViewBaseC1Ev+0x3d4>)
 80045be:	f8c4 311c 	str.w	r3, [r4, #284]	; 0x11c
 80045c2:	f505 5305 	add.w	r3, r5, #8512	; 0x2140
 80045c6:	331c      	adds	r3, #28
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 80045c8:	f884 b154 	strb.w	fp, [r4, #340]	; 0x154
 80045cc:	f8c4 6158 	str.w	r6, [r4, #344]	; 0x158
 80045d0:	4618      	mov	r0, r3
 80045d2:	9304      	str	r3, [sp, #16]
 80045d4:	f7ff ff60 	bl	8004498 <_ZN8touchgfx25AbstractGraphElementNoCWRC1Ev>
 80045d8:	230a      	movs	r3, #10
 80045da:	f8c4 3190 	str.w	r3, [r4, #400]	; 0x190
class GraphElementGridY : public GraphElementGridBase
 80045de:	4bcc      	ldr	r3, [pc, #816]	; (8004910 <_ZN21PulseSpectrumViewBaseC1Ev+0x3d8>)
 80045e0:	f8c4 315c 	str.w	r3, [r4, #348]	; 0x15c
 80045e4:	f505 5306 	add.w	r3, r5, #8576	; 0x2180
 80045e8:	331c      	adds	r3, #28
        : dataScale(1), gridInterval(10), lineWidth(1), majorGrid(0)
 80045ea:	f8c4 b18c 	str.w	fp, [r4, #396]	; 0x18c
 80045ee:	f884 b194 	strb.w	fp, [r4, #404]	; 0x194
 80045f2:	f8c4 6198 	str.w	r6, [r4, #408]	; 0x198

/**
 * GraphLabelsX will draw labels along the X axis at given intervals. By combining two
 * GraphLabelsX it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsX : public GraphLabelsBase
 80045f6:	4618      	mov	r0, r3
 80045f8:	9305      	str	r3, [sp, #20]
 80045fa:	f7ff ff59 	bl	80044b0 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 80045fe:	4bc5      	ldr	r3, [pc, #788]	; (8004914 <_ZN21PulseSpectrumViewBaseC1Ev+0x3dc>)
 8004600:	f8c4 319c 	str.w	r3, [r4, #412]	; 0x19c
 8004604:	f505 5307 	add.w	r3, r5, #8640	; 0x21c0
 8004608:	3328      	adds	r3, #40	; 0x28

/**
 * GraphLabelsY will draw labels along the Y axis at given intervals. By combining two
 * GraphLabelsY it is possible to have different appearance for major and minor y offsets.
 */
class GraphLabelsY : public GraphLabelsBase
 800460a:	4618      	mov	r0, r3
 800460c:	9306      	str	r3, [sp, #24]
 800460e:	f7ff ff4f 	bl	80044b0 <_ZN8touchgfx15GraphLabelsBaseC1Ev>
 8004612:	4bc1      	ldr	r3, [pc, #772]	; (8004918 <_ZN21PulseSpectrumViewBaseC1Ev+0x3e0>)
 8004614:	f8c4 31e8 	str.w	r3, [r4, #488]	; 0x1e8
 8004618:	f505 5308 	add.w	r3, r5, #8704	; 0x2200
 800461c:	3334      	adds	r3, #52	; 0x34
 */
class GraphElementHistogram : public AbstractGraphElementNoCWR
{
public:
    GraphElementHistogram()
        : dataScale(1), yBaseline(0), barWidth(2), barOffset(0)
 800461e:	4618      	mov	r0, r3
 8004620:	9307      	str	r3, [sp, #28]
 8004622:	f505 5a09 	add.w	sl, r5, #8768	; 0x2240
 8004626:	f7ff ff37 	bl	8004498 <_ZN8touchgfx25AbstractGraphElementNoCWRC1Ev>
 800462a:	4bbc      	ldr	r3, [pc, #752]	; (800491c <_ZN21PulseSpectrumViewBaseC1Ev+0x3e4>)
 800462c:	f8c4 3234 	str.w	r3, [r4, #564]	; 0x234
 8004630:	f10a 0a30 	add.w	sl, sl, #48	; 0x30
 8004634:	2302      	movs	r3, #2
 8004636:	e9c4 b699 	strd	fp, r6, [r4, #612]	; 0x264
 800463a:	f8c4 326c 	str.w	r3, [r4, #620]	; 0x26c
 800463e:	4650      	mov	r0, sl
 8004640:	f7ff ff58 	bl	80044f4 <_ZN8touchgfx8TextAreaC1Ev>
 8004644:	f505 530a 	add.w	r3, r5, #8832	; 0x2280
 8004648:	3338      	adds	r3, #56	; 0x38
 800464a:	4618      	mov	r0, r3
 800464c:	ee08 3a10 	vmov	s16, r3
 8004650:	f00b fc2a 	bl	800fea8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004654:	f505 530c 	add.w	r3, r5, #8960	; 0x2300
 8004658:	4618      	mov	r0, r3
 800465a:	ee08 3a90 	vmov	s17, r3
 800465e:	f7ff ff49 	bl	80044f4 <_ZN8touchgfx8TextAreaC1Ev>
 8004662:	f505 530d 	add.w	r3, r5, #9024	; 0x2340
 8004666:	3308      	adds	r3, #8
 8004668:	4618      	mov	r0, r3
 800466a:	ee09 3a10 	vmov	s18, r3
 800466e:	f00b fc1b 	bl	800fea8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
        : pobject(pObject), pmemfun(pmemfun_1)
 8004672:	4aab      	ldr	r2, [pc, #684]	; (8004920 <_ZN21PulseSpectrumViewBaseC1Ev+0x3e8>)
 8004674:	f505 43a0 	add.w	r3, r5, #20480	; 0x5000
 8004678:	e9c3 259c 	strd	r2, r5, [r3, #624]	; 0x270
 800467c:	4aa9      	ldr	r2, [pc, #676]	; (8004924 <_ZN21PulseSpectrumViewBaseC1Ev+0x3ec>)
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
 800467e:	f505 500e 	add.w	r0, r5, #9088	; 0x2380
 8004682:	e9c3 269e 	strd	r2, r6, [r3, #632]	; 0x278
 8004686:	f642 61e0 	movw	r1, #12000	; 0x2ee0
 800468a:	3010      	adds	r0, #16
 800468c:	f00b fc3a 	bl	800ff04 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>
    __background.setPosition(0, 0, 800, 480);
 8004690:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 8004694:	4632      	mov	r2, r6
 8004696:	9300      	str	r3, [sp, #0]
 8004698:	4631      	mov	r1, r6
 800469a:	4648      	mov	r0, r9
 800469c:	f44f 7348 	mov.w	r3, #800	; 0x320
 80046a0:	f7ff fa70 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
 80046a4:	f105 0804 	add.w	r8, r5, #4
 80046a8:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80046ac:	66ab      	str	r3, [r5, #104]	; 0x68
 80046ae:	4649      	mov	r1, r9
 80046b0:	4640      	mov	r0, r8
 80046b2:	f007 f9ad 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(0, 0, 800, 480);
 80046b6:	f44f 73f0 	mov.w	r3, #480	; 0x1e0
 80046ba:	4632      	mov	r2, r6
 80046bc:	ee19 0a90 	vmov	r0, s19
 80046c0:	9300      	str	r3, [sp, #0]
 80046c2:	4631      	mov	r1, r6
 80046c4:	f44f 7348 	mov.w	r3, #800	; 0x320
 80046c8:	f7ff fa5c 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
 80046cc:	f04f 33ff 	mov.w	r3, #4294967295
 80046d0:	ee19 1a90 	vmov	r1, s19
 80046d4:	f8c5 3094 	str.w	r3, [r5, #148]	; 0x94
 80046d8:	4640      	mov	r0, r8
 80046da:	f007 f999 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    histogram.setPosition(1, -5, 800, 430);
 80046de:	f44f 73d7 	mov.w	r3, #430	; 0x1ae
 80046e2:	9300      	str	r3, [sp, #0]
 80046e4:	4659      	mov	r1, fp
 80046e6:	f44f 7348 	mov.w	r3, #800	; 0x320
 80046ea:	4638      	mov	r0, r7
 80046ec:	f06f 0204 	mvn.w	r2, #4
 80046f0:	f7ff fa48 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
    histogram.setScaleX(1);
 80046f4:	4632      	mov	r2, r6
 80046f6:	4659      	mov	r1, fp
 80046f8:	4638      	mov	r0, r7
 80046fa:	f009 fa99 	bl	800dc30 <_ZN8touchgfx15StaticDataGraph9setScaleXEib>
    histogram.setScaleY(1);
 80046fe:	4632      	mov	r2, r6
 8004700:	4659      	mov	r1, fp
 8004702:	4638      	mov	r0, r7
 8004704:	f009 fab4 	bl	800dc70 <_ZN8touchgfx15StaticDataGraph9setScaleYEib>
    histogram.setGraphAreaMargin(3, 68, 0, 29);
 8004708:	231d      	movs	r3, #29
 800470a:	9300      	str	r3, [sp, #0]
 800470c:	4638      	mov	r0, r7
 800470e:	4633      	mov	r3, r6
 8004710:	2244      	movs	r2, #68	; 0x44
 8004712:	2103      	movs	r1, #3
 8004714:	f009 f9d1 	bl	800daba <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
    histogram.setGraphAreaPadding(12, 5, 12, 3);
 8004718:	2303      	movs	r3, #3
 800471a:	9300      	str	r3, [sp, #0]
 800471c:	230c      	movs	r3, #12
 800471e:	4619      	mov	r1, r3
 8004720:	4638      	mov	r0, r7
 8004722:	2205      	movs	r2, #5
 8004724:	f009 f8db 	bl	800d8de <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>
    histogram.setGraphRangeX(0, 999);
 8004728:	4631      	mov	r1, r6
 800472a:	4638      	mov	r0, r7
 800472c:	f240 32e7 	movw	r2, #999	; 0x3e7
 8004730:	f7ff fb3b 	bl	8003daa <_ZN8touchgfx17AbstractDataGraph14setGraphRangeXEii>
    histogram.setGraphRangeY(0, 200);
 8004734:	4631      	mov	r1, r6
 8004736:	4638      	mov	r0, r7
 8004738:	22c8      	movs	r2, #200	; 0xc8
 800473a:	f7ff fbc2 	bl	8003ec2 <_ZN8touchgfx17AbstractDataGraph14setGraphRangeYEii>
        setIntervalScaled(abs(interval) * dataScale);
 800473e:	f8d4 114c 	ldr.w	r1, [r4, #332]	; 0x14c
        color = newColor;
 8004742:	f8df 91e4 	ldr.w	r9, [pc, #484]	; 8004928 <_ZN21PulseSpectrumViewBaseC1Ev+0x3f0>
 8004746:	f8c4 9148 	str.w	r9, [r4, #328]	; 0x148
        setIntervalScaled(abs(interval) * dataScale);
 800474a:	2364      	movs	r3, #100	; 0x64
 800474c:	fb03 f001 	mul.w	r0, r3, r1
 * @return The absolute (non-negative) value of d.
 */
template <typename T>
T abs(T d)
{
    return (d < 0) ? -d : d;
 8004750:	2800      	cmp	r0, #0
 8004752:	bfb8      	it	lt
 8004754:	4240      	neglt	r0, r0
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004756:	465a      	mov	r2, fp
        lineWidth = width;
 8004758:	f884 b154 	strb.w	fp, [r4, #340]	; 0x154
        gridInterval = abs(interval);
 800475c:	f8c4 0150 	str.w	r0, [r4, #336]	; 0x150
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004760:	f009 fa5e 	bl	800dc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
    histogram.addGraphElement(histogramMajorXAxisGrid);
 8004764:	9903      	ldr	r1, [sp, #12]
        dataScale = scale;
 8004766:	e9c4 b053 	strd	fp, r0, [r4, #332]	; 0x14c
 800476a:	4638      	mov	r0, r7
 800476c:	f009 f8c2 	bl	800d8f4 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        setIntervalScaled(abs(interval) * dataScale);
 8004770:	f8d4 118c 	ldr.w	r1, [r4, #396]	; 0x18c
        color = newColor;
 8004774:	f8c4 9188 	str.w	r9, [r4, #392]	; 0x188
        setIntervalScaled(abs(interval) * dataScale);
 8004778:	2332      	movs	r3, #50	; 0x32
 800477a:	fb03 f001 	mul.w	r0, r3, r1
 800477e:	2800      	cmp	r0, #0
 8004780:	bfb8      	it	lt
 8004782:	4240      	neglt	r0, r0
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 8004784:	465a      	mov	r2, fp
        lineWidth = width;
 8004786:	f884 b194 	strb.w	fp, [r4, #404]	; 0x194
        gridInterval = abs(interval);
 800478a:	f8c4 0190 	str.w	r0, [r4, #400]	; 0x190
        gridInterval = AbstractDataGraph::convertToNewScale(gridInterval, dataScale, scale);
 800478e:	f009 fa47 	bl	800dc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
    histogram.addGraphElement(histogramMajorYAxisGrid);
 8004792:	9904      	ldr	r1, [sp, #16]
        dataScale = scale;
 8004794:	e9c4 b063 	strd	fp, r0, [r4, #396]	; 0x18c
 8004798:	4638      	mov	r0, r7
 800479a:	f009 f8ab 	bl	800d8f4 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
        setIntervalScaled(AbstractDataGraph::int2scaled(interval, dataScale));
 800479e:	f8d4 11cc 	ldr.w	r1, [r4, #460]	; 0x1cc
        return i * scale;
 80047a2:	2364      	movs	r3, #100	; 0x64
 80047a4:	fb03 f001 	mul.w	r0, r3, r1
 80047a8:	2800      	cmp	r0, #0
class TypedText
 80047aa:	f04f 030a 	mov.w	r3, #10
 80047ae:	bfb8      	it	lt
 80047b0:	4240      	neglt	r0, r0
 80047b2:	f8a4 31d8 	strh.w	r3, [r4, #472]	; 0x1d8
        color = newColor;
 80047b6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 80047ba:	f8c4 31c8 	str.w	r3, [r4, #456]	; 0x1c8
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80047be:	465a      	mov	r2, fp
        labelInterval = abs(interval);
 80047c0:	f8c4 01d0 	str.w	r0, [r4, #464]	; 0x1d0
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80047c4:	f009 fa2c 	bl	800dc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
    histogram.addBottomElement(histogramMajorXAxisLabel);
 80047c8:	9905      	ldr	r1, [sp, #20]
        dataScale = scale;
 80047ca:	e9c4 b073 	strd	fp, r0, [r4, #460]	; 0x1cc
 80047ce:	4638      	mov	r0, r7
 80047d0:	f009 f8b4 	bl	800d93c <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>
        setIntervalScaled(AbstractDataGraph::int2scaled(interval, dataScale));
 80047d4:	f8d4 1218 	ldr.w	r1, [r4, #536]	; 0x218
 80047d8:	2332      	movs	r3, #50	; 0x32
 80047da:	fb03 f001 	mul.w	r0, r3, r1
 80047de:	2800      	cmp	r0, #0
 80047e0:	f04f 0309 	mov.w	r3, #9
 80047e4:	bfb8      	it	lt
 80047e6:	4240      	neglt	r0, r0
 80047e8:	f8a4 3224 	strh.w	r3, [r4, #548]	; 0x224
 80047ec:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80047f0:	465a      	mov	r2, fp
 80047f2:	f8c4 3214 	str.w	r3, [r4, #532]	; 0x214
        labelInterval = abs(interval);
 80047f6:	f8c4 021c 	str.w	r0, [r4, #540]	; 0x21c
        labelInterval = AbstractDataGraph::convertToNewScale(labelInterval, dataScale, scale);
 80047fa:	f009 fa11 	bl	800dc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
    histogram.addLeftElement(histogramMajorYAxisLabel);
 80047fe:	9906      	ldr	r1, [sp, #24]
        dataScale = scale;
 8004800:	e9c4 b086 	strd	fp, r0, [r4, #536]	; 0x218
 8004804:	4638      	mov	r0, r7
 8004806:	f009 f887 	bl	800d918 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>
     *
     * @see getBarWidth
     */
    FORCE_INLINE_FUNCTION void setBarWidth(uint16_t width)
    {
        barWidth = width;
 800480a:	2304      	movs	r3, #4
 800480c:	f8a4 326c 	strh.w	r3, [r4, #620]	; 0x26c
    histogram.addGraphElement(histogramHistogram1);
 8004810:	9907      	ldr	r1, [sp, #28]
        color = newColor;
 8004812:	f8c4 9260 	str.w	r9, [r4, #608]	; 0x260
 8004816:	4638      	mov	r0, r7
        yBaseline = baseline;
 8004818:	f8c4 6268 	str.w	r6, [r4, #616]	; 0x268
 800481c:	f009 f86a 	bl	800d8f4 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>
 8004820:	4639      	mov	r1, r7
 8004822:	4640      	mov	r0, r8
 8004824:	f007 f8f4 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    xlabel.setXY(334, 443);
 8004828:	f240 12bb 	movw	r2, #443	; 0x1bb
 800482c:	4650      	mov	r0, sl
 800482e:	f44f 71a7 	mov.w	r1, #334	; 0x14e
 8004832:	f7ff f99a 	bl	8003b6a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8004836:	af08      	add	r7, sp, #32
        color = newColor;
 8004838:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 800483c:	f8c4 32a0 	str.w	r3, [r4, #672]	; 0x2a0
        boundingArea = calculateBoundingArea();
 8004840:	4651      	mov	r1, sl
 8004842:	4638      	mov	r0, r7
        linespace = space;
 8004844:	f8a4 62a4 	strh.w	r6, [r4, #676]	; 0x2a4
        boundingArea = calculateBoundingArea();
 8004848:	f00a fe3a 	bl	800f4c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 800484c:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 8004850:	f10a 033c 	add.w	r3, sl, #60	; 0x3c
 8004854:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8004858:	f8df 90d0 	ldr.w	r9, [pc, #208]	; 800492c <_ZN21PulseSpectrumViewBaseC1Ev+0x3f4>
 800485c:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8004860:	2308      	movs	r3, #8
    xlabel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZVUC));
 8004862:	a90e      	add	r1, sp, #56	; 0x38
 8004864:	4650      	mov	r0, sl
 8004866:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 800486a:	f00b f8c3 	bl	800f9f4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800486e:	4651      	mov	r1, sl
 8004870:	4640      	mov	r0, r8
 8004872:	f007 f8cd 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    clearButton.setXY(561, 430);
 8004876:	ee18 0a10 	vmov	r0, s16
 800487a:	f44f 72d7 	mov.w	r2, #430	; 0x1ae
 800487e:	f240 2131 	movw	r1, #561	; 0x231
 8004882:	f7ff f972 	bl	8003b6a <_ZN8touchgfx8Drawable5setXYEss>
 8004886:	f04f 0203 	mov.w	r2, #3
    clearButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
 800488a:	a90d      	add	r1, sp, #52	; 0x34
 800488c:	ee18 0a10 	vmov	r0, s16
 8004890:	f04f 0302 	mov.w	r3, #2
 8004894:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8004898:	aa0e      	add	r2, sp, #56	; 0x38
 800489a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800489e:	f00b f906 	bl	800faae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 80048a2:	2307      	movs	r3, #7
 80048a4:	f8a4 32f0 	strh.w	r3, [r4, #752]	; 0x2f0
        updateTextPosition();
 80048a8:	ee18 0a10 	vmov	r0, s16
    clearButton.setAction(buttonCallback);
 80048ac:	f505 4aa4 	add.w	sl, r5, #20992	; 0x5200
 80048b0:	f7ff f992 	bl	8003bd8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
 80048b4:	f10a 0a70 	add.w	sl, sl, #112	; 0x70
        color = col;
 80048b8:	f04f 32ff 	mov.w	r2, #4294967295
        colorPressed = col;
 80048bc:	e9c4 22bd 	strd	r2, r2, [r4, #756]	; 0x2f4
 80048c0:	ee18 1a10 	vmov	r1, s16
 80048c4:	4640      	mov	r0, r8
 80048c6:	f8c4 a2e0 	str.w	sl, [r4, #736]	; 0x2e0
 80048ca:	f007 f8a1 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    ylabel.setXY(1, 210);
 80048ce:	ee18 0a90 	vmov	r0, s17
 80048d2:	4659      	mov	r1, fp
 80048d4:	22d2      	movs	r2, #210	; 0xd2
 80048d6:	f7ff f948 	bl	8003b6a <_ZN8touchgfx8Drawable5setXYEss>
        color = newColor;
 80048da:	f04f 427f 	mov.w	r2, #4278190080	; 0xff000000
        boundingArea = calculateBoundingArea();
 80048de:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 80048e2:	f8c4 2330 	str.w	r2, [r4, #816]	; 0x330
        boundingArea = calculateBoundingArea();
 80048e6:	4638      	mov	r0, r7
        linespace = space;
 80048e8:	f8a4 6334 	strh.w	r6, [r4, #820]	; 0x334
        boundingArea = calculateBoundingArea();
 80048ec:	f00a fde8 	bl	800f4c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 80048f0:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 80048f4:	ee18 3a90 	vmov	r3, s17
 80048f8:	f103 0b3c 	add.w	fp, r3, #60	; 0x3c
 80048fc:	e018      	b.n	8004930 <_ZN21PulseSpectrumViewBaseC1Ev+0x3f8>
 80048fe:	bf00      	nop
 8004900:	08022f84 	.word	0x08022f84
 8004904:	0802369c 	.word	0x0802369c
 8004908:	08022e30 	.word	0x08022e30
 800490c:	08022cc0 	.word	0x08022cc0
 8004910:	08022d78 	.word	0x08022d78
 8004914:	08023994 	.word	0x08023994
 8004918:	08023a34 	.word	0x08023a34
 800491c:	08023908 	.word	0x08023908
 8004920:	08022f6c 	.word	0x08022f6c
 8004924:	080043dd 	.word	0x080043dd
 8004928:	ff1497c5 	.word	0xff1497c5
 800492c:	080221bc 	.word	0x080221bc
 8004930:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
        rotation = textRotation;
 8004934:	f04f 0203 	mov.w	r2, #3
        boundingArea = calculateBoundingArea();
 8004938:	ee18 1a90 	vmov	r1, s17
        rotation = textRotation;
 800493c:	f884 2338 	strb.w	r2, [r4, #824]	; 0x338
        boundingArea = calculateBoundingArea();
 8004940:	4638      	mov	r0, r7
 8004942:	f00a fdbd 	bl	800f4c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8004946:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
        : typedTextId(id)
 800494a:	2306      	movs	r3, #6
 800494c:	e88b 0007 	stmia.w	fp, {r0, r1, r2}
    ylabel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ARHE));
 8004950:	ee18 0a90 	vmov	r0, s17
 8004954:	a90e      	add	r1, sp, #56	; 0x38
 8004956:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
 800495a:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800495e:	f00b f849 	bl	800f9f4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8004962:	ee18 1a90 	vmov	r1, s17
 8004966:	4640      	mov	r0, r8
 8004968:	f007 f852 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    backButton.setXY(0, 430);
 800496c:	ee19 0a10 	vmov	r0, s18
 8004970:	4631      	mov	r1, r6
 8004972:	f44f 72d7 	mov.w	r2, #430	; 0x1ae
 8004976:	f7ff f8f8 	bl	8003b6a <_ZN8touchgfx8Drawable5setXYEss>
 800497a:	f04f 0302 	mov.w	r3, #2
    backButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
 800497e:	aa0e      	add	r2, sp, #56	; 0x38
 8004980:	a90d      	add	r1, sp, #52	; 0x34
 8004982:	ee19 0a10 	vmov	r0, s18
 8004986:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800498a:	f04f 0303 	mov.w	r3, #3
 800498e:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 8004992:	f00b f88c 	bl	800faae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
class TypedText
 8004996:	2305      	movs	r3, #5
        updateTextPosition();
 8004998:	ee19 0a10 	vmov	r0, s18
 800499c:	f8a4 3380 	strh.w	r3, [r4, #896]	; 0x380
 80049a0:	f7ff f91a 	bl	8003bd8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80049a4:	f04f 33ff 	mov.w	r3, #4294967295
 80049a8:	4640      	mov	r0, r8
        colorPressed = col;
 80049aa:	e9c4 33e1 	strd	r3, r3, [r4, #900]	; 0x384
 80049ae:	ee19 1a10 	vmov	r1, s18
 80049b2:	f8c4 a370 	str.w	sl, [r4, #880]	; 0x370
 80049b6:	f007 f82b 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80049ba:	4628      	mov	r0, r5
 80049bc:	b011      	add	sp, #68	; 0x44
 80049be:	ecbd 8b04 	vpop	{d8-d9}
 80049c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80049c6:	bf00      	nop

080049c8 <_ZN15StartupViewBaseD1Ev>:
}

StartupViewBase::~StartupViewBase()
{

}
 80049c8:	4770      	bx	lr

080049ca <_ZN15StartupViewBase11setupScreenEv>:

void StartupViewBase::setupScreen()
{

}
 80049ca:	4770      	bx	lr

080049cc <_ZN15StartupViewBaseD0Ev>:
StartupViewBase::~StartupViewBase()
 80049cc:	b510      	push	{r4, lr}
}
 80049ce:	21f4      	movs	r1, #244	; 0xf4
StartupViewBase::~StartupViewBase()
 80049d0:	4604      	mov	r4, r0
}
 80049d2:	f01b fe6d 	bl	80206b0 <_ZdlPvj>
 80049d6:	4620      	mov	r0, r4
 80049d8:	bd10      	pop	{r4, pc}

080049da <_ZN15StartupViewBase15handleTickEventEv>:

void StartupViewBase::handleTickEvent()
{
    frameCountInteraction1Interval++;
 80049da:	f8d0 30f0 	ldr.w	r3, [r0, #240]	; 0xf0
 80049de:	3301      	adds	r3, #1
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 80049e0:	2bc8      	cmp	r3, #200	; 0xc8
{
 80049e2:	b510      	push	{r4, lr}
 80049e4:	4604      	mov	r4, r0
    frameCountInteraction1Interval++;
 80049e6:	f8c0 30f0 	str.w	r3, [r0, #240]	; 0xf0
    if(frameCountInteraction1Interval == TICK_INTERACTION1_INTERVAL)
 80049ea:	d106      	bne.n	80049fa <_ZN15StartupViewBase15handleTickEventEv+0x20>
    virtual void setupScreen();
    virtual void handleTickEvent();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 80049ec:	f00c ff24 	bl	8011838 <_ZN8touchgfx11Application11getInstanceEv>
    {
        //Interaction1
        //When every N tick change screen to Menu
        //Go to Menu with block transition
        application().gotoMenuScreenBlockTransition();
 80049f0:	f7fe fd30 	bl	8003454 <_ZN23FrontendApplicationBase29gotoMenuScreenBlockTransitionEv>
        frameCountInteraction1Interval = 0;
 80049f4:	2300      	movs	r3, #0
 80049f6:	f8c4 30f0 	str.w	r3, [r4, #240]	; 0xf0
    }
}
 80049fa:	bd10      	pop	{r4, pc}

080049fc <_ZN15StartupViewBaseC1Ev>:
StartupViewBase::StartupViewBase() :
 80049fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004a00:	4604      	mov	r4, r0
 8004a02:	b085      	sub	sp, #20
    frameCountInteraction1Interval(0)
 8004a04:	46a0      	mov	r8, r4
 8004a06:	2500      	movs	r5, #0
 8004a08:	f00e fb16 	bl	8013038 <_ZN8touchgfx6ScreenC1Ev>
 8004a0c:	4b3d      	ldr	r3, [pc, #244]	; (8004b04 <_ZN15StartupViewBaseC1Ev+0x108>)
 8004a0e:	63e5      	str	r5, [r4, #60]	; 0x3c
 8004a10:	f848 3b40 	str.w	r3, [r8], #64
 8004a14:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8004a18:	4640      	mov	r0, r8
 8004a1a:	f7ff f8c7 	bl	8003bac <_ZN8touchgfx3BoxC1Ev>
 8004a1e:	f104 0798 	add.w	r7, r4, #152	; 0x98
 8004a22:	4650      	mov	r0, sl
 8004a24:	f7ff f8c2 	bl	8003bac <_ZN8touchgfx3BoxC1Ev>
 8004a28:	f104 06c4 	add.w	r6, r4, #196	; 0xc4
 8004a2c:	f64f 79ff 	movw	r9, #65535	; 0xffff
 8004a30:	a903      	add	r1, sp, #12
 8004a32:	4638      	mov	r0, r7
 8004a34:	f8ad 900c 	strh.w	r9, [sp, #12]
    __background.setPosition(0, 0, 800, 480);
 8004a38:	f44f 7bf0 	mov.w	fp, #480	; 0x1e0
    frameCountInteraction1Interval(0)
 8004a3c:	f00a fa12 	bl	800ee64 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
 8004a40:	a903      	add	r1, sp, #12
 8004a42:	4630      	mov	r0, r6
 8004a44:	f8ad 900c 	strh.w	r9, [sp, #12]
 8004a48:	f00a fa0c 	bl	800ee64 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>
    __background.setPosition(0, 0, 800, 480);
 8004a4c:	462a      	mov	r2, r5
 8004a4e:	4629      	mov	r1, r5
 8004a50:	4640      	mov	r0, r8
    frameCountInteraction1Interval(0)
 8004a52:	f8c4 50f0 	str.w	r5, [r4, #240]	; 0xf0
    __background.setPosition(0, 0, 800, 480);
 8004a56:	f8cd b000 	str.w	fp, [sp]
 8004a5a:	f44f 7348 	mov.w	r3, #800	; 0x320
 8004a5e:	f7ff f891 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004a62:	f104 0904 	add.w	r9, r4, #4
 8004a66:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004a6a:	66a3      	str	r3, [r4, #104]	; 0x68
 8004a6c:	4641      	mov	r1, r8
 8004a6e:	4648      	mov	r0, r9
 8004a70:	f006 ffce 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(0, 0, 800, 480);
 8004a74:	462a      	mov	r2, r5
 8004a76:	4629      	mov	r1, r5
 8004a78:	4650      	mov	r0, sl
 8004a7a:	f8cd b000 	str.w	fp, [sp]
 8004a7e:	f44f 7348 	mov.w	r3, #800	; 0x320
 8004a82:	f7ff f87f 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004a86:	f04f 33ff 	mov.w	r3, #4294967295
 8004a8a:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 8004a8e:	4651      	mov	r1, sl
 8004a90:	4648      	mov	r0, r9
 8004a92:	f006 ffbd 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    scalableImage1.setPosition(101, 25, 535, 195);
 8004a96:	f04f 08c3 	mov.w	r8, #195	; 0xc3
 8004a9a:	2307      	movs	r3, #7
    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_LANL_LOGO_ID));
 8004a9c:	a903      	add	r1, sp, #12
 8004a9e:	4638      	mov	r0, r7
 8004aa0:	f8ad 300c 	strh.w	r3, [sp, #12]
 8004aa4:	f00b f8c9 	bl	800fc3a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage1.setPosition(101, 25, 535, 195);
 8004aa8:	2219      	movs	r2, #25
 8004aaa:	f240 2317 	movw	r3, #535	; 0x217
 8004aae:	4638      	mov	r0, r7
 8004ab0:	f8cd 8000 	str.w	r8, [sp]
 8004ab4:	2165      	movs	r1, #101	; 0x65
 8004ab6:	f7ff f865 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004aba:	4629      	mov	r1, r5
 8004abc:	4638      	mov	r0, r7
 8004abe:	f00a f998 	bl	800edf2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8004ac2:	4639      	mov	r1, r7
 8004ac4:	4648      	mov	r0, r9
 8004ac6:	f006 ffa3 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 8004aca:	2308      	movs	r3, #8
    scalableImage2.setBitmap(touchgfx::Bitmap(BITMAP_NMT__LOGO_BW_ID));
 8004acc:	a903      	add	r1, sp, #12
 8004ace:	4630      	mov	r0, r6
 8004ad0:	f8ad 300c 	strh.w	r3, [sp, #12]
 8004ad4:	f00b f8b1 	bl	800fc3a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
    scalableImage2.setPosition(109, 257, 582, 195);
 8004ad8:	f240 2346 	movw	r3, #582	; 0x246
 8004adc:	f240 1201 	movw	r2, #257	; 0x101
 8004ae0:	4630      	mov	r0, r6
 8004ae2:	f8cd 8000 	str.w	r8, [sp]
 8004ae6:	216d      	movs	r1, #109	; 0x6d
 8004ae8:	f7ff f84c 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
    scalableImage2.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
 8004aec:	4629      	mov	r1, r5
 8004aee:	4630      	mov	r0, r6
 8004af0:	f00a f97f 	bl	800edf2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>
 8004af4:	4648      	mov	r0, r9
 8004af6:	4631      	mov	r1, r6
 8004af8:	f006 ff8a 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8004afc:	4620      	mov	r0, r4
 8004afe:	b005      	add	sp, #20
 8004b00:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004b04:	08022fbc 	.word	0x08022fbc

08004b08 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_10_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004b08:	4770      	bx	lr
	...

08004b0c <_Z23getFont_verdana_10_4bppv>:
{
 8004b0c:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004b0e:	4d16      	ldr	r5, [pc, #88]	; (8004b68 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8004b10:	782c      	ldrb	r4, [r5, #0]
 8004b12:	f3bf 8f5b 	dmb	ish
 8004b16:	f014 0401 	ands.w	r4, r4, #1
{
 8004b1a:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 10, 0, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8004b1c:	d120      	bne.n	8004b60 <_Z23getFont_verdana_10_4bppv+0x54>
 8004b1e:	4628      	mov	r0, r5
 8004b20:	f01b fdc8 	bl	80206b4 <__cxa_guard_acquire>
 8004b24:	b1e0      	cbz	r0, 8004b60 <_Z23getFont_verdana_10_4bppv+0x54>
 8004b26:	233f      	movs	r3, #63	; 0x3f
 8004b28:	9309      	str	r3, [sp, #36]	; 0x24
 8004b2a:	4b10      	ldr	r3, [pc, #64]	; (8004b6c <_Z23getFont_verdana_10_4bppv+0x60>)
 8004b2c:	9308      	str	r3, [sp, #32]
 8004b2e:	4b10      	ldr	r3, [pc, #64]	; (8004b70 <_Z23getFont_verdana_10_4bppv+0x64>)
 8004b30:	4910      	ldr	r1, [pc, #64]	; (8004b74 <_Z23getFont_verdana_10_4bppv+0x68>)
 8004b32:	4811      	ldr	r0, [pc, #68]	; (8004b78 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004b34:	940a      	str	r4, [sp, #40]	; 0x28
 8004b36:	2201      	movs	r2, #1
 8004b38:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8004b3c:	2304      	movs	r3, #4
 8004b3e:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8004b42:	230a      	movs	r3, #10
 8004b44:	9300      	str	r3, [sp, #0]
 8004b46:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8004b4a:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8004b4e:	9405      	str	r4, [sp, #20]
 8004b50:	f7fe ff94 	bl	8003a7c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004b54:	4809      	ldr	r0, [pc, #36]	; (8004b7c <_Z23getFont_verdana_10_4bppv+0x70>)
 8004b56:	f01b fdf7 	bl	8020748 <atexit>
 8004b5a:	4628      	mov	r0, r5
 8004b5c:	f01b fdb6 	bl	80206cc <__cxa_guard_release>
    return verdana_10_4bpp;
}
 8004b60:	4805      	ldr	r0, [pc, #20]	; (8004b78 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8004b62:	b00f      	add	sp, #60	; 0x3c
 8004b64:	bd30      	pop	{r4, r5, pc}
 8004b66:	bf00      	nop
 8004b68:	20008e4c 	.word	0x20008e4c
 8004b6c:	0802429c 	.word	0x0802429c
 8004b70:	0802434c 	.word	0x0802434c
 8004b74:	9043e3f0 	.word	0x9043e3f0
 8004b78:	20008e50 	.word	0x20008e50
 8004b7c:	08004b09 	.word	0x08004b09

08004b80 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_20_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 48, 24, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8004b80:	4770      	bx	lr
	...

08004b84 <_Z23getFont_verdana_20_4bppv>:
{
 8004b84:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 48, 24, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8004b86:	4d17      	ldr	r5, [pc, #92]	; (8004be4 <_Z23getFont_verdana_20_4bppv+0x60>)
 8004b88:	782c      	ldrb	r4, [r5, #0]
 8004b8a:	f3bf 8f5b 	dmb	ish
 8004b8e:	f014 0401 	ands.w	r4, r4, #1
{
 8004b92:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 48, 24, 20, 0, 0, 4, 1, 0, 1, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 8004b94:	d122      	bne.n	8004bdc <_Z23getFont_verdana_20_4bppv+0x58>
 8004b96:	4628      	mov	r0, r5
 8004b98:	f01b fd8c 	bl	80206b4 <__cxa_guard_acquire>
 8004b9c:	b1f0      	cbz	r0, 8004bdc <_Z23getFont_verdana_20_4bppv+0x58>
 8004b9e:	233f      	movs	r3, #63	; 0x3f
 8004ba0:	9309      	str	r3, [sp, #36]	; 0x24
 8004ba2:	4b11      	ldr	r3, [pc, #68]	; (8004be8 <_Z23getFont_verdana_20_4bppv+0x64>)
 8004ba4:	9308      	str	r3, [sp, #32]
 8004ba6:	4b11      	ldr	r3, [pc, #68]	; (8004bec <_Z23getFont_verdana_20_4bppv+0x68>)
 8004ba8:	9307      	str	r3, [sp, #28]
 8004baa:	2301      	movs	r3, #1
 8004bac:	e9cd 4305 	strd	r4, r3, [sp, #20]
 8004bb0:	9304      	str	r3, [sp, #16]
 8004bb2:	2304      	movs	r3, #4
 8004bb4:	e9cd 4302 	strd	r4, r3, [sp, #8]
 8004bb8:	2314      	movs	r3, #20
 8004bba:	490d      	ldr	r1, [pc, #52]	; (8004bf0 <_Z23getFont_verdana_20_4bppv+0x6c>)
 8004bbc:	9300      	str	r3, [sp, #0]
 8004bbe:	2230      	movs	r2, #48	; 0x30
 8004bc0:	2318      	movs	r3, #24
 8004bc2:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8004bc6:	480b      	ldr	r0, [pc, #44]	; (8004bf4 <_Z23getFont_verdana_20_4bppv+0x70>)
 8004bc8:	940a      	str	r4, [sp, #40]	; 0x28
 8004bca:	9401      	str	r4, [sp, #4]
 8004bcc:	f7fe ff56 	bl	8003a7c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004bd0:	4809      	ldr	r0, [pc, #36]	; (8004bf8 <_Z23getFont_verdana_20_4bppv+0x74>)
 8004bd2:	f01b fdb9 	bl	8020748 <atexit>
 8004bd6:	4628      	mov	r0, r5
 8004bd8:	f01b fd78 	bl	80206cc <__cxa_guard_release>
    return verdana_20_4bpp;
}
 8004bdc:	4805      	ldr	r0, [pc, #20]	; (8004bf4 <_Z23getFont_verdana_20_4bppv+0x70>)
 8004bde:	b00f      	add	sp, #60	; 0x3c
 8004be0:	bd30      	pop	{r4, r5, pc}
 8004be2:	bf00      	nop
 8004be4:	20008e7c 	.word	0x20008e7c
 8004be8:	080242a0 	.word	0x080242a0
 8004bec:	08024350 	.word	0x08024350
 8004bf0:	9043e400 	.word	0x9043e400
 8004bf4:	20008e80 	.word	0x20008e80
 8004bf8:	08004b81 	.word	0x08004b81

08004bfc <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_40_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004bfc:	4770      	bx	lr
	...

08004c00 <_Z23getFont_verdana_40_4bppv>:
{
 8004c00:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004c02:	4d16      	ldr	r5, [pc, #88]	; (8004c5c <_Z23getFont_verdana_40_4bppv+0x5c>)
 8004c04:	782c      	ldrb	r4, [r5, #0]
 8004c06:	f3bf 8f5b 	dmb	ish
 8004c0a:	f014 0401 	ands.w	r4, r4, #1
{
 8004c0e:	b08f      	sub	sp, #60	; 0x3c
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 40, 0, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8004c10:	d120      	bne.n	8004c54 <_Z23getFont_verdana_40_4bppv+0x54>
 8004c12:	4628      	mov	r0, r5
 8004c14:	f01b fd4e 	bl	80206b4 <__cxa_guard_acquire>
 8004c18:	b1e0      	cbz	r0, 8004c54 <_Z23getFont_verdana_40_4bppv+0x54>
 8004c1a:	233f      	movs	r3, #63	; 0x3f
 8004c1c:	9309      	str	r3, [sp, #36]	; 0x24
 8004c1e:	4b10      	ldr	r3, [pc, #64]	; (8004c60 <_Z23getFont_verdana_40_4bppv+0x60>)
 8004c20:	9308      	str	r3, [sp, #32]
 8004c22:	4b10      	ldr	r3, [pc, #64]	; (8004c64 <_Z23getFont_verdana_40_4bppv+0x64>)
 8004c24:	4910      	ldr	r1, [pc, #64]	; (8004c68 <_Z23getFont_verdana_40_4bppv+0x68>)
 8004c26:	4811      	ldr	r0, [pc, #68]	; (8004c6c <_Z23getFont_verdana_40_4bppv+0x6c>)
 8004c28:	940a      	str	r4, [sp, #40]	; 0x28
 8004c2a:	2201      	movs	r2, #1
 8004c2c:	e9cd 4306 	strd	r4, r3, [sp, #24]
 8004c30:	2304      	movs	r3, #4
 8004c32:	e9cd 3203 	strd	r3, r2, [sp, #12]
 8004c36:	2328      	movs	r3, #40	; 0x28
 8004c38:	9300      	str	r3, [sp, #0]
 8004c3a:	e9cd 440b 	strd	r4, r4, [sp, #44]	; 0x2c
 8004c3e:	e9cd 4401 	strd	r4, r4, [sp, #4]
 8004c42:	9405      	str	r4, [sp, #20]
 8004c44:	f7fe ff1a 	bl	8003a7c <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8004c48:	4809      	ldr	r0, [pc, #36]	; (8004c70 <_Z23getFont_verdana_40_4bppv+0x70>)
 8004c4a:	f01b fd7d 	bl	8020748 <atexit>
 8004c4e:	4628      	mov	r0, r5
 8004c50:	f01b fd3c 	bl	80206cc <__cxa_guard_release>
    return verdana_40_4bpp;
}
 8004c54:	4805      	ldr	r0, [pc, #20]	; (8004c6c <_Z23getFont_verdana_40_4bppv+0x6c>)
 8004c56:	b00f      	add	sp, #60	; 0x3c
 8004c58:	bd30      	pop	{r4, r5, pc}
 8004c5a:	bf00      	nop
 8004c5c:	20008eac 	.word	0x20008eac
 8004c60:	08024348 	.word	0x08024348
 8004c64:	08024354 	.word	0x08024354
 8004c68:	9043e6a0 	.word	0x9043e6a0
 8004c6c:	20008eb0 	.word	0x20008eb0
 8004c70:	08004bfd 	.word	0x08004bfd

08004c74 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8004c74:	2000      	movs	r0, #0
 8004c76:	4770      	bx	lr

08004c78 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8004c78:	2000      	movs	r0, #0
 8004c7a:	4770      	bx	lr

08004c7c <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004c7c:	b40e      	push	{r1, r2, r3}
 8004c7e:	b503      	push	{r0, r1, lr}
 8004c80:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004c82:	2100      	movs	r1, #0
{
 8004c84:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 8004c88:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 8004c8a:	f00d fd17 	bl	80126bc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004c8e:	b002      	add	sp, #8
 8004c90:	f85d eb04 	ldr.w	lr, [sp], #4
 8004c94:	b003      	add	sp, #12
 8004c96:	4770      	bx	lr

08004c98 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8004c98:	b40c      	push	{r2, r3}
 8004c9a:	b507      	push	{r0, r1, r2, lr}
 8004c9c:	ab04      	add	r3, sp, #16
 8004c9e:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 8004ca2:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 8004ca4:	f00d fd0a 	bl	80126bc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 8004ca8:	b003      	add	sp, #12
 8004caa:	f85d eb04 	ldr.w	lr, [sp], #4
 8004cae:	b002      	add	sp, #8
 8004cb0:	4770      	bx	lr
	...

08004cb4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 8004cb4:	6c43      	ldr	r3, [r0, #68]	; 0x44
{
 8004cb6:	b510      	push	{r4, lr}
 8004cb8:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 8004cba:	b373      	cbz	r3, 8004d1a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 8004cbc:	8f03      	ldrh	r3, [r0, #56]	; 0x38
 8004cbe:	b92b      	cbnz	r3, 8004ccc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 8004cc0:	4b18      	ldr	r3, [pc, #96]	; (8004d24 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 8004cc2:	4a19      	ldr	r2, [pc, #100]	; (8004d28 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 8004cc4:	21c5      	movs	r1, #197	; 0xc5
            return buffer[pos];
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 8004cc6:	4819      	ldr	r0, [pc, #100]	; (8004d2c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 8004cc8:	f01b fd20 	bl	802070c <__assert_func>
            return buffer[pos];
 8004ccc:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8004cce:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8004cd2:	8c5b      	ldrh	r3, [r3, #34]	; 0x22
 8004cd4:	b30b      	cbz	r3, 8004d1a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 8004cd6:	f00f f88a 	bl	8013dee <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 8004cda:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8004cdc:	2b01      	cmp	r3, #1
 8004cde:	d803      	bhi.n	8004ce8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 8004ce0:	4b13      	ldr	r3, [pc, #76]	; (8004d30 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 8004ce2:	4a14      	ldr	r2, [pc, #80]	; (8004d34 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8004ce4:	21cb      	movs	r1, #203	; 0xcb
 8004ce6:	e7ee      	b.n	8004cc6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8004ce8:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8004cea:	1c53      	adds	r3, r2, #1
 8004cec:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 8004cee:	2b09      	cmp	r3, #9
 8004cf0:	4619      	mov	r1, r3
 8004cf2:	bf88      	it	hi
 8004cf4:	f1a3 010a 	subhi.w	r1, r3, #10
 8004cf8:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 8004cfc:	f640 103f 	movw	r0, #2367	; 0x93f
 8004d00:	8c49      	ldrh	r1, [r1, #34]	; 0x22
 8004d02:	4281      	cmp	r1, r0
 8004d04:	d109      	bne.n	8004d1a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8004d06:	2b0a      	cmp	r3, #10
 8004d08:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8004d0c:	bf28      	it	cs
 8004d0e:	2300      	movcs	r3, #0

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 8004d10:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8004d14:	8c50      	ldrh	r0, [r2, #34]	; 0x22
            buffer[index < size ? index : 0] = newChar;
 8004d16:	8458      	strh	r0, [r3, #34]	; 0x22
            buffer[pos] = newChar;
 8004d18:	8451      	strh	r1, [r2, #34]	; 0x22
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8004d1a:	4620      	mov	r0, r4
}
 8004d1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 8004d20:	f00e bf68 	b.w	8013bf4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8004d24:	08022fe8 	.word	0x08022fe8
 8004d28:	08022ff1 	.word	0x08022ff1
 8004d2c:	0802309c 	.word	0x0802309c
 8004d30:	080230e6 	.word	0x080230e6
 8004d34:	080230f4 	.word	0x080230f4

08004d38 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8004d38:	f00e bf23 	b.w	8013b82 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08004d3c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:
}

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 8004d3c:	b510      	push	{r4, lr}
 8004d3e:	b086      	sub	sp, #24
 8004d40:	ac02      	add	r4, sp, #8
 8004d42:	e884 0006 	stmia.w	r4, {r1, r2}
 8004d46:	461a      	mov	r2, r3
    va_list pArg;
    va_start(pArg, format);
 8004d48:	ab0a      	add	r3, sp, #40	; 0x28
 8004d4a:	9305      	str	r3, [sp, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 8004d4c:	9301      	str	r3, [sp, #4]
 8004d4e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8004d50:	9300      	str	r3, [sp, #0]
 8004d52:	4621      	mov	r1, r4
 8004d54:	9b08      	ldr	r3, [sp, #32]
 8004d56:	f00c f957 	bl	8011008 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 8004d5a:	b006      	add	sp, #24
 8004d5c:	bd10      	pop	{r4, pc}
	...

08004d60 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8004d60:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 8004d62:	bb18      	cbnz	r0, 8004dac <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
    {
        if (languagesArray[id] != 0)
 8004d64:	4b12      	ldr	r3, [pc, #72]	; (8004db0 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8004d66:	4813      	ldr	r0, [pc, #76]	; (8004db4 <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8004d68:	681b      	ldr	r3, [r3, #0]
 8004d6a:	4913      	ldr	r1, [pc, #76]	; (8004db8 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8004d6c:	b1b3      	cbz	r3, 8004d9c <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004d6e:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004d70:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8004d72:	441a      	add	r2, r3
 8004d74:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 8004d76:	685a      	ldr	r2, [r3, #4]
 8004d78:	441a      	add	r2, r3
 8004d7a:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8004d7c:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8004d7e:	4b0f      	ldr	r3, [pc, #60]	; (8004dbc <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8004d80:	2200      	movs	r2, #0
 8004d82:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 8004d84:	f000 f838 	bl	8004df8 <_ZN17TypedTextDatabase8getFontsEv>
 8004d88:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8004d8a:	f000 f833 	bl	8004df4 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8004d8e:	4b0c      	ldr	r3, [pc, #48]	; (8004dc0 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 8004d90:	601c      	str	r4, [r3, #0]
        fonts = f;
 8004d92:	4b0c      	ldr	r3, [pc, #48]	; (8004dc4 <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8004d94:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 8004d96:	4b0c      	ldr	r3, [pc, #48]	; (8004dc8 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
 8004d98:	8018      	strh	r0, [r3, #0]
    }
}
 8004d9a:	e007      	b.n	8004dac <_ZN8touchgfx5Texts11setLanguageEt+0x4c>
            currentLanguagePtr = texts_all_languages;
 8004d9c:	4b0b      	ldr	r3, [pc, #44]	; (8004dcc <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
 8004d9e:	6003      	str	r3, [r0, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 8004da0:	4b0b      	ldr	r3, [pc, #44]	; (8004dd0 <_ZN8touchgfx5Texts11setLanguageEt+0x70>)
 8004da2:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8004da4:	4b0b      	ldr	r3, [pc, #44]	; (8004dd4 <_ZN8touchgfx5Texts11setLanguageEt+0x74>)
 8004da6:	681c      	ldr	r4, [r3, #0]
    if (currentLanguageTypedText)
 8004da8:	2c00      	cmp	r4, #0
 8004daa:	d1e8      	bne.n	8004d7e <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 8004dac:	bd38      	pop	{r3, r4, r5, pc}
 8004dae:	bf00      	nop
 8004db0:	20008edc 	.word	0x20008edc
 8004db4:	20008ee0 	.word	0x20008ee0
 8004db8:	20008ee4 	.word	0x20008ee4
 8004dbc:	20008ee8 	.word	0x20008ee8
 8004dc0:	20011e98 	.word	0x20011e98
 8004dc4:	20011ea0 	.word	0x20011ea0
 8004dc8:	20011e9c 	.word	0x20011e9c
 8004dcc:	9043e6e0 	.word	0x9043e6e0
 8004dd0:	9043e6b0 	.word	0x9043e6b0
 8004dd4:	9043e7d0 	.word	0x9043e7d0

08004dd8 <_ZNK8touchgfx5Texts7getTextEt>:
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
    return &currentLanguagePtr[currentLanguageIndices[id]];
 8004dd8:	4b04      	ldr	r3, [pc, #16]	; (8004dec <_ZNK8touchgfx5Texts7getTextEt+0x14>)
 8004dda:	681b      	ldr	r3, [r3, #0]
 8004ddc:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8004de0:	4b03      	ldr	r3, [pc, #12]	; (8004df0 <_ZNK8touchgfx5Texts7getTextEt+0x18>)
 8004de2:	681b      	ldr	r3, [r3, #0]
}
 8004de4:	eb03 0040 	add.w	r0, r3, r0, lsl #1
 8004de8:	4770      	bx	lr
 8004dea:	bf00      	nop
 8004dec:	20008ee4 	.word	0x20008ee4
 8004df0:	20008ee0 	.word	0x20008ee0

08004df4 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 8004df4:	200c      	movs	r0, #12
 8004df6:	4770      	bx	lr

08004df8 <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 8004df8:	4800      	ldr	r0, [pc, #0]	; (8004dfc <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 8004dfa:	4770      	bx	lr
 8004dfc:	20008eec 	.word	0x20008eec

08004e00 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 8004e00:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 8004e02:	f7ff febf 	bl	8004b84 <_Z23getFont_verdana_20_4bppv>
};
 8004e06:	4c04      	ldr	r4, [pc, #16]	; (8004e18 <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 8004e08:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 8004e0a:	f7ff fef9 	bl	8004c00 <_Z23getFont_verdana_40_4bppv>
};
 8004e0e:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 8004e10:	f7ff fe7c 	bl	8004b0c <_Z23getFont_verdana_10_4bppv>
};
 8004e14:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 8004e16:	bd10      	pop	{r4, pc}
 8004e18:	20008eec 	.word	0x20008eec

08004e1c <_ZN16pwmSetupViewBase13changePWMfreqEi>:
     * Virtual Action Handlers
     */
    virtual void changePWMfreq(int value)
    {
        // Override and implement this function in pwmSetup
    }
 8004e1c:	4770      	bx	lr

08004e1e <_ZN16pwmSetupViewBase8pwmStartEv>:
    virtual void pwmStart()
    {
        // Override and implement this function in pwmSetup
    }
 8004e1e:	4770      	bx	lr

08004e20 <_ZN16pwmSetupViewBase7pwmStopEv>:
    virtual void pwmStop()
    {
        // Override and implement this function in pwmSetup
    }
 8004e20:	4770      	bx	lr

08004e22 <_ZN16pwmSetupViewBaseD1Ev>:
}

pwmSetupViewBase::~pwmSetupViewBase()
{

}
 8004e22:	4770      	bx	lr

08004e24 <_ZN16pwmSetupViewBase11setupScreenEv>:

void pwmSetupViewBase::setupScreen()
{

}
 8004e24:	4770      	bx	lr

08004e26 <_ZN8touchgfx8CallbackI16pwmSetupViewBaseRKNS_6SliderEivED1Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8004e26:	4770      	bx	lr

08004e28 <_ZN8touchgfx8CallbackI16pwmSetupViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004e28:	4770      	bx	lr

08004e2a <_ZN8touchgfx8CallbackI16pwmSetupViewBaseRKNS_6SliderEivE7executeES4_i>:
    virtual void execute(T1 t1, T2 t2)
 8004e2a:	b470      	push	{r4, r5, r6}
        (pobject->*pmemfun)(t1, t2);
 8004e2c:	68c4      	ldr	r4, [r0, #12]
 8004e2e:	6845      	ldr	r5, [r0, #4]
 8004e30:	1066      	asrs	r6, r4, #1
    virtual void execute(T1 t1, T2 t2)
 8004e32:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1, t2);
 8004e34:	eb05 0064 	add.w	r0, r5, r4, asr #1
 8004e38:	07e4      	lsls	r4, r4, #31
 8004e3a:	bf48      	it	mi
 8004e3c:	59ac      	ldrmi	r4, [r5, r6]
 8004e3e:	689b      	ldr	r3, [r3, #8]
 8004e40:	bf48      	it	mi
 8004e42:	58e3      	ldrmi	r3, [r4, r3]
    }
 8004e44:	bc70      	pop	{r4, r5, r6}
        (pobject->*pmemfun)(t1, t2);
 8004e46:	4718      	bx	r3

08004e48 <_ZNK8touchgfx8CallbackI16pwmSetupViewBaseRKNS_6SliderEivE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8004e48:	6843      	ldr	r3, [r0, #4]
 8004e4a:	b12b      	cbz	r3, 8004e58 <_ZNK8touchgfx8CallbackI16pwmSetupViewBaseRKNS_6SliderEivE7isValidEv+0x10>
 8004e4c:	6883      	ldr	r3, [r0, #8]
 8004e4e:	b92b      	cbnz	r3, 8004e5c <_ZNK8touchgfx8CallbackI16pwmSetupViewBaseRKNS_6SliderEivE7isValidEv+0x14>
 8004e50:	68c0      	ldr	r0, [r0, #12]
 8004e52:	f000 0001 	and.w	r0, r0, #1
 8004e56:	4770      	bx	lr
 8004e58:	4618      	mov	r0, r3
 8004e5a:	4770      	bx	lr
 8004e5c:	2001      	movs	r0, #1
    }
 8004e5e:	4770      	bx	lr

08004e60 <_ZN8touchgfx8CallbackI16pwmSetupViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 8004e60:	b430      	push	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004e62:	68c2      	ldr	r2, [r0, #12]
 8004e64:	6844      	ldr	r4, [r0, #4]
 8004e66:	1055      	asrs	r5, r2, #1
    virtual void execute(T1 t1)
 8004e68:	4603      	mov	r3, r0
        (pobject->*pmemfun)(t1);
 8004e6a:	eb04 0062 	add.w	r0, r4, r2, asr #1
 8004e6e:	07d2      	lsls	r2, r2, #31
 8004e70:	bf48      	it	mi
 8004e72:	5962      	ldrmi	r2, [r4, r5]
 8004e74:	689b      	ldr	r3, [r3, #8]
    }
 8004e76:	bc30      	pop	{r4, r5}
        (pobject->*pmemfun)(t1);
 8004e78:	bf48      	it	mi
 8004e7a:	58d3      	ldrmi	r3, [r2, r3]
 8004e7c:	4718      	bx	r3

08004e7e <_ZNK8touchgfx8CallbackI16pwmSetupViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
        return (pobject != 0) && (pmemfun != 0);
 8004e7e:	6843      	ldr	r3, [r0, #4]
 8004e80:	b12b      	cbz	r3, 8004e8e <_ZNK8touchgfx8CallbackI16pwmSetupViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x10>
 8004e82:	6883      	ldr	r3, [r0, #8]
 8004e84:	b92b      	cbnz	r3, 8004e92 <_ZNK8touchgfx8CallbackI16pwmSetupViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x14>
 8004e86:	68c0      	ldr	r0, [r0, #12]
 8004e88:	f000 0001 	and.w	r0, r0, #1
 8004e8c:	4770      	bx	lr
 8004e8e:	4618      	mov	r0, r3
 8004e90:	4770      	bx	lr
 8004e92:	2001      	movs	r0, #1
    }
 8004e94:	4770      	bx	lr

08004e96 <_ZN8touchgfx8CallbackI16pwmSetupViewBaseRKNS_14AbstractButtonEvvED0Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 8004e96:	b510      	push	{r4, lr}
 8004e98:	2110      	movs	r1, #16
 8004e9a:	4604      	mov	r4, r0
 8004e9c:	f01b fc08 	bl	80206b0 <_ZdlPvj>
 8004ea0:	4620      	mov	r0, r4
 8004ea2:	bd10      	pop	{r4, pc}

08004ea4 <_ZN8touchgfx8CallbackI16pwmSetupViewBaseRKNS_6SliderEivED0Ev>:
struct Callback<dest_type, T1, T2, void> : public GenericCallback<T1, T2>
 8004ea4:	b510      	push	{r4, lr}
 8004ea6:	2110      	movs	r1, #16
 8004ea8:	4604      	mov	r4, r0
 8004eaa:	f01b fc01 	bl	80206b0 <_ZdlPvj>
 8004eae:	4620      	mov	r0, r4
 8004eb0:	bd10      	pop	{r4, pc}

08004eb2 <_ZN16pwmSetupViewBaseD0Ev>:
pwmSetupViewBase::~pwmSetupViewBase()
 8004eb2:	b510      	push	{r4, lr}
}
 8004eb4:	f44f 7135 	mov.w	r1, #724	; 0x2d4
pwmSetupViewBase::~pwmSetupViewBase()
 8004eb8:	4604      	mov	r4, r0
}
 8004eba:	f01b fbf9 	bl	80206b0 <_ZdlPvj>
 8004ebe:	4620      	mov	r0, r4
 8004ec0:	bd10      	pop	{r4, pc}

08004ec2 <_ZN16pwmSetupViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi>:
        pwmStop();
    }
}

void pwmSetupViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
 8004ec2:	b410      	push	{r4}
    if (&src == &testPulseSlider)
 8004ec4:	f100 04e0 	add.w	r4, r0, #224	; 0xe0
 8004ec8:	428c      	cmp	r4, r1
 8004eca:	d105      	bne.n	8004ed8 <_ZN16pwmSetupViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi+0x16>
    {
        //Interaction2
        //When testPulseSlider value changed call virtual function
        //Call changePWMfreq
        changePWMfreq(value);
 8004ecc:	6803      	ldr	r3, [r0, #0]
    }
}
 8004ece:	f85d 4b04 	ldr.w	r4, [sp], #4
        changePWMfreq(value);
 8004ed2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004ed4:	4611      	mov	r1, r2
 8004ed6:	4718      	bx	r3
}
 8004ed8:	f85d 4b04 	ldr.w	r4, [sp], #4
 8004edc:	4770      	bx	lr

08004ede <_ZN16pwmSetupViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:
    if (&src == &backButton)
 8004ede:	f100 0398 	add.w	r3, r0, #152	; 0x98
 8004ee2:	4299      	cmp	r1, r3
{
 8004ee4:	b570      	push	{r4, r5, r6, lr}
 8004ee6:	4604      	mov	r4, r0
 8004ee8:	460d      	mov	r5, r1
    if (&src == &backButton)
 8004eea:	d103      	bne.n	8004ef4 <_ZN16pwmSetupViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x16>

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 8004eec:	f00c fca4 	bl	8011838 <_ZN8touchgfx11Application11getInstanceEv>
        application().gotoMenuScreenNoTransition();
 8004ef0:	f7fe fac0 	bl	8003474 <_ZN23FrontendApplicationBase26gotoMenuScreenNoTransitionEv>
    if (&src == &pulseStart)
 8004ef4:	f504 73ee 	add.w	r3, r4, #476	; 0x1dc
 8004ef8:	429d      	cmp	r5, r3
 8004efa:	d103      	bne.n	8004f04 <_ZN16pwmSetupViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x26>
        pwmStart();
 8004efc:	6823      	ldr	r3, [r4, #0]
 8004efe:	4620      	mov	r0, r4
 8004f00:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004f02:	4798      	blx	r3
    if (&src == &pulseStop)
 8004f04:	f504 7309 	add.w	r3, r4, #548	; 0x224
 8004f08:	429d      	cmp	r5, r3
 8004f0a:	d105      	bne.n	8004f18 <_ZN16pwmSetupViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
        pwmStop();
 8004f0c:	6823      	ldr	r3, [r4, #0]
 8004f0e:	4620      	mov	r0, r4
 8004f10:	6b5b      	ldr	r3, [r3, #52]	; 0x34
}
 8004f12:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
        pwmStop();
 8004f16:	4718      	bx	r3
}
 8004f18:	bd70      	pop	{r4, r5, r6, pc}
	...

08004f1c <_ZN16pwmSetupViewBaseC1Ev>:
pwmSetupViewBase::pwmSetupViewBase() :
 8004f1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004f20:	ed2d 8b02 	vpush	{d8}
 8004f24:	4604      	mov	r4, r0
 8004f26:	b08d      	sub	sp, #52	; 0x34
    sliderValueChangedCallback(this, &pwmSetupViewBase::sliderValueChangedCallbackHandler)
 8004f28:	46a1      	mov	r9, r4
 8004f2a:	2500      	movs	r5, #0
 8004f2c:	f00e f884 	bl	8013038 <_ZN8touchgfx6ScreenC1Ev>
 8004f30:	4b9e      	ldr	r3, [pc, #632]	; (80051ac <_ZN16pwmSetupViewBaseC1Ev+0x290>)
 8004f32:	63e5      	str	r5, [r4, #60]	; 0x3c
 8004f34:	f849 3b40 	str.w	r3, [r9], #64
 8004f38:	f104 0a6c 	add.w	sl, r4, #108	; 0x6c
 8004f3c:	4648      	mov	r0, r9
 8004f3e:	f7fe fe35 	bl	8003bac <_ZN8touchgfx3BoxC1Ev>
 8004f42:	f104 0898 	add.w	r8, r4, #152	; 0x98
 8004f46:	4650      	mov	r0, sl
 8004f48:	f104 07e0 	add.w	r7, r4, #224	; 0xe0
 8004f4c:	f7fe fe2e 	bl	8003bac <_ZN8touchgfx3BoxC1Ev>
 8004f50:	4640      	mov	r0, r8
 8004f52:	f00a ffa9 	bl	800fea8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004f56:	4638      	mov	r0, r7
 8004f58:	f007 fa38 	bl	800c3cc <_ZN8touchgfx6SliderC1Ev>
 8004f5c:	f504 73ee 	add.w	r3, r4, #476	; 0x1dc
 8004f60:	f504 7b09 	add.w	fp, r4, #548	; 0x224
 8004f64:	4618      	mov	r0, r3
 8004f66:	ee08 3a10 	vmov	s16, r3
 8004f6a:	f00a ff9d 	bl	800fea8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004f6e:	4658      	mov	r0, fp
 8004f70:	f00a ff9a 	bl	800fea8 <_ZN8touchgfx15ButtonWithLabelC1Ev>
 8004f74:	f504 731b 	add.w	r3, r4, #620	; 0x26c
 8004f78:	ee08 3a90 	vmov	s17, r3
 8004f7c:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004f80:	f8a4 3290 	strh.w	r3, [r4, #656]	; 0x290
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 8004f84:	4b8a      	ldr	r3, [pc, #552]	; (80051b0 <_ZN16pwmSetupViewBaseC1Ev+0x294>)
 8004f86:	f8c4 326c 	str.w	r3, [r4, #620]	; 0x26c
        : typedTextId(id)
 8004f8a:	4b8a      	ldr	r3, [pc, #552]	; (80051b4 <_ZN16pwmSetupViewBaseC1Ev+0x298>)
 8004f8c:	f8c4 3294 	str.w	r3, [r4, #660]	; 0x294
 8004f90:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8004f94:	f8a4 3298 	strh.w	r3, [r4, #664]	; 0x298
 8004f98:	f44f 037f 	mov.w	r3, #16711680	; 0xff0000
 8004f9c:	f8c4 32a0 	str.w	r3, [r4, #672]	; 0x2a0
        : pobject(pObject), pmemfun(pmemfun_1)
 8004fa0:	4b85      	ldr	r3, [pc, #532]	; (80051b8 <_ZN16pwmSetupViewBaseC1Ev+0x29c>)
        : color(col)
 8004fa2:	f8c4 529c 	str.w	r5, [r4, #668]	; 0x29c
 8004fa6:	e9c4 34ad 	strd	r3, r4, [r4, #692]	; 0x2b4
 8004faa:	4b84      	ldr	r3, [pc, #528]	; (80051bc <_ZN16pwmSetupViewBaseC1Ev+0x2a0>)
 8004fac:	f8a4 52a4 	strh.w	r5, [r4, #676]	; 0x2a4
 8004fb0:	e9c4 35af 	strd	r3, r5, [r4, #700]	; 0x2bc
        : pobject(pObject), pmemfun(pmemfun_2)
 8004fb4:	4b82      	ldr	r3, [pc, #520]	; (80051c0 <_ZN16pwmSetupViewBaseC1Ev+0x2a4>)
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8004fb6:	f8c4 52a8 	str.w	r5, [r4, #680]	; 0x2a8
 8004fba:	e9c4 34b1 	strd	r3, r4, [r4, #708]	; 0x2c4
 8004fbe:	f04f 32ff 	mov.w	r2, #4294967295
 8004fc2:	4b80      	ldr	r3, [pc, #512]	; (80051c4 <_ZN16pwmSetupViewBaseC1Ev+0x2a8>)
              text(0)
 8004fc4:	e9c4 25ab 	strd	r2, r5, [r4, #684]	; 0x2ac
    __background.setPosition(0, 0, 800, 480);
 8004fc8:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8004fcc:	e9c4 35b3 	strd	r3, r5, [r4, #716]	; 0x2cc
 8004fd0:	9200      	str	r2, [sp, #0]
 8004fd2:	4629      	mov	r1, r5
 8004fd4:	462a      	mov	r2, r5
 8004fd6:	4648      	mov	r0, r9
        : x(0), y(0), width(0), height(0)
 8004fd8:	e9c4 559c 	strd	r5, r5, [r4, #624]	; 0x270
 8004fdc:	e9c4 559e 	strd	r5, r5, [r4, #632]	; 0x278
 8004fe0:	e9c4 55a0 	strd	r5, r5, [r4, #640]	; 0x280
 8004fe4:	e9c4 55a2 	strd	r5, r5, [r4, #648]	; 0x288
 8004fe8:	f44f 7348 	mov.w	r3, #800	; 0x320
 8004fec:	f7fe fdca 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
 8004ff0:	1d26      	adds	r6, r4, #4
 8004ff2:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
 8004ff6:	66a3      	str	r3, [r4, #104]	; 0x68
 8004ff8:	4649      	mov	r1, r9
 8004ffa:	4630      	mov	r0, r6
 8004ffc:	f006 fd08 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    box1.setPosition(0, 0, 800, 480);
 8005000:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
 8005004:	9200      	str	r2, [sp, #0]
 8005006:	4629      	mov	r1, r5
 8005008:	462a      	mov	r2, r5
 800500a:	4650      	mov	r0, sl
 800500c:	f44f 7348 	mov.w	r3, #800	; 0x320
 8005010:	f7fe fdb8 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
 8005014:	4b6c      	ldr	r3, [pc, #432]	; (80051c8 <_ZN16pwmSetupViewBaseC1Ev+0x2ac>)
 8005016:	f8c4 3094 	str.w	r3, [r4, #148]	; 0x94
 800501a:	4651      	mov	r1, sl
 800501c:	4630      	mov	r0, r6
 800501e:	f006 fcf7 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    backButton.setXY(0, 430);
 8005022:	4629      	mov	r1, r5
 8005024:	4640      	mov	r0, r8
 8005026:	f44f 72d7 	mov.w	r2, #430	; 0x1ae
 800502a:	f7fe fd9e 	bl	8003b6a <_ZN8touchgfx8Drawable5setXYEss>
 800502e:	f04f 0902 	mov.w	r9, #2
 8005032:	f04f 0a03 	mov.w	sl, #3
    backButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
 8005036:	aa0a      	add	r2, sp, #40	; 0x28
 8005038:	a909      	add	r1, sp, #36	; 0x24
 800503a:	4640      	mov	r0, r8
 800503c:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005040:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8005044:	f00a fd33 	bl	800faae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 8005048:	4640      	mov	r0, r8
class TypedText
 800504a:	f8a4 a0d0 	strh.w	sl, [r4, #208]	; 0xd0
 800504e:	f7fe fdc3 	bl	8003bd8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 8005052:	f04f 32ff 	mov.w	r2, #4294967295
        colorPressed = col;
 8005056:	e9c4 2235 	strd	r2, r2, [r4, #212]	; 0xd4
    backButton.setAction(buttonCallback);
 800505a:	f504 722d 	add.w	r2, r4, #692	; 0x2b4
 800505e:	f8c4 20c0 	str.w	r2, [r4, #192]	; 0xc0
 8005062:	4641      	mov	r1, r8
 8005064:	4630      	mov	r0, r6
 8005066:	9203      	str	r2, [sp, #12]
 8005068:	f006 fcd2 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    testPulseSlider.setXY(74, 92);
 800506c:	4638      	mov	r0, r7
 800506e:	225c      	movs	r2, #92	; 0x5c
 8005070:	214a      	movs	r1, #74	; 0x4a
 8005072:	f7fe fd7a 	bl	8003b6a <_ZN8touchgfx8Drawable5setXYEss>
 8005076:	2306      	movs	r3, #6
 8005078:	f8ad 3020 	strh.w	r3, [sp, #32]
 800507c:	2304      	movs	r3, #4
 800507e:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
    testPulseSlider.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_TRACK_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_FILLER_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_ROUNDED_DARK_ID));
 8005082:	aa0a      	add	r2, sp, #40	; 0x28
 8005084:	2305      	movs	r3, #5
 8005086:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800508a:	a908      	add	r1, sp, #32
 800508c:	4613      	mov	r3, r2
 800508e:	4638      	mov	r0, r7
 8005090:	aa09      	add	r2, sp, #36	; 0x24
 8005092:	f007 f9f7 	bl	800c484 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>
    testPulseSlider.setupHorizontalSlider(16, 11, 0, 0, 300);
 8005096:	f44f 7396 	mov.w	r3, #300	; 0x12c
 800509a:	e9cd 5300 	strd	r5, r3, [sp]
 800509e:	4638      	mov	r0, r7
 80050a0:	462b      	mov	r3, r5
 80050a2:	220b      	movs	r2, #11
 80050a4:	2110      	movs	r1, #16
 80050a6:	f007 f862 	bl	800c16e <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt>
    testPulseSlider.setValueRange(40, 32750);
 80050aa:	f647 72ee 	movw	r2, #32750	; 0x7fee
 80050ae:	4638      	mov	r0, r7
 80050b0:	2128      	movs	r1, #40	; 0x28
 80050b2:	f006 ffc0 	bl	800c036 <_ZN8touchgfx6Slider13setValueRangeEii>
    testPulseSlider.setValue(40);
 80050b6:	4638      	mov	r0, r7
 80050b8:	2128      	movs	r1, #40	; 0x28
 80050ba:	f006 ff3e 	bl	800bf3a <_ZN8touchgfx6Slider8setValueEi>
    testPulseSlider.setNewValueCallback(sliderValueChangedCallback);
 80050be:	f504 7331 	add.w	r3, r4, #708	; 0x2c4
     *
     * @see GenericCallback
     */
    void setNewValueCallback(GenericCallback<const Slider&, int>& callback)
    {
        newValueCallback = &callback;
 80050c2:	f8c4 31d8 	str.w	r3, [r4, #472]	; 0x1d8
 80050c6:	4639      	mov	r1, r7
 80050c8:	4630      	mov	r0, r6
 80050ca:	f006 fca1 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pulseStart.setXY(73, 215);
 80050ce:	ee18 0a10 	vmov	r0, s16
 80050d2:	22d7      	movs	r2, #215	; 0xd7
 80050d4:	2149      	movs	r1, #73	; 0x49
 80050d6:	f7fe fd48 	bl	8003b6a <_ZN8touchgfx8Drawable5setXYEss>
    pulseStart.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
 80050da:	aa0a      	add	r2, sp, #40	; 0x28
 80050dc:	a909      	add	r1, sp, #36	; 0x24
 80050de:	ee18 0a10 	vmov	r0, s16
 80050e2:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 80050e6:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 80050ea:	f00a fce0 	bl	800faae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
        updateTextPosition();
 80050ee:	ee18 0a10 	vmov	r0, s16
 80050f2:	f8a4 9214 	strh.w	r9, [r4, #532]	; 0x214
 80050f6:	f7fe fd6f 	bl	8003bd8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 80050fa:	f04f 32ff 	mov.w	r2, #4294967295
        colorPressed = col;
 80050fe:	e9c4 2286 	strd	r2, r2, [r4, #536]	; 0x218
 8005102:	9a03      	ldr	r2, [sp, #12]
 8005104:	f8c4 2204 	str.w	r2, [r4, #516]	; 0x204
 8005108:	ee18 1a10 	vmov	r1, s16
 800510c:	4630      	mov	r0, r6
 800510e:	f006 fc7f 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    pulseStop.setXY(487, 215);
 8005112:	4658      	mov	r0, fp
 8005114:	22d7      	movs	r2, #215	; 0xd7
 8005116:	f240 11e7 	movw	r1, #487	; 0x1e7
 800511a:	f7fe fd26 	bl	8003b6a <_ZN8touchgfx8Drawable5setXYEss>
    pulseStop.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
 800511e:	aa0a      	add	r2, sp, #40	; 0x28
 8005120:	a909      	add	r1, sp, #36	; 0x24
 8005122:	4658      	mov	r0, fp
 8005124:	f8ad 9024 	strh.w	r9, [sp, #36]	; 0x24
 8005128:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 800512c:	f00a fcbf 	bl	800faae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 8005130:	2301      	movs	r3, #1
 8005132:	f8a4 325c 	strh.w	r3, [r4, #604]	; 0x25c
        updateTextPosition();
 8005136:	4658      	mov	r0, fp
 8005138:	f7fe fd4e 	bl	8003bd8 <_ZN8touchgfx15ButtonWithLabel18updateTextPositionEv>
        color = col;
 800513c:	f04f 32ff 	mov.w	r2, #4294967295
        colorPressed = col;
 8005140:	e9c4 2298 	strd	r2, r2, [r4, #608]	; 0x260
 8005144:	9a03      	ldr	r2, [sp, #12]
 8005146:	f8c4 224c 	str.w	r2, [r4, #588]	; 0x24c
 800514a:	4659      	mov	r1, fp
 800514c:	4630      	mov	r0, r6
 800514e:	f006 fc5f 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    textArea1.setXY(500, 83);
 8005152:	ee18 0a90 	vmov	r0, s17
 8005156:	2253      	movs	r2, #83	; 0x53
 8005158:	f44f 71fa 	mov.w	r1, #500	; 0x1f4
 800515c:	f7fe fd05 	bl	8003b6a <_ZN8touchgfx8Drawable5setXYEss>
        boundingArea = calculateBoundingArea();
 8005160:	af04      	add	r7, sp, #16
        color = newColor;
 8005162:	f04f 32ff 	mov.w	r2, #4294967295
        boundingArea = calculateBoundingArea();
 8005166:	ee18 1a90 	vmov	r1, s17
        color = newColor;
 800516a:	f8c4 229c 	str.w	r2, [r4, #668]	; 0x29c
        boundingArea = calculateBoundingArea();
 800516e:	4638      	mov	r0, r7
        linespace = space;
 8005170:	f8a4 52a0 	strh.w	r5, [r4, #672]	; 0x2a0
        boundingArea = calculateBoundingArea();
 8005174:	f00a f9a4 	bl	800f4c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>
 8005178:	e897 0007 	ldmia.w	r7, {r0, r1, r2}
 800517c:	f504 732a 	add.w	r3, r4, #680	; 0x2a8
 8005180:	e883 0007 	stmia.w	r3, {r0, r1, r2}
        : typedTextId(id)
 8005184:	4b0b      	ldr	r3, [pc, #44]	; (80051b4 <_ZN16pwmSetupViewBaseC1Ev+0x298>)
 8005186:	930a      	str	r3, [sp, #40]	; 0x28
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HDOS));
 8005188:	ee18 0a90 	vmov	r0, s17
 800518c:	a90a      	add	r1, sp, #40	; 0x28
 800518e:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 8005192:	f00a fc2f 	bl	800f9f4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 8005196:	4630      	mov	r0, r6
 8005198:	ee18 1a90 	vmov	r1, s17
 800519c:	f006 fc38 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 80051a0:	4620      	mov	r0, r4
 80051a2:	b00d      	add	sp, #52	; 0x34
 80051a4:	ecbd 8b02 	vpop	{d8}
 80051a8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80051ac:	08023200 	.word	0x08023200
 80051b0:	08023be8 	.word	0x08023be8
 80051b4:	080221bc 	.word	0x080221bc
 80051b8:	080231d0 	.word	0x080231d0
 80051bc:	08004edf 	.word	0x08004edf
 80051c0:	080231e8 	.word	0x080231e8
 80051c4:	08004ec3 	.word	0x08004ec3
 80051c8:	ff541a87 	.word	0xff541a87

080051cc <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80051cc:	4770      	bx	lr

080051ce <_ZN19FrontendApplicationD0Ev>:
 80051ce:	b510      	push	{r4, lr}
 80051d0:	f44f 71ae 	mov.w	r1, #348	; 0x15c
 80051d4:	4604      	mov	r4, r0
 80051d6:	f01b fa6b 	bl	80206b0 <_ZdlPvj>
 80051da:	4620      	mov	r0, r4
 80051dc:	bd10      	pop	{r4, pc}

080051de <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 80051de:	b510      	push	{r4, lr}
 80051e0:	4604      	mov	r4, r0
    {
        model.tick();
 80051e2:	f8d0 0158 	ldr.w	r0, [r0, #344]	; 0x158
 80051e6:	f000 f855 	bl	8005294 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 80051ea:	4620      	mov	r0, r4
    }
 80051ec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 80051f0:	f00c bbcc 	b.w	801198c <_ZN8touchgfx11Application15handleTickEventEv>

080051f4 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 80051f4:	b510      	push	{r4, lr}
 80051f6:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 80051f8:	f7fe f8ec 	bl	80033d4 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 80051fc:	4b01      	ldr	r3, [pc, #4]	; (8005204 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 80051fe:	6023      	str	r3, [r4, #0]
{

}
 8005200:	4620      	mov	r0, r4
 8005202:	bd10      	pop	{r4, pc}
 8005204:	08023240 	.word	0x08023240

08005208 <_ZN13ModelListener11UpdateGraphEt>:
    }

    virtual void UpdateGraph(uint16_t value){}
 8005208:	4770      	bx	lr

0800520a <_ZN13MenuPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MenuPresenter() {};
 800520a:	4770      	bx	lr

0800520c <_ZThn4_N13MenuPresenterD1Ev>:
 800520c:	3804      	subs	r0, #4
 800520e:	4770      	bx	lr

08005210 <_ZN13MenuPresenter10deactivateEv>:
}

void MenuPresenter::activate()
{

}
 8005210:	4770      	bx	lr

08005212 <_ZN13MenuPresenterD0Ev>:
 8005212:	b510      	push	{r4, lr}
 8005214:	2110      	movs	r1, #16
 8005216:	4604      	mov	r4, r0
 8005218:	f01b fa4a 	bl	80206b0 <_ZdlPvj>
 800521c:	4620      	mov	r0, r4
 800521e:	bd10      	pop	{r4, pc}

08005220 <_ZThn4_N13MenuPresenterD0Ev>:
 8005220:	f1a0 0004 	sub.w	r0, r0, #4
 8005224:	e7f5      	b.n	8005212 <_ZN13MenuPresenterD0Ev>
	...

08005228 <_ZN13MenuPresenterC1ER8MenuView>:
MenuPresenter::MenuPresenter(MenuView& v)
 8005228:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 800522a:	2200      	movs	r2, #0
 800522c:	6082      	str	r2, [r0, #8]
    : view(v)
 800522e:	4a04      	ldr	r2, [pc, #16]	; (8005240 <_ZN13MenuPresenterC1ER8MenuView+0x18>)
 8005230:	60c1      	str	r1, [r0, #12]
 8005232:	f102 0408 	add.w	r4, r2, #8
 8005236:	3220      	adds	r2, #32
 8005238:	6004      	str	r4, [r0, #0]
 800523a:	6042      	str	r2, [r0, #4]
}
 800523c:	bd10      	pop	{r4, pc}
 800523e:	bf00      	nop
 8005240:	08023284 	.word	0x08023284

08005244 <_ZN8MenuView14tearDownScreenEv>:
}

void MenuView::tearDownScreen()
{
    MenuViewBase::tearDownScreen();
}
 8005244:	4770      	bx	lr
	...

08005248 <_ZN8MenuViewD1Ev>:

class MenuView : public MenuViewBase
{
public:
    MenuView();
    virtual ~MenuView() {}
 8005248:	b510      	push	{r4, lr}
 800524a:	4b03      	ldr	r3, [pc, #12]	; (8005258 <_ZN8MenuViewD1Ev+0x10>)
 800524c:	6003      	str	r3, [r0, #0]
 800524e:	4604      	mov	r4, r0
 8005250:	f7fe fc49 	bl	8003ae6 <_ZN12MenuViewBaseD1Ev>
 8005254:	4620      	mov	r0, r4
 8005256:	bd10      	pop	{r4, pc}
 8005258:	080232b8 	.word	0x080232b8

0800525c <_ZN8MenuViewD0Ev>:
 800525c:	b510      	push	{r4, lr}
 800525e:	4604      	mov	r4, r0
 8005260:	f7ff fff2 	bl	8005248 <_ZN8MenuViewD1Ev>
 8005264:	4620      	mov	r0, r4
 8005266:	f44f 719c 	mov.w	r1, #312	; 0x138
 800526a:	f01b fa21 	bl	80206b0 <_ZdlPvj>
 800526e:	4620      	mov	r0, r4
 8005270:	bd10      	pop	{r4, pc}
	...

08005274 <_ZN8MenuViewC1Ev>:
MenuView::MenuView()
 8005274:	b510      	push	{r4, lr}
 8005276:	4604      	mov	r4, r0
 8005278:	f7fe fcf2 	bl	8003c60 <_ZN12MenuViewBaseC1Ev>
 800527c:	4b01      	ldr	r3, [pc, #4]	; (8005284 <_ZN8MenuViewC1Ev+0x10>)
 800527e:	6023      	str	r3, [r4, #0]
}
 8005280:	4620      	mov	r0, r4
 8005282:	bd10      	pop	{r4, pc}
 8005284:	080232b8 	.word	0x080232b8

08005288 <_ZN8MenuView11setupScreenEv>:
    MenuViewBase::setupScreen();
 8005288:	f7fe bc2e 	b.w	8003ae8 <_ZN12MenuViewBase11setupScreenEv>

0800528c <_ZN5ModelC1Ev>:
/*declare any variables from main here*/
extern __IO uint16_t pulseHeight;
extern TIM_HandleTypeDef htim12;
/*local variables*/
volatile uint16_t lastHeight = 0;
Model::Model() : modelListener(0)
 800528c:	2200      	movs	r2, #0
 800528e:	6002      	str	r2, [r0, #0]
{

}
 8005290:	4770      	bx	lr
	...

08005294 <_ZN5Model4tickEv>:

//this function gets called every time the screen refreshes, typically 60Hz
void Model::tick()
{
 8005294:	b410      	push	{r4}

	if( (pulseHeight != lastHeight) && (pulseHeight != 0) )
 8005296:	4b0c      	ldr	r3, [pc, #48]	; (80052c8 <_ZN5Model4tickEv+0x34>)
 8005298:	4c0c      	ldr	r4, [pc, #48]	; (80052cc <_ZN5Model4tickEv+0x38>)
 800529a:	8819      	ldrh	r1, [r3, #0]
 800529c:	8822      	ldrh	r2, [r4, #0]
 800529e:	b289      	uxth	r1, r1
 80052a0:	b292      	uxth	r2, r2
 80052a2:	4291      	cmp	r1, r2
 80052a4:	d00d      	beq.n	80052c2 <_ZN5Model4tickEv+0x2e>
 80052a6:	881a      	ldrh	r2, [r3, #0]
 80052a8:	b292      	uxth	r2, r2
 80052aa:	b152      	cbz	r2, 80052c2 <_ZN5Model4tickEv+0x2e>
	{
		lastHeight = pulseHeight;
 80052ac:	881a      	ldrh	r2, [r3, #0]
		modelListener->UpdateGraph(pulseHeight);
 80052ae:	6800      	ldr	r0, [r0, #0]
		lastHeight = pulseHeight;
 80052b0:	b292      	uxth	r2, r2
 80052b2:	8022      	strh	r2, [r4, #0]
		modelListener->UpdateGraph(pulseHeight);
 80052b4:	8819      	ldrh	r1, [r3, #0]
 80052b6:	6803      	ldr	r3, [r0, #0]

	}
}
 80052b8:	f85d 4b04 	ldr.w	r4, [sp], #4
		modelListener->UpdateGraph(pulseHeight);
 80052bc:	689b      	ldr	r3, [r3, #8]
 80052be:	b289      	uxth	r1, r1
 80052c0:	4718      	bx	r3
}
 80052c2:	f85d 4b04 	ldr.w	r4, [sp], #4
 80052c6:	4770      	bx	lr
 80052c8:	20008df4 	.word	0x20008df4
 80052cc:	20008ef8 	.word	0x20008ef8

080052d0 <_ZN5Model13changePWMfreqEi>:

void Model::changePWMfreq(int value)
{
	//HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);
	//__HAL_TIM_SET_PRESCALER(&htim12, value-1);
	__HAL_TIM_SET_AUTORELOAD(&htim12, value);
 80052d0:	4b02      	ldr	r3, [pc, #8]	; (80052dc <_ZN5Model13changePWMfreqEi+0xc>)
 80052d2:	681a      	ldr	r2, [r3, #0]
 80052d4:	60d9      	str	r1, [r3, #12]
 80052d6:	62d1      	str	r1, [r2, #44]	; 0x2c
}
 80052d8:	4770      	bx	lr
 80052da:	bf00      	nop
 80052dc:	20008d50 	.word	0x20008d50

080052e0 <_ZN5Model7pwmStopEv>:

void Model::pwmStop()
{
	HAL_TIM_PWM_Stop(&htim12, TIM_CHANNEL_1);
 80052e0:	4801      	ldr	r0, [pc, #4]	; (80052e8 <_ZN5Model7pwmStopEv+0x8>)
 80052e2:	2100      	movs	r1, #0
 80052e4:	f004 b984 	b.w	80095f0 <HAL_TIM_PWM_Stop>
 80052e8:	20008d50 	.word	0x20008d50

080052ec <_ZN5Model8pwmStartEv>:
}
void Model::pwmStart()
{
	HAL_TIM_PWM_Start(&htim12, TIM_CHANNEL_1);
 80052ec:	4801      	ldr	r0, [pc, #4]	; (80052f4 <_ZN5Model8pwmStartEv+0x8>)
 80052ee:	2100      	movs	r1, #0
 80052f0:	f004 b93c 	b.w	800956c <HAL_TIM_PWM_Start>
 80052f4:	20008d50 	.word	0x20008d50

080052f8 <_ZN22PulseSpectrumPresenterD1Ev>:

    void UpdateGraph(uint16_t value);

    virtual void clearGraph();

    virtual ~PulseSpectrumPresenter() {};
 80052f8:	4770      	bx	lr

080052fa <_ZThn4_N22PulseSpectrumPresenterD1Ev>:
 80052fa:	3804      	subs	r0, #4
 80052fc:	4770      	bx	lr

080052fe <_ZN22PulseSpectrumPresenter10deactivateEv>:
}

void PulseSpectrumPresenter::activate()
{

}
 80052fe:	4770      	bx	lr

08005300 <_ZN22PulseSpectrumPresenter10clearGraphEv>:
	view.UpdateGraph(value);
}
/*updates the histogram*/
void PulseSpectrumPresenter::clearGraph()
{
	view.clearGraph();
 8005300:	68c0      	ldr	r0, [r0, #12]
 8005302:	6803      	ldr	r3, [r0, #0]
 8005304:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005306:	4718      	bx	r3

08005308 <_ZN22PulseSpectrumPresenterD0Ev>:
 8005308:	b510      	push	{r4, lr}
 800530a:	2110      	movs	r1, #16
 800530c:	4604      	mov	r4, r0
 800530e:	f01b f9cf 	bl	80206b0 <_ZdlPvj>
 8005312:	4620      	mov	r0, r4
 8005314:	bd10      	pop	{r4, pc}

08005316 <_ZThn4_N22PulseSpectrumPresenterD0Ev>:
 8005316:	f1a0 0004 	sub.w	r0, r0, #4
 800531a:	e7f5      	b.n	8005308 <_ZN22PulseSpectrumPresenterD0Ev>

0800531c <_ZN22PulseSpectrumPresenter11UpdateGraphEt>:
	view.UpdateGraph(value);
 800531c:	68c0      	ldr	r0, [r0, #12]
 800531e:	f000 b857 	b.w	80053d0 <_ZN17PulseSpectrumView11UpdateGraphEt>

08005322 <_ZThn4_N22PulseSpectrumPresenter11UpdateGraphEt>:
    void UpdateGraph(uint16_t value);
 8005322:	f1a0 0004 	sub.w	r0, r0, #4
 8005326:	f7ff bff9 	b.w	800531c <_ZN22PulseSpectrumPresenter11UpdateGraphEt>
	...

0800532c <_ZN22PulseSpectrumPresenterC1ER17PulseSpectrumView>:
PulseSpectrumPresenter::PulseSpectrumPresenter(PulseSpectrumView& v)
 800532c:	b510      	push	{r4, lr}
 800532e:	2200      	movs	r2, #0
 8005330:	6082      	str	r2, [r0, #8]
    : view(v)
 8005332:	4a04      	ldr	r2, [pc, #16]	; (8005344 <_ZN22PulseSpectrumPresenterC1ER17PulseSpectrumView+0x18>)
 8005334:	60c1      	str	r1, [r0, #12]
 8005336:	f102 0408 	add.w	r4, r2, #8
 800533a:	3228      	adds	r2, #40	; 0x28
 800533c:	6004      	str	r4, [r0, #0]
 800533e:	6042      	str	r2, [r0, #4]
}
 8005340:	bd10      	pop	{r4, pc}
 8005342:	bf00      	nop
 8005344:	080232e4 	.word	0x080232e4

08005348 <_ZN17PulseSpectrumView14tearDownScreenEv>:
}

void PulseSpectrumView::tearDownScreen()
{
    PulseSpectrumViewBase::tearDownScreen();
}
 8005348:	4770      	bx	lr
	...

0800534c <_ZN17PulseSpectrumViewD1Ev>:

class PulseSpectrumView : public PulseSpectrumViewBase
{
public:
    PulseSpectrumView();
    virtual ~PulseSpectrumView() {}
 800534c:	b510      	push	{r4, lr}
 800534e:	4b03      	ldr	r3, [pc, #12]	; (800535c <_ZN17PulseSpectrumViewD1Ev+0x10>)
 8005350:	6003      	str	r3, [r0, #0]
 8005352:	4604      	mov	r4, r0
 8005354:	f7fe ffea 	bl	800432c <_ZN21PulseSpectrumViewBaseD1Ev>
 8005358:	4620      	mov	r0, r4
 800535a:	bd10      	pop	{r4, pc}
 800535c:	08023320 	.word	0x08023320

08005360 <_ZN17PulseSpectrumViewD0Ev>:
 8005360:	b510      	push	{r4, lr}
 8005362:	4604      	mov	r4, r0
 8005364:	f7ff fff2 	bl	800534c <_ZN17PulseSpectrumViewD1Ev>
 8005368:	4620      	mov	r0, r4
 800536a:	f246 2120 	movw	r1, #25120	; 0x6220
 800536e:	f01b f99f 	bl	80206b0 <_ZdlPvj>
 8005372:	4620      	mov	r0, r4
 8005374:	bd10      	pop	{r4, pc}
	...

08005378 <_ZN17PulseSpectrumViewC1Ev>:
PulseSpectrumView::PulseSpectrumView()
 8005378:	b510      	push	{r4, lr}
 800537a:	4604      	mov	r4, r0
 800537c:	f7ff f8dc 	bl	8004538 <_ZN21PulseSpectrumViewBaseC1Ev>
 8005380:	4b05      	ldr	r3, [pc, #20]	; (8005398 <_ZN17PulseSpectrumViewC1Ev+0x20>)
 8005382:	6023      	str	r3, [r4, #0]
	  binCounter[i] = 0;
 8005384:	f44f 627a 	mov.w	r2, #4000	; 0xfa0
 8005388:	2100      	movs	r1, #0
 800538a:	f504 40a5 	add.w	r0, r4, #21120	; 0x5280
 800538e:	f01b fa49 	bl	8020824 <memset>
}
 8005392:	4620      	mov	r0, r4
 8005394:	bd10      	pop	{r4, pc}
 8005396:	bf00      	nop
 8005398:	08023320 	.word	0x08023320

0800539c <_ZN17PulseSpectrumView11setupScreenEv>:
    PulseSpectrumViewBase::setupScreen();
 800539c:	f7fe bf64 	b.w	8004268 <_ZN21PulseSpectrumViewBase11setupScreenEv>

080053a0 <_ZN17PulseSpectrumView10clearGraphEv>:
	//binCounter[value] = binCounter[value] +1;

}

void PulseSpectrumView::clearGraph()
{
 80053a0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    for(int k = 0; k<1000; k++)
 80053a4:	2400      	movs	r4, #0
{
 80053a6:	4605      	mov	r5, r0
 80053a8:	f500 46a5 	add.w	r6, r0, #21120	; 0x5280
    {
    	histogram.addDataPoint(k, 0);
 80053ac:	f100 0898 	add.w	r8, r0, #152	; 0x98
        return addValue(int2scaledX(x), int2scaledY(y));
 80053b0:	4627      	mov	r7, r4
        return i * scale;
 80053b2:	f8d5 10c8 	ldr.w	r1, [r5, #200]	; 0xc8
        return addValue(int2scaledX(x), int2scaledY(y));
 80053b6:	2200      	movs	r2, #0
 80053b8:	4361      	muls	r1, r4
 80053ba:	4640      	mov	r0, r8
    for(int k = 0; k<1000; k++)
 80053bc:	3401      	adds	r4, #1
 80053be:	f008 fc77 	bl	800dcb0 <_ZN8touchgfx9GraphData8addValueEii>
 80053c2:	f5b4 7f7a 	cmp.w	r4, #1000	; 0x3e8
    	binCounter[k]=0;
 80053c6:	f846 7b04 	str.w	r7, [r6], #4
    for(int k = 0; k<1000; k++)
 80053ca:	d1f2      	bne.n	80053b2 <_ZN17PulseSpectrumView10clearGraphEv+0x12>
    }
}
 80053cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080053d0 <_ZN17PulseSpectrumView11UpdateGraphEt>:
{
 80053d0:	b538      	push	{r3, r4, r5, lr}
	int mappedVal = ((int)value+1404)*(999)/(4095);//map 12 bit number onto a 0-999 (with offset)
 80053d2:	f201 517c 	addw	r1, r1, #1404	; 0x57c
 80053d6:	f240 33e7 	movw	r3, #999	; 0x3e7
 80053da:	4359      	muls	r1, r3
 80053dc:	f640 73ff 	movw	r3, #4095	; 0xfff
 80053e0:	fbb1 f1f3 	udiv	r1, r1, r3
	histogram.addDataPoint(mappedVal, binCounter[mappedVal]);
 80053e4:	eb00 0481 	add.w	r4, r0, r1, lsl #2
 80053e8:	f504 44a0 	add.w	r4, r4, #20480	; 0x5000
        return i * scale;
 80053ec:	e9d0 3532 	ldrd	r3, r5, [r0, #200]	; 0xc8
 80053f0:	f8d4 2280 	ldr.w	r2, [r4, #640]	; 0x280
        return addValue(int2scaledX(x), int2scaledY(y));
 80053f4:	4359      	muls	r1, r3
 80053f6:	436a      	muls	r2, r5
 80053f8:	3098      	adds	r0, #152	; 0x98
 80053fa:	f008 fc59 	bl	800dcb0 <_ZN8touchgfx9GraphData8addValueEii>
	binCounter[mappedVal] = binCounter[mappedVal] +1;
 80053fe:	f8d4 3280 	ldr.w	r3, [r4, #640]	; 0x280
 8005402:	3301      	adds	r3, #1
 8005404:	f8c4 3280 	str.w	r3, [r4, #640]	; 0x280
}
 8005408:	bd38      	pop	{r3, r4, r5, pc}

0800540a <_ZN16StartupPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~StartupPresenter() {};
 800540a:	4770      	bx	lr

0800540c <_ZThn4_N16StartupPresenterD1Ev>:
 800540c:	3804      	subs	r0, #4
 800540e:	4770      	bx	lr

08005410 <_ZN16StartupPresenter10deactivateEv>:
}

void StartupPresenter::activate()
{

}
 8005410:	4770      	bx	lr

08005412 <_ZN16StartupPresenterD0Ev>:
 8005412:	b510      	push	{r4, lr}
 8005414:	2110      	movs	r1, #16
 8005416:	4604      	mov	r4, r0
 8005418:	f01b f94a 	bl	80206b0 <_ZdlPvj>
 800541c:	4620      	mov	r0, r4
 800541e:	bd10      	pop	{r4, pc}

08005420 <_ZThn4_N16StartupPresenterD0Ev>:
 8005420:	f1a0 0004 	sub.w	r0, r0, #4
 8005424:	e7f5      	b.n	8005412 <_ZN16StartupPresenterD0Ev>
	...

08005428 <_ZN16StartupPresenterC1ER11StartupView>:
StartupPresenter::StartupPresenter(StartupView& v)
 8005428:	b510      	push	{r4, lr}
 800542a:	2200      	movs	r2, #0
 800542c:	6082      	str	r2, [r0, #8]
    : view(v)
 800542e:	4a04      	ldr	r2, [pc, #16]	; (8005440 <_ZN16StartupPresenterC1ER11StartupView+0x18>)
 8005430:	60c1      	str	r1, [r0, #12]
 8005432:	f102 0408 	add.w	r4, r2, #8
 8005436:	3220      	adds	r2, #32
 8005438:	6004      	str	r4, [r0, #0]
 800543a:	6042      	str	r2, [r0, #4]
}
 800543c:	bd10      	pop	{r4, pc}
 800543e:	bf00      	nop
 8005440:	08023350 	.word	0x08023350

08005444 <_ZN11StartupView14tearDownScreenEv>:
}

void StartupView::tearDownScreen()
{
    StartupViewBase::tearDownScreen();
}
 8005444:	4770      	bx	lr
	...

08005448 <_ZN11StartupViewD1Ev>:

class StartupView : public StartupViewBase
{
public:
    StartupView();
    virtual ~StartupView() {}
 8005448:	b510      	push	{r4, lr}
 800544a:	4b03      	ldr	r3, [pc, #12]	; (8005458 <_ZN11StartupViewD1Ev+0x10>)
 800544c:	6003      	str	r3, [r0, #0]
 800544e:	4604      	mov	r4, r0
 8005450:	f7ff faba 	bl	80049c8 <_ZN15StartupViewBaseD1Ev>
 8005454:	4620      	mov	r0, r4
 8005456:	bd10      	pop	{r4, pc}
 8005458:	08023384 	.word	0x08023384

0800545c <_ZN11StartupViewD0Ev>:
 800545c:	b510      	push	{r4, lr}
 800545e:	4604      	mov	r4, r0
 8005460:	f7ff fff2 	bl	8005448 <_ZN11StartupViewD1Ev>
 8005464:	4620      	mov	r0, r4
 8005466:	21f4      	movs	r1, #244	; 0xf4
 8005468:	f01b f922 	bl	80206b0 <_ZdlPvj>
 800546c:	4620      	mov	r0, r4
 800546e:	bd10      	pop	{r4, pc}

08005470 <_ZN11StartupViewC1Ev>:
StartupView::StartupView()
 8005470:	b510      	push	{r4, lr}
 8005472:	4604      	mov	r4, r0
 8005474:	f7ff fac2 	bl	80049fc <_ZN15StartupViewBaseC1Ev>
 8005478:	4b01      	ldr	r3, [pc, #4]	; (8005480 <_ZN11StartupViewC1Ev+0x10>)
 800547a:	6023      	str	r3, [r4, #0]
}
 800547c:	4620      	mov	r0, r4
 800547e:	bd10      	pop	{r4, pc}
 8005480:	08023384 	.word	0x08023384

08005484 <_ZN11StartupView11setupScreenEv>:
    StartupViewBase::setupScreen();
 8005484:	f7ff baa1 	b.w	80049ca <_ZN15StartupViewBase11setupScreenEv>

08005488 <_ZN17pwmSetupPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~pwmSetupPresenter() {};
 8005488:	4770      	bx	lr

0800548a <_ZThn4_N17pwmSetupPresenterD1Ev>:
 800548a:	3804      	subs	r0, #4
 800548c:	4770      	bx	lr

0800548e <_ZN17pwmSetupPresenter10deactivateEv>:
}

void pwmSetupPresenter::activate()
{

}
 800548e:	4770      	bx	lr

08005490 <_ZN17pwmSetupPresenterD0Ev>:
 8005490:	b510      	push	{r4, lr}
 8005492:	2110      	movs	r1, #16
 8005494:	4604      	mov	r4, r0
 8005496:	f01b f90b 	bl	80206b0 <_ZdlPvj>
 800549a:	4620      	mov	r0, r4
 800549c:	bd10      	pop	{r4, pc}

0800549e <_ZThn4_N17pwmSetupPresenterD0Ev>:
 800549e:	f1a0 0004 	sub.w	r0, r0, #4
 80054a2:	e7f5      	b.n	8005490 <_ZN17pwmSetupPresenterD0Ev>

080054a4 <_ZN17pwmSetupPresenterC1ER12pwmSetupView>:
pwmSetupPresenter::pwmSetupPresenter(pwmSetupView& v)
 80054a4:	b510      	push	{r4, lr}
 80054a6:	2200      	movs	r2, #0
 80054a8:	6082      	str	r2, [r0, #8]
    : view(v)
 80054aa:	4a04      	ldr	r2, [pc, #16]	; (80054bc <_ZN17pwmSetupPresenterC1ER12pwmSetupView+0x18>)
 80054ac:	60c1      	str	r1, [r0, #12]
 80054ae:	f102 0408 	add.w	r4, r2, #8
 80054b2:	3220      	adds	r2, #32
 80054b4:	6004      	str	r4, [r0, #0]
 80054b6:	6042      	str	r2, [r0, #4]
}
 80054b8:	bd10      	pop	{r4, pc}
 80054ba:	bf00      	nop
 80054bc:	080233b0 	.word	0x080233b0

080054c0 <_ZN17pwmSetupPresenter13changePWMfreqEi>:

}

void pwmSetupPresenter::changePWMfreq(int value)
{
	model -> changePWMfreq(value);
 80054c0:	6880      	ldr	r0, [r0, #8]
 80054c2:	f7ff bf05 	b.w	80052d0 <_ZN5Model13changePWMfreqEi>

080054c6 <_ZN17pwmSetupPresenter8pwmStartEv>:
}
void pwmSetupPresenter::pwmStart()
{
	model-> pwmStart();
 80054c6:	6880      	ldr	r0, [r0, #8]
 80054c8:	f7ff bf10 	b.w	80052ec <_ZN5Model8pwmStartEv>

080054cc <_ZN17pwmSetupPresenter7pwmStopEv>:
}
void pwmSetupPresenter::pwmStop()
{
	model-> pwmStop();
 80054cc:	6880      	ldr	r0, [r0, #8]
 80054ce:	f7ff bf07 	b.w	80052e0 <_ZN5Model7pwmStopEv>

080054d2 <_ZN12pwmSetupView14tearDownScreenEv>:
}

void pwmSetupView::tearDownScreen()
{
    pwmSetupViewBase::tearDownScreen();
}
 80054d2:	4770      	bx	lr

080054d4 <_ZN12pwmSetupView13changePWMfreqEi>:

void pwmSetupView::changePWMfreq(int value)
{
	presenter-> changePWMfreq(value);
 80054d4:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80054d6:	f7ff bff3 	b.w	80054c0 <_ZN17pwmSetupPresenter13changePWMfreqEi>

080054da <_ZN12pwmSetupView8pwmStartEv>:
}

void pwmSetupView::pwmStart()
{
	presenter-> pwmStart();
 80054da:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80054dc:	f7ff bff3 	b.w	80054c6 <_ZN17pwmSetupPresenter8pwmStartEv>

080054e0 <_ZN12pwmSetupView7pwmStopEv>:
}
void pwmSetupView::pwmStop()
{
	presenter-> pwmStop();
 80054e0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 80054e2:	f7ff bff3 	b.w	80054cc <_ZN17pwmSetupPresenter7pwmStopEv>
	...

080054e8 <_ZN12pwmSetupViewD1Ev>:

class pwmSetupView : public pwmSetupViewBase
{
public:
    pwmSetupView();
    virtual ~pwmSetupView() {}
 80054e8:	b510      	push	{r4, lr}
 80054ea:	4b03      	ldr	r3, [pc, #12]	; (80054f8 <_ZN12pwmSetupViewD1Ev+0x10>)
 80054ec:	6003      	str	r3, [r0, #0]
 80054ee:	4604      	mov	r4, r0
 80054f0:	f7ff fc97 	bl	8004e22 <_ZN16pwmSetupViewBaseD1Ev>
 80054f4:	4620      	mov	r0, r4
 80054f6:	bd10      	pop	{r4, pc}
 80054f8:	080233e4 	.word	0x080233e4

080054fc <_ZN12pwmSetupViewD0Ev>:
 80054fc:	b510      	push	{r4, lr}
 80054fe:	4604      	mov	r4, r0
 8005500:	f7ff fff2 	bl	80054e8 <_ZN12pwmSetupViewD1Ev>
 8005504:	4620      	mov	r0, r4
 8005506:	f44f 7135 	mov.w	r1, #724	; 0x2d4
 800550a:	f01b f8d1 	bl	80206b0 <_ZdlPvj>
 800550e:	4620      	mov	r0, r4
 8005510:	bd10      	pop	{r4, pc}
	...

08005514 <_ZN12pwmSetupViewC1Ev>:
pwmSetupView::pwmSetupView()
 8005514:	b510      	push	{r4, lr}
 8005516:	4604      	mov	r4, r0
 8005518:	f7ff fd00 	bl	8004f1c <_ZN16pwmSetupViewBaseC1Ev>
 800551c:	4b01      	ldr	r3, [pc, #4]	; (8005524 <_ZN12pwmSetupViewC1Ev+0x10>)
 800551e:	6023      	str	r3, [r4, #0]
}
 8005520:	4620      	mov	r0, r4
 8005522:	bd10      	pop	{r4, pc}
 8005524:	080233e4 	.word	0x080233e4

08005528 <_ZN12pwmSetupView11setupScreenEv>:
    pwmSetupViewBase::setupScreen();
 8005528:	f7ff bc7c 	b.w	8004e24 <_ZN16pwmSetupViewBase11setupScreenEv>

0800552c <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 800552c:	4770      	bx	lr

0800552e <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 800552e:	2000      	movs	r0, #0
 8005530:	4770      	bx	lr

08005532 <ft6x06_ReadID>:
{
 8005532:	b510      	push	{r4, lr}
 8005534:	4604      	mov	r4, r0
  TS_IO_Init();
 8005536:	f000 fa95 	bl	8005a64 <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 800553a:	21a8      	movs	r1, #168	; 0xa8
 800553c:	b2e0      	uxtb	r0, r4
 800553e:	f000 faad 	bl	8005a9c <TS_IO_Read>
}
 8005542:	b280      	uxth	r0, r0
 8005544:	bd10      	pop	{r4, pc}
	...

08005548 <ft6x06_TS_DetectTouch>:
{
 8005548:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 800554a:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 800554c:	2102      	movs	r1, #2
 800554e:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 8005550:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 8005554:	f000 faa2 	bl	8005a9c <TS_IO_Read>
 8005558:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 800555c:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8005560:	f003 030f 	and.w	r3, r3, #15
 8005564:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 8005568:	f89d 3007 	ldrb.w	r3, [sp, #7]
 800556c:	2b02      	cmp	r3, #2
    nbTouch = 0;
 800556e:	bf88      	it	hi
 8005570:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 8005574:	4b04      	ldr	r3, [pc, #16]	; (8005588 <ft6x06_TS_DetectTouch+0x40>)
 8005576:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 800557a:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 800557e:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 8005580:	2200      	movs	r2, #0
 8005582:	709a      	strb	r2, [r3, #2]
}
 8005584:	b002      	add	sp, #8
 8005586:	bd10      	pop	{r4, pc}
 8005588:	20008efc 	.word	0x20008efc

0800558c <ft6x06_TS_GetXY>:
{
 800558c:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 800558e:	4c15      	ldr	r4, [pc, #84]	; (80055e4 <ft6x06_TS_GetXY+0x58>)
{
 8005590:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8005592:	78a3      	ldrb	r3, [r4, #2]
 8005594:	7862      	ldrb	r2, [r4, #1]
 8005596:	429a      	cmp	r2, r3
{
 8005598:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 800559a:	d91f      	bls.n	80055dc <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 800559c:	b303      	cbz	r3, 80055e0 <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 800559e:	2b01      	cmp	r3, #1
 80055a0:	bf14      	ite	ne
 80055a2:	2100      	movne	r1, #0
 80055a4:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 80055a6:	2304      	movs	r3, #4
 80055a8:	eb0d 0203 	add.w	r2, sp, r3
 80055ac:	b2c0      	uxtb	r0, r0
 80055ae:	f000 fa93 	bl	8005ad8 <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 80055b2:	f89d 3004 	ldrb.w	r3, [sp, #4]
 80055b6:	f89d 2005 	ldrb.w	r2, [sp, #5]
 80055ba:	021b      	lsls	r3, r3, #8
 80055bc:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 80055c0:	4313      	orrs	r3, r2
 80055c2:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 80055c4:	f89d 3006 	ldrb.w	r3, [sp, #6]
 80055c8:	f89d 2007 	ldrb.w	r2, [sp, #7]
 80055cc:	021b      	lsls	r3, r3, #8
 80055ce:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 80055d2:	4313      	orrs	r3, r2
 80055d4:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 80055d6:	78a3      	ldrb	r3, [r4, #2]
 80055d8:	3301      	adds	r3, #1
 80055da:	70a3      	strb	r3, [r4, #2]
}
 80055dc:	b002      	add	sp, #8
 80055de:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 80055e0:	2103      	movs	r1, #3
 80055e2:	e7e0      	b.n	80055a6 <ft6x06_TS_GetXY+0x1a>
 80055e4:	20008efc 	.word	0x20008efc

080055e8 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 80055e8:	2201      	movs	r2, #1
 80055ea:	21a4      	movs	r1, #164	; 0xa4
 80055ec:	b2c0      	uxtb	r0, r0
 80055ee:	f000 ba3b 	b.w	8005a68 <TS_IO_Write>

080055f2 <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 80055f2:	2200      	movs	r2, #0
 80055f4:	21a4      	movs	r1, #164	; 0xa4
 80055f6:	b2c0      	uxtb	r0, r0
 80055f8:	f000 ba36 	b.w	8005a68 <TS_IO_Write>

080055fc <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 80055fc:	f7ff bff9 	b.w	80055f2 <ft6x06_TS_DisableIT>

08005600 <ft6x06_TS_ClearIT>:
 8005600:	4770      	bx	lr
	...

08005604 <ft6x06_Init>:
{  
 8005604:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 8005606:	4b09      	ldr	r3, [pc, #36]	; (800562c <ft6x06_Init+0x28>)
 8005608:	781a      	ldrb	r2, [r3, #0]
 800560a:	4290      	cmp	r0, r2
 800560c:	d00a      	beq.n	8005624 <ft6x06_Init+0x20>
 800560e:	7859      	ldrb	r1, [r3, #1]
 8005610:	4288      	cmp	r0, r1
 8005612:	d007      	beq.n	8005624 <ft6x06_Init+0x20>
 8005614:	b10a      	cbz	r2, 800561a <ft6x06_Init+0x16>
 8005616:	b929      	cbnz	r1, 8005624 <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 8005618:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 800561a:	5498      	strb	r0, [r3, r2]
}
 800561c:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 8005620:	f000 ba20 	b.w	8005a64 <TS_IO_Init>
}
 8005624:	f85d 4b04 	ldr.w	r4, [sp], #4
 8005628:	4770      	bx	lr
 800562a:	bf00      	nop
 800562c:	20008efa 	.word	0x20008efa

08005630 <NT35510_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t NT35510_Init(uint32_t ColorCoding, uint32_t orientation)
{
 8005630:	b530      	push	{r4, r5, lr}
 8005632:	4604      	mov	r4, r0
 8005634:	b0b1      	sub	sp, #196	; 0xc4
  NT35510_IO_Delay(120);
 8005636:	2078      	movs	r0, #120	; 0x78
{
 8005638:	460d      	mov	r5, r1
  NT35510_IO_Delay(120);
 800563a:	f000 fa65 	bl	8005b08 <NT35510_IO_Delay>

/* ************************************************************************** */
/* Proprietary Initialization                                                 */
/* ************************************************************************** */
  const uint8_t nt35510_reg[]   = {0x55, 0xAA, 0x52, 0x08, 0x01, 0xF0};
 800563e:	4ba3      	ldr	r3, [pc, #652]	; (80058cc <NT35510_Init+0x29c>)
  const uint8_t nt35510_reg1[]  = {0x03, 0x03, 0x03, 0xB0};
  const uint8_t nt35510_reg2[]  = {0x46, 0x46, 0x46, 0xB6};
 8005640:	4aa3      	ldr	r2, [pc, #652]	; (80058d0 <NT35510_Init+0x2a0>)
  const uint8_t nt35510_reg[]   = {0x55, 0xAA, 0x52, 0x08, 0x01, 0xF0};
 8005642:	6818      	ldr	r0, [r3, #0]
 8005644:	889b      	ldrh	r3, [r3, #4]
 8005646:	f8ad 30b4 	strh.w	r3, [sp, #180]	; 0xb4
  const uint8_t nt35510_reg2[]  = {0x46, 0x46, 0x46, 0xB6};
 800564a:	4ba2      	ldr	r3, [pc, #648]	; (80058d4 <NT35510_Init+0x2a4>)
  const uint8_t nt35510_reg3[]  = {0x03, 0x03, 0x03, 0xB1};
  const uint8_t nt35510_reg4[]  = {0x36, 0x36, 0x36, 0xB7};
 800564c:	49a2      	ldr	r1, [pc, #648]	; (80058d8 <NT35510_Init+0x2a8>)
  const uint8_t nt35510_reg[]   = {0x55, 0xAA, 0x52, 0x08, 0x01, 0xF0};
 800564e:	902c      	str	r0, [sp, #176]	; 0xb0
  const uint8_t nt35510_reg2[]  = {0x46, 0x46, 0x46, 0xB6};
 8005650:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
  const uint8_t nt35510_reg4[]  = {0x36, 0x36, 0x36, 0xB7};
 8005654:	4ba1      	ldr	r3, [pc, #644]	; (80058dc <NT35510_Init+0x2ac>)
  const uint8_t nt35510_reg5[]  = {0x00, 0x00, 0x02, 0xB2};
  const uint8_t nt35510_reg6[]  = {0x26, 0x26, 0x26, 0xB8};
 8005656:	48a2      	ldr	r0, [pc, #648]	; (80058e0 <NT35510_Init+0x2b0>)
  const uint8_t nt35510_reg7[]  = {0xBF, 0x01};
  const uint8_t nt35510_reg8[]  = {0x09, 0x09, 0x09, 0xB3};
  const uint8_t nt35510_reg9[]  = {0x36, 0x36, 0x36, 0xB9};
 8005658:	f8df c2a4 	ldr.w	ip, [pc, #676]	; 8005900 <NT35510_Init+0x2d0>
  const uint8_t nt35510_reg10[] = {0x08, 0x08, 0x08, 0xB5};
  const uint8_t nt35510_reg12[] = {0x26, 0x26, 0x26, 0xBA};
 800565c:	f8df e2a4 	ldr.w	lr, [pc, #676]	; 8005904 <NT35510_Init+0x2d4>
  const uint8_t nt35510_reg4[]  = {0x36, 0x36, 0x36, 0xB7};
 8005660:	e9cd 1316 	strd	r1, r3, [sp, #88]	; 0x58
  const uint8_t nt35510_reg6[]  = {0x26, 0x26, 0x26, 0xB8};
 8005664:	4b9f      	ldr	r3, [pc, #636]	; (80058e4 <NT35510_Init+0x2b4>)
 8005666:	e9cd 0318 	strd	r0, r3, [sp, #96]	; 0x60
  const uint8_t nt35510_reg7[]  = {0xBF, 0x01};
 800566a:	f240 13bf 	movw	r3, #447	; 0x1bf
 800566e:	f8ad 3004 	strh.w	r3, [sp, #4]
  const uint8_t nt35510_reg9[]  = {0x36, 0x36, 0x36, 0xB9};
 8005672:	4b9d      	ldr	r3, [pc, #628]	; (80058e8 <NT35510_Init+0x2b8>)
 8005674:	e9cd c31a 	strd	ip, r3, [sp, #104]	; 0x68
  const uint8_t nt35510_reg12[] = {0x26, 0x26, 0x26, 0xBA};
 8005678:	4b9c      	ldr	r3, [pc, #624]	; (80058ec <NT35510_Init+0x2bc>)
 800567a:	e9cd e31c 	strd	lr, r3, [sp, #112]	; 0x70
  const uint8_t nt35510_reg13[] = {0x00, 0x80, 0x00, 0xBC};
 800567e:	4b9c      	ldr	r3, [pc, #624]	; (80058f0 <NT35510_Init+0x2c0>)
 8005680:	931e      	str	r3, [sp, #120]	; 0x78
  const uint8_t nt35510_reg14[] = {0x00, 0x80, 0x00, 0xBD};
 8005682:	f103 7380 	add.w	r3, r3, #16777216	; 0x1000000
 8005686:	931f      	str	r3, [sp, #124]	; 0x7c
  const uint8_t nt35510_reg15[] = {0x00, 0x50, 0xBE};
 8005688:	4b9a      	ldr	r3, [pc, #616]	; (80058f4 <NT35510_Init+0x2c4>)
 800568a:	789a      	ldrb	r2, [r3, #2]
 800568c:	f88d 2046 	strb.w	r2, [sp, #70]	; 0x46
  const uint8_t nt35510_reg16[] = {0x55, 0xAA, 0x52, 0x08, 0x00, 0xF0};
 8005690:	f8b3 2007 	ldrh.w	r2, [r3, #7]
 8005694:	f8ad 20bc 	strh.w	r2, [sp, #188]	; 0xbc
  const uint8_t nt35510_reg17[] = {0xFC, 0x00, 0xB1};
 8005698:	7ada      	ldrb	r2, [r3, #11]
  const uint8_t nt35510_reg15[] = {0x00, 0x50, 0xBE};
 800569a:	8819      	ldrh	r1, [r3, #0]
  const uint8_t nt35510_reg17[] = {0xFC, 0x00, 0xB1};
 800569c:	f88d 204a 	strb.w	r2, [sp, #74]	; 0x4a
  const uint8_t nt35510_reg18[] = {0xB6, 0x03};
 80056a0:	f240 32b6 	movw	r2, #950	; 0x3b6
  const uint8_t nt35510_reg16[] = {0x55, 0xAA, 0x52, 0x08, 0x00, 0xF0};
 80056a4:	f8d3 0003 	ldr.w	r0, [r3, #3]
  const uint8_t nt35510_reg15[] = {0x00, 0x50, 0xBE};
 80056a8:	f8ad 1044 	strh.w	r1, [sp, #68]	; 0x44
  const uint8_t nt35510_reg18[] = {0xB6, 0x03};
 80056ac:	f8ad 2008 	strh.w	r2, [sp, #8]
  const uint8_t nt35510_reg17[] = {0xFC, 0x00, 0xB1};
 80056b0:	f8b3 1009 	ldrh.w	r1, [r3, #9]
  const uint8_t nt35510_reg16[] = {0x55, 0xAA, 0x52, 0x08, 0x00, 0xF0};
 80056b4:	902e      	str	r0, [sp, #184]	; 0xb8
  const uint8_t nt35510_reg19[] = {0xB5, 0x51};
 80056b6:	f245 12b5 	movw	r2, #20917	; 0x51b5
  const uint8_t nt35510_reg17[] = {0xFC, 0x00, 0xB1};
 80056ba:	f8ad 1048 	strh.w	r1, [sp, #72]	; 0x48
  const uint8_t nt35510_reg19[] = {0xB5, 0x51};
 80056be:	f8ad 200c 	strh.w	r2, [sp, #12]
  const uint8_t nt35510_reg20[] = {0x00, 0x00, 0xB7};
 80056c2:	8999      	ldrh	r1, [r3, #12]
 80056c4:	7b9a      	ldrb	r2, [r3, #14]
 80056c6:	f88d 204e 	strb.w	r2, [sp, #78]	; 0x4e
  const uint8_t nt35510_reg21[] = {0x01, 0x02, 0x02, 0x02, 0xB8};
 80056ca:	4a8b      	ldr	r2, [pc, #556]	; (80058f8 <NT35510_Init+0x2c8>)
  const uint8_t nt35510_reg20[] = {0x00, 0x00, 0xB7};
 80056cc:	f8ad 104c 	strh.w	r1, [sp, #76]	; 0x4c
  const uint8_t nt35510_reg21[] = {0x01, 0x02, 0x02, 0x02, 0xB8};
 80056d0:	6810      	ldr	r0, [r2, #0]
 80056d2:	7912      	ldrb	r2, [r2, #4]
 80056d4:	f88d 208c 	strb.w	r2, [sp, #140]	; 0x8c
  const uint8_t nt35510_reg22[] = {0x00, 0x00, 0x00, 0xBC};
  const uint8_t nt35510_reg23[] = {0x03, 0x00, 0x00, 0xCC};
 80056d8:	4a88      	ldr	r2, [pc, #544]	; (80058fc <NT35510_Init+0x2cc>)
  const uint8_t nt35510_reg21[] = {0x01, 0x02, 0x02, 0x02, 0xB8};
 80056da:	9022      	str	r0, [sp, #136]	; 0x88
  const uint8_t nt35510_reg23[] = {0x03, 0x00, 0x00, 0xCC};
 80056dc:	f04f 413c 	mov.w	r1, #3154116608	; 0xbc000000
 80056e0:	e9cd 1220 	strd	r1, r2, [sp, #128]	; 0x80
  const uint8_t nt35510_reg24[] = {0xBA, 0x01};
 80056e4:	f44f 72dd 	mov.w	r2, #442	; 0x1ba
 80056e8:	f8ad 2010 	strh.w	r2, [sp, #16]
  const uint8_t nt35510_madctl_portrait[] = {NT35510_CMD_MADCTL ,0x00};
 80056ec:	2236      	movs	r2, #54	; 0x36
  const uint8_t nt35510_caset_portrait[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_CASET};
 80056ee:	f8d3 000f 	ldr.w	r0, [r3, #15]
  const uint8_t nt35510_madctl_portrait[] = {NT35510_CMD_MADCTL ,0x00};
 80056f2:	f8ad 2014 	strh.w	r2, [sp, #20]
  const uint8_t nt35510_caset_portrait[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_CASET};
 80056f6:	7cda      	ldrb	r2, [r3, #19]
 80056f8:	9024      	str	r0, [sp, #144]	; 0x90
 80056fa:	f88d 2094 	strb.w	r2, [sp, #148]	; 0x94
  const uint8_t nt35510_raset_portrait[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_RASET};
 80056fe:	6958      	ldr	r0, [r3, #20]
 8005700:	7e1a      	ldrb	r2, [r3, #24]
 8005702:	9026      	str	r0, [sp, #152]	; 0x98
 8005704:	f88d 209c 	strb.w	r2, [sp, #156]	; 0x9c
  const uint8_t nt35510_madctl_landscape[] = {NT35510_CMD_MADCTL, 0x60};
  const uint8_t nt35510_caset_landscape[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_CASET};
 8005708:	f8d3 0019 	ldr.w	r0, [r3, #25]
 800570c:	9028      	str	r0, [sp, #160]	; 0xa0
  const uint8_t nt35510_madctl_landscape[] = {NT35510_CMD_MADCTL, 0x60};
 800570e:	f246 0236 	movw	r2, #24630	; 0x6036
  const uint8_t nt35510_raset_landscape[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_RASET};
 8005712:	f8d3 001e 	ldr.w	r0, [r3, #30]
  const uint8_t nt35510_madctl_landscape[] = {NT35510_CMD_MADCTL, 0x60};
 8005716:	f8ad 2018 	strh.w	r2, [sp, #24]
  const uint8_t nt35510_caset_landscape[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_CASET};
 800571a:	7f5a      	ldrb	r2, [r3, #29]
  const uint8_t nt35510_raset_landscape[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_RASET};
 800571c:	f893 3022 	ldrb.w	r3, [r3, #34]	; 0x22
 8005720:	f88d 30ac 	strb.w	r3, [sp, #172]	; 0xac
  const uint8_t nt35510_reg26[] = {NT35510_CMD_TEEON, 0x00};  /* Tear on */
 8005724:	2335      	movs	r3, #53	; 0x35
 8005726:	f8ad 301c 	strh.w	r3, [sp, #28]
  const uint8_t nt35510_reg27[] = {NT35510_CMD_SLPOUT, 0x00}; /* Sleep out */
 800572a:	2311      	movs	r3, #17
 800572c:	f8ad 3020 	strh.w	r3, [sp, #32]
  const uint8_t nt35510_reg30[] = {NT35510_CMD_DISPON, 0x00};
 8005730:	2329      	movs	r3, #41	; 0x29
 8005732:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24

  const uint8_t nt35510_reg31[] = {NT35510_CMD_WRDISBV, 0x7F};
 8005736:	f647 7351 	movw	r3, #32593	; 0x7f51
 800573a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
  const uint8_t nt35510_reg32[] = {NT35510_CMD_WRCTRLD, 0x2C};
 800573e:	f642 4353 	movw	r3, #11347	; 0x2c53
  const uint8_t nt35510_caset_landscape[] = {0x00, 0x00, 0x03, 0x1F ,NT35510_CMD_CASET};
 8005742:	f88d 20a4 	strb.w	r2, [sp, #164]	; 0xa4
  const uint8_t nt35510_raset_landscape[] = {0x00, 0x00, 0x01, 0xDF ,NT35510_CMD_RASET};
 8005746:	902a      	str	r0, [sp, #168]	; 0xa8
  const uint8_t nt35510_reg32[] = {NT35510_CMD_WRCTRLD, 0x2C};
 8005748:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
  const uint8_t nt35510_reg33[] = {NT35510_CMD_WRCABC, 0x02};
 800574c:	f240 2355 	movw	r3, #597	; 0x255
 8005750:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
  const uint8_t nt35510_reg34[] = {NT35510_CMD_WRCABCMB, 0xFF};
 8005754:	f64f 735e 	movw	r3, #65374	; 0xff5e
 8005758:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
  const uint8_t nt35510_reg35[] = {NT35510_CMD_RAMWR, 0x00};
 800575c:	232c      	movs	r3, #44	; 0x2c
 800575e:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
  const uint8_t nt35510_reg36[] = {NT35510_CMD_COLMOD, NT35510_COLMOD_RGB565};
 8005762:	f245 533a 	movw	r3, #21818	; 0x553a
 8005766:	f8ad 303c 	strh.w	r3, [sp, #60]	; 0x3c
  const uint8_t nt35510_reg37[] = {NT35510_CMD_COLMOD, NT35510_COLMOD_RGB888};

  DSI_IO_WriteCmd(5, (uint8_t *)nt35510_reg); /* LV2:  Page 1 enable */
 800576a:	a92c      	add	r1, sp, #176	; 0xb0
  const uint8_t nt35510_reg37[] = {NT35510_CMD_COLMOD, NT35510_COLMOD_RGB888};
 800576c:	f247 733a 	movw	r3, #30522	; 0x773a
  DSI_IO_WriteCmd(5, (uint8_t *)nt35510_reg); /* LV2:  Page 1 enable */
 8005770:	2005      	movs	r0, #5
  const uint8_t nt35510_reg37[] = {NT35510_CMD_COLMOD, NT35510_COLMOD_RGB888};
 8005772:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
  DSI_IO_WriteCmd(5, (uint8_t *)nt35510_reg); /* LV2:  Page 1 enable */
 8005776:	f7fb fe23 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg1);/* AVDD: 5.2V */
 800577a:	a914      	add	r1, sp, #80	; 0x50
 800577c:	2003      	movs	r0, #3
 800577e:	f7fb fe1f 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg2);/* AVDD: Ratio */
 8005782:	a915      	add	r1, sp, #84	; 0x54
 8005784:	2003      	movs	r0, #3
 8005786:	f7fb fe1b 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg3);/* AVEE: -5.2V */
 800578a:	a916      	add	r1, sp, #88	; 0x58
 800578c:	2003      	movs	r0, #3
 800578e:	f7fb fe17 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg4);/* AVEE: Ratio */
 8005792:	a917      	add	r1, sp, #92	; 0x5c
 8005794:	2003      	movs	r0, #3
 8005796:	f7fb fe13 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg5);/* VCL: -2.5V */
 800579a:	a918      	add	r1, sp, #96	; 0x60
 800579c:	2003      	movs	r0, #3
 800579e:	f7fb fe0f 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg6);/* VCL: Ratio */
 80057a2:	a919      	add	r1, sp, #100	; 0x64
 80057a4:	2003      	movs	r0, #3
 80057a6:	f7fb fe0b 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg7);/* VGH: 15V (Free Pump) */
 80057aa:	a901      	add	r1, sp, #4
 80057ac:	2001      	movs	r0, #1
 80057ae:	f7fb fe07 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg8);
 80057b2:	a91a      	add	r1, sp, #104	; 0x68
 80057b4:	2003      	movs	r0, #3
 80057b6:	f7fb fe03 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg9);/* VGH: Ratio */
 80057ba:	a91b      	add	r1, sp, #108	; 0x6c
 80057bc:	2003      	movs	r0, #3
 80057be:	f7fb fdff 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg10);/* VGL_REG: -10V */
 80057c2:	a91c      	add	r1, sp, #112	; 0x70
 80057c4:	2003      	movs	r0, #3
 80057c6:	f7fb fdfb 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg12);/* VGLX: Ratio */
 80057ca:	a91d      	add	r1, sp, #116	; 0x74
 80057cc:	2003      	movs	r0, #3
 80057ce:	f7fb fdf7 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg13);/* VGMP/VGSP: 4.5V/0V */
 80057d2:	a91e      	add	r1, sp, #120	; 0x78
 80057d4:	2003      	movs	r0, #3
 80057d6:	f7fb fdf3 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg14);/* VGMN/VGSN:-4.5V/0V */
 80057da:	a91f      	add	r1, sp, #124	; 0x7c
 80057dc:	2003      	movs	r0, #3
 80057de:	f7fb fdef 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(2, (uint8_t *)nt35510_reg15);/* VCOM: -1.325V */
 80057e2:	a911      	add	r1, sp, #68	; 0x44
 80057e4:	2002      	movs	r0, #2
 80057e6:	f7fb fdeb 	bl	80013c0 <DSI_IO_WriteCmd>

/* ************************************************************************** */
/* Proprietary DCS Initialization                                             */
/* ************************************************************************** */
  DSI_IO_WriteCmd(5, (uint8_t *)nt35510_reg16);/* LV2: Page 0 enable */
 80057ea:	a92e      	add	r1, sp, #184	; 0xb8
 80057ec:	2005      	movs	r0, #5
 80057ee:	f7fb fde7 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(2, (uint8_t *)nt35510_reg17);/* Display control */
 80057f2:	a912      	add	r1, sp, #72	; 0x48
 80057f4:	2002      	movs	r0, #2
 80057f6:	f7fb fde3 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg18);/* Src hold time */
 80057fa:	a902      	add	r1, sp, #8
 80057fc:	2001      	movs	r0, #1
 80057fe:	f7fb fddf 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg19);
 8005802:	a903      	add	r1, sp, #12
 8005804:	2001      	movs	r0, #1
 8005806:	f7fb fddb 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(2, (uint8_t *)nt35510_reg20);/* Gate EQ control */
 800580a:	a913      	add	r1, sp, #76	; 0x4c
 800580c:	2002      	movs	r0, #2
 800580e:	f7fb fdd7 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(4, (uint8_t *)nt35510_reg21);/* Src EQ control(Mode2) */
 8005812:	a922      	add	r1, sp, #136	; 0x88
 8005814:	2004      	movs	r0, #4
 8005816:	f7fb fdd3 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg22);/* Inv. mode(2-dot) */
 800581a:	a920      	add	r1, sp, #128	; 0x80
 800581c:	2003      	movs	r0, #3
 800581e:	f7fb fdcf 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(3, (uint8_t *)nt35510_reg23);
 8005822:	a921      	add	r1, sp, #132	; 0x84
 8005824:	2003      	movs	r0, #3
 8005826:	f7fb fdcb 	bl	80013c0 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg24);
 800582a:	a904      	add	r1, sp, #16
 800582c:	2001      	movs	r0, #1
 800582e:	f7fb fdc7 	bl	80013c0 <DSI_IO_WriteCmd>
  /* Tear on */
  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg26);
 8005832:	a907      	add	r1, sp, #28
 8005834:	2000      	movs	r0, #0
 8005836:	f7fb fdc3 	bl	80013c0 <DSI_IO_WriteCmd>
  /* Set Pixel color format to RGB888 */
  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg37);
 800583a:	2000      	movs	r0, #0
 800583c:	a910      	add	r1, sp, #64	; 0x40
 800583e:	f7fb fdbf 	bl	80013c0 <DSI_IO_WriteCmd>
/* ************************************************************************** */
/* Standard DCS Initialization                                                */
/* ************************************************************************** */

  /* Add a delay, otherwise MADCTL not taken */
  NT35510_IO_Delay(200);
 8005842:	20c8      	movs	r0, #200	; 0xc8
 8005844:	f000 f960 	bl	8005b08 <NT35510_IO_Delay>

  /* Configure orientation */
  if(orientation == NT35510_ORIENTATION_PORTRAIT)
 8005848:	2d00      	cmp	r5, #0
 800584a:	d134      	bne.n	80058b6 <NT35510_Init+0x286>
  {
    DSI_IO_WriteCmd(1, (uint8_t *)nt35510_madctl_portrait);
 800584c:	a905      	add	r1, sp, #20
 800584e:	2001      	movs	r0, #1
 8005850:	f7fb fdb6 	bl	80013c0 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_caset_portrait);
 8005854:	a924      	add	r1, sp, #144	; 0x90
 8005856:	2004      	movs	r0, #4
 8005858:	f7fb fdb2 	bl	80013c0 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_raset_portrait);
 800585c:	a926      	add	r1, sp, #152	; 0x98
  }
  else
  {
    DSI_IO_WriteCmd(1, (uint8_t *)nt35510_madctl_landscape);
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_caset_landscape);
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_raset_landscape);
 800585e:	2004      	movs	r0, #4
 8005860:	f7fb fdae 	bl	80013c0 <DSI_IO_WriteCmd>
  }

  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg27);
 8005864:	a908      	add	r1, sp, #32
 8005866:	2000      	movs	r0, #0
 8005868:	f7fb fdaa 	bl	80013c0 <DSI_IO_WriteCmd>
  /* Wait for sleep out exit */
  NT35510_IO_Delay(120);
 800586c:	2078      	movs	r0, #120	; 0x78
 800586e:	f000 f94b 	bl	8005b08 <NT35510_IO_Delay>

  switch(ColorCoding)
 8005872:	2c02      	cmp	r4, #2
  {
    case NT35510_FORMAT_RBG565 :
      /* Set Pixel color format to RGB565 */
      DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg36);
 8005874:	bf0c      	ite	eq
 8005876:	a90f      	addeq	r1, sp, #60	; 0x3c
      break;
    case NT35510_FORMAT_RGB888 :
      /* Set Pixel color format to RGB888 */
      DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg37);
 8005878:	a910      	addne	r1, sp, #64	; 0x40
 800587a:	2001      	movs	r0, #1
 800587c:	f7fb fda0 	bl	80013c0 <DSI_IO_WriteCmd>
      break;
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg31);
 8005880:	a90a      	add	r1, sp, #40	; 0x28
 8005882:	2001      	movs	r0, #1
 8005884:	f7fb fd9c 	bl	80013c0 <DSI_IO_WriteCmd>
  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg32);
 8005888:	a90b      	add	r1, sp, #44	; 0x2c
 800588a:	2001      	movs	r0, #1
 800588c:	f7fb fd98 	bl	80013c0 <DSI_IO_WriteCmd>
  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg33);
 8005890:	a90c      	add	r1, sp, #48	; 0x30
 8005892:	2001      	movs	r0, #1
 8005894:	f7fb fd94 	bl	80013c0 <DSI_IO_WriteCmd>
  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(1, (uint8_t *)nt35510_reg34);
 8005898:	a90d      	add	r1, sp, #52	; 0x34
 800589a:	2001      	movs	r0, #1
 800589c:	f7fb fd90 	bl	80013c0 <DSI_IO_WriteCmd>
  /** CABC : Content Adaptive Backlight Control section end << */

  /* Display on */
  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg30);
 80058a0:	a909      	add	r1, sp, #36	; 0x24
 80058a2:	2000      	movs	r0, #0
 80058a4:	f7fb fd8c 	bl	80013c0 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)nt35510_reg35);
 80058a8:	a90e      	add	r1, sp, #56	; 0x38
 80058aa:	2000      	movs	r0, #0
 80058ac:	f7fb fd88 	bl	80013c0 <DSI_IO_WriteCmd>

  return 0;
}
 80058b0:	2000      	movs	r0, #0
 80058b2:	b031      	add	sp, #196	; 0xc4
 80058b4:	bd30      	pop	{r4, r5, pc}
    DSI_IO_WriteCmd(1, (uint8_t *)nt35510_madctl_landscape);
 80058b6:	a906      	add	r1, sp, #24
 80058b8:	2001      	movs	r0, #1
 80058ba:	f7fb fd81 	bl	80013c0 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_caset_landscape);
 80058be:	a928      	add	r1, sp, #160	; 0xa0
 80058c0:	2004      	movs	r0, #4
 80058c2:	f7fb fd7d 	bl	80013c0 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd(4, (uint8_t *)nt35510_raset_landscape);
 80058c6:	a92a      	add	r1, sp, #168	; 0xa8
 80058c8:	e7c9      	b.n	800585e <NT35510_Init+0x22e>
 80058ca:	bf00      	nop
 80058cc:	0802341c 	.word	0x0802341c
 80058d0:	b0030303 	.word	0xb0030303
 80058d4:	b6464646 	.word	0xb6464646
 80058d8:	b1030303 	.word	0xb1030303
 80058dc:	b7363636 	.word	0xb7363636
 80058e0:	b2020000 	.word	0xb2020000
 80058e4:	b8262626 	.word	0xb8262626
 80058e8:	b9363636 	.word	0xb9363636
 80058ec:	ba262626 	.word	0xba262626
 80058f0:	bc008000 	.word	0xbc008000
 80058f4:	08021944 	.word	0x08021944
 80058f8:	08023423 	.word	0x08023423
 80058fc:	cc000003 	.word	0xcc000003
 8005900:	b3090909 	.word	0xb3090909
 8005904:	b5080808 	.word	0xb5080808

08005908 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 8005908:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 800590a:	4d2f      	ldr	r5, [pc, #188]	; (80059c8 <I2C1_Init+0xc0>)
{
 800590c:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 800590e:	4628      	mov	r0, r5
 8005910:	f002 f970 	bl	8007bf4 <HAL_I2C_GetState>
 8005914:	4604      	mov	r4, r0
 8005916:	2800      	cmp	r0, #0
 8005918:	d154      	bne.n	80059c4 <I2C1_Init+0xbc>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 800591a:	4a2c      	ldr	r2, [pc, #176]	; (80059cc <I2C1_Init+0xc4>)
 800591c:	4b2c      	ldr	r3, [pc, #176]	; (80059d0 <I2C1_Init+0xc8>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 800591e:	4e2d      	ldr	r6, [pc, #180]	; (80059d4 <I2C1_Init+0xcc>)
 8005920:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8005922:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 8005926:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 800592a:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 800592e:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8005932:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 8005936:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8005938:	6b33      	ldr	r3, [r6, #48]	; 0x30
 800593a:	f043 0302 	orr.w	r3, r3, #2
 800593e:	6333      	str	r3, [r6, #48]	; 0x30
 8005940:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 8005942:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8005944:	f003 0302 	and.w	r3, r3, #2
 8005948:	9301      	str	r3, [sp, #4]
 800594a:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 800594c:	f44f 7180 	mov.w	r1, #256	; 0x100
 8005950:	2312      	movs	r3, #18
 8005952:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 8005956:	2002      	movs	r0, #2
 8005958:	2304      	movs	r3, #4
 800595a:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800595e:	a903      	add	r1, sp, #12
 8005960:	481d      	ldr	r0, [pc, #116]	; (80059d8 <I2C1_Init+0xd0>)
 8005962:	f001 fb69 	bl	8007038 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8005966:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 800596a:	a903      	add	r1, sp, #12
 800596c:	481a      	ldr	r0, [pc, #104]	; (80059d8 <I2C1_Init+0xd0>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 800596e:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8005970:	f001 fb62 	bl	8007038 <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 8005974:	9402      	str	r4, [sp, #8]
 8005976:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8005978:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800597c:	6433      	str	r3, [r6, #64]	; 0x40
 800597e:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8005980:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005984:	9302      	str	r3, [sp, #8]
 8005986:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 8005988:	6a33      	ldr	r3, [r6, #32]
 800598a:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800598e:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 8005990:	6a33      	ldr	r3, [r6, #32]
 8005992:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8005996:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 8005998:	4622      	mov	r2, r4
 800599a:	2105      	movs	r1, #5
 800599c:	201f      	movs	r0, #31
 800599e:	f000 fd15 	bl	80063cc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 80059a2:	201f      	movs	r0, #31
 80059a4:	f000 fd44 	bl	8006430 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 80059a8:	4622      	mov	r2, r4
 80059aa:	2105      	movs	r1, #5
 80059ac:	2020      	movs	r0, #32
 80059ae:	f000 fd0d 	bl	80063cc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 80059b2:	2020      	movs	r0, #32
 80059b4:	f000 fd3c 	bl	8006430 <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 80059b8:	4628      	mov	r0, r5
  }
}
 80059ba:	b008      	add	sp, #32
 80059bc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    HAL_I2C_Init(&heval_I2c1);
 80059c0:	f001 bebe 	b.w	8007740 <HAL_I2C_Init>
}
 80059c4:	b008      	add	sp, #32
 80059c6:	bd70      	pop	{r4, r5, r6, pc}
 80059c8:	20008f00 	.word	0x20008f00
 80059cc:	40005400 	.word	0x40005400
 80059d0:	00061a80 	.word	0x00061a80
 80059d4:	40023800 	.word	0x40023800
 80059d8:	40020400 	.word	0x40020400

080059dc <BSP_PB_Init>:
{
 80059dc:	b510      	push	{r4, lr}
 80059de:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 80059e0:	4b19      	ldr	r3, [pc, #100]	; (8005a48 <BSP_PB_Init+0x6c>)
 80059e2:	2400      	movs	r4, #0
 80059e4:	9400      	str	r4, [sp, #0]
 80059e6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80059e8:	f042 0201 	orr.w	r2, r2, #1
 80059ec:	631a      	str	r2, [r3, #48]	; 0x30
 80059ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80059f0:	f003 0301 	and.w	r3, r3, #1
 80059f4:	9300      	str	r3, [sp, #0]
 80059f6:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 80059f8:	b969      	cbnz	r1, 8005a16 <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 80059fa:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 80059fc:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8005a00:	2302      	movs	r3, #2
 8005a02:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8005a04:	4b11      	ldr	r3, [pc, #68]	; (8005a4c <BSP_PB_Init+0x70>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 8005a06:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8005a08:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8005a0c:	a901      	add	r1, sp, #4
 8005a0e:	f001 fb13 	bl	8007038 <HAL_GPIO_Init>
}
 8005a12:	b006      	add	sp, #24
 8005a14:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 8005a16:	2901      	cmp	r1, #1
 8005a18:	d1fb      	bne.n	8005a12 <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8005a1a:	2302      	movs	r3, #2
 8005a1c:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 8005a1e:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8005a22:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8005a24:	4b09      	ldr	r3, [pc, #36]	; (8005a4c <BSP_PB_Init+0x70>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8005a26:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8005a28:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 8005a2c:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8005a2e:	a901      	add	r1, sp, #4
 8005a30:	f001 fb02 	bl	8007038 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 8005a34:	4622      	mov	r2, r4
 8005a36:	210f      	movs	r1, #15
 8005a38:	2006      	movs	r0, #6
 8005a3a:	f000 fcc7 	bl	80063cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 8005a3e:	2006      	movs	r0, #6
 8005a40:	f000 fcf6 	bl	8006430 <HAL_NVIC_EnableIRQ>
}
 8005a44:	e7e5      	b.n	8005a12 <BSP_PB_Init+0x36>
 8005a46:	bf00      	nop
 8005a48:	40023800 	.word	0x40023800
 8005a4c:	20000048 	.word	0x20000048

08005a50 <BSP_PB_GetState>:
{
 8005a50:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 8005a52:	4b03      	ldr	r3, [pc, #12]	; (8005a60 <BSP_PB_GetState+0x10>)
 8005a54:	2101      	movs	r1, #1
 8005a56:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8005a5a:	f001 fc75 	bl	8007348 <HAL_GPIO_ReadPin>
}
 8005a5e:	bd08      	pop	{r3, pc}
 8005a60:	20000048 	.word	0x20000048

08005a64 <TS_IO_Init>:
 8005a64:	f7ff bf50 	b.w	8005908 <I2C1_Init>

08005a68 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8005a68:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 8005a6a:	2301      	movs	r3, #1
 8005a6c:	f88d 2017 	strb.w	r2, [sp, #23]
 8005a70:	2264      	movs	r2, #100	; 0x64
 8005a72:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8005a76:	f10d 0217 	add.w	r2, sp, #23
 8005a7a:	9200      	str	r2, [sp, #0]
 8005a7c:	460a      	mov	r2, r1
 8005a7e:	4601      	mov	r1, r0
 8005a80:	4805      	ldr	r0, [pc, #20]	; (8005a98 <TS_IO_Write+0x30>)
 8005a82:	f001 ff1f 	bl	80078c4 <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 8005a86:	b120      	cbz	r0, 8005a92 <TS_IO_Write+0x2a>
  HAL_I2C_DeInit(&heval_I2c1);
 8005a88:	4803      	ldr	r0, [pc, #12]	; (8005a98 <TS_IO_Write+0x30>)
 8005a8a:	f001 ff01 	bl	8007890 <HAL_I2C_DeInit>
  I2C1_Init();
 8005a8e:	f7ff ff3b 	bl	8005908 <I2C1_Init>
  I2C1_Write(Addr, Reg, Value);
}
 8005a92:	b007      	add	sp, #28
 8005a94:	f85d fb04 	ldr.w	pc, [sp], #4
 8005a98:	20008f00 	.word	0x20008f00

08005a9c <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 8005a9c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 8005a9e:	2300      	movs	r3, #0
{
 8005aa0:	460a      	mov	r2, r1
  uint8_t Value = 0;
 8005aa2:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8005aa6:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8005aaa:	2301      	movs	r3, #1
 8005aac:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8005ab0:	f10d 0117 	add.w	r1, sp, #23
 8005ab4:	9100      	str	r1, [sp, #0]
 8005ab6:	4601      	mov	r1, r0
 8005ab8:	4806      	ldr	r0, [pc, #24]	; (8005ad4 <TS_IO_Read+0x38>)
 8005aba:	f001 ff93 	bl	80079e4 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8005abe:	b120      	cbz	r0, 8005aca <TS_IO_Read+0x2e>
  HAL_I2C_DeInit(&heval_I2c1);
 8005ac0:	4804      	ldr	r0, [pc, #16]	; (8005ad4 <TS_IO_Read+0x38>)
 8005ac2:	f001 fee5 	bl	8007890 <HAL_I2C_DeInit>
  I2C1_Init();
 8005ac6:	f7ff ff1f 	bl	8005908 <I2C1_Init>
  return I2C1_Read(Addr, Reg);
}
 8005aca:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8005ace:	b007      	add	sp, #28
 8005ad0:	f85d fb04 	ldr.w	pc, [sp], #4
 8005ad4:	20008f00 	.word	0x20008f00

08005ad8 <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 8005ad8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8005ada:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8005ade:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8005ae2:	9200      	str	r2, [sp, #0]
 8005ae4:	2301      	movs	r3, #1
 8005ae6:	460a      	mov	r2, r1
 8005ae8:	4601      	mov	r1, r0
 8005aea:	4806      	ldr	r0, [pc, #24]	; (8005b04 <TS_IO_ReadMultiple+0x2c>)
 8005aec:	f001 ff7a 	bl	80079e4 <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8005af0:	4604      	mov	r4, r0
 8005af2:	b120      	cbz	r0, 8005afe <TS_IO_ReadMultiple+0x26>
  HAL_I2C_DeInit(&heval_I2c1);
 8005af4:	4803      	ldr	r0, [pc, #12]	; (8005b04 <TS_IO_ReadMultiple+0x2c>)
 8005af6:	f001 fecb 	bl	8007890 <HAL_I2C_DeInit>
  I2C1_Init();
 8005afa:	f7ff ff05 	bl	8005908 <I2C1_Init>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 8005afe:	b2a0      	uxth	r0, r4
 8005b00:	b004      	add	sp, #16
 8005b02:	bd10      	pop	{r4, pc}
 8005b04:	20008f00 	.word	0x20008f00

08005b08 <NT35510_IO_Delay>:
 8005b08:	f000 bc3a 	b.w	8006380 <HAL_Delay>

08005b0c <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8005b0c:	b500      	push	{lr}
 8005b0e:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8005b10:	f44f 7280 	mov.w	r2, #256	; 0x100
 8005b14:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8005b16:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 8005b1a:	2205      	movs	r2, #5
 8005b1c:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8005b1e:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8005b20:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 8005b22:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 8005b24:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8005b28:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8005b2c:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 8005b30:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8005b32:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 8005b34:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 8005b36:	2210      	movs	r2, #16
 8005b38:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8005b3a:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8005b3e:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 8005b40:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8005b42:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8005b44:	a906      	add	r1, sp, #24
 8005b46:	466a      	mov	r2, sp
 8005b48:	4804      	ldr	r0, [pc, #16]	; (8005b5c <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 8005b4a:	f002 fbcc 	bl	80082e6 <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 8005b4e:	3800      	subs	r0, #0
 8005b50:	bf18      	it	ne
 8005b52:	2001      	movne	r0, #1
 8005b54:	b015      	add	sp, #84	; 0x54
 8005b56:	f85d fb04 	ldr.w	pc, [sp], #4
 8005b5a:	bf00      	nop
 8005b5c:	20008f54 	.word	0x20008f54

08005b60 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8005b60:	b500      	push	{lr}
 8005b62:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8005b64:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005b68:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 8005b6a:	2306      	movs	r3, #6
 8005b6c:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005b6e:	4817      	ldr	r0, [pc, #92]	; (8005bcc <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8005b70:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005b72:	f241 3288 	movw	r2, #5000	; 0x1388
 8005b76:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8005b78:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8005b7c:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 8005b80:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 8005b82:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8005b84:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005b86:	f002 fb6a 	bl	800825e <HAL_QSPI_Command>
 8005b8a:	b9e0      	cbnz	r0, 8005bc6 <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 8005b8c:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 8005b8e:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 8005b92:	2201      	movs	r2, #1
 8005b94:	2310      	movs	r3, #16
 8005b96:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8005b9a:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8005b9e:	2305      	movs	r3, #5
 8005ba0:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8005ba4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8005ba8:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8005baa:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005bac:	4807      	ldr	r0, [pc, #28]	; (8005bcc <QSPI_WriteEnable.constprop.0+0x6c>)
 8005bae:	f241 3388 	movw	r3, #5000	; 0x1388
 8005bb2:	466a      	mov	r2, sp
 8005bb4:	a906      	add	r1, sp, #24
 8005bb6:	f002 fb96 	bl	80082e6 <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 8005bba:	3800      	subs	r0, #0
 8005bbc:	bf18      	it	ne
 8005bbe:	2001      	movne	r0, #1
}
 8005bc0:	b015      	add	sp, #84	; 0x54
 8005bc2:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 8005bc6:	2001      	movs	r0, #1
 8005bc8:	e7fa      	b.n	8005bc0 <QSPI_WriteEnable.constprop.0+0x60>
 8005bca:	bf00      	nop
 8005bcc:	20008f54 	.word	0x20008f54

08005bd0 <BSP_QSPI_EnableMemoryMappedMode>:
{
 8005bd0:	b500      	push	{lr}
 8005bd2:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8005bd4:	f44f 7380 	mov.w	r3, #256	; 0x100
 8005bd8:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 8005bda:	23eb      	movs	r3, #235	; 0xeb
 8005bdc:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 8005bde:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8005be2:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 8005be4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8005be8:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 8005bea:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 8005bee:	2300      	movs	r3, #0
 8005bf0:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 8005bf4:	220a      	movs	r2, #10
 8005bf6:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8005bf8:	a902      	add	r1, sp, #8
 8005bfa:	466a      	mov	r2, sp
 8005bfc:	4806      	ldr	r0, [pc, #24]	; (8005c18 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8005bfe:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8005c00:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 8005c04:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8005c06:	f002 fbbe 	bl	8008386 <HAL_QSPI_MemoryMapped>
}
 8005c0a:	3800      	subs	r0, #0
 8005c0c:	bf18      	it	ne
 8005c0e:	2001      	movne	r0, #1
 8005c10:	b011      	add	sp, #68	; 0x44
 8005c12:	f85d fb04 	ldr.w	pc, [sp], #4
 8005c16:	bf00      	nop
 8005c18:	20008f54 	.word	0x20008f54

08005c1c <BSP_QSPI_MspInit>:
{
 8005c1c:	b570      	push	{r4, r5, r6, lr}
 8005c1e:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 8005c20:	4b2c      	ldr	r3, [pc, #176]	; (8005cd4 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8005c22:	482d      	ldr	r0, [pc, #180]	; (8005cd8 <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 8005c24:	2400      	movs	r4, #0
 8005c26:	9400      	str	r4, [sp, #0]
 8005c28:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8005c2a:	f042 0202 	orr.w	r2, r2, #2
 8005c2e:	639a      	str	r2, [r3, #56]	; 0x38
 8005c30:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8005c32:	f002 0202 	and.w	r2, r2, #2
 8005c36:	9200      	str	r2, [sp, #0]
 8005c38:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 8005c3a:	699a      	ldr	r2, [r3, #24]
 8005c3c:	f042 0202 	orr.w	r2, r2, #2
 8005c40:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8005c42:	699a      	ldr	r2, [r3, #24]
 8005c44:	f022 0202 	bic.w	r2, r2, #2
 8005c48:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 8005c4a:	9401      	str	r4, [sp, #4]
 8005c4c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005c4e:	f042 0202 	orr.w	r2, r2, #2
 8005c52:	631a      	str	r2, [r3, #48]	; 0x30
 8005c54:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005c56:	f002 0202 	and.w	r2, r2, #2
 8005c5a:	9201      	str	r2, [sp, #4]
 8005c5c:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8005c5e:	9402      	str	r4, [sp, #8]
 8005c60:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005c62:	f042 0220 	orr.w	r2, r2, #32
 8005c66:	631a      	str	r2, [r3, #48]	; 0x30
 8005c68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005c6a:	f003 0320 	and.w	r3, r3, #32
 8005c6e:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8005c70:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 8005c72:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 8005c74:	2302      	movs	r3, #2
 8005c76:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 8005c7a:	2101      	movs	r1, #1
 8005c7c:	2303      	movs	r3, #3
 8005c7e:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8005c82:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8005c84:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8005c86:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8005c88:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8005c8a:	f001 f9d5 	bl	8007038 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8005c8e:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8005c92:	a903      	add	r1, sp, #12
 8005c94:	4811      	ldr	r0, [pc, #68]	; (8005cdc <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 8005c96:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 8005c98:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8005c9a:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 8005c9c:	f001 f9cc 	bl	8007038 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8005ca0:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8005ca4:	a903      	add	r1, sp, #12
 8005ca6:	480d      	ldr	r0, [pc, #52]	; (8005cdc <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 8005ca8:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 8005caa:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8005cac:	f001 f9c4 	bl	8007038 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8005cb0:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8005cb2:	a903      	add	r1, sp, #12
 8005cb4:	4809      	ldr	r0, [pc, #36]	; (8005cdc <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 8005cb6:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 8005cb8:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 8005cba:	f001 f9bd 	bl	8007038 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 8005cbe:	4622      	mov	r2, r4
 8005cc0:	210f      	movs	r1, #15
 8005cc2:	205b      	movs	r0, #91	; 0x5b
 8005cc4:	f000 fb82 	bl	80063cc <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 8005cc8:	205b      	movs	r0, #91	; 0x5b
 8005cca:	f000 fbb1 	bl	8006430 <HAL_NVIC_EnableIRQ>
}
 8005cce:	b008      	add	sp, #32
 8005cd0:	bd70      	pop	{r4, r5, r6, pc}
 8005cd2:	bf00      	nop
 8005cd4:	40023800 	.word	0x40023800
 8005cd8:	40020400 	.word	0x40020400
 8005cdc:	40021400 	.word	0x40021400

08005ce0 <BSP_QSPI_Init>:
{
 8005ce0:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 8005ce2:	4c48      	ldr	r4, [pc, #288]	; (8005e04 <BSP_QSPI_Init+0x124>)
 8005ce4:	4b48      	ldr	r3, [pc, #288]	; (8005e08 <BSP_QSPI_Init+0x128>)
 8005ce6:	6023      	str	r3, [r4, #0]
{
 8005ce8:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8005cea:	4620      	mov	r0, r4
 8005cec:	f002 faa4 	bl	8008238 <HAL_QSPI_DeInit>
 8005cf0:	4605      	mov	r5, r0
 8005cf2:	b110      	cbz	r0, 8005cfa <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 8005cf4:	2001      	movs	r0, #1
}
 8005cf6:	b011      	add	sp, #68	; 0x44
 8005cf8:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 8005cfa:	4601      	mov	r1, r0
 8005cfc:	4620      	mov	r0, r4
 8005cfe:	f7ff ff8d 	bl	8005c1c <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 8005d02:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8005d04:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 8005d06:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8005d0a:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 8005d0c:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 8005d10:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8005d14:	fab3 f383 	clz	r3, r3
 8005d18:	3b01      	subs	r3, #1
 8005d1a:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8005d1c:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 8005d1e:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8005d22:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 8005d26:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 8005d2a:	f002 fa31 	bl	8008190 <HAL_QSPI_Init>
 8005d2e:	2800      	cmp	r0, #0
 8005d30:	d1e0      	bne.n	8005cf4 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8005d32:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8005d36:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8005d3a:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 8005d3e:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 8005d40:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 8005d42:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8005d44:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005d46:	f241 3288 	movw	r2, #5000	; 0x1388
 8005d4a:	a902      	add	r1, sp, #8
 8005d4c:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8005d4e:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8005d50:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005d52:	f002 fa84 	bl	800825e <HAL_QSPI_Command>
 8005d56:	b108      	cbz	r0, 8005d5c <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 8005d58:	2004      	movs	r0, #4
 8005d5a:	e7cc      	b.n	8005cf6 <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 8005d5c:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005d5e:	f241 3288 	movw	r2, #5000	; 0x1388
 8005d62:	a902      	add	r1, sp, #8
 8005d64:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 8005d66:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005d68:	f002 fa79 	bl	800825e <HAL_QSPI_Command>
 8005d6c:	2800      	cmp	r0, #0
 8005d6e:	d1f3      	bne.n	8005d58 <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 8005d70:	f241 3088 	movw	r0, #5000	; 0x1388
 8005d74:	f7ff feca 	bl	8005b0c <QSPI_AutoPollingMemReady.constprop.0>
 8005d78:	2800      	cmp	r0, #0
 8005d7a:	d1ed      	bne.n	8005d58 <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8005d7c:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 8005d80:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8005d84:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8005d88:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 8005d8a:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005d8c:	f241 3288 	movw	r2, #5000	; 0x1388
 8005d90:	a902      	add	r1, sp, #8
 8005d92:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8005d94:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 8005d96:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8005d98:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005d9a:	f002 fa60 	bl	800825e <HAL_QSPI_Command>
 8005d9e:	2800      	cmp	r0, #0
 8005da0:	d1da      	bne.n	8005d58 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005da2:	f241 3288 	movw	r2, #5000	; 0x1388
 8005da6:	f10d 0107 	add.w	r1, sp, #7
 8005daa:	4620      	mov	r0, r4
 8005dac:	f002 fbd0 	bl	8008550 <HAL_QSPI_Receive>
 8005db0:	2800      	cmp	r0, #0
 8005db2:	d1d1      	bne.n	8005d58 <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 8005db4:	f7ff fed4 	bl	8005b60 <QSPI_WriteEnable.constprop.0>
 8005db8:	2800      	cmp	r0, #0
 8005dba:	d1cd      	bne.n	8005d58 <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 8005dbc:	2381      	movs	r3, #129	; 0x81
 8005dbe:	9302      	str	r3, [sp, #8]
 8005dc0:	22f0      	movs	r2, #240	; 0xf0
 8005dc2:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8005dc6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 8005dca:	210a      	movs	r1, #10
 8005dcc:	fab2 f282 	clz	r2, r2
 8005dd0:	fa01 f202 	lsl.w	r2, r1, r2
 8005dd4:	f003 030f 	and.w	r3, r3, #15
 8005dd8:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005dda:	a902      	add	r1, sp, #8
 8005ddc:	f241 3288 	movw	r2, #5000	; 0x1388
 8005de0:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8005de2:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005de6:	f002 fa3a 	bl	800825e <HAL_QSPI_Command>
 8005dea:	2800      	cmp	r0, #0
 8005dec:	d1b4      	bne.n	8005d58 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8005dee:	f241 3288 	movw	r2, #5000	; 0x1388
 8005df2:	f10d 0107 	add.w	r1, sp, #7
 8005df6:	4620      	mov	r0, r4
 8005df8:	f002 fb4e 	bl	8008498 <HAL_QSPI_Transmit>
 8005dfc:	2800      	cmp	r0, #0
 8005dfe:	f43f af7a 	beq.w	8005cf6 <BSP_QSPI_Init+0x16>
 8005e02:	e7a9      	b.n	8005d58 <BSP_QSPI_Init+0x78>
 8005e04:	20008f54 	.word	0x20008f54
 8005e08:	a0001000 	.word	0xa0001000

08005e0c <BSP_QSPI_MspDeInit>:
{
 8005e0c:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 8005e0e:	205b      	movs	r0, #91	; 0x5b
 8005e10:	f000 fb1c 	bl	800644c <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 8005e14:	4814      	ldr	r0, [pc, #80]	; (8005e68 <BSP_QSPI_MspDeInit+0x5c>)
 8005e16:	2140      	movs	r1, #64	; 0x40
 8005e18:	f001 f9f4 	bl	8007204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 8005e1c:	4813      	ldr	r0, [pc, #76]	; (8005e6c <BSP_QSPI_MspDeInit+0x60>)
 8005e1e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8005e22:	f001 f9ef 	bl	8007204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 8005e26:	4811      	ldr	r0, [pc, #68]	; (8005e6c <BSP_QSPI_MspDeInit+0x60>)
 8005e28:	f44f 7180 	mov.w	r1, #256	; 0x100
 8005e2c:	f001 f9ea 	bl	8007204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 8005e30:	480e      	ldr	r0, [pc, #56]	; (8005e6c <BSP_QSPI_MspDeInit+0x60>)
 8005e32:	f44f 7100 	mov.w	r1, #512	; 0x200
 8005e36:	f001 f9e5 	bl	8007204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 8005e3a:	480c      	ldr	r0, [pc, #48]	; (8005e6c <BSP_QSPI_MspDeInit+0x60>)
 8005e3c:	2180      	movs	r1, #128	; 0x80
 8005e3e:	f001 f9e1 	bl	8007204 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 8005e42:	480a      	ldr	r0, [pc, #40]	; (8005e6c <BSP_QSPI_MspDeInit+0x60>)
 8005e44:	2140      	movs	r1, #64	; 0x40
 8005e46:	f001 f9dd 	bl	8007204 <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 8005e4a:	4b09      	ldr	r3, [pc, #36]	; (8005e70 <BSP_QSPI_MspDeInit+0x64>)
 8005e4c:	699a      	ldr	r2, [r3, #24]
 8005e4e:	f042 0202 	orr.w	r2, r2, #2
 8005e52:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8005e54:	699a      	ldr	r2, [r3, #24]
 8005e56:	f022 0202 	bic.w	r2, r2, #2
 8005e5a:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 8005e5c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8005e5e:	f022 0202 	bic.w	r2, r2, #2
 8005e62:	639a      	str	r2, [r3, #56]	; 0x38
}
 8005e64:	bd08      	pop	{r3, pc}
 8005e66:	bf00      	nop
 8005e68:	40020400 	.word	0x40020400
 8005e6c:	40021400 	.word	0x40021400
 8005e70:	40023800 	.word	0x40023800

08005e74 <BSP_QSPI_DeInit>:
{
 8005e74:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 8005e76:	4d08      	ldr	r5, [pc, #32]	; (8005e98 <BSP_QSPI_DeInit+0x24>)
 8005e78:	4b08      	ldr	r3, [pc, #32]	; (8005e9c <BSP_QSPI_DeInit+0x28>)
 8005e7a:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 8005e7c:	4628      	mov	r0, r5
 8005e7e:	f002 f9db 	bl	8008238 <HAL_QSPI_DeInit>
 8005e82:	4604      	mov	r4, r0
 8005e84:	b928      	cbnz	r0, 8005e92 <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 8005e86:	4601      	mov	r1, r0
 8005e88:	4628      	mov	r0, r5
 8005e8a:	f7ff ffbf 	bl	8005e0c <BSP_QSPI_MspDeInit>
}
 8005e8e:	4620      	mov	r0, r4
 8005e90:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 8005e92:	2401      	movs	r4, #1
 8005e94:	e7fb      	b.n	8005e8e <BSP_QSPI_DeInit+0x1a>
 8005e96:	bf00      	nop
 8005e98:	20008f54 	.word	0x20008f54
 8005e9c:	a0001000 	.word	0xa0001000

08005ea0 <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 8005ea0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 8005ea4:	4c21      	ldr	r4, [pc, #132]	; (8005f2c <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8005ea6:	4d22      	ldr	r5, [pc, #136]	; (8005f30 <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8005ea8:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 8005eaa:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8005eae:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8005eb0:	4621      	mov	r1, r4
{
 8005eb2:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8005eb4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005eb8:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8005eba:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 8005ebe:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 8005ec2:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8005ec6:	f002 ffe7 	bl	8008e98 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 8005eca:	4630      	mov	r0, r6
 8005ecc:	f000 fa58 	bl	8006380 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 8005ed0:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8005ed2:	4621      	mov	r1, r4
 8005ed4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005ed8:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8005eda:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 8005ede:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8005ee2:	f002 ffd9 	bl	8008e98 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8005ee6:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8005ee8:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8005eec:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 8005eee:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8005ef0:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005ef4:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 8005ef6:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8005efa:	f002 ffcd 	bl	8008e98 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 8005efe:	f44f 730c 	mov.w	r3, #560	; 0x230
 8005f02:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8005f04:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8005f06:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8005f0a:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 8005f0c:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 8005f0e:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8005f10:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005f14:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 8005f16:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8005f18:	f002 ffbe 	bl	8008e98 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8005f1c:	4649      	mov	r1, r9
 8005f1e:	4628      	mov	r0, r5
}
 8005f20:	b003      	add	sp, #12
 8005f22:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8005f26:	f002 bfd5 	b.w	8008ed4 <HAL_SDRAM_ProgramRefreshRate>
 8005f2a:	bf00      	nop
 8005f2c:	20008fa0 	.word	0x20008fa0
 8005f30:	2000908c 	.word	0x2000908c

08005f34 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8005f34:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8005f36:	4606      	mov	r6, r0
{
 8005f38:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8005f3a:	2800      	cmp	r0, #0
 8005f3c:	f000 80bd 	beq.w	80060ba <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 8005f40:	4b5f      	ldr	r3, [pc, #380]	; (80060c0 <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8005f42:	4860      	ldr	r0, [pc, #384]	; (80060c4 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8005f44:	4c60      	ldr	r4, [pc, #384]	; (80060c8 <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 8005f46:	2500      	movs	r5, #0
 8005f48:	9500      	str	r5, [sp, #0]
 8005f4a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8005f4c:	f042 0201 	orr.w	r2, r2, #1
 8005f50:	639a      	str	r2, [r3, #56]	; 0x38
 8005f52:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8005f54:	f002 0201 	and.w	r2, r2, #1
 8005f58:	9200      	str	r2, [sp, #0]
 8005f5a:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 8005f5c:	9501      	str	r5, [sp, #4]
 8005f5e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005f60:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8005f64:	631a      	str	r2, [r3, #48]	; 0x30
 8005f66:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005f68:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 8005f6c:	9201      	str	r2, [sp, #4]
 8005f6e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8005f70:	9502      	str	r5, [sp, #8]
 8005f72:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005f74:	f042 0204 	orr.w	r2, r2, #4
 8005f78:	631a      	str	r2, [r3, #48]	; 0x30
 8005f7a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005f7c:	f002 0204 	and.w	r2, r2, #4
 8005f80:	9202      	str	r2, [sp, #8]
 8005f82:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8005f84:	9503      	str	r5, [sp, #12]
 8005f86:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005f88:	f042 0208 	orr.w	r2, r2, #8
 8005f8c:	631a      	str	r2, [r3, #48]	; 0x30
 8005f8e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005f90:	f002 0208 	and.w	r2, r2, #8
 8005f94:	9203      	str	r2, [sp, #12]
 8005f96:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 8005f98:	9504      	str	r5, [sp, #16]
 8005f9a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005f9c:	f042 0210 	orr.w	r2, r2, #16
 8005fa0:	631a      	str	r2, [r3, #48]	; 0x30
 8005fa2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005fa4:	f002 0210 	and.w	r2, r2, #16
 8005fa8:	9204      	str	r2, [sp, #16]
 8005faa:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8005fac:	9505      	str	r5, [sp, #20]
 8005fae:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005fb0:	f042 0220 	orr.w	r2, r2, #32
 8005fb4:	631a      	str	r2, [r3, #48]	; 0x30
 8005fb6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005fb8:	f002 0220 	and.w	r2, r2, #32
 8005fbc:	9205      	str	r2, [sp, #20]
 8005fbe:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 8005fc0:	9506      	str	r5, [sp, #24]
 8005fc2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005fc4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005fc8:	631a      	str	r2, [r3, #48]	; 0x30
 8005fca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005fcc:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8005fd0:	9206      	str	r2, [sp, #24]
 8005fd2:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8005fd4:	9507      	str	r5, [sp, #28]
 8005fd6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005fd8:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8005fdc:	631a      	str	r2, [r3, #48]	; 0x30
 8005fde:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005fe0:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8005fe4:	9207      	str	r2, [sp, #28]
 8005fe6:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8005fe8:	9508      	str	r5, [sp, #32]
 8005fea:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005fec:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8005ff0:	631a      	str	r2, [r3, #48]	; 0x30
 8005ff2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005ff4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8005ff8:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8005ffa:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8005ffc:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 8005ffe:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8006000:	2301      	movs	r3, #1
 8006002:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8006006:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8006008:	220c      	movs	r2, #12
 800600a:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 800600c:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800600e:	f001 f813 	bl	8007038 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8006012:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8006016:	482d      	ldr	r0, [pc, #180]	; (80060cc <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8006018:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800601a:	a909      	add	r1, sp, #36	; 0x24
 800601c:	f001 f80c 	bl	8007038 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8006020:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8006024:	482a      	ldr	r0, [pc, #168]	; (80060d0 <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8006026:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8006028:	a909      	add	r1, sp, #36	; 0x24
 800602a:	f001 f805 	bl	8007038 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 800602e:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8006032:	4828      	ldr	r0, [pc, #160]	; (80060d4 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8006034:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8006036:	a909      	add	r1, sp, #36	; 0x24
 8006038:	f000 fffe 	bl	8007038 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 800603c:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8006040:	4825      	ldr	r0, [pc, #148]	; (80060d8 <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8006042:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8006044:	a909      	add	r1, sp, #36	; 0x24
 8006046:	f000 fff7 	bl	8007038 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 800604a:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 800604e:	4823      	ldr	r0, [pc, #140]	; (80060dc <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8006050:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8006052:	a909      	add	r1, sp, #36	; 0x24
 8006054:	f000 fff0 	bl	8007038 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8006058:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 800605c:	4820      	ldr	r0, [pc, #128]	; (80060e0 <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 800605e:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8006060:	a909      	add	r1, sp, #36	; 0x24
 8006062:	f000 ffe9 	bl	8007038 <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 8006066:	2280      	movs	r2, #128	; 0x80
 8006068:	f44f 7300 	mov.w	r3, #512	; 0x200
 800606c:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 8006070:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8006074:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8006078:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 800607c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 8006080:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 8006084:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 8006088:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 800608c:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 800608e:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 8006092:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 8006094:	4b13      	ldr	r3, [pc, #76]	; (80060e4 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 8006096:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 8006098:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 800609a:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 800609c:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 800609e:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 80060a0:	f000 fa8e 	bl	80065c0 <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 80060a4:	4620      	mov	r0, r4
 80060a6:	f000 fa0b 	bl	80064c0 <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 80060aa:	2038      	movs	r0, #56	; 0x38
 80060ac:	462a      	mov	r2, r5
 80060ae:	2105      	movs	r1, #5
 80060b0:	f000 f98c 	bl	80063cc <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 80060b4:	2038      	movs	r0, #56	; 0x38
 80060b6:	f000 f9bb 	bl	8006430 <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 80060ba:	b00e      	add	sp, #56	; 0x38
 80060bc:	bd70      	pop	{r4, r5, r6, pc}
 80060be:	bf00      	nop
 80060c0:	40023800 	.word	0x40023800
 80060c4:	40020800 	.word	0x40020800
 80060c8:	2000902c 	.word	0x2000902c
 80060cc:	40020c00 	.word	0x40020c00
 80060d0:	40021000 	.word	0x40021000
 80060d4:	40021400 	.word	0x40021400
 80060d8:	40021800 	.word	0x40021800
 80060dc:	40021c00 	.word	0x40021c00
 80060e0:	40022000 	.word	0x40022000
 80060e4:	40026410 	.word	0x40026410

080060e8 <BSP_SDRAM_Init>:
{
 80060e8:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 80060ea:	4c19      	ldr	r4, [pc, #100]	; (8006150 <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 80060ec:	4d19      	ldr	r5, [pc, #100]	; (8006154 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 80060ee:	4b1a      	ldr	r3, [pc, #104]	; (8006158 <BSP_SDRAM_Init+0x70>)
 80060f0:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 80060f2:	2107      	movs	r1, #7
 80060f4:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 80060f6:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 80060f8:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 80060fc:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 8006100:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 8006104:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 8006106:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8006108:	2340      	movs	r3, #64	; 0x40
 800610a:	2220      	movs	r2, #32
 800610c:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 8006110:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8006112:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8006116:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 800611a:	f44f 6000 	mov.w	r0, #2048	; 0x800
 800611e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8006122:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8006126:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8006128:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 800612c:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 800612e:	f7ff ff01 	bl	8005f34 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 8006132:	4629      	mov	r1, r5
 8006134:	4620      	mov	r0, r4
 8006136:	f002 fe81 	bl	8008e3c <HAL_SDRAM_Init>
 800613a:	4c08      	ldr	r4, [pc, #32]	; (800615c <BSP_SDRAM_Init+0x74>)
 800613c:	3800      	subs	r0, #0
 800613e:	bf18      	it	ne
 8006140:	2001      	movne	r0, #1
 8006142:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 8006144:	f240 5069 	movw	r0, #1385	; 0x569
 8006148:	f7ff feaa 	bl	8005ea0 <BSP_SDRAM_Initialization_sequence>
}
 800614c:	7820      	ldrb	r0, [r4, #0]
 800614e:	bd38      	pop	{r3, r4, r5, pc}
 8006150:	2000908c 	.word	0x2000908c
 8006154:	20008fb0 	.word	0x20008fb0
 8006158:	a0000140 	.word	0xa0000140
 800615c:	2000004d 	.word	0x2000004d

08006160 <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8006160:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8006162:	b148      	cbz	r0, 8006178 <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 8006164:	2038      	movs	r0, #56	; 0x38
 8006166:	f000 f971 	bl	800644c <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 800616a:	4804      	ldr	r0, [pc, #16]	; (800617c <BSP_SDRAM_MspDeInit+0x1c>)
 800616c:	4b04      	ldr	r3, [pc, #16]	; (8006180 <BSP_SDRAM_MspDeInit+0x20>)
 800616e:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 8006170:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 8006174:	f000 ba24 	b.w	80065c0 <HAL_DMA_DeInit>
}
 8006178:	bd08      	pop	{r3, pc}
 800617a:	bf00      	nop
 800617c:	20008fcc 	.word	0x20008fcc
 8006180:	40026410 	.word	0x40026410

08006184 <BSP_SDRAM_DeInit>:
{
 8006184:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 8006186:	4c07      	ldr	r4, [pc, #28]	; (80061a4 <BSP_SDRAM_DeInit+0x20>)
 8006188:	4b07      	ldr	r3, [pc, #28]	; (80061a8 <BSP_SDRAM_DeInit+0x24>)
 800618a:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 800618c:	4620      	mov	r0, r4
 800618e:	f002 fe75 	bl	8008e7c <HAL_SDRAM_DeInit>
 8006192:	4d06      	ldr	r5, [pc, #24]	; (80061ac <BSP_SDRAM_DeInit+0x28>)
 8006194:	4601      	mov	r1, r0
 8006196:	b918      	cbnz	r0, 80061a0 <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 8006198:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 800619a:	4620      	mov	r0, r4
 800619c:	f7ff ffe0 	bl	8006160 <BSP_SDRAM_MspDeInit>
}
 80061a0:	7828      	ldrb	r0, [r5, #0]
 80061a2:	bd38      	pop	{r3, r4, r5, pc}
 80061a4:	2000908c 	.word	0x2000908c
 80061a8:	a0000140 	.word	0xa0000140
 80061ac:	2000004c 	.word	0x2000004c

080061b0 <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 80061b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 80061b4:	4d16      	ldr	r5, [pc, #88]	; (8006210 <BSP_TS_Init+0x60>)
 80061b6:	4c17      	ldr	r4, [pc, #92]	; (8006214 <BSP_TS_Init+0x64>)
 80061b8:	682b      	ldr	r3, [r5, #0]
{
 80061ba:	4606      	mov	r6, r0
  ft6x06_ts_drv.Init(I2C_Address);
 80061bc:	7820      	ldrb	r0, [r4, #0]
{
 80061be:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 80061c0:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 80061c2:	686b      	ldr	r3, [r5, #4]
 80061c4:	2054      	movs	r0, #84	; 0x54
 80061c6:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 80061c8:	b2c0      	uxtb	r0, r0
 80061ca:	2811      	cmp	r0, #17
 80061cc:	d00a      	beq.n	80061e4 <BSP_TS_Init+0x34>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 80061ce:	686b      	ldr	r3, [r5, #4]
 80061d0:	2070      	movs	r0, #112	; 0x70
 80061d2:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 80061d4:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 80061d6:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 80061d8:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 80061da:	7023      	strb	r3, [r4, #0]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 80061dc:	d004      	beq.n	80061e8 <BSP_TS_Init+0x38>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 80061de:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 80061e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 80061e4:	2354      	movs	r3, #84	; 0x54
 80061e6:	7023      	strb	r3, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 80061e8:	4b0b      	ldr	r3, [pc, #44]	; (8006218 <BSP_TS_Init+0x68>)
 80061ea:	f8df 8030 	ldr.w	r8, [pc, #48]	; 800621c <BSP_TS_Init+0x6c>
      ts_driver->Reset(I2C_Address);
 80061ee:	7820      	ldrb	r0, [r4, #0]
    ts_driver = &ft6x06_ts_drv;
 80061f0:	f8c8 5000 	str.w	r5, [r8]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 80061f4:	42be      	cmp	r6, r7
 80061f6:	bf34      	ite	cc
 80061f8:	2601      	movcc	r6, #1
 80061fa:	260c      	movcs	r6, #12
 80061fc:	701e      	strb	r6, [r3, #0]
      ts_driver->Reset(I2C_Address);
 80061fe:	68ab      	ldr	r3, [r5, #8]
 8006200:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 8006202:	f8d8 3000 	ldr.w	r3, [r8]
 8006206:	7820      	ldrb	r0, [r4, #0]
 8006208:	68db      	ldr	r3, [r3, #12]
 800620a:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 800620c:	2000      	movs	r0, #0
 800620e:	e7e7      	b.n	80061e0 <BSP_TS_Init+0x30>
 8006210:	20000020 	.word	0x20000020
 8006214:	200090c0 	.word	0x200090c0
 8006218:	200090d8 	.word	0x200090d8
 800621c:	200090d4 	.word	0x200090d4

08006220 <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 8006220:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8006224:	f8df b0dc 	ldr.w	fp, [pc, #220]	; 8006304 <BSP_TS_GetState+0xe4>
 8006228:	4a33      	ldr	r2, [pc, #204]	; (80062f8 <BSP_TS_GetState+0xd8>)
 800622a:	f8db 3000 	ldr.w	r3, [fp]
{
 800622e:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8006230:	691b      	ldr	r3, [r3, #16]
 8006232:	7810      	ldrb	r0, [r2, #0]
{
 8006234:	b085      	sub	sp, #20
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8006236:	4798      	blx	r3
 8006238:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 800623a:	b158      	cbz	r0, 8006254 <BSP_TS_GetState+0x34>
 800623c:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8006308 <BSP_TS_GetState+0xe8>
 8006240:	4f2e      	ldr	r7, [pc, #184]	; (80062fc <BSP_TS_GetState+0xdc>)
 8006242:	f106 0a02 	add.w	sl, r6, #2
 8006246:	ad03      	add	r5, sp, #12
 8006248:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 800624a:	f04f 0900 	mov.w	r9, #0
 800624e:	7833      	ldrb	r3, [r6, #0]
 8006250:	454b      	cmp	r3, r9
 8006252:	d803      	bhi.n	800625c <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 8006254:	2000      	movs	r0, #0
 8006256:	b005      	add	sp, #20
 8006258:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 800625c:	f8db 3000 	ldr.w	r3, [fp]
 8006260:	4825      	ldr	r0, [pc, #148]	; (80062f8 <BSP_TS_GetState+0xd8>)
 8006262:	695b      	ldr	r3, [r3, #20]
 8006264:	7800      	ldrb	r0, [r0, #0]
 8006266:	9101      	str	r1, [sp, #4]
 8006268:	462a      	mov	r2, r5
 800626a:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 800626c:	4b24      	ldr	r3, [pc, #144]	; (8006300 <BSP_TS_GetState+0xe0>)
 800626e:	9901      	ldr	r1, [sp, #4]
 8006270:	781b      	ldrb	r3, [r3, #0]
 8006272:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 8006276:	bf1f      	itttt	ne
 8006278:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 800627a:	8828      	ldrhne	r0, [r5, #0]
 800627c:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 800627e:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 8006280:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 8006282:	bf41      	itttt	mi
 8006284:	880a      	ldrhmi	r2, [r1, #0]
 8006286:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 800628a:	3203      	addmi	r2, #3
 800628c:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 800628e:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 8006290:	bf48      	it	mi
 8006292:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 8006294:	f8d8 2000 	ldr.w	r2, [r8]
 8006298:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 800629c:	bf42      	ittt	mi
 800629e:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 80062a2:	3301      	addmi	r3, #1
 80062a4:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80062a6:	b293      	uxth	r3, r2
 80062a8:	4290      	cmp	r0, r2
 80062aa:	bf8c      	ite	hi
 80062ac:	1ac3      	subhi	r3, r0, r3
 80062ae:	1a1b      	subls	r3, r3, r0
 80062b0:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 80062b2:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80062b6:	9301      	str	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 80062b8:	683b      	ldr	r3, [r7, #0]
 80062ba:	b29c      	uxth	r4, r3
 80062bc:	429a      	cmp	r2, r3
 80062be:	bf88      	it	hi
 80062c0:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 80062c2:	9b01      	ldr	r3, [sp, #4]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 80062c4:	bf98      	it	ls
 80062c6:	1aa4      	subls	r4, r4, r2
 80062c8:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 80062ca:	441c      	add	r4, r3
 80062cc:	46c4      	mov	ip, r8
 80062ce:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 80062d0:	bfc8      	it	gt
 80062d2:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 80062d6:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 80062da:	bfc8      	it	gt
 80062dc:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 80062de:	46be      	mov	lr, r7
 80062e0:	f82a 3b02 	strh.w	r3, [sl], #2
      TS_State->touchY[index] = _y[index];
 80062e4:	f8de 3000 	ldr.w	r3, [lr]
 80062e8:	f8aa 3002 	strh.w	r3, [sl, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 80062ec:	f108 0804 	add.w	r8, r8, #4
 80062f0:	3704      	adds	r7, #4
 80062f2:	f109 0901 	add.w	r9, r9, #1
 80062f6:	e7aa      	b.n	800624e <BSP_TS_GetState+0x2e>
 80062f8:	200090c0 	.word	0x200090c0
 80062fc:	200090cc 	.word	0x200090cc
 8006300:	200090d8 	.word	0x200090d8
 8006304:	200090d4 	.word	0x200090d4
 8006308:	200090c4 	.word	0x200090c4

0800630c <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 800630c:	4b05      	ldr	r3, [pc, #20]	; (8006324 <SystemInit+0x18>)
 800630e:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 8006312:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8006316:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 800631a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800631e:	609a      	str	r2, [r3, #8]
#endif
}
 8006320:	4770      	bx	lr
 8006322:	bf00      	nop
 8006324:	e000ed00 	.word	0xe000ed00

08006328 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8006328:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 800632a:	4b0b      	ldr	r3, [pc, #44]	; (8006358 <HAL_Init+0x30>)
 800632c:	681a      	ldr	r2, [r3, #0]
 800632e:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8006332:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8006334:	681a      	ldr	r2, [r3, #0]
 8006336:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800633a:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 800633c:	681a      	ldr	r2, [r3, #0]
 800633e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8006342:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8006344:	2003      	movs	r0, #3
 8006346:	f000 f82f 	bl	80063a8 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 800634a:	200f      	movs	r0, #15
 800634c:	f7fc fdb8 	bl	8002ec0 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 8006350:	f7fc faee 	bl	8002930 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8006354:	2000      	movs	r0, #0
 8006356:	bd08      	pop	{r3, pc}
 8006358:	40023c00 	.word	0x40023c00

0800635c <HAL_IncTick>:
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
  uwTick += uwTickFreq;
 800635c:	4a03      	ldr	r2, [pc, #12]	; (800636c <HAL_IncTick+0x10>)
 800635e:	4b04      	ldr	r3, [pc, #16]	; (8006370 <HAL_IncTick+0x14>)
 8006360:	6811      	ldr	r1, [r2, #0]
 8006362:	781b      	ldrb	r3, [r3, #0]
 8006364:	440b      	add	r3, r1
 8006366:	6013      	str	r3, [r2, #0]
}
 8006368:	4770      	bx	lr
 800636a:	bf00      	nop
 800636c:	200090dc 	.word	0x200090dc
 8006370:	20000054 	.word	0x20000054

08006374 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8006374:	4b01      	ldr	r3, [pc, #4]	; (800637c <HAL_GetTick+0x8>)
 8006376:	6818      	ldr	r0, [r3, #0]
}
 8006378:	4770      	bx	lr
 800637a:	bf00      	nop
 800637c:	200090dc 	.word	0x200090dc

08006380 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8006380:	b538      	push	{r3, r4, r5, lr}
 8006382:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8006384:	f7ff fff6 	bl	8006374 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8006388:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 800638a:	bf1c      	itt	ne
 800638c:	4b05      	ldrne	r3, [pc, #20]	; (80063a4 <HAL_Delay+0x24>)
 800638e:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 8006390:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 8006392:	bf18      	it	ne
 8006394:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 8006396:	f7ff ffed 	bl	8006374 <HAL_GetTick>
 800639a:	1b43      	subs	r3, r0, r5
 800639c:	42a3      	cmp	r3, r4
 800639e:	d3fa      	bcc.n	8006396 <HAL_Delay+0x16>
  {
  }
}
 80063a0:	bd38      	pop	{r3, r4, r5, pc}
 80063a2:	bf00      	nop
 80063a4:	20000054 	.word	0x20000054

080063a8 <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80063a8:	4907      	ldr	r1, [pc, #28]	; (80063c8 <HAL_NVIC_SetPriorityGrouping+0x20>)
 80063aa:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80063ac:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80063b0:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80063b2:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80063b4:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80063b8:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80063ba:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80063bc:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80063c0:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80063c4:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80063c6:	4770      	bx	lr
 80063c8:	e000ed00 	.word	0xe000ed00

080063cc <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80063cc:	4b16      	ldr	r3, [pc, #88]	; (8006428 <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80063ce:	b530      	push	{r4, r5, lr}
 80063d0:	68dc      	ldr	r4, [r3, #12]
 80063d2:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80063d6:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80063da:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80063dc:	2d04      	cmp	r5, #4
 80063de:	bf28      	it	cs
 80063e0:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80063e2:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80063e4:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80063e8:	bf8c      	ite	hi
 80063ea:	3c03      	subhi	r4, #3
 80063ec:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80063ee:	fa03 f505 	lsl.w	r5, r3, r5
 80063f2:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 80063f6:	40a3      	lsls	r3, r4
 80063f8:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80063fc:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 80063fe:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8006400:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006404:	bfac      	ite	ge
 8006406:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800640a:	4a08      	ldrlt	r2, [pc, #32]	; (800642c <HAL_NVIC_SetPriority+0x60>)
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800640c:	ea4f 1303 	mov.w	r3, r3, lsl #4
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006410:	bfb8      	it	lt
 8006412:	f000 000f 	andlt.w	r0, r0, #15
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006416:	b2db      	uxtb	r3, r3
 8006418:	bfaa      	itet	ge
 800641a:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800641e:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006420:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8006424:	bd30      	pop	{r4, r5, pc}
 8006426:	bf00      	nop
 8006428:	e000ed00 	.word	0xe000ed00
 800642c:	e000ed14 	.word	0xe000ed14

08006430 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8006430:	2800      	cmp	r0, #0
 8006432:	db08      	blt.n	8006446 <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8006434:	0942      	lsrs	r2, r0, #5
 8006436:	2301      	movs	r3, #1
 8006438:	f000 001f 	and.w	r0, r0, #31
 800643c:	fa03 f000 	lsl.w	r0, r3, r0
 8006440:	4b01      	ldr	r3, [pc, #4]	; (8006448 <HAL_NVIC_EnableIRQ+0x18>)
 8006442:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 8006446:	4770      	bx	lr
 8006448:	e000e100 	.word	0xe000e100

0800644c <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 800644c:	2800      	cmp	r0, #0
 800644e:	db0d      	blt.n	800646c <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8006450:	0943      	lsrs	r3, r0, #5
 8006452:	2201      	movs	r2, #1
 8006454:	f000 001f 	and.w	r0, r0, #31
 8006458:	fa02 f000 	lsl.w	r0, r2, r0
 800645c:	3320      	adds	r3, #32
 800645e:	4a04      	ldr	r2, [pc, #16]	; (8006470 <HAL_NVIC_DisableIRQ+0x24>)
 8006460:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8006464:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8006468:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 800646c:	4770      	bx	lr
 800646e:	bf00      	nop
 8006470:	e000e100 	.word	0xe000e100

08006474 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8006474:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8006476:	4604      	mov	r4, r0
 8006478:	b150      	cbz	r0, 8006490 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800647a:	7943      	ldrb	r3, [r0, #5]
 800647c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006480:	b913      	cbnz	r3, 8006488 <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8006482:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 8006484:	f7fc fa74 	bl	8002970 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8006488:	2301      	movs	r3, #1
 800648a:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 800648c:	2000      	movs	r0, #0
}
 800648e:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006490:	2001      	movs	r0, #1
 8006492:	e7fc      	b.n	800648e <HAL_CRC_Init+0x1a>

08006494 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8006494:	6803      	ldr	r3, [r0, #0]
{
 8006496:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8006498:	4c08      	ldr	r4, [pc, #32]	; (80064bc <DMA_CalcBaseAndBitshift+0x28>)
{
 800649a:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 800649c:	b2d9      	uxtb	r1, r3
 800649e:	3910      	subs	r1, #16
 80064a0:	2018      	movs	r0, #24
 80064a2:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 80064a6:	5c20      	ldrb	r0, [r4, r0]
 80064a8:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 80064aa:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 80064ae:	f020 0003 	bic.w	r0, r0, #3
  if (stream_number > 3U)
 80064b2:	295f      	cmp	r1, #95	; 0x5f
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 80064b4:	bf88      	it	hi
 80064b6:	3004      	addhi	r0, #4
 80064b8:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 80064ba:	bd10      	pop	{r4, pc}
 80064bc:	08023441 	.word	0x08023441

080064c0 <HAL_DMA_Init>:
{
 80064c0:	b570      	push	{r4, r5, r6, lr}
 80064c2:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80064c4:	f7ff ff56 	bl	8006374 <HAL_GetTick>
 80064c8:	4605      	mov	r5, r0
  if(hdma == NULL)
 80064ca:	2c00      	cmp	r4, #0
 80064cc:	d073      	beq.n	80065b6 <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 80064ce:	2302      	movs	r3, #2
 80064d0:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 80064d4:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 80064d6:	2300      	movs	r3, #0
 80064d8:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 80064dc:	6813      	ldr	r3, [r2, #0]
 80064de:	f023 0301 	bic.w	r3, r3, #1
 80064e2:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80064e4:	6821      	ldr	r1, [r4, #0]
 80064e6:	680b      	ldr	r3, [r1, #0]
 80064e8:	07d8      	lsls	r0, r3, #31
 80064ea:	d42f      	bmi.n	800654c <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 80064ec:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 80064ee:	4d33      	ldr	r5, [pc, #204]	; (80065bc <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80064f0:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 80064f2:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80064f4:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 80064f8:	4313      	orrs	r3, r2
 80064fa:	68e2      	ldr	r2, [r4, #12]
 80064fc:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80064fe:	6922      	ldr	r2, [r4, #16]
 8006500:	4313      	orrs	r3, r2
 8006502:	6962      	ldr	r2, [r4, #20]
 8006504:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8006506:	69e2      	ldr	r2, [r4, #28]
 8006508:	4303      	orrs	r3, r0
 800650a:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 800650c:	6a22      	ldr	r2, [r4, #32]
 800650e:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8006510:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8006512:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8006514:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 8006518:	bf02      	ittt	eq
 800651a:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 800651e:	4335      	orreq	r5, r6
 8006520:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8006522:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8006524:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8006526:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 8006528:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 800652c:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8006530:	d133      	bne.n	800659a <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 8006532:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8006534:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 8006536:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8006538:	b37d      	cbz	r5, 800659a <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 800653a:	b990      	cbnz	r0, 8006562 <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 800653c:	2a01      	cmp	r2, #1
 800653e:	d021      	beq.n	8006584 <HAL_DMA_Init+0xc4>
 8006540:	f032 0202 	bics.w	r2, r2, #2
 8006544:	d129      	bne.n	800659a <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8006546:	01ea      	lsls	r2, r5, #7
 8006548:	d527      	bpl.n	800659a <HAL_DMA_Init+0xda>
 800654a:	e01e      	b.n	800658a <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 800654c:	f7ff ff12 	bl	8006374 <HAL_GetTick>
 8006550:	1b40      	subs	r0, r0, r5
 8006552:	2805      	cmp	r0, #5
 8006554:	d9c6      	bls.n	80064e4 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8006556:	2320      	movs	r3, #32
 8006558:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800655a:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 800655c:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8006560:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8006562:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 8006566:	d114      	bne.n	8006592 <HAL_DMA_Init+0xd2>
    switch (tmp)
 8006568:	2a03      	cmp	r2, #3
 800656a:	d816      	bhi.n	800659a <HAL_DMA_Init+0xda>
 800656c:	a001      	add	r0, pc, #4	; (adr r0, 8006574 <HAL_DMA_Init+0xb4>)
 800656e:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8006572:	bf00      	nop
 8006574:	0800658b 	.word	0x0800658b
 8006578:	08006547 	.word	0x08006547
 800657c:	0800658b 	.word	0x0800658b
 8006580:	08006585 	.word	0x08006585
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8006584:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 8006588:	d107      	bne.n	800659a <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 800658a:	2340      	movs	r3, #64	; 0x40
 800658c:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 800658e:	2001      	movs	r0, #1
 8006590:	e7e4      	b.n	800655c <HAL_DMA_Init+0x9c>
    switch (tmp)
 8006592:	2a02      	cmp	r2, #2
 8006594:	d9f9      	bls.n	800658a <HAL_DMA_Init+0xca>
 8006596:	2a03      	cmp	r2, #3
 8006598:	d0d5      	beq.n	8006546 <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 800659a:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 800659c:	4620      	mov	r0, r4
 800659e:	f7ff ff79 	bl	8006494 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80065a2:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80065a4:	233f      	movs	r3, #63	; 0x3f
 80065a6:	4093      	lsls	r3, r2
 80065a8:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80065aa:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 80065ac:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80065ae:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 80065b0:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 80065b4:	e7d4      	b.n	8006560 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 80065b6:	2001      	movs	r0, #1
 80065b8:	e7d2      	b.n	8006560 <HAL_DMA_Init+0xa0>
 80065ba:	bf00      	nop
 80065bc:	f010803f 	.word	0xf010803f

080065c0 <HAL_DMA_DeInit>:
{
 80065c0:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 80065c2:	4605      	mov	r5, r0
 80065c4:	b320      	cbz	r0, 8006610 <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 80065c6:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 80065ca:	2b02      	cmp	r3, #2
 80065cc:	b2dc      	uxtb	r4, r3
 80065ce:	d01d      	beq.n	800660c <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 80065d0:	6803      	ldr	r3, [r0, #0]
 80065d2:	681a      	ldr	r2, [r3, #0]
 80065d4:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 80065d8:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 80065da:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 80065dc:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 80065de:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 80065e0:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 80065e2:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 80065e4:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 80065e6:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 80065e8:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 80065ea:	f7ff ff53 	bl	8006494 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80065ee:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 80065f0:	233f      	movs	r3, #63	; 0x3f
 80065f2:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 80065f4:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 80065f8:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 80065fc:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8006600:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8006602:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 8006604:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 8006608:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 800660c:	4620      	mov	r0, r4
 800660e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006610:	2401      	movs	r4, #1
 8006612:	e7fb      	b.n	800660c <HAL_DMA_DeInit+0x4c>

08006614 <HAL_DMA_Abort>:
{
 8006614:	b570      	push	{r4, r5, r6, lr}
 8006616:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8006618:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 800661a:	f7ff feab 	bl	8006374 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 800661e:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8006622:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 8006624:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8006626:	d006      	beq.n	8006636 <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8006628:	2380      	movs	r3, #128	; 0x80
 800662a:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 800662c:	2300      	movs	r3, #0
 800662e:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 8006632:	2001      	movs	r0, #1
}
 8006634:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8006636:	6823      	ldr	r3, [r4, #0]
 8006638:	681a      	ldr	r2, [r3, #0]
 800663a:	f022 0216 	bic.w	r2, r2, #22
 800663e:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8006640:	695a      	ldr	r2, [r3, #20]
 8006642:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8006646:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8006648:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800664a:	b90a      	cbnz	r2, 8006650 <HAL_DMA_Abort+0x3c>
 800664c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800664e:	b11a      	cbz	r2, 8006658 <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8006650:	681a      	ldr	r2, [r3, #0]
 8006652:	f022 0208 	bic.w	r2, r2, #8
 8006656:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8006658:	681a      	ldr	r2, [r3, #0]
 800665a:	f022 0201 	bic.w	r2, r2, #1
 800665e:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8006660:	6823      	ldr	r3, [r4, #0]
 8006662:	681b      	ldr	r3, [r3, #0]
 8006664:	f013 0301 	ands.w	r3, r3, #1
 8006668:	d10a      	bne.n	8006680 <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 800666a:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 800666c:	223f      	movs	r2, #63	; 0x3f
 800666e:	408a      	lsls	r2, r1
 8006670:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8006672:	2201      	movs	r2, #1
 8006674:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 8006678:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 800667c:	4618      	mov	r0, r3
 800667e:	e7d9      	b.n	8006634 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8006680:	f7ff fe78 	bl	8006374 <HAL_GetTick>
 8006684:	1b40      	subs	r0, r0, r5
 8006686:	2805      	cmp	r0, #5
 8006688:	d9ea      	bls.n	8006660 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800668a:	2320      	movs	r3, #32
 800668c:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 800668e:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 8006690:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8006692:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 8006696:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 800669a:	e7cb      	b.n	8006634 <HAL_DMA_Abort+0x20>

0800669c <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 800669c:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 800669e:	4604      	mov	r4, r0
 80066a0:	b330      	cbz	r0, 80066f0 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 80066a2:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 80066a6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80066aa:	b91b      	cbnz	r3, 80066b4 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 80066ac:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 80066b0:	f7fc f976 	bl	80029a0 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80066b4:	6822      	ldr	r2, [r4, #0]
 80066b6:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 80066b8:	2302      	movs	r3, #2
 80066ba:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 80066be:	6813      	ldr	r3, [r2, #0]
 80066c0:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80066c4:	430b      	orrs	r3, r1
 80066c6:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 80066c8:	6b53      	ldr	r3, [r2, #52]	; 0x34
 80066ca:	68a1      	ldr	r1, [r4, #8]
 80066cc:	f023 0307 	bic.w	r3, r3, #7
 80066d0:	430b      	orrs	r3, r1
 80066d2:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 80066d4:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80066d6:	68e1      	ldr	r1, [r4, #12]
 80066d8:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 80066dc:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80066e0:	430b      	orrs	r3, r1
 80066e2:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80066e4:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80066e6:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 80066e8:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 80066ea:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 80066ee:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80066f0:	2001      	movs	r0, #1
 80066f2:	e7fc      	b.n	80066ee <HAL_DMA2D_Init+0x52>

080066f4 <HAL_DMA2D_LineEventCallback>:
 80066f4:	4770      	bx	lr

080066f6 <HAL_DMA2D_CLUTLoadingCpltCallback>:
 80066f6:	4770      	bx	lr

080066f8 <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80066f8:	6803      	ldr	r3, [r0, #0]
{
 80066fa:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 80066fc:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 80066fe:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8006700:	07f2      	lsls	r2, r6, #31
{
 8006702:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8006704:	d514      	bpl.n	8006730 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8006706:	05e9      	lsls	r1, r5, #23
 8006708:	d512      	bpl.n	8006730 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 800670a:	681a      	ldr	r2, [r3, #0]
 800670c:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8006710:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8006712:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8006714:	f042 0201 	orr.w	r2, r2, #1
 8006718:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 800671a:	2201      	movs	r2, #1
 800671c:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800671e:	2304      	movs	r3, #4
 8006720:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006724:	2300      	movs	r3, #0
 8006726:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800672a:	6943      	ldr	r3, [r0, #20]
 800672c:	b103      	cbz	r3, 8006730 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800672e:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8006730:	06b2      	lsls	r2, r6, #26
 8006732:	d516      	bpl.n	8006762 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8006734:	04ab      	lsls	r3, r5, #18
 8006736:	d514      	bpl.n	8006762 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8006738:	6823      	ldr	r3, [r4, #0]
 800673a:	681a      	ldr	r2, [r3, #0]
 800673c:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8006740:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8006742:	2220      	movs	r2, #32
 8006744:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8006746:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8006748:	f043 0302 	orr.w	r3, r3, #2
 800674c:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 800674e:	2304      	movs	r3, #4
 8006750:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006754:	2300      	movs	r3, #0
 8006756:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800675a:	6963      	ldr	r3, [r4, #20]
 800675c:	b10b      	cbz	r3, 8006762 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 800675e:	4620      	mov	r0, r4
 8006760:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8006762:	0730      	lsls	r0, r6, #28
 8006764:	d516      	bpl.n	8006794 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8006766:	0529      	lsls	r1, r5, #20
 8006768:	d514      	bpl.n	8006794 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 800676a:	6823      	ldr	r3, [r4, #0]
 800676c:	681a      	ldr	r2, [r3, #0]
 800676e:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8006772:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8006774:	2208      	movs	r2, #8
 8006776:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8006778:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800677a:	f043 0304 	orr.w	r3, r3, #4
 800677e:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8006780:	2304      	movs	r3, #4
 8006782:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8006786:	2300      	movs	r3, #0
 8006788:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 800678c:	6963      	ldr	r3, [r4, #20]
 800678e:	b10b      	cbz	r3, 8006794 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8006790:	4620      	mov	r0, r4
 8006792:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8006794:	0772      	lsls	r2, r6, #29
 8006796:	d50b      	bpl.n	80067b0 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8006798:	056b      	lsls	r3, r5, #21
 800679a:	d509      	bpl.n	80067b0 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 800679c:	6823      	ldr	r3, [r4, #0]
 800679e:	681a      	ldr	r2, [r3, #0]
 80067a0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 80067a4:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 80067a6:	2204      	movs	r2, #4
 80067a8:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 80067aa:	4620      	mov	r0, r4
 80067ac:	f7ff ffa2 	bl	80066f4 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 80067b0:	07b0      	lsls	r0, r6, #30
 80067b2:	d514      	bpl.n	80067de <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 80067b4:	05a9      	lsls	r1, r5, #22
 80067b6:	d512      	bpl.n	80067de <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 80067b8:	6823      	ldr	r3, [r4, #0]
 80067ba:	681a      	ldr	r2, [r3, #0]
 80067bc:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 80067c0:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 80067c2:	2202      	movs	r2, #2
 80067c4:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80067c6:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80067c8:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80067ca:	2301      	movs	r3, #1
 80067cc:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80067d0:	2300      	movs	r3, #0
 80067d2:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 80067d6:	6923      	ldr	r3, [r4, #16]
 80067d8:	b10b      	cbz	r3, 80067de <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 80067da:	4620      	mov	r0, r4
 80067dc:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 80067de:	06f2      	lsls	r2, r6, #27
 80067e0:	d513      	bpl.n	800680a <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 80067e2:	04eb      	lsls	r3, r5, #19
 80067e4:	d511      	bpl.n	800680a <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 80067e6:	6823      	ldr	r3, [r4, #0]
 80067e8:	681a      	ldr	r2, [r3, #0]
 80067ea:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 80067ee:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 80067f0:	2210      	movs	r2, #16
 80067f2:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 80067f4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80067f6:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 80067f8:	2301      	movs	r3, #1
 80067fa:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 80067fe:	2300      	movs	r3, #0
 8006800:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8006804:	4620      	mov	r0, r4
 8006806:	f7ff ff76 	bl	80066f6 <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 800680a:	bd70      	pop	{r4, r5, r6, pc}

0800680c <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 800680c:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 800680e:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8006812:	2b01      	cmp	r3, #1
 8006814:	f04f 0302 	mov.w	r3, #2
 8006818:	d02b      	beq.n	8006872 <HAL_DMA2D_ConfigLayer+0x66>
 800681a:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 800681c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8006820:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8006824:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8006828:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 800682c:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 800682e:	4f18      	ldr	r7, [pc, #96]	; (8006890 <HAL_DMA2D_ConfigLayer+0x84>)
 8006830:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006834:	3c09      	subs	r4, #9
 8006836:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8006838:	bf9c      	itt	ls
 800683a:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 800683e:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8006840:	ea4f 1601 	mov.w	r6, r1, lsl #4

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8006844:	6803      	ldr	r3, [r0, #0]
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8006846:	bf88      	it	hi
 8006848:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 800684c:	b999      	cbnz	r1, 8006876 <HAL_DMA2D_ConfigLayer+0x6a>
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 800684e:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8006850:	4039      	ands	r1, r7
 8006852:	430a      	orrs	r2, r1
 8006854:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006856:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8006858:	6982      	ldr	r2, [r0, #24]
 800685a:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 800685c:	d803      	bhi.n	8006866 <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 800685e:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8006860:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8006864:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8006866:	2301      	movs	r3, #1
 8006868:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 800686c:	2300      	movs	r3, #0
 800686e:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8006872:	4618      	mov	r0, r3

  return HAL_OK;
}
 8006874:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8006876:	69d9      	ldr	r1, [r3, #28]
 8006878:	4039      	ands	r1, r7
 800687a:	430a      	orrs	r2, r1
 800687c:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 800687e:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8006880:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8006882:	6992      	ldr	r2, [r2, #24]
 8006884:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8006886:	bf9c      	itt	ls
 8006888:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 800688c:	621d      	strls	r5, [r3, #32]
 800688e:	e7ea      	b.n	8006866 <HAL_DMA2D_ConfigLayer+0x5a>
 8006890:	00fcfff0 	.word	0x00fcfff0

08006894 <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 8006894:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006898:	4607      	mov	r7, r0
 800689a:	460d      	mov	r5, r1
 800689c:	4614      	mov	r4, r2
 800689e:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 80068a0:	f7ff fd68 	bl	8006374 <HAL_GetTick>
 80068a4:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 80068a6:	683b      	ldr	r3, [r7, #0]
 80068a8:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 80068aa:	07d2      	lsls	r2, r2, #31
 80068ac:	d50a      	bpl.n	80068c4 <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 80068ae:	9906      	ldr	r1, [sp, #24]
 80068b0:	ea44 2406 	orr.w	r4, r4, r6, lsl #8
 80068b4:	ea44 4401 	orr.w	r4, r4, r1, lsl #16
 80068b8:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 80068bc:	66dc      	str	r4, [r3, #108]	; 0x6c

  return HAL_OK;
 80068be:	2000      	movs	r0, #0
}
 80068c0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80068c4:	f7ff fd56 	bl	8006374 <HAL_GetTick>
 80068c8:	eba0 0008 	sub.w	r0, r0, r8
 80068cc:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80068d0:	d9e9      	bls.n	80068a6 <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 80068d2:	2003      	movs	r0, #3
 80068d4:	e7f4      	b.n	80068c0 <DSI_ShortWrite+0x2c>

080068d6 <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80068d6:	7c03      	ldrb	r3, [r0, #16]
 80068d8:	2b01      	cmp	r3, #1
 80068da:	d05d      	beq.n	8006998 <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 80068dc:	6803      	ldr	r3, [r0, #0]
 80068de:	2200      	movs	r2, #0
 80068e0:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 80068e4:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 80068e8:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 80068ea:	bf48      	it	mi
 80068ec:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 80068f0:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 80068f2:	bf42      	ittt	mi
 80068f4:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 80068f8:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 80068fc:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 8006900:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 8006902:	bf42      	ittt	mi
 8006904:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 8006908:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 800690c:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 8006910:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 8006912:	bf42      	ittt	mi
 8006914:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8006918:	f042 0201 	orrmi.w	r2, r2, #1
 800691c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 8006920:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 8006922:	bf42      	ittt	mi
 8006924:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8006928:	f042 0202 	orrmi.w	r2, r2, #2
 800692c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 8006930:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 8006932:	bf42      	ittt	mi
 8006934:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8006938:	f042 020c 	orrmi.w	r2, r2, #12
 800693c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 8006940:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 8006942:	bf42      	ittt	mi
 8006944:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8006948:	f042 0210 	orrmi.w	r2, r2, #16
 800694c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 8006950:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 8006952:	bf42      	ittt	mi
 8006954:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8006958:	f042 0220 	orrmi.w	r2, r2, #32
 800695c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 8006960:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 8006962:	bf42      	ittt	mi
 8006964:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8006968:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 800696c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 8006970:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 8006972:	bf42      	ittt	mi
 8006974:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8006978:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 800697c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 8006980:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 8006982:	bf42      	ittt	mi
 8006984:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8006988:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 800698c:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 8006990:	2300      	movs	r3, #0
 8006992:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8006994:	4618      	mov	r0, r3
 8006996:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8006998:	2002      	movs	r0, #2
}
 800699a:	4770      	bx	lr

0800699c <HAL_DSI_Init>:
{
 800699c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800699e:	460d      	mov	r5, r1
  if (hdsi == NULL)
 80069a0:	4604      	mov	r4, r0
 80069a2:	2800      	cmp	r0, #0
 80069a4:	f000 80a9 	beq.w	8006afa <HAL_DSI_Init+0x15e>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 80069a8:	7c43      	ldrb	r3, [r0, #17]
 80069aa:	b90b      	cbnz	r3, 80069b0 <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 80069ac:	f7fc f81a 	bl	80029e4 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 80069b0:	2303      	movs	r3, #3
 80069b2:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 80069b4:	2300      	movs	r3, #0
 80069b6:	9300      	str	r3, [sp, #0]
 80069b8:	6823      	ldr	r3, [r4, #0]
 80069ba:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 80069be:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 80069c2:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 80069c6:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 80069ca:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 80069ce:	9300      	str	r3, [sp, #0]
 80069d0:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 80069d2:	f7ff fccf 	bl	8006374 <HAL_GetTick>
 80069d6:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 80069d8:	6822      	ldr	r2, [r4, #0]
 80069da:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 80069de:	04d9      	lsls	r1, r3, #19
 80069e0:	d57a      	bpl.n	8006ad8 <HAL_DSI_Init+0x13c>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 80069e2:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 80069e6:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 80069ea:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 80069ee:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 80069f2:	e9d5 0300 	ldrd	r0, r3, [r5]
 80069f6:	02db      	lsls	r3, r3, #11
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 80069f8:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
                            ((PLLInit->PLLODF) << DSI_WRPCR_PLL_ODF_Pos));
 80069fc:	68a8      	ldr	r0, [r5, #8]
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 80069fe:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
                            ((PLLInit->PLLIDF) << DSI_WRPCR_PLL_IDF_Pos) | \
 8006a02:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << DSI_WRPCR_PLL_NDIV_Pos) | \
 8006a06:	430b      	orrs	r3, r1
 8006a08:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 8006a0c:	2300      	movs	r3, #0
 8006a0e:	9301      	str	r3, [sp, #4]
 8006a10:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8006a14:	f043 0301 	orr.w	r3, r3, #1
 8006a18:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 8006a1c:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8006a20:	f003 0301 	and.w	r3, r3, #1
 8006a24:	9301      	str	r3, [sp, #4]
  HAL_Delay(1);
 8006a26:	2001      	movs	r0, #1
  __HAL_DSI_PLL_ENABLE(hdsi);
 8006a28:	9b01      	ldr	r3, [sp, #4]
  HAL_Delay(1);
 8006a2a:	f7ff fca9 	bl	8006380 <HAL_Delay>
  tickstart = HAL_GetTick();
 8006a2e:	f7ff fca1 	bl	8006374 <HAL_GetTick>
 8006a32:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 8006a34:	6823      	ldr	r3, [r4, #0]
 8006a36:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8006a3a:	05d2      	lsls	r2, r2, #23
 8006a3c:	d556      	bpl.n	8006aec <HAL_DSI_Init+0x150>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8006a3e:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8006a42:	6861      	ldr	r1, [r4, #4]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8006a44:	f042 0206 	orr.w	r2, r2, #6
 8006a48:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 8006a4c:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8006a50:	f022 0203 	bic.w	r2, r2, #3
 8006a54:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8006a58:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8006a5c:	430a      	orrs	r2, r1
 8006a5e:	f042 0201 	orr.w	r2, r2, #1
 8006a62:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8006a66:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8006a6a:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8006a6c:	f022 0203 	bic.w	r2, r2, #3
 8006a70:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8006a74:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8006a78:	430a      	orrs	r2, r1
 8006a7a:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8006a7e:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8006a80:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8006a82:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8006a86:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8006a88:	689a      	ldr	r2, [r3, #8]
 8006a8a:	430a      	orrs	r2, r1
 8006a8c:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 8006a8e:	686a      	ldr	r2, [r5, #4]
 8006a90:	491b      	ldr	r1, [pc, #108]	; (8006b00 <HAL_DSI_Init+0x164>)
 8006a92:	2a01      	cmp	r2, #1
 8006a94:	bf38      	it	cc
 8006a96:	2201      	movcc	r2, #1
 8006a98:	434a      	muls	r2, r1
 8006a9a:	68a9      	ldr	r1, [r5, #8]
 8006a9c:	f001 0103 	and.w	r1, r1, #3
 8006aa0:	408a      	lsls	r2, r1
 8006aa2:	6829      	ldr	r1, [r5, #0]
 8006aa4:	f44f 50fa 	mov.w	r0, #8000	; 0x1f40
 8006aa8:	4341      	muls	r1, r0
 8006aaa:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 8006aae:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 8006ab2:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8006ab6:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8006aba:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8006abe:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8006ac0:	430a      	orrs	r2, r1
 8006ac2:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8006ac6:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8006aca:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 8006ace:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 8006ad0:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 8006ad2:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 8006ad4:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 8006ad6:	e007      	b.n	8006ae8 <HAL_DSI_Init+0x14c>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8006ad8:	f7ff fc4c 	bl	8006374 <HAL_GetTick>
 8006adc:	1b80      	subs	r0, r0, r6
 8006ade:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006ae2:	f67f af79 	bls.w	80069d8 <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 8006ae6:	2003      	movs	r0, #3
}
 8006ae8:	b002      	add	sp, #8
 8006aea:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8006aec:	f7ff fc42 	bl	8006374 <HAL_GetTick>
 8006af0:	1b80      	subs	r0, r0, r6
 8006af2:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006af6:	d99d      	bls.n	8006a34 <HAL_DSI_Init+0x98>
 8006af8:	e7f5      	b.n	8006ae6 <HAL_DSI_Init+0x14a>
    return HAL_ERROR;
 8006afa:	2001      	movs	r0, #1
 8006afc:	e7f4      	b.n	8006ae8 <HAL_DSI_Init+0x14c>
 8006afe:	bf00      	nop
 8006b00:	003d0900 	.word	0x003d0900

08006b04 <HAL_DSI_ErrorCallback>:
 8006b04:	4770      	bx	lr

08006b06 <HAL_DSI_IRQHandler>:
{
  uint32_t ErrorStatus0;
  uint32_t ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 8006b06:	6803      	ldr	r3, [r0, #0]
 8006b08:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8006b0c:	07d1      	lsls	r1, r2, #31
{
 8006b0e:	b510      	push	{r4, lr}
 8006b10:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 8006b12:	d508      	bpl.n	8006b26 <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 8006b14:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8006b18:	07d2      	lsls	r2, r2, #31
 8006b1a:	d504      	bpl.n	8006b26 <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 8006b1c:	2201      	movs	r2, #1
 8006b1e:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 8006b22:	f7fa fca1 	bl	8001468 <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 8006b26:	6823      	ldr	r3, [r4, #0]
 8006b28:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8006b2c:	0791      	lsls	r1, r2, #30
 8006b2e:	d509      	bpl.n	8006b44 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 8006b30:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8006b34:	0792      	lsls	r2, r2, #30
 8006b36:	d505      	bpl.n	8006b44 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 8006b38:	2202      	movs	r2, #2
 8006b3a:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 8006b3e:	4620      	mov	r0, r4
 8006b40:	f7fa fcc6 	bl	80014d0 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 8006b44:	69a3      	ldr	r3, [r4, #24]
 8006b46:	2b00      	cmp	r3, #0
 8006b48:	d04e      	beq.n	8006be8 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 8006b4a:	6821      	ldr	r1, [r4, #0]
 8006b4c:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8006b50:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 8006b54:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8006b58:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8006b5a:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 8006b5e:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8006b60:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 8006b62:	b119      	cbz	r1, 8006b6c <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 8006b64:	6961      	ldr	r1, [r4, #20]
 8006b66:	f041 0101 	orr.w	r1, r1, #1
 8006b6a:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 8006b6c:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 8006b70:	bf1e      	ittt	ne
 8006b72:	6962      	ldrne	r2, [r4, #20]
 8006b74:	f042 0202 	orrne.w	r2, r2, #2
 8006b78:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 8006b7a:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 8006b7c:	bf42      	ittt	mi
 8006b7e:	6962      	ldrmi	r2, [r4, #20]
 8006b80:	f042 0204 	orrmi.w	r2, r2, #4
 8006b84:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 8006b86:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 8006b88:	bf42      	ittt	mi
 8006b8a:	6962      	ldrmi	r2, [r4, #20]
 8006b8c:	f042 0208 	orrmi.w	r2, r2, #8
 8006b90:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 8006b92:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 8006b96:	bf1e      	ittt	ne
 8006b98:	6962      	ldrne	r2, [r4, #20]
 8006b9a:	f042 0210 	orrne.w	r2, r2, #16
 8006b9e:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 8006ba0:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 8006ba2:	bf42      	ittt	mi
 8006ba4:	6962      	ldrmi	r2, [r4, #20]
 8006ba6:	f042 0220 	orrmi.w	r2, r2, #32
 8006baa:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 8006bac:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 8006bae:	bf42      	ittt	mi
 8006bb0:	6962      	ldrmi	r2, [r4, #20]
 8006bb2:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 8006bb6:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 8006bb8:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 8006bba:	bf42      	ittt	mi
 8006bbc:	6962      	ldrmi	r2, [r4, #20]
 8006bbe:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8006bc2:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 8006bc4:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 8006bc6:	bf42      	ittt	mi
 8006bc8:	6962      	ldrmi	r2, [r4, #20]
 8006bca:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 8006bce:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 8006bd0:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 8006bd4:	bf1e      	ittt	ne
 8006bd6:	6963      	ldrne	r3, [r4, #20]
 8006bd8:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 8006bdc:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 8006bde:	6963      	ldr	r3, [r4, #20]
 8006be0:	b113      	cbz	r3, 8006be8 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 8006be2:	4620      	mov	r0, r4
 8006be4:	f7ff ff8e 	bl	8006b04 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 8006be8:	bd10      	pop	{r4, pc}

08006bea <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006bea:	7c03      	ldrb	r3, [r0, #16]
 8006bec:	2b01      	cmp	r3, #1
 8006bee:	d00b      	beq.n	8006c08 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 8006bf0:	6803      	ldr	r3, [r0, #0]
 8006bf2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006bf4:	f022 0203 	bic.w	r2, r2, #3
 8006bf8:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 8006bfa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006bfc:	4311      	orrs	r1, r2
 8006bfe:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006c00:	2300      	movs	r3, #0
 8006c02:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8006c04:	4618      	mov	r0, r3
 8006c06:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8006c08:	2002      	movs	r0, #2
}
 8006c0a:	4770      	bx	lr

08006c0c <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 8006c0c:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006c0e:	7c03      	ldrb	r3, [r0, #16]
 8006c10:	2b01      	cmp	r3, #1
 8006c12:	d06a      	beq.n	8006cea <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8006c14:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 8006c16:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8006c18:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8006c1a:	f042 0201 	orr.w	r2, r2, #1
 8006c1e:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 8006c20:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8006c24:	f022 0201 	bic.w	r2, r2, #1
 8006c28:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 8006c2c:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8006c30:	f042 0201 	orr.w	r2, r2, #1
 8006c34:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 8006c38:	68da      	ldr	r2, [r3, #12]
 8006c3a:	f022 0203 	bic.w	r2, r2, #3
 8006c3e:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 8006c40:	68da      	ldr	r2, [r3, #12]
 8006c42:	4322      	orrs	r2, r4
 8006c44:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 8006c46:	695a      	ldr	r2, [r3, #20]
 8006c48:	f022 0207 	bic.w	r2, r2, #7
 8006c4c:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 8006c4e:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 8006c52:	432a      	orrs	r2, r5
 8006c54:	694d      	ldr	r5, [r1, #20]
 8006c56:	695c      	ldr	r4, [r3, #20]
 8006c58:	432a      	orrs	r2, r5
 8006c5a:	4322      	orrs	r2, r4
 8006c5c:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 8006c5e:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 8006c60:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 8006c62:	f022 020f 	bic.w	r2, r2, #15
 8006c66:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 8006c68:	691c      	ldr	r4, [r3, #16]
 8006c6a:	432c      	orrs	r4, r5
 8006c6c:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 8006c6e:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 8006c72:	f024 040e 	bic.w	r4, r4, #14
 8006c76:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8006c7a:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 8006c7e:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 8006c80:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 8006c84:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 8006c88:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8006c8a:	0c12      	lsrs	r2, r2, #16
 8006c8c:	0412      	lsls	r2, r2, #16
 8006c8e:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 8006c90:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 8006c92:	4322      	orrs	r2, r4
 8006c94:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 8006c96:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8006c9a:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 8006c9e:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 8006ca2:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 8006ca6:	432a      	orrs	r2, r5
 8006ca8:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8006caa:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 8006cae:	432a      	orrs	r2, r5
 8006cb0:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8006cb2:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 8006cb4:	432a      	orrs	r2, r5
 8006cb6:	4322      	orrs	r2, r4
 8006cb8:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 8006cbc:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8006cbe:	f022 0201 	bic.w	r2, r2, #1
 8006cc2:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 8006cc4:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 8006cc6:	430a      	orrs	r2, r1
 8006cc8:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 8006cca:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8006cce:	f042 0201 	orr.w	r2, r2, #1
 8006cd2:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 8006cd6:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8006cda:	f042 0202 	orr.w	r2, r2, #2
 8006cde:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006ce2:	2300      	movs	r3, #0
 8006ce4:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8006ce6:	4618      	mov	r0, r3
}
 8006ce8:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8006cea:	2002      	movs	r0, #2
 8006cec:	e7fc      	b.n	8006ce8 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

08006cf0 <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 8006cf0:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006cf2:	7c03      	ldrb	r3, [r0, #16]
 8006cf4:	2b01      	cmp	r3, #1
 8006cf6:	d02a      	beq.n	8006d4e <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 8006cf8:	6802      	ldr	r2, [r0, #0]
 8006cfa:	4b16      	ldr	r3, [pc, #88]	; (8006d54 <HAL_DSI_ConfigCommand+0x64>)
 8006cfc:	6e94      	ldr	r4, [r2, #104]	; 0x68
 8006cfe:	4023      	ands	r3, r4
 8006d00:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8006d02:	e9d1 3500 	ldrd	r3, r5, [r1]
 8006d06:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 8006d08:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8006d0a:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 8006d0c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 8006d0e:	68cd      	ldr	r5, [r1, #12]
 8006d10:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 8006d12:	690d      	ldr	r5, [r1, #16]
 8006d14:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 8006d16:	694d      	ldr	r5, [r1, #20]
 8006d18:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 8006d1a:	698d      	ldr	r5, [r1, #24]
 8006d1c:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 8006d1e:	69cd      	ldr	r5, [r1, #28]
 8006d20:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 8006d22:	6a0d      	ldr	r5, [r1, #32]
 8006d24:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 8006d26:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8006d28:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 8006d2a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8006d2c:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 8006d2e:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8006d30:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 8006d32:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8006d34:	4323      	orrs	r3, r4
 8006d36:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 8006d38:	6e93      	ldr	r3, [r2, #104]	; 0x68
 8006d3a:	f023 0302 	bic.w	r3, r3, #2
 8006d3e:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8006d40:	6e93      	ldr	r3, [r2, #104]	; 0x68
 8006d42:	430b      	orrs	r3, r1
 8006d44:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006d46:	2300      	movs	r3, #0
 8006d48:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8006d4a:	4618      	mov	r0, r3
}
 8006d4c:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8006d4e:	2002      	movs	r0, #2
 8006d50:	e7fc      	b.n	8006d4c <HAL_DSI_ConfigCommand+0x5c>
 8006d52:	bf00      	nop
 8006d54:	fef080ff 	.word	0xfef080ff

08006d58 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006d58:	7c03      	ldrb	r3, [r0, #16]
 8006d5a:	2b01      	cmp	r3, #1
 8006d5c:	d00b      	beq.n	8006d76 <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 8006d5e:	6803      	ldr	r3, [r0, #0]
 8006d60:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006d62:	f022 021f 	bic.w	r2, r2, #31
 8006d66:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 8006d68:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8006d6a:	4311      	orrs	r1, r2
 8006d6c:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006d6e:	2300      	movs	r3, #0
 8006d70:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8006d72:	4618      	mov	r0, r3
 8006d74:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8006d76:	2002      	movs	r0, #2
}
 8006d78:	4770      	bx	lr

08006d7a <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 8006d7a:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006d7c:	7c03      	ldrb	r3, [r0, #16]
 8006d7e:	2b01      	cmp	r3, #1
 8006d80:	d035      	beq.n	8006dee <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 8006d82:	e9d1 2400 	ldrd	r2, r4, [r1]
     Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 8006d86:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 8006d88:	4294      	cmp	r4, r2
 8006d8a:	bf38      	it	cc
 8006d8c:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 8006d8e:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8006d92:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 8006d96:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 8006d9a:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 8006d9e:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8006da2:	4322      	orrs	r2, r4
 8006da4:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 8006da8:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 8006dac:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 8006db0:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 8006db4:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 8006db8:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 8006dba:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 8006dbe:	690d      	ldr	r5, [r1, #16]
 8006dc0:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8006dc4:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 8006dc6:	432a      	orrs	r2, r5
 8006dc8:	4322      	orrs	r2, r4
 8006dca:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 8006dce:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8006dd2:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8006dd6:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 8006dda:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8006dde:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8006de2:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006de6:	2300      	movs	r3, #0
 8006de8:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8006dea:	4618      	mov	r0, r3
}
 8006dec:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8006dee:	2002      	movs	r0, #2
 8006df0:	e7fc      	b.n	8006dec <HAL_DSI_ConfigPhyTimer+0x72>
	...

08006df4 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 8006df4:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006df6:	7c03      	ldrb	r3, [r0, #16]
 8006df8:	2b01      	cmp	r3, #1
 8006dfa:	d05c      	beq.n	8006eb6 <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8006dfc:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8006dfe:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8006e00:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8006e02:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8006e04:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8006e08:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 8006e0a:	689a      	ldr	r2, [r3, #8]
 8006e0c:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 8006e10:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 8006e12:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8006e14:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 8006e16:	b292      	uxth	r2, r2
 8006e18:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8006e1a:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 8006e1c:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8006e20:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 8006e22:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8006e24:	4a25      	ldr	r2, [pc, #148]	; (8006ebc <HAL_DSI_ConfigHostTimeouts+0xc8>)
 8006e26:	4014      	ands	r4, r2
 8006e28:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8006e2a:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8006e2c:	432c      	orrs	r4, r5
 8006e2e:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8006e30:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8006e32:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8006e34:	4014      	ands	r4, r2
 8006e36:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8006e38:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 8006e3a:	432c      	orrs	r4, r5
 8006e3c:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 8006e3e:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 8006e42:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 8006e44:	4014      	ands	r4, r2
 8006e46:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 8006e4a:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 8006e4e:	432c      	orrs	r4, r5
 8006e50:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 8006e54:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 8006e58:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 8006e5a:	4014      	ands	r4, r2
 8006e5c:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 8006e60:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8006e64:	432c      	orrs	r4, r5
 8006e66:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 8006e6a:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8006e6e:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 8006e72:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 8006e76:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8006e7a:	698d      	ldr	r5, [r1, #24]
 8006e7c:	432c      	orrs	r4, r5
 8006e7e:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 8006e82:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 8006e86:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 8006e88:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 8006e8a:	4014      	ands	r4, r2
 8006e8c:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 8006e90:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 8006e94:	432c      	orrs	r4, r5
 8006e96:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 8006e9a:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 8006e9e:	4022      	ands	r2, r4
 8006ea0:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 8006ea4:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 8006ea8:	430a      	orrs	r2, r1
 8006eaa:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006eae:	2300      	movs	r3, #0
 8006eb0:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8006eb2:	4618      	mov	r0, r3
}
 8006eb4:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8006eb6:	2002      	movs	r0, #2
 8006eb8:	e7fc      	b.n	8006eb4 <HAL_DSI_ConfigHostTimeouts+0xc0>
 8006eba:	bf00      	nop
 8006ebc:	ffff0000 	.word	0xffff0000

08006ec0 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006ec0:	7c03      	ldrb	r3, [r0, #16]
 8006ec2:	2b01      	cmp	r3, #1
{
 8006ec4:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 8006ec6:	d01c      	beq.n	8006f02 <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 8006ec8:	6802      	ldr	r2, [r0, #0]
 8006eca:	2300      	movs	r3, #0
 8006ecc:	9300      	str	r3, [sp, #0]
 8006ece:	6851      	ldr	r1, [r2, #4]
 8006ed0:	f041 0101 	orr.w	r1, r1, #1
 8006ed4:	6051      	str	r1, [r2, #4]
 8006ed6:	6851      	ldr	r1, [r2, #4]
 8006ed8:	f001 0101 	and.w	r1, r1, #1
 8006edc:	9100      	str	r1, [sp, #0]
 8006ede:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8006ee0:	9301      	str	r3, [sp, #4]
 8006ee2:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 8006ee6:	f041 0108 	orr.w	r1, r1, #8
 8006eea:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 8006eee:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006ef2:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8006ef4:	f002 0208 	and.w	r2, r2, #8
 8006ef8:	9201      	str	r2, [sp, #4]
 8006efa:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 8006efc:	4618      	mov	r0, r3
}
 8006efe:	b002      	add	sp, #8
 8006f00:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8006f02:	2002      	movs	r0, #2
 8006f04:	e7fb      	b.n	8006efe <HAL_DSI_Start+0x3e>

08006f06 <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8006f06:	7c03      	ldrb	r3, [r0, #16]
 8006f08:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 8006f0a:	bf1f      	itttt	ne
 8006f0c:	6802      	ldrne	r2, [r0, #0]
 8006f0e:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 8006f12:	f043 0304 	orrne.w	r3, r3, #4
 8006f16:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006f1a:	bf1d      	ittte	ne
 8006f1c:	2300      	movne	r3, #0
 8006f1e:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 8006f20:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 8006f22:	2002      	moveq	r0, #2
}
 8006f24:	4770      	bx	lr

08006f26 <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 8006f26:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 8006f28:	7c05      	ldrb	r5, [r0, #16]
 8006f2a:	2d01      	cmp	r5, #1
{
 8006f2c:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 8006f2e:	d009      	beq.n	8006f44 <HAL_DSI_ShortWrite+0x1e>
 8006f30:	2501      	movs	r5, #1
 8006f32:	7405      	strb	r5, [r0, #16]

  status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 8006f34:	9d06      	ldr	r5, [sp, #24]
 8006f36:	9500      	str	r5, [sp, #0]
 8006f38:	f7ff fcac 	bl	8006894 <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8006f3c:	2300      	movs	r3, #0
 8006f3e:	7423      	strb	r3, [r4, #16]

  return status;
}
 8006f40:	b003      	add	sp, #12
 8006f42:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8006f44:	2002      	movs	r0, #2
 8006f46:	e7fb      	b.n	8006f40 <HAL_DSI_ShortWrite+0x1a>

08006f48 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 8006f48:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006f4c:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 8006f4e:	7c03      	ldrb	r3, [r0, #16]
 8006f50:	2b01      	cmp	r3, #1
{
 8006f52:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 8006f56:	4606      	mov	r6, r0
 8006f58:	460f      	mov	r7, r1
 8006f5a:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 8006f5c:	d053      	beq.n	8007006 <HAL_DSI_LongWrite+0xbe>
 8006f5e:	2301      	movs	r3, #1
 8006f60:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 8006f62:	f7ff fa07 	bl	8006374 <HAL_GetTick>
 8006f66:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8006f68:	6831      	ldr	r1, [r6, #0]
 8006f6a:	6f4b      	ldr	r3, [r1, #116]	; 0x74
 8006f6c:	f013 0a01 	ands.w	sl, r3, #1
 8006f70:	d01a      	beq.n	8006fa8 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 8006f72:	2c03      	cmp	r4, #3
 8006f74:	4620      	mov	r0, r4

  for (count = 0U; count < nbBytes; count++)
 8006f76:	f04f 0200 	mov.w	r2, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 8006f7a:	bf28      	it	cs
 8006f7c:	2003      	movcs	r0, #3
  for (count = 0U; count < nbBytes; count++)
 8006f7e:	4282      	cmp	r2, r0
 8006f80:	d11e      	bne.n	8006fc0 <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 8006f82:	1aa3      	subs	r3, r4, r2
  hdsi->Instance->GPDR = fifoword;
 8006f84:	f8c1 9070 	str.w	r9, [r1, #112]	; 0x70
  pparams += nbBytes;
 8006f88:	4442      	add	r2, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 8006f8a:	bb1b      	cbnz	r3, 8006fd4 <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 8006f8c:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 8006f8e:	0222      	lsls	r2, r4, #8
 8006f90:	ea45 1587 	orr.w	r5, r5, r7, lsl #6
 8006f94:	b292      	uxth	r2, r2
 8006f96:	0224      	lsls	r4, r4, #8
 8006f98:	4315      	orrs	r5, r2
 8006f9a:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 8006f9e:	432c      	orrs	r4, r5
 8006fa0:	66cc      	str	r4, [r1, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 8006fa2:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 8006fa4:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 8006fa6:	e009      	b.n	8006fbc <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8006fa8:	f7ff f9e4 	bl	8006374 <HAL_GetTick>
 8006fac:	eba0 000b 	sub.w	r0, r0, fp
 8006fb0:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8006fb4:	d9d8      	bls.n	8006f68 <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 8006fb6:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 8006fba:	2003      	movs	r0, #3
}
 8006fbc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 8006fc0:	f818 3002 	ldrb.w	r3, [r8, r2]
 8006fc4:	3201      	adds	r2, #1
 8006fc6:	ea4f 0cc2 	mov.w	ip, r2, lsl #3
 8006fca:	fa03 f30c 	lsl.w	r3, r3, ip
 8006fce:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 8006fd2:	e7d4      	b.n	8006f7e <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8006fd4:	2b04      	cmp	r3, #4
    fifoword = 0U;
 8006fd6:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8006fda:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 8006fdc:	4660      	mov	r0, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 8006fde:	bf28      	it	cs
 8006fe0:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8006fe4:	f812 8000 	ldrb.w	r8, [r2, r0]
 8006fe8:	ea4f 09c0 	mov.w	r9, r0, lsl #3
    for (count = 0U; count < nbBytes; count++)
 8006fec:	3001      	adds	r0, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8006fee:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 8006ff2:	4586      	cmp	lr, r0
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8006ff4:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 8006ff8:	d1f4      	bne.n	8006fe4 <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 8006ffa:	f8c1 c070 	str.w	ip, [r1, #112]	; 0x70
    uicounter -= nbBytes;
 8006ffe:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 8007002:	4472      	add	r2, lr
 8007004:	e7c1      	b.n	8006f8a <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 8007006:	2002      	movs	r0, #2
 8007008:	e7d8      	b.n	8006fbc <HAL_DSI_LongWrite+0x74>

0800700a <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800700a:	7c03      	ldrb	r3, [r0, #16]
 800700c:	2b01      	cmp	r3, #1
 800700e:	d010      	beq.n	8007032 <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 8007010:	6803      	ldr	r3, [r0, #0]
 8007012:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8007016:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 800701a:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 800701e:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8007022:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 8007026:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800702a:	2300      	movs	r3, #0
 800702c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800702e:	4618      	mov	r0, r3
 8007030:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8007032:	2002      	movs	r0, #2
}
 8007034:	4770      	bx	lr
	...

08007038 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8007038:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800703c:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8007200 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8007040:	4a6d      	ldr	r2, [pc, #436]	; (80071f8 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8007042:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8007044:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8007046:	2401      	movs	r4, #1
 8007048:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800704a:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 800704e:	43ac      	bics	r4, r5
 8007050:	f040 80b9 	bne.w	80071c6 <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8007054:	684d      	ldr	r5, [r1, #4]
 8007056:	f005 0403 	and.w	r4, r5, #3
 800705a:	ea4f 0843 	mov.w	r8, r3, lsl #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800705e:	2603      	movs	r6, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8007060:	1e67      	subs	r7, r4, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8007062:	fa06 f608 	lsl.w	r6, r6, r8
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8007066:	2f01      	cmp	r7, #1
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8007068:	ea6f 0606 	mvn.w	r6, r6
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 800706c:	d834      	bhi.n	80070d8 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 800706e:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8007070:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 8007074:	68cf      	ldr	r7, [r1, #12]
 8007076:	fa07 f708 	lsl.w	r7, r7, r8
 800707a:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800707e:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 8007080:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8007082:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8007086:	f3c5 1700 	ubfx	r7, r5, #4, #1
 800708a:	409f      	lsls	r7, r3
 800708c:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 8007090:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 8007092:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 8007094:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8007098:	688f      	ldr	r7, [r1, #8]
 800709a:	fa07 f708 	lsl.w	r7, r7, r8
 800709e:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80070a2:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 80070a4:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80070a6:	d119      	bne.n	80070dc <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 80070a8:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80070ac:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80070b0:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80070b4:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80070b8:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80070bc:	f04f 0e0f 	mov.w	lr, #15
 80070c0:	fa0e fe0b 	lsl.w	lr, lr, fp
 80070c4:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80070c8:	690f      	ldr	r7, [r1, #16]
 80070ca:	fa07 f70b 	lsl.w	r7, r7, fp
 80070ce:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 80070d2:	f8ca 7020 	str.w	r7, [sl, #32]
 80070d6:	e001      	b.n	80070dc <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80070d8:	2c03      	cmp	r4, #3
 80070da:	d1da      	bne.n	8007092 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 80070dc:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80070de:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80070e2:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80070e4:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80070e6:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 80070ea:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 80070ec:	d06b      	beq.n	80071c6 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80070ee:	f04f 0a00 	mov.w	sl, #0
 80070f2:	f8cd a004 	str.w	sl, [sp, #4]
 80070f6:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80070fa:	4c40      	ldr	r4, [pc, #256]	; (80071fc <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 80070fc:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 8007100:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 8007104:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 8007108:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 800710c:	9601      	str	r6, [sp, #4]
 800710e:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8007110:	f023 0603 	bic.w	r6, r3, #3
 8007114:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 8007118:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800711c:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8007120:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8007124:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8007128:	270f      	movs	r7, #15
 800712a:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800712e:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8007130:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8007134:	d04e      	beq.n	80071d4 <HAL_GPIO_Init+0x19c>
 8007136:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800713a:	42a0      	cmp	r0, r4
 800713c:	d04c      	beq.n	80071d8 <HAL_GPIO_Init+0x1a0>
 800713e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007142:	42a0      	cmp	r0, r4
 8007144:	d04a      	beq.n	80071dc <HAL_GPIO_Init+0x1a4>
 8007146:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800714a:	42a0      	cmp	r0, r4
 800714c:	d048      	beq.n	80071e0 <HAL_GPIO_Init+0x1a8>
 800714e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007152:	42a0      	cmp	r0, r4
 8007154:	d046      	beq.n	80071e4 <HAL_GPIO_Init+0x1ac>
 8007156:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800715a:	42a0      	cmp	r0, r4
 800715c:	d044      	beq.n	80071e8 <HAL_GPIO_Init+0x1b0>
 800715e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007162:	42a0      	cmp	r0, r4
 8007164:	d042      	beq.n	80071ec <HAL_GPIO_Init+0x1b4>
 8007166:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800716a:	42a0      	cmp	r0, r4
 800716c:	d040      	beq.n	80071f0 <HAL_GPIO_Init+0x1b8>
 800716e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8007172:	42a0      	cmp	r0, r4
 8007174:	d03e      	beq.n	80071f4 <HAL_GPIO_Init+0x1bc>
 8007176:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800717a:	42a0      	cmp	r0, r4
 800717c:	bf0c      	ite	eq
 800717e:	2409      	moveq	r4, #9
 8007180:	240a      	movne	r4, #10
 8007182:	fa04 f40e 	lsl.w	r4, r4, lr
 8007186:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 8007188:	60b4      	str	r4, [r6, #8]
        temp = EXTI->RTSR;
 800718a:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
 800718c:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 8007190:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 8007192:	bf54      	ite	pl
 8007194:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 8007196:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 800719a:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 800719c:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 800719e:	02af      	lsls	r7, r5, #10
        temp &= ~((uint32_t)iocurrent);
 80071a0:	bf54      	ite	pl
 80071a2:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80071a4:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 80071a8:	60d4      	str	r4, [r2, #12]

        temp = EXTI->EMR;
 80071aa:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80071ac:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 80071ae:	bf54      	ite	pl
 80071b0:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80071b2:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 80071b6:	6054      	str	r4, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80071b8:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80071ba:	03ed      	lsls	r5, r5, #15
        temp &= ~((uint32_t)iocurrent);
 80071bc:	bf54      	ite	pl
 80071be:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80071c0:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 80071c4:	6014      	str	r4, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80071c6:	3301      	adds	r3, #1
 80071c8:	2b10      	cmp	r3, #16
 80071ca:	f47f af3b 	bne.w	8007044 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 80071ce:	b003      	add	sp, #12
 80071d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80071d4:	4654      	mov	r4, sl
 80071d6:	e7d4      	b.n	8007182 <HAL_GPIO_Init+0x14a>
 80071d8:	2401      	movs	r4, #1
 80071da:	e7d2      	b.n	8007182 <HAL_GPIO_Init+0x14a>
 80071dc:	2402      	movs	r4, #2
 80071de:	e7d0      	b.n	8007182 <HAL_GPIO_Init+0x14a>
 80071e0:	2403      	movs	r4, #3
 80071e2:	e7ce      	b.n	8007182 <HAL_GPIO_Init+0x14a>
 80071e4:	2404      	movs	r4, #4
 80071e6:	e7cc      	b.n	8007182 <HAL_GPIO_Init+0x14a>
 80071e8:	2405      	movs	r4, #5
 80071ea:	e7ca      	b.n	8007182 <HAL_GPIO_Init+0x14a>
 80071ec:	2406      	movs	r4, #6
 80071ee:	e7c8      	b.n	8007182 <HAL_GPIO_Init+0x14a>
 80071f0:	2407      	movs	r4, #7
 80071f2:	e7c6      	b.n	8007182 <HAL_GPIO_Init+0x14a>
 80071f4:	2408      	movs	r4, #8
 80071f6:	e7c4      	b.n	8007182 <HAL_GPIO_Init+0x14a>
 80071f8:	40013c00 	.word	0x40013c00
 80071fc:	40020000 	.word	0x40020000
 8007200:	40023800 	.word	0x40023800

08007204 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8007204:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8007208:	4c4a      	ldr	r4, [pc, #296]	; (8007334 <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800720a:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800733c <HAL_GPIO_DeInit+0x138>
 800720e:	f8df a130 	ldr.w	sl, [pc, #304]	; 8007340 <HAL_GPIO_DeInit+0x13c>
 8007212:	f8df b130 	ldr.w	fp, [pc, #304]	; 8007344 <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8007216:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 8007218:	2301      	movs	r3, #1
 800721a:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 800721e:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 8007222:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 8007226:	d16e      	bne.n	8007306 <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 8007228:	f022 0503 	bic.w	r5, r2, #3
 800722c:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8007230:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8007234:	4b40      	ldr	r3, [pc, #256]	; (8007338 <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 8007236:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800723a:	f002 0c03 	and.w	ip, r2, #3
 800723e:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8007242:	260f      	movs	r6, #15
 8007244:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8007248:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800724a:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800724e:	d05f      	beq.n	8007310 <HAL_GPIO_DeInit+0x10c>
 8007250:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8007254:	4298      	cmp	r0, r3
 8007256:	d05d      	beq.n	8007314 <HAL_GPIO_DeInit+0x110>
 8007258:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800725c:	4298      	cmp	r0, r3
 800725e:	d05b      	beq.n	8007318 <HAL_GPIO_DeInit+0x114>
 8007260:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8007264:	4298      	cmp	r0, r3
 8007266:	d059      	beq.n	800731c <HAL_GPIO_DeInit+0x118>
 8007268:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800726c:	4298      	cmp	r0, r3
 800726e:	d057      	beq.n	8007320 <HAL_GPIO_DeInit+0x11c>
 8007270:	4548      	cmp	r0, r9
 8007272:	d057      	beq.n	8007324 <HAL_GPIO_DeInit+0x120>
 8007274:	4550      	cmp	r0, sl
 8007276:	d057      	beq.n	8007328 <HAL_GPIO_DeInit+0x124>
 8007278:	4558      	cmp	r0, fp
 800727a:	d057      	beq.n	800732c <HAL_GPIO_DeInit+0x128>
 800727c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8007280:	4298      	cmp	r0, r3
 8007282:	d055      	beq.n	8007330 <HAL_GPIO_DeInit+0x12c>
 8007284:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8007288:	4298      	cmp	r0, r3
 800728a:	bf0c      	ite	eq
 800728c:	2309      	moveq	r3, #9
 800728e:	230a      	movne	r3, #10
 8007290:	fa03 f30c 	lsl.w	r3, r3, ip
 8007294:	4543      	cmp	r3, r8
 8007296:	d113      	bne.n	80072c0 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8007298:	6823      	ldr	r3, [r4, #0]
 800729a:	ea23 0307 	bic.w	r3, r3, r7
 800729e:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 80072a0:	6863      	ldr	r3, [r4, #4]
 80072a2:	ea23 0307 	bic.w	r3, r3, r7
 80072a6:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 80072a8:	68e3      	ldr	r3, [r4, #12]
 80072aa:	ea23 0307 	bic.w	r3, r3, r7
 80072ae:	60e3      	str	r3, [r4, #12]
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 80072b0:	68a3      	ldr	r3, [r4, #8]
 80072b2:	ea23 0307 	bic.w	r3, r3, r7
 80072b6:	60a3      	str	r3, [r4, #8]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 80072b8:	68ab      	ldr	r3, [r5, #8]
 80072ba:	ea23 0306 	bic.w	r3, r3, r6
 80072be:	60ab      	str	r3, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80072c0:	6805      	ldr	r5, [r0, #0]
 80072c2:	2603      	movs	r6, #3
 80072c4:	0053      	lsls	r3, r2, #1
 80072c6:	fa06 f303 	lsl.w	r3, r6, r3
 80072ca:	ea25 0503 	bic.w	r5, r5, r3
 80072ce:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80072d0:	fa22 f506 	lsr.w	r5, r2, r6
 80072d4:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 80072d8:	f002 0c07 	and.w	ip, r2, #7
 80072dc:	6a2e      	ldr	r6, [r5, #32]
 80072de:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 80072e2:	270f      	movs	r7, #15
 80072e4:	fa07 f70c 	lsl.w	r7, r7, ip
 80072e8:	ea26 0707 	bic.w	r7, r6, r7
 80072ec:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80072ee:	68c5      	ldr	r5, [r0, #12]
 80072f0:	ea25 0503 	bic.w	r5, r5, r3
 80072f4:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 80072f6:	6845      	ldr	r5, [r0, #4]
 80072f8:	ea25 050e 	bic.w	r5, r5, lr
 80072fc:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 80072fe:	6885      	ldr	r5, [r0, #8]
 8007300:	ea25 0303 	bic.w	r3, r5, r3
 8007304:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8007306:	3201      	adds	r2, #1
 8007308:	2a10      	cmp	r2, #16
 800730a:	d185      	bne.n	8007218 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 800730c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8007310:	2300      	movs	r3, #0
 8007312:	e7bd      	b.n	8007290 <HAL_GPIO_DeInit+0x8c>
 8007314:	2301      	movs	r3, #1
 8007316:	e7bb      	b.n	8007290 <HAL_GPIO_DeInit+0x8c>
 8007318:	2302      	movs	r3, #2
 800731a:	e7b9      	b.n	8007290 <HAL_GPIO_DeInit+0x8c>
 800731c:	2303      	movs	r3, #3
 800731e:	e7b7      	b.n	8007290 <HAL_GPIO_DeInit+0x8c>
 8007320:	2304      	movs	r3, #4
 8007322:	e7b5      	b.n	8007290 <HAL_GPIO_DeInit+0x8c>
 8007324:	2305      	movs	r3, #5
 8007326:	e7b3      	b.n	8007290 <HAL_GPIO_DeInit+0x8c>
 8007328:	2306      	movs	r3, #6
 800732a:	e7b1      	b.n	8007290 <HAL_GPIO_DeInit+0x8c>
 800732c:	2307      	movs	r3, #7
 800732e:	e7af      	b.n	8007290 <HAL_GPIO_DeInit+0x8c>
 8007330:	2308      	movs	r3, #8
 8007332:	e7ad      	b.n	8007290 <HAL_GPIO_DeInit+0x8c>
 8007334:	40013c00 	.word	0x40013c00
 8007338:	40020000 	.word	0x40020000
 800733c:	40021400 	.word	0x40021400
 8007340:	40021800 	.word	0x40021800
 8007344:	40021c00 	.word	0x40021c00

08007348 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8007348:	6903      	ldr	r3, [r0, #16]
 800734a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800734c:	bf14      	ite	ne
 800734e:	2001      	movne	r0, #1
 8007350:	2000      	moveq	r0, #0
 8007352:	4770      	bx	lr

08007354 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8007354:	b10a      	cbz	r2, 800735a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8007356:	6181      	str	r1, [r0, #24]
  }
}
 8007358:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800735a:	0409      	lsls	r1, r1, #16
 800735c:	e7fb      	b.n	8007356 <HAL_GPIO_WritePin+0x2>

0800735e <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800735e:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8007360:	ea01 0203 	and.w	r2, r1, r3
 8007364:	ea21 0103 	bic.w	r1, r1, r3
 8007368:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800736c:	6181      	str	r1, [r0, #24]
}
 800736e:	4770      	bx	lr

08007370 <HAL_GPIO_EXTI_IRQHandler>:
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8007370:	4a04      	ldr	r2, [pc, #16]	; (8007384 <HAL_GPIO_EXTI_IRQHandler+0x14>)
 8007372:	6951      	ldr	r1, [r2, #20]
 8007374:	4201      	tst	r1, r0
{
 8007376:	b508      	push	{r3, lr}
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8007378:	d002      	beq.n	8007380 <HAL_GPIO_EXTI_IRQHandler+0x10>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800737a:	6150      	str	r0, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 800737c:	f7fb f894 	bl	80024a8 <HAL_GPIO_EXTI_Callback>
  }
}
 8007380:	bd08      	pop	{r3, pc}
 8007382:	bf00      	nop
 8007384:	40013c00 	.word	0x40013c00

08007388 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007388:	6801      	ldr	r1, [r0, #0]
 800738a:	694b      	ldr	r3, [r1, #20]
 800738c:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8007390:	f04f 0200 	mov.w	r2, #0
 8007394:	d010      	beq.n	80073b8 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8007396:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800739a:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 800739c:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 800739e:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80073a0:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80073a4:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80073a8:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80073aa:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80073ae:	f043 0304 	orr.w	r3, r3, #4
 80073b2:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 80073b4:	2001      	movs	r0, #1
 80073b6:	4770      	bx	lr
  }
  return HAL_OK;
 80073b8:	4618      	mov	r0, r3
}
 80073ba:	4770      	bx	lr

080073bc <I2C_WaitOnFlagUntilTimeout>:
{
 80073bc:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 80073c0:	4606      	mov	r6, r0
 80073c2:	460f      	mov	r7, r1
 80073c4:	4691      	mov	r9, r2
 80073c6:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80073c8:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80073cc:	6833      	ldr	r3, [r6, #0]
 80073ce:	f1ba 0f01 	cmp.w	sl, #1
 80073d2:	bf0c      	ite	eq
 80073d4:	695c      	ldreq	r4, [r3, #20]
 80073d6:	699c      	ldrne	r4, [r3, #24]
 80073d8:	ea27 0404 	bic.w	r4, r7, r4
 80073dc:	b2a4      	uxth	r4, r4
 80073de:	fab4 f484 	clz	r4, r4
 80073e2:	0964      	lsrs	r4, r4, #5
 80073e4:	45a1      	cmp	r9, r4
 80073e6:	d001      	beq.n	80073ec <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 80073e8:	2000      	movs	r0, #0
 80073ea:	e017      	b.n	800741c <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 80073ec:	1c6a      	adds	r2, r5, #1
 80073ee:	d0ee      	beq.n	80073ce <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80073f0:	f7fe ffc0 	bl	8006374 <HAL_GetTick>
 80073f4:	9b08      	ldr	r3, [sp, #32]
 80073f6:	1ac0      	subs	r0, r0, r3
 80073f8:	42a8      	cmp	r0, r5
 80073fa:	d801      	bhi.n	8007400 <I2C_WaitOnFlagUntilTimeout+0x44>
 80073fc:	2d00      	cmp	r5, #0
 80073fe:	d1e5      	bne.n	80073cc <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8007400:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8007402:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 8007404:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 8007406:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 800740a:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800740e:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8007410:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8007414:	f042 0220 	orr.w	r2, r2, #32
 8007418:	6432      	str	r2, [r6, #64]	; 0x40
        return HAL_ERROR;
 800741a:	2001      	movs	r0, #1
}
 800741c:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08007420 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 8007420:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8007424:	4604      	mov	r4, r0
 8007426:	460f      	mov	r7, r1
 8007428:	4616      	mov	r6, r2
 800742a:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 800742c:	6825      	ldr	r5, [r4, #0]
 800742e:	6968      	ldr	r0, [r5, #20]
 8007430:	ea27 0000 	bic.w	r0, r7, r0
 8007434:	b280      	uxth	r0, r0
 8007436:	b1b8      	cbz	r0, 8007468 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8007438:	696b      	ldr	r3, [r5, #20]
 800743a:	055a      	lsls	r2, r3, #21
 800743c:	d516      	bpl.n	800746c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 800743e:	682b      	ldr	r3, [r5, #0]
 8007440:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8007444:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8007446:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 800744a:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 800744c:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 800744e:	2300      	movs	r3, #0
 8007450:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8007452:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007456:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 800745a:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800745c:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007460:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8007462:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 8007466:	2001      	movs	r0, #1
}
 8007468:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 800746c:	1c73      	adds	r3, r6, #1
 800746e:	d0de      	beq.n	800742e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007470:	f7fe ff80 	bl	8006374 <HAL_GetTick>
 8007474:	eba0 0008 	sub.w	r0, r0, r8
 8007478:	42b0      	cmp	r0, r6
 800747a:	d801      	bhi.n	8007480 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 800747c:	2e00      	cmp	r6, #0
 800747e:	d1d5      	bne.n	800742c <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8007480:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8007482:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8007484:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8007486:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800748a:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800748e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007490:	f042 0220 	orr.w	r2, r2, #32
 8007494:	e7e4      	b.n	8007460 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

08007496 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8007496:	b570      	push	{r4, r5, r6, lr}
 8007498:	4604      	mov	r4, r0
 800749a:	460d      	mov	r5, r1
 800749c:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800749e:	6821      	ldr	r1, [r4, #0]
 80074a0:	694b      	ldr	r3, [r1, #20]
 80074a2:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 80074a6:	d001      	beq.n	80074ac <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 80074a8:	2000      	movs	r0, #0
 80074aa:	e010      	b.n	80074ce <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 80074ac:	694a      	ldr	r2, [r1, #20]
 80074ae:	06d2      	lsls	r2, r2, #27
 80074b0:	d50e      	bpl.n	80074d0 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80074b2:	f06f 0210 	mvn.w	r2, #16
 80074b6:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80074b8:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80074ba:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80074bc:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80074c0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 80074c4:	6c22      	ldr	r2, [r4, #64]	; 0x40
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80074c6:	6422      	str	r2, [r4, #64]	; 0x40
      __HAL_UNLOCK(hi2c);
 80074c8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
      return HAL_ERROR;
 80074cc:	2001      	movs	r0, #1
}
 80074ce:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80074d0:	f7fe ff50 	bl	8006374 <HAL_GetTick>
 80074d4:	1b80      	subs	r0, r0, r6
 80074d6:	42a8      	cmp	r0, r5
 80074d8:	d801      	bhi.n	80074de <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 80074da:	2d00      	cmp	r5, #0
 80074dc:	d1df      	bne.n	800749e <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
      hi2c->PreviousState       = I2C_STATE_NONE;
 80074de:	2300      	movs	r3, #0
      hi2c->State               = HAL_I2C_STATE_READY;
 80074e0:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80074e2:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80074e4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80074e8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80074ec:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80074ee:	f042 0220 	orr.w	r2, r2, #32
 80074f2:	e7e8      	b.n	80074c6 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

080074f4 <I2C_WaitOnBTFFlagUntilTimeout>:
{
 80074f4:	b570      	push	{r4, r5, r6, lr}
 80074f6:	4604      	mov	r4, r0
 80074f8:	460d      	mov	r5, r1
 80074fa:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80074fc:	6823      	ldr	r3, [r4, #0]
 80074fe:	695b      	ldr	r3, [r3, #20]
 8007500:	075b      	lsls	r3, r3, #29
 8007502:	d501      	bpl.n	8007508 <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 8007504:	2000      	movs	r0, #0
}
 8007506:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8007508:	4620      	mov	r0, r4
 800750a:	f7ff ff3d 	bl	8007388 <I2C_IsAcknowledgeFailed>
 800750e:	b9a8      	cbnz	r0, 800753c <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8007510:	1c6a      	adds	r2, r5, #1
 8007512:	d0f3      	beq.n	80074fc <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007514:	f7fe ff2e 	bl	8006374 <HAL_GetTick>
 8007518:	1b80      	subs	r0, r0, r6
 800751a:	42a8      	cmp	r0, r5
 800751c:	d801      	bhi.n	8007522 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 800751e:	2d00      	cmp	r5, #0
 8007520:	d1ec      	bne.n	80074fc <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8007522:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8007524:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8007526:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8007528:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800752c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007530:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8007532:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007536:	f042 0220 	orr.w	r2, r2, #32
 800753a:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 800753c:	2001      	movs	r0, #1
 800753e:	e7e2      	b.n	8007506 <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08007540 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8007540:	b570      	push	{r4, r5, r6, lr}
 8007542:	4604      	mov	r4, r0
 8007544:	460d      	mov	r5, r1
 8007546:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8007548:	6823      	ldr	r3, [r4, #0]
 800754a:	695b      	ldr	r3, [r3, #20]
 800754c:	061b      	lsls	r3, r3, #24
 800754e:	d501      	bpl.n	8007554 <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8007550:	2000      	movs	r0, #0
}
 8007552:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8007554:	4620      	mov	r0, r4
 8007556:	f7ff ff17 	bl	8007388 <I2C_IsAcknowledgeFailed>
 800755a:	b9a8      	cbnz	r0, 8007588 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 800755c:	1c6a      	adds	r2, r5, #1
 800755e:	d0f3      	beq.n	8007548 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8007560:	f7fe ff08 	bl	8006374 <HAL_GetTick>
 8007564:	1b80      	subs	r0, r0, r6
 8007566:	42a8      	cmp	r0, r5
 8007568:	d801      	bhi.n	800756e <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 800756a:	2d00      	cmp	r5, #0
 800756c:	d1ec      	bne.n	8007548 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState       = I2C_STATE_NONE;
 800756e:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8007570:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8007572:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 8007574:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 8007578:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 800757c:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 800757e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8007582:	f042 0220 	orr.w	r2, r2, #32
 8007586:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8007588:	2001      	movs	r0, #1
 800758a:	e7e2      	b.n	8007552 <I2C_WaitOnTXEFlagUntilTimeout+0x12>

0800758c <I2C_RequestMemoryWrite>:
{
 800758c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007590:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007592:	6802      	ldr	r2, [r0, #0]
{
 8007594:	b085      	sub	sp, #20
 8007596:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 800759a:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800759c:	6813      	ldr	r3, [r2, #0]
 800759e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80075a2:	6013      	str	r3, [r2, #0]
{
 80075a4:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80075a6:	463b      	mov	r3, r7
 80075a8:	f8cd 8000 	str.w	r8, [sp]
 80075ac:	2200      	movs	r2, #0
 80075ae:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80075b2:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80075b4:	f7ff ff02 	bl	80073bc <I2C_WaitOnFlagUntilTimeout>
 80075b8:	6823      	ldr	r3, [r4, #0]
 80075ba:	b138      	cbz	r0, 80075cc <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80075bc:	681b      	ldr	r3, [r3, #0]
 80075be:	05db      	lsls	r3, r3, #23
 80075c0:	d502      	bpl.n	80075c8 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80075c2:	f44f 7300 	mov.w	r3, #512	; 0x200
 80075c6:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80075c8:	2003      	movs	r0, #3
 80075ca:	e00a      	b.n	80075e2 <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80075cc:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 80075d0:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80075d2:	4919      	ldr	r1, [pc, #100]	; (8007638 <I2C_RequestMemoryWrite+0xac>)
 80075d4:	4643      	mov	r3, r8
 80075d6:	463a      	mov	r2, r7
 80075d8:	4620      	mov	r0, r4
 80075da:	f7ff ff21 	bl	8007420 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80075de:	b118      	cbz	r0, 80075e8 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 80075e0:	2001      	movs	r0, #1
}
 80075e2:	b005      	add	sp, #20
 80075e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80075e8:	6823      	ldr	r3, [r4, #0]
 80075ea:	9003      	str	r0, [sp, #12]
 80075ec:	695a      	ldr	r2, [r3, #20]
 80075ee:	9203      	str	r2, [sp, #12]
 80075f0:	699b      	ldr	r3, [r3, #24]
 80075f2:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80075f4:	4642      	mov	r2, r8
 80075f6:	4639      	mov	r1, r7
 80075f8:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80075fa:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80075fc:	f7ff ffa0 	bl	8007540 <I2C_WaitOnTXEFlagUntilTimeout>
 8007600:	b140      	cbz	r0, 8007614 <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8007602:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007604:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007606:	bf01      	itttt	eq
 8007608:	6822      	ldreq	r2, [r4, #0]
 800760a:	6813      	ldreq	r3, [r2, #0]
 800760c:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8007610:	6013      	streq	r3, [r2, #0]
 8007612:	e7e5      	b.n	80075e0 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8007614:	f1b9 0f01 	cmp.w	r9, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007618:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 800761a:	d102      	bne.n	8007622 <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800761c:	b2ed      	uxtb	r5, r5
 800761e:	611d      	str	r5, [r3, #16]
 8007620:	e7df      	b.n	80075e2 <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8007622:	0a2a      	lsrs	r2, r5, #8
 8007624:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007626:	4639      	mov	r1, r7
 8007628:	4642      	mov	r2, r8
 800762a:	4620      	mov	r0, r4
 800762c:	f7ff ff88 	bl	8007540 <I2C_WaitOnTXEFlagUntilTimeout>
 8007630:	2800      	cmp	r0, #0
 8007632:	d1e6      	bne.n	8007602 <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8007634:	6823      	ldr	r3, [r4, #0]
 8007636:	e7f1      	b.n	800761c <I2C_RequestMemoryWrite+0x90>
 8007638:	00010002 	.word	0x00010002

0800763c <I2C_RequestMemoryRead>:
{
 800763c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8007640:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007642:	6803      	ldr	r3, [r0, #0]
{
 8007644:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007646:	681a      	ldr	r2, [r3, #0]
 8007648:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800764c:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800764e:	681a      	ldr	r2, [r3, #0]
{
 8007650:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8007654:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007658:	601a      	str	r2, [r3, #0]
{
 800765a:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800765c:	463b      	mov	r3, r7
 800765e:	f8cd 8000 	str.w	r8, [sp]
 8007662:	2200      	movs	r2, #0
 8007664:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8007668:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 800766a:	f7ff fea7 	bl	80073bc <I2C_WaitOnFlagUntilTimeout>
 800766e:	6823      	ldr	r3, [r4, #0]
 8007670:	b148      	cbz	r0, 8007686 <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8007672:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8007674:	05db      	lsls	r3, r3, #23
 8007676:	d502      	bpl.n	800767e <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8007678:	f44f 7300 	mov.w	r3, #512	; 0x200
 800767c:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 800767e:	2003      	movs	r0, #3
}
 8007680:	b004      	add	sp, #16
 8007682:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8007686:	fa5f f986 	uxtb.w	r9, r6
 800768a:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 800768e:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8007690:	492a      	ldr	r1, [pc, #168]	; (800773c <I2C_RequestMemoryRead+0x100>)
 8007692:	4643      	mov	r3, r8
 8007694:	463a      	mov	r2, r7
 8007696:	4620      	mov	r0, r4
 8007698:	f7ff fec2 	bl	8007420 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 800769c:	b108      	cbz	r0, 80076a2 <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 800769e:	2001      	movs	r0, #1
 80076a0:	e7ee      	b.n	8007680 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80076a2:	6823      	ldr	r3, [r4, #0]
 80076a4:	9003      	str	r0, [sp, #12]
 80076a6:	695a      	ldr	r2, [r3, #20]
 80076a8:	9203      	str	r2, [sp, #12]
 80076aa:	699b      	ldr	r3, [r3, #24]
 80076ac:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80076ae:	4642      	mov	r2, r8
 80076b0:	4639      	mov	r1, r7
 80076b2:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80076b4:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80076b6:	f7ff ff43 	bl	8007540 <I2C_WaitOnTXEFlagUntilTimeout>
 80076ba:	b140      	cbz	r0, 80076ce <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80076bc:	6c23      	ldr	r3, [r4, #64]	; 0x40
 80076be:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80076c0:	bf01      	itttt	eq
 80076c2:	6822      	ldreq	r2, [r4, #0]
 80076c4:	6813      	ldreq	r3, [r2, #0]
 80076c6:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 80076ca:	6013      	streq	r3, [r2, #0]
 80076cc:	e7e7      	b.n	800769e <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80076ce:	f1ba 0f01 	cmp.w	sl, #1
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80076d2:	6823      	ldr	r3, [r4, #0]
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 80076d4:	d11a      	bne.n	800770c <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 80076d6:	b2ed      	uxtb	r5, r5
 80076d8:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80076da:	4642      	mov	r2, r8
 80076dc:	4639      	mov	r1, r7
 80076de:	4620      	mov	r0, r4
 80076e0:	f7ff ff2e 	bl	8007540 <I2C_WaitOnTXEFlagUntilTimeout>
 80076e4:	2800      	cmp	r0, #0
 80076e6:	d1e9      	bne.n	80076bc <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80076e8:	6822      	ldr	r2, [r4, #0]
 80076ea:	6813      	ldr	r3, [r2, #0]
 80076ec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80076f0:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80076f2:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 80076f6:	4602      	mov	r2, r0
 80076f8:	f8cd 8000 	str.w	r8, [sp]
 80076fc:	463b      	mov	r3, r7
 80076fe:	4620      	mov	r0, r4
 8007700:	f7ff fe5c 	bl	80073bc <I2C_WaitOnFlagUntilTimeout>
 8007704:	6822      	ldr	r2, [r4, #0]
 8007706:	b160      	cbz	r0, 8007722 <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8007708:	6813      	ldr	r3, [r2, #0]
 800770a:	e7b3      	b.n	8007674 <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 800770c:	0a2a      	lsrs	r2, r5, #8
 800770e:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8007710:	4639      	mov	r1, r7
 8007712:	4642      	mov	r2, r8
 8007714:	4620      	mov	r0, r4
 8007716:	f7ff ff13 	bl	8007540 <I2C_WaitOnTXEFlagUntilTimeout>
 800771a:	2800      	cmp	r0, #0
 800771c:	d1ce      	bne.n	80076bc <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 800771e:	6823      	ldr	r3, [r4, #0]
 8007720:	e7d9      	b.n	80076d6 <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8007722:	f049 0301 	orr.w	r3, r9, #1
 8007726:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8007728:	4904      	ldr	r1, [pc, #16]	; (800773c <I2C_RequestMemoryRead+0x100>)
 800772a:	4643      	mov	r3, r8
 800772c:	463a      	mov	r2, r7
 800772e:	4620      	mov	r0, r4
 8007730:	f7ff fe76 	bl	8007420 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8007734:	3800      	subs	r0, #0
 8007736:	bf18      	it	ne
 8007738:	2001      	movne	r0, #1
 800773a:	e7a1      	b.n	8007680 <I2C_RequestMemoryRead+0x44>
 800773c:	00010002 	.word	0x00010002

08007740 <HAL_I2C_Init>:
{
 8007740:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8007742:	4604      	mov	r4, r0
 8007744:	b908      	cbnz	r0, 800774a <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8007746:	2001      	movs	r0, #1
}
 8007748:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 800774a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800774e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007752:	b91b      	cbnz	r3, 800775c <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8007754:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8007758:	f7fb f980 	bl	8002a5c <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 800775c:	2324      	movs	r3, #36	; 0x24
 800775e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8007762:	6823      	ldr	r3, [r4, #0]
 8007764:	681a      	ldr	r2, [r3, #0]
 8007766:	f022 0201 	bic.w	r2, r2, #1
 800776a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 800776c:	681a      	ldr	r2, [r3, #0]
 800776e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8007772:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8007774:	681a      	ldr	r2, [r3, #0]
 8007776:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800777a:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 800777c:	f001 f814 	bl	80087a8 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8007780:	4b3f      	ldr	r3, [pc, #252]	; (8007880 <HAL_I2C_Init+0x140>)
 8007782:	6865      	ldr	r5, [r4, #4]
 8007784:	429d      	cmp	r5, r3
 8007786:	bf94      	ite	ls
 8007788:	4b3e      	ldrls	r3, [pc, #248]	; (8007884 <HAL_I2C_Init+0x144>)
 800778a:	4b3f      	ldrhi	r3, [pc, #252]	; (8007888 <HAL_I2C_Init+0x148>)
 800778c:	4298      	cmp	r0, r3
 800778e:	bf8c      	ite	hi
 8007790:	2300      	movhi	r3, #0
 8007792:	2301      	movls	r3, #1
 8007794:	2b00      	cmp	r3, #0
 8007796:	d1d6      	bne.n	8007746 <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8007798:	6822      	ldr	r2, [r4, #0]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 800779a:	4e39      	ldr	r6, [pc, #228]	; (8007880 <HAL_I2C_Init+0x140>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800779c:	6853      	ldr	r3, [r2, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 800779e:	493b      	ldr	r1, [pc, #236]	; (800788c <HAL_I2C_Init+0x14c>)
 80077a0:	fbb0 f1f1 	udiv	r1, r0, r1
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80077a4:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80077a8:	430b      	orrs	r3, r1
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80077aa:	42b5      	cmp	r5, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 80077ac:	6053      	str	r3, [r2, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 80077ae:	bf88      	it	hi
 80077b0:	f44f 7696 	movhi.w	r6, #300	; 0x12c
 80077b4:	6a13      	ldr	r3, [r2, #32]
 80077b6:	bf88      	it	hi
 80077b8:	4371      	mulhi	r1, r6
 80077ba:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 80077be:	bf84      	itt	hi
 80077c0:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 80077c4:	fbb1 f1f6 	udivhi	r1, r1, r6
 80077c8:	3101      	adds	r1, #1
 80077ca:	4319      	orrs	r1, r3
 80077cc:	6211      	str	r1, [r2, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 80077ce:	69d1      	ldr	r1, [r2, #28]
 80077d0:	1e43      	subs	r3, r0, #1
 80077d2:	482b      	ldr	r0, [pc, #172]	; (8007880 <HAL_I2C_Init+0x140>)
 80077d4:	f421 414f 	bic.w	r1, r1, #52992	; 0xcf00
 80077d8:	4285      	cmp	r5, r0
 80077da:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 80077de:	d832      	bhi.n	8007846 <HAL_I2C_Init+0x106>
 80077e0:	006d      	lsls	r5, r5, #1
 80077e2:	f640 70fc 	movw	r0, #4092	; 0xffc
 80077e6:	fbb3 f3f5 	udiv	r3, r3, r5
 80077ea:	3301      	adds	r3, #1
 80077ec:	4203      	tst	r3, r0
 80077ee:	d042      	beq.n	8007876 <HAL_I2C_Init+0x136>
 80077f0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80077f4:	430b      	orrs	r3, r1
 80077f6:	61d3      	str	r3, [r2, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 80077f8:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 80077fc:	6811      	ldr	r1, [r2, #0]
 80077fe:	4303      	orrs	r3, r0
 8007800:	f021 01c0 	bic.w	r1, r1, #192	; 0xc0
 8007804:	430b      	orrs	r3, r1
 8007806:	6013      	str	r3, [r2, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8007808:	6891      	ldr	r1, [r2, #8]
 800780a:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 800780e:	f421 4103 	bic.w	r1, r1, #33536	; 0x8300
 8007812:	4303      	orrs	r3, r0
 8007814:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8007818:	430b      	orrs	r3, r1
 800781a:	6093      	str	r3, [r2, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 800781c:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8007820:	68d1      	ldr	r1, [r2, #12]
 8007822:	4303      	orrs	r3, r0
 8007824:	f021 01ff 	bic.w	r1, r1, #255	; 0xff
 8007828:	430b      	orrs	r3, r1
 800782a:	60d3      	str	r3, [r2, #12]
  __HAL_I2C_ENABLE(hi2c);
 800782c:	6813      	ldr	r3, [r2, #0]
 800782e:	f043 0301 	orr.w	r3, r3, #1
 8007832:	6013      	str	r3, [r2, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007834:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8007836:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007838:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 800783a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 800783e:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8007840:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8007844:	e780      	b.n	8007748 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8007846:	68a0      	ldr	r0, [r4, #8]
 8007848:	b950      	cbnz	r0, 8007860 <HAL_I2C_Init+0x120>
 800784a:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800784e:	fbb3 f3f5 	udiv	r3, r3, r5
 8007852:	3301      	adds	r3, #1
 8007854:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8007858:	b17b      	cbz	r3, 800787a <HAL_I2C_Init+0x13a>
 800785a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 800785e:	e7c9      	b.n	80077f4 <HAL_I2C_Init+0xb4>
 8007860:	2019      	movs	r0, #25
 8007862:	4345      	muls	r5, r0
 8007864:	fbb3 f3f5 	udiv	r3, r3, r5
 8007868:	3301      	adds	r3, #1
 800786a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800786e:	b123      	cbz	r3, 800787a <HAL_I2C_Init+0x13a>
 8007870:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8007874:	e7be      	b.n	80077f4 <HAL_I2C_Init+0xb4>
 8007876:	2304      	movs	r3, #4
 8007878:	e7bc      	b.n	80077f4 <HAL_I2C_Init+0xb4>
 800787a:	2301      	movs	r3, #1
 800787c:	e7ba      	b.n	80077f4 <HAL_I2C_Init+0xb4>
 800787e:	bf00      	nop
 8007880:	000186a0 	.word	0x000186a0
 8007884:	001e847f 	.word	0x001e847f
 8007888:	003d08ff 	.word	0x003d08ff
 800788c:	000f4240 	.word	0x000f4240

08007890 <HAL_I2C_DeInit>:
{
 8007890:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8007892:	4604      	mov	r4, r0
 8007894:	b198      	cbz	r0, 80078be <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 8007896:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8007898:	2324      	movs	r3, #36	; 0x24
 800789a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 800789e:	6813      	ldr	r3, [r2, #0]
 80078a0:	f023 0301 	bic.w	r3, r3, #1
 80078a4:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 80078a6:	f7fb f911 	bl	8002acc <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 80078aa:	2000      	movs	r0, #0
 80078ac:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 80078ae:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 80078b2:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80078b6:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 80078b8:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 80078bc:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80078be:	2001      	movs	r0, #1
 80078c0:	e7fc      	b.n	80078bc <HAL_I2C_DeInit+0x2c>
	...

080078c4 <HAL_I2C_Mem_Write>:
{
 80078c4:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 80078c8:	4604      	mov	r4, r0
 80078ca:	4699      	mov	r9, r3
 80078cc:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80078ce:	460f      	mov	r7, r1
 80078d0:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80078d2:	f7fe fd4f 	bl	8006374 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80078d6:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80078da:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80078dc:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 80078de:	d003      	beq.n	80078e8 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 80078e0:	2002      	movs	r0, #2
}
 80078e2:	b003      	add	sp, #12
 80078e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 80078e8:	9000      	str	r0, [sp, #0]
 80078ea:	493c      	ldr	r1, [pc, #240]	; (80079dc <HAL_I2C_Mem_Write+0x118>)
 80078ec:	2319      	movs	r3, #25
 80078ee:	2201      	movs	r2, #1
 80078f0:	4620      	mov	r0, r4
 80078f2:	f7ff fd63 	bl	80073bc <I2C_WaitOnFlagUntilTimeout>
 80078f6:	2800      	cmp	r0, #0
 80078f8:	d1f2      	bne.n	80078e0 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 80078fa:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 80078fe:	2b01      	cmp	r3, #1
 8007900:	d0ee      	beq.n	80078e0 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8007902:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8007904:	2301      	movs	r3, #1
 8007906:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 800790a:	6803      	ldr	r3, [r0, #0]
 800790c:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 800790e:	bf5e      	ittt	pl
 8007910:	6803      	ldrpl	r3, [r0, #0]
 8007912:	f043 0301 	orrpl.w	r3, r3, #1
 8007916:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007918:	6803      	ldr	r3, [r0, #0]
 800791a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800791e:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8007920:	2321      	movs	r3, #33	; 0x21
 8007922:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8007926:	2340      	movs	r3, #64	; 0x40
 8007928:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 800792c:	2300      	movs	r3, #0
 800792e:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8007930:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007932:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8007934:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8007938:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 800793a:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 800793c:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 800793e:	4b28      	ldr	r3, [pc, #160]	; (80079e0 <HAL_I2C_Mem_Write+0x11c>)
 8007940:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8007942:	e9cd 6500 	strd	r6, r5, [sp]
 8007946:	464b      	mov	r3, r9
 8007948:	4642      	mov	r2, r8
 800794a:	4639      	mov	r1, r7
 800794c:	4620      	mov	r0, r4
 800794e:	f7ff fe1d 	bl	800758c <I2C_RequestMemoryWrite>
 8007952:	2800      	cmp	r0, #0
 8007954:	d02a      	beq.n	80079ac <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8007956:	2001      	movs	r0, #1
 8007958:	e7c3      	b.n	80078e2 <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800795a:	f7ff fdf1 	bl	8007540 <I2C_WaitOnTXEFlagUntilTimeout>
 800795e:	b140      	cbz	r0, 8007972 <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8007960:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8007962:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007964:	bf01      	itttt	eq
 8007966:	6822      	ldreq	r2, [r4, #0]
 8007968:	6813      	ldreq	r3, [r2, #0]
 800796a:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 800796e:	6013      	streq	r3, [r2, #0]
 8007970:	e7f1      	b.n	8007956 <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8007972:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007974:	6827      	ldr	r7, [r4, #0]
 8007976:	461a      	mov	r2, r3
 8007978:	f812 1b01 	ldrb.w	r1, [r2], #1
 800797c:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 800797e:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8007980:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8007982:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8007984:	3a01      	subs	r2, #1
 8007986:	b292      	uxth	r2, r2
 8007988:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 800798a:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 800798c:	1e48      	subs	r0, r1, #1
 800798e:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8007990:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8007992:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8007994:	d50a      	bpl.n	80079ac <HAL_I2C_Mem_Write+0xe8>
 8007996:	b148      	cbz	r0, 80079ac <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8007998:	785a      	ldrb	r2, [r3, #1]
 800799a:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 800799c:	3302      	adds	r3, #2
 800799e:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 80079a0:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 80079a2:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 80079a4:	3902      	subs	r1, #2
        hi2c->XferCount--;
 80079a6:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 80079a8:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 80079aa:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 80079ac:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80079ae:	462a      	mov	r2, r5
 80079b0:	4631      	mov	r1, r6
 80079b2:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 80079b4:	2b00      	cmp	r3, #0
 80079b6:	d1d0      	bne.n	800795a <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80079b8:	f7ff fd9c 	bl	80074f4 <I2C_WaitOnBTFFlagUntilTimeout>
 80079bc:	2800      	cmp	r0, #0
 80079be:	d1cf      	bne.n	8007960 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80079c0:	6822      	ldr	r2, [r4, #0]
 80079c2:	6813      	ldr	r3, [r2, #0]
 80079c4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80079c8:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 80079ca:	2320      	movs	r3, #32
 80079cc:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 80079d0:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80079d4:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 80079d8:	e783      	b.n	80078e2 <HAL_I2C_Mem_Write+0x1e>
 80079da:	bf00      	nop
 80079dc:	00100002 	.word	0x00100002
 80079e0:	ffff0000 	.word	0xffff0000

080079e4 <HAL_I2C_Mem_Read>:
{
 80079e4:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80079e8:	4604      	mov	r4, r0
 80079ea:	b087      	sub	sp, #28
 80079ec:	4699      	mov	r9, r3
 80079ee:	9f10      	ldr	r7, [sp, #64]	; 0x40
 80079f0:	460d      	mov	r5, r1
 80079f2:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 80079f4:	f7fe fcbe 	bl	8006374 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 80079f8:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 80079fc:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 80079fe:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8007a00:	d004      	beq.n	8007a0c <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8007a02:	2502      	movs	r5, #2
}
 8007a04:	4628      	mov	r0, r5
 8007a06:	b007      	add	sp, #28
 8007a08:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8007a0c:	9000      	str	r0, [sp, #0]
 8007a0e:	4976      	ldr	r1, [pc, #472]	; (8007be8 <HAL_I2C_Mem_Read+0x204>)
 8007a10:	2319      	movs	r3, #25
 8007a12:	2201      	movs	r2, #1
 8007a14:	4620      	mov	r0, r4
 8007a16:	f7ff fcd1 	bl	80073bc <I2C_WaitOnFlagUntilTimeout>
 8007a1a:	2800      	cmp	r0, #0
 8007a1c:	d1f1      	bne.n	8007a02 <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8007a1e:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8007a22:	2b01      	cmp	r3, #1
 8007a24:	d0ed      	beq.n	8007a02 <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8007a26:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8007a28:	2301      	movs	r3, #1
 8007a2a:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8007a2e:	6803      	ldr	r3, [r0, #0]
 8007a30:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8007a32:	bf5e      	ittt	pl
 8007a34:	6803      	ldrpl	r3, [r0, #0]
 8007a36:	f043 0301 	orrpl.w	r3, r3, #1
 8007a3a:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007a3c:	6803      	ldr	r3, [r0, #0]
 8007a3e:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8007a42:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8007a44:	2322      	movs	r3, #34	; 0x22
 8007a46:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8007a4a:	2340      	movs	r3, #64	; 0x40
 8007a4c:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8007a50:	2300      	movs	r3, #0
 8007a52:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8007a54:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007a56:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8007a58:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8007a5c:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8007a5e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007a60:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8007a62:	4b62      	ldr	r3, [pc, #392]	; (8007bec <HAL_I2C_Mem_Read+0x208>)
 8007a64:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8007a66:	4629      	mov	r1, r5
 8007a68:	e9cd 7600 	strd	r7, r6, [sp]
 8007a6c:	464b      	mov	r3, r9
 8007a6e:	4642      	mov	r2, r8
 8007a70:	4620      	mov	r0, r4
 8007a72:	f7ff fde3 	bl	800763c <I2C_RequestMemoryRead>
 8007a76:	4605      	mov	r5, r0
 8007a78:	b108      	cbz	r0, 8007a7e <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8007a7a:	2501      	movs	r5, #1
 8007a7c:	e7c2      	b.n	8007a04 <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8007a7e:	8d22      	ldrh	r2, [r4, #40]	; 0x28
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007a80:	6823      	ldr	r3, [r4, #0]
    if (hi2c->XferSize == 0U)
 8007a82:	b9b2      	cbnz	r2, 8007ab2 <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007a84:	9002      	str	r0, [sp, #8]
 8007a86:	695a      	ldr	r2, [r3, #20]
 8007a88:	9202      	str	r2, [sp, #8]
 8007a8a:	699a      	ldr	r2, [r3, #24]
 8007a8c:	9202      	str	r2, [sp, #8]
 8007a8e:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007a90:	681a      	ldr	r2, [r3, #0]
 8007a92:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007a96:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007a98:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8007bf0 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8007a9c:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8007a9e:	2b00      	cmp	r3, #0
 8007aa0:	d12c      	bne.n	8007afc <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8007aa2:	2220      	movs	r2, #32
 8007aa4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8007aa8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8007aac:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8007ab0:	e7a8      	b.n	8007a04 <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8007ab2:	2a01      	cmp	r2, #1
 8007ab4:	d10a      	bne.n	8007acc <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007ab6:	681a      	ldr	r2, [r3, #0]
 8007ab8:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007abc:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007abe:	9003      	str	r0, [sp, #12]
 8007ac0:	695a      	ldr	r2, [r3, #20]
 8007ac2:	9203      	str	r2, [sp, #12]
 8007ac4:	699a      	ldr	r2, [r3, #24]
 8007ac6:	9203      	str	r2, [sp, #12]
 8007ac8:	9a03      	ldr	r2, [sp, #12]
 8007aca:	e7e1      	b.n	8007a90 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8007acc:	2a02      	cmp	r2, #2
 8007ace:	d10e      	bne.n	8007aee <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007ad0:	681a      	ldr	r2, [r3, #0]
 8007ad2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007ad6:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8007ad8:	681a      	ldr	r2, [r3, #0]
 8007ada:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8007ade:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007ae0:	9004      	str	r0, [sp, #16]
 8007ae2:	695a      	ldr	r2, [r3, #20]
 8007ae4:	9204      	str	r2, [sp, #16]
 8007ae6:	699b      	ldr	r3, [r3, #24]
 8007ae8:	9304      	str	r3, [sp, #16]
 8007aea:	9b04      	ldr	r3, [sp, #16]
 8007aec:	e7d4      	b.n	8007a98 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8007aee:	9005      	str	r0, [sp, #20]
 8007af0:	695a      	ldr	r2, [r3, #20]
 8007af2:	9205      	str	r2, [sp, #20]
 8007af4:	699b      	ldr	r3, [r3, #24]
 8007af6:	9305      	str	r3, [sp, #20]
 8007af8:	9b05      	ldr	r3, [sp, #20]
 8007afa:	e7cd      	b.n	8007a98 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8007afc:	2b03      	cmp	r3, #3
 8007afe:	d856      	bhi.n	8007bae <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8007b00:	2b01      	cmp	r3, #1
 8007b02:	d115      	bne.n	8007b30 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007b04:	4632      	mov	r2, r6
 8007b06:	4639      	mov	r1, r7
 8007b08:	4620      	mov	r0, r4
 8007b0a:	f7ff fcc4 	bl	8007496 <I2C_WaitOnRXNEFlagUntilTimeout>
 8007b0e:	2800      	cmp	r0, #0
 8007b10:	d1b3      	bne.n	8007a7a <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8007b12:	6823      	ldr	r3, [r4, #0]
 8007b14:	691a      	ldr	r2, [r3, #16]
 8007b16:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007b18:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8007b1a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007b1c:	3301      	adds	r3, #1
 8007b1e:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8007b20:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8007b22:	3b01      	subs	r3, #1
 8007b24:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8007b26:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007b28:	3b01      	subs	r3, #1
 8007b2a:	b29b      	uxth	r3, r3
 8007b2c:	8563      	strh	r3, [r4, #42]	; 0x2a
 8007b2e:	e7b5      	b.n	8007a9c <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8007b30:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007b32:	9600      	str	r6, [sp, #0]
 8007b34:	463b      	mov	r3, r7
 8007b36:	f04f 0200 	mov.w	r2, #0
 8007b3a:	4641      	mov	r1, r8
 8007b3c:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8007b3e:	d119      	bne.n	8007b74 <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007b40:	f7ff fc3c 	bl	80073bc <I2C_WaitOnFlagUntilTimeout>
 8007b44:	2800      	cmp	r0, #0
 8007b46:	d198      	bne.n	8007a7a <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8007b48:	6823      	ldr	r3, [r4, #0]
 8007b4a:	681a      	ldr	r2, [r3, #0]
 8007b4c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8007b50:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8007b52:	691a      	ldr	r2, [r3, #16]
 8007b54:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007b56:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8007b58:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007b5a:	1c53      	adds	r3, r2, #1
 8007b5c:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8007b5e:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8007b60:	3b01      	subs	r3, #1
 8007b62:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8007b64:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007b66:	3b01      	subs	r3, #1
 8007b68:	b29b      	uxth	r3, r3
 8007b6a:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8007b6c:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8007b6e:	691b      	ldr	r3, [r3, #16]
 8007b70:	7053      	strb	r3, [r2, #1]
 8007b72:	e7d2      	b.n	8007b1a <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007b74:	f7ff fc22 	bl	80073bc <I2C_WaitOnFlagUntilTimeout>
 8007b78:	2800      	cmp	r0, #0
 8007b7a:	f47f af7e 	bne.w	8007a7a <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8007b7e:	6823      	ldr	r3, [r4, #0]
 8007b80:	681a      	ldr	r2, [r3, #0]
 8007b82:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8007b86:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8007b88:	691a      	ldr	r2, [r3, #16]
 8007b8a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007b8c:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8007b8e:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007b90:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8007b92:	3301      	adds	r3, #1
 8007b94:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8007b96:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8007b98:	3b01      	subs	r3, #1
 8007b9a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8007b9c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007b9e:	3b01      	subs	r3, #1
 8007ba0:	b29b      	uxth	r3, r3
 8007ba2:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8007ba4:	4602      	mov	r2, r0
 8007ba6:	463b      	mov	r3, r7
 8007ba8:	4641      	mov	r1, r8
 8007baa:	4620      	mov	r0, r4
 8007bac:	e7c8      	b.n	8007b40 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8007bae:	4632      	mov	r2, r6
 8007bb0:	4639      	mov	r1, r7
 8007bb2:	4620      	mov	r0, r4
 8007bb4:	f7ff fc6f 	bl	8007496 <I2C_WaitOnRXNEFlagUntilTimeout>
 8007bb8:	2800      	cmp	r0, #0
 8007bba:	f47f af5e 	bne.w	8007a7a <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8007bbe:	6823      	ldr	r3, [r4, #0]
 8007bc0:	691a      	ldr	r2, [r3, #16]
 8007bc2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007bc4:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8007bc6:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8007bc8:	1c53      	adds	r3, r2, #1
 8007bca:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8007bcc:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8007bce:	3b01      	subs	r3, #1
 8007bd0:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8007bd2:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8007bd4:	3b01      	subs	r3, #1
 8007bd6:	b29b      	uxth	r3, r3
 8007bd8:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8007bda:	6823      	ldr	r3, [r4, #0]
 8007bdc:	6959      	ldr	r1, [r3, #20]
 8007bde:	0749      	lsls	r1, r1, #29
 8007be0:	f57f af5c 	bpl.w	8007a9c <HAL_I2C_Mem_Read+0xb8>
 8007be4:	e7c3      	b.n	8007b6e <HAL_I2C_Mem_Read+0x18a>
 8007be6:	bf00      	nop
 8007be8:	00100002 	.word	0x00100002
 8007bec:	ffff0000 	.word	0xffff0000
 8007bf0:	00010004 	.word	0x00010004

08007bf4 <HAL_I2C_GetState>:
  return hi2c->State;
 8007bf4:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 8007bf8:	4770      	bx	lr

08007bfa <LTDC_SetConfig>:
  uint32_t tmp;
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007bfa:	6800      	ldr	r0, [r0, #0]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8007bfc:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8007c00:	01d2      	lsls	r2, r2, #7
 8007c02:	3284      	adds	r2, #132	; 0x84
 8007c04:	1883      	adds	r3, r0, r2
{
 8007c06:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007c0a:	68c6      	ldr	r6, [r0, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8007c0c:	685d      	ldr	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007c0e:	684c      	ldr	r4, [r1, #4]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8007c10:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8007c14:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8007c18:	605d      	str	r5, [r3, #4]
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8007c1a:	68c5      	ldr	r5, [r0, #12]
 8007c1c:	f10c 0701 	add.w	r7, ip, #1
 8007c20:	f3c5 450b 	ubfx	r5, r5, #16, #12
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007c24:	f3c6 460b 	ubfx	r6, r6, #16, #12
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8007c28:	443d      	add	r5, r7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8007c2a:	4426      	add	r6, r4
                                         ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8007c2c:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + \
 8007c30:	605d      	str	r5, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 8007c32:	68c5      	ldr	r5, [r0, #12]
 8007c34:	68ce      	ldr	r6, [r1, #12]
 8007c36:	f3c5 050a 	ubfx	r5, r5, #0, #11
 8007c3a:	442e      	add	r6, r5
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8007c3c:	689d      	ldr	r5, [r3, #8]
 8007c3e:	f405 4570 	and.w	r5, r5, #61440	; 0xf000
 8007c42:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 8007c44:	68c7      	ldr	r7, [r0, #12]
 8007c46:	688d      	ldr	r5, [r1, #8]
 8007c48:	f3c7 070a 	ubfx	r7, r7, #0, #11
 8007c4c:	3501      	adds	r5, #1
 8007c4e:	443d      	add	r5, r7
 8007c50:	ea45 4506 	orr.w	r5, r5, r6, lsl #16
 8007c54:	609d      	str	r5, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8007c56:	691d      	ldr	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8007c58:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8007c5a:	f025 0507 	bic.w	r5, r5, #7
 8007c5e:	611d      	str	r5, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8007c60:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8007c64:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8007c66:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8007c68:	f891 7032 	ldrb.w	r7, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8007c6c:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED |
 8007c70:	f8c3 e018 	str.w	lr, [r3, #24]
                                         LTDC_LxDCCR_DCALPHA);
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 8007c74:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8007c78:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8007c7c:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8007c80:	ea45 4507 	orr.w	r5, r5, r7, lsl #16
 8007c84:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 8007c86:	695d      	ldr	r5, [r3, #20]
 8007c88:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8007c8c:	615d      	str	r5, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8007c8e:	694d      	ldr	r5, [r1, #20]
 8007c90:	615d      	str	r5, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 8007c92:	69dd      	ldr	r5, [r3, #28]
 8007c94:	f425 65e0 	bic.w	r5, r5, #1792	; 0x700
 8007c98:	f025 0507 	bic.w	r5, r5, #7
 8007c9c:	61dd      	str	r5, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 8007c9e:	e9d1 5707 	ldrd	r5, r7, [r1, #28]
 8007ca2:	433d      	orrs	r5, r7
 8007ca4:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8007ca6:	6a9d      	ldr	r5, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8007ca8:	6a4d      	ldr	r5, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 8007caa:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 8007cae:	629d      	str	r5, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8007cb0:	b31e      	cbz	r6, 8007cfa <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8007cb2:	2e01      	cmp	r6, #1
 8007cb4:	d023      	beq.n	8007cfe <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8007cb6:	1eb5      	subs	r5, r6, #2
 8007cb8:	2d02      	cmp	r5, #2
 8007cba:	d922      	bls.n	8007d02 <LTDC_SetConfig+0x108>
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 8007cbc:	2e07      	cmp	r6, #7
 8007cbe:	bf0c      	ite	eq
 8007cc0:	2502      	moveq	r5, #2
 8007cc2:	2501      	movne	r5, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 8007cc4:	6ade      	ldr	r6, [r3, #44]	; 0x2c
 8007cc6:	f006 26e0 	and.w	r6, r6, #3758153728	; 0xe000e000
 8007cca:	62de      	str	r6, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8007ccc:	eba4 040c 	sub.w	r4, r4, ip
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8007cd0:	6a8e      	ldr	r6, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8007cd2:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8007cd4:	436c      	muls	r4, r5
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8007cd6:	436e      	muls	r6, r5
                                         (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 8007cd8:	3403      	adds	r4, #3
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | \
 8007cda:	ea44 4406 	orr.w	r4, r4, r6, lsl #16
 8007cde:	62dc      	str	r4, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 8007ce0:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8007ce2:	f424 64ff 	bic.w	r4, r4, #2040	; 0x7f8
 8007ce6:	f024 0407 	bic.w	r4, r4, #7
 8007cea:	631c      	str	r4, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 8007cec:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 8007cee:	5883      	ldr	r3, [r0, r2]
 8007cf0:	f043 0301 	orr.w	r3, r3, #1
 8007cf4:	5083      	str	r3, [r0, r2]
}
 8007cf6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8007cfa:	2504      	movs	r5, #4
 8007cfc:	e7e2      	b.n	8007cc4 <LTDC_SetConfig+0xca>
    tmp = 3U;
 8007cfe:	2503      	movs	r5, #3
 8007d00:	e7e0      	b.n	8007cc4 <LTDC_SetConfig+0xca>
    tmp = 2U;
 8007d02:	2502      	movs	r5, #2
 8007d04:	e7de      	b.n	8007cc4 <LTDC_SetConfig+0xca>
	...

08007d08 <HAL_LTDC_Init>:
{
 8007d08:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8007d0a:	4604      	mov	r4, r0
 8007d0c:	2800      	cmp	r0, #0
 8007d0e:	d063      	beq.n	8007dd8 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8007d10:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 8007d14:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8007d18:	b91b      	cbnz	r3, 8007d22 <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8007d1a:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8007d1e:	f7fa fef3 	bl	8002b08 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007d22:	2302      	movs	r3, #2
 8007d24:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8007d28:	6823      	ldr	r3, [r4, #0]
 8007d2a:	699a      	ldr	r2, [r3, #24]
 8007d2c:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8007d30:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8007d32:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 8007d36:	4302      	orrs	r2, r0
 8007d38:	68e0      	ldr	r0, [r4, #12]
 8007d3a:	6999      	ldr	r1, [r3, #24]
 8007d3c:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8007d3e:	6920      	ldr	r0, [r4, #16]
 8007d40:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 8007d42:	430a      	orrs	r2, r1
 8007d44:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8007d46:	689a      	ldr	r2, [r3, #8]
 8007d48:	4924      	ldr	r1, [pc, #144]	; (8007ddc <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8007d4a:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8007d4c:	400a      	ands	r2, r1
 8007d4e:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8007d50:	689a      	ldr	r2, [r3, #8]
 8007d52:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007d56:	69a0      	ldr	r0, [r4, #24]
 8007d58:	4302      	orrs	r2, r0
 8007d5a:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007d5c:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8007d5e:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8007d60:	400a      	ands	r2, r1
 8007d62:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 8007d64:	68da      	ldr	r2, [r3, #12]
 8007d66:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007d6a:	6a20      	ldr	r0, [r4, #32]
 8007d6c:	4302      	orrs	r2, r0
 8007d6e:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007d70:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 8007d72:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8007d74:	400a      	ands	r2, r1
 8007d76:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8007d78:	691a      	ldr	r2, [r3, #16]
 8007d7a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007d7e:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8007d80:	4302      	orrs	r2, r0
 8007d82:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 8007d84:	695a      	ldr	r2, [r3, #20]
 8007d86:	4011      	ands	r1, r2
 8007d88:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8007d8a:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8007d8c:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8007d8e:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8007d92:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8007d94:	430a      	orrs	r2, r1
 8007d96:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8007d98:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 8007d9a:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 8007d9e:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 8007da2:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 8007da6:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 8007da8:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 8007daa:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 8007dae:	430a      	orrs	r2, r1
 8007db0:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 8007db4:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8007db8:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 8007dba:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007dbc:	f042 0206 	orr.w	r2, r2, #6
 8007dc0:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 8007dc2:	699a      	ldr	r2, [r3, #24]
 8007dc4:	f042 0201 	orr.w	r2, r2, #1
 8007dc8:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8007dca:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 8007dcc:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 8007dce:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 8007dd2:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 8007dd6:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8007dd8:	2001      	movs	r0, #1
 8007dda:	e7fc      	b.n	8007dd6 <HAL_LTDC_Init+0xce>
 8007ddc:	f000f800 	.word	0xf000f800

08007de0 <HAL_LTDC_ErrorCallback>:
 8007de0:	4770      	bx	lr

08007de2 <HAL_LTDC_LineEventCallback>:
 8007de2:	4770      	bx	lr

08007de4 <HAL_LTDC_ReloadEventCallback>:
 8007de4:	4770      	bx	lr

08007de6 <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8007de6:	6803      	ldr	r3, [r0, #0]
{
 8007de8:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 8007dea:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 8007dec:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8007dee:	0772      	lsls	r2, r6, #29
{
 8007df0:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 8007df2:	d514      	bpl.n	8007e1e <HAL_LTDC_IRQHandler+0x38>
 8007df4:	0769      	lsls	r1, r5, #29
 8007df6:	d512      	bpl.n	8007e1e <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8007df8:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007dfa:	f022 0204 	bic.w	r2, r2, #4
 8007dfe:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8007e00:	2204      	movs	r2, #4
 8007e02:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 8007e04:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8007e08:	f043 0301 	orr.w	r3, r3, #1
 8007e0c:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8007e10:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8007e12:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007e16:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8007e1a:	f7ff ffe1 	bl	8007de0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8007e1e:	07b2      	lsls	r2, r6, #30
 8007e20:	d516      	bpl.n	8007e50 <HAL_LTDC_IRQHandler+0x6a>
 8007e22:	07ab      	lsls	r3, r5, #30
 8007e24:	d514      	bpl.n	8007e50 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 8007e26:	6823      	ldr	r3, [r4, #0]
 8007e28:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007e2a:	f022 0202 	bic.w	r2, r2, #2
 8007e2e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8007e30:	2202      	movs	r2, #2
 8007e32:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 8007e34:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8007e38:	4313      	orrs	r3, r2
 8007e3a:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8007e3e:	2304      	movs	r3, #4
 8007e40:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007e44:	2300      	movs	r3, #0
 8007e46:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8007e4a:	4620      	mov	r0, r4
 8007e4c:	f7ff ffc8 	bl	8007de0 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8007e50:	07f0      	lsls	r0, r6, #31
 8007e52:	d510      	bpl.n	8007e76 <HAL_LTDC_IRQHandler+0x90>
 8007e54:	07e9      	lsls	r1, r5, #31
 8007e56:	d50e      	bpl.n	8007e76 <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8007e58:	6823      	ldr	r3, [r4, #0]
 8007e5a:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007e5c:	f022 0201 	bic.w	r2, r2, #1
 8007e60:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 8007e62:	2201      	movs	r2, #1
 8007e64:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 8007e66:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8007e68:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007e6c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8007e70:	4620      	mov	r0, r4
 8007e72:	f7ff ffb6 	bl	8007de2 <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 8007e76:	0732      	lsls	r2, r6, #28
 8007e78:	d511      	bpl.n	8007e9e <HAL_LTDC_IRQHandler+0xb8>
 8007e7a:	072b      	lsls	r3, r5, #28
 8007e7c:	d50f      	bpl.n	8007e9e <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8007e7e:	6823      	ldr	r3, [r4, #0]
 8007e80:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8007e82:	f022 0208 	bic.w	r2, r2, #8
 8007e86:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8007e88:	2208      	movs	r2, #8
 8007e8a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8007e8c:	2301      	movs	r3, #1
 8007e8e:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8007e92:	2300      	movs	r3, #0
 8007e94:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 8007e98:	4620      	mov	r0, r4
 8007e9a:	f7ff ffa3 	bl	8007de4 <HAL_LTDC_ReloadEventCallback>
}
 8007e9e:	bd70      	pop	{r4, r5, r6, pc}

08007ea0 <HAL_LTDC_ConfigLayer>:
{
 8007ea0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 8007ea4:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8007ea8:	2b01      	cmp	r3, #1
{
 8007eaa:	4606      	mov	r6, r0
 8007eac:	460f      	mov	r7, r1
 8007eae:	4694      	mov	ip, r2
 8007eb0:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 8007eb4:	d01f      	beq.n	8007ef6 <HAL_LTDC_ConfigLayer+0x56>
 8007eb6:	f04f 0801 	mov.w	r8, #1
 8007eba:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007ebe:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 8007ec2:	2434      	movs	r4, #52	; 0x34
 8007ec4:	460d      	mov	r5, r1
 8007ec6:	fb04 6402 	mla	r4, r4, r2, r6
 8007eca:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007ecc:	3438      	adds	r4, #56	; 0x38
 8007ece:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007ed0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007ed2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007ed4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007ed6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8007ed8:	682b      	ldr	r3, [r5, #0]
 8007eda:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 8007edc:	4630      	mov	r0, r6
 8007ede:	4662      	mov	r2, ip
 8007ee0:	4639      	mov	r1, r7
 8007ee2:	f7ff fe8a 	bl	8007bfa <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8007ee6:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 8007ee8:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 8007eea:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 8007eee:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8007ef2:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 8007ef6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08007efc <HAL_LTDC_SetPitch>:
{
 8007efc:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 8007efe:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 8007f02:	2b01      	cmp	r3, #1
 8007f04:	f04f 0302 	mov.w	r3, #2
 8007f08:	d02c      	beq.n	8007f64 <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8007f0a:	2434      	movs	r4, #52	; 0x34
 8007f0c:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8007f10:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8007f14:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 8007f16:	b33c      	cbz	r4, 8007f68 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8007f18:	2c01      	cmp	r4, #1
 8007f1a:	d027      	beq.n	8007f6c <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8007f1c:	1ea5      	subs	r5, r4, #2
 8007f1e:	429d      	cmp	r5, r3
 8007f20:	d902      	bls.n	8007f28 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 8007f22:	2c07      	cmp	r4, #7
 8007f24:	bf18      	it	ne
 8007f26:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8007f28:	6804      	ldr	r4, [r0, #0]
 8007f2a:	01d2      	lsls	r2, r2, #7
 8007f2c:	3284      	adds	r2, #132	; 0x84
 8007f2e:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 8007f30:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8007f32:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 8007f34:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 8007f38:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 8007f3c:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 8007f3e:	4c0c      	ldr	r4, [pc, #48]	; (8007f70 <HAL_LTDC_SetPitch+0x74>)
 8007f40:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8007f42:	f045 0501 	orr.w	r5, r5, #1
 8007f46:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 8007f48:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 8007f4a:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8007f4e:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 8007f50:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007f52:	f043 0301 	orr.w	r3, r3, #1
 8007f56:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 8007f58:	2301      	movs	r3, #1
 8007f5a:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8007f5e:	2300      	movs	r3, #0
 8007f60:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 8007f64:	4618      	mov	r0, r3
 8007f66:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 8007f68:	2304      	movs	r3, #4
 8007f6a:	e7dd      	b.n	8007f28 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 8007f6c:	2303      	movs	r3, #3
 8007f6e:	e7db      	b.n	8007f28 <HAL_LTDC_SetPitch+0x2c>
 8007f70:	40016800 	.word	0x40016800

08007f74 <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 8007f74:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 8007f76:	2300      	movs	r3, #0
 8007f78:	9301      	str	r3, [sp, #4]
 8007f7a:	4b18      	ldr	r3, [pc, #96]	; (8007fdc <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8007f7c:	4d18      	ldr	r5, [pc, #96]	; (8007fe0 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8007f7e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8007f80:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8007f84:	641a      	str	r2, [r3, #64]	; 0x40
 8007f86:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007f88:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007f8c:	9301      	str	r3, [sp, #4]
 8007f8e:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8007f90:	4b14      	ldr	r3, [pc, #80]	; (8007fe4 <HAL_PWREx_EnableOverDrive+0x70>)
 8007f92:	2201      	movs	r2, #1
 8007f94:	641a      	str	r2, [r3, #64]	; 0x40
  tickstart = HAL_GetTick();
 8007f96:	f7fe f9ed 	bl	8006374 <HAL_GetTick>
 8007f9a:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8007f9c:	686b      	ldr	r3, [r5, #4]
 8007f9e:	03da      	lsls	r2, r3, #15
 8007fa0:	d50b      	bpl.n	8007fba <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8007fa2:	4b10      	ldr	r3, [pc, #64]	; (8007fe4 <HAL_PWREx_EnableOverDrive+0x70>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8007fa4:	4d0e      	ldr	r5, [pc, #56]	; (8007fe0 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 8007fa6:	2201      	movs	r2, #1
 8007fa8:	645a      	str	r2, [r3, #68]	; 0x44
  tickstart = HAL_GetTick();
 8007faa:	f7fe f9e3 	bl	8006374 <HAL_GetTick>
 8007fae:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 8007fb0:	686b      	ldr	r3, [r5, #4]
 8007fb2:	039b      	lsls	r3, r3, #14
 8007fb4:	d50a      	bpl.n	8007fcc <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 8007fb6:	2000      	movs	r0, #0
 8007fb8:	e006      	b.n	8007fc8 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8007fba:	f7fe f9db 	bl	8006374 <HAL_GetTick>
 8007fbe:	1b00      	subs	r0, r0, r4
 8007fc0:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8007fc4:	d9ea      	bls.n	8007f9c <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 8007fc6:	2003      	movs	r0, #3
}
 8007fc8:	b003      	add	sp, #12
 8007fca:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 8007fcc:	f7fe f9d2 	bl	8006374 <HAL_GetTick>
 8007fd0:	1b00      	subs	r0, r0, r4
 8007fd2:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8007fd6:	d9eb      	bls.n	8007fb0 <HAL_PWREx_EnableOverDrive+0x3c>
 8007fd8:	e7f5      	b.n	8007fc6 <HAL_PWREx_EnableOverDrive+0x52>
 8007fda:	bf00      	nop
 8007fdc:	40023800 	.word	0x40023800
 8007fe0:	40007000 	.word	0x40007000
 8007fe4:	420e0000 	.word	0x420e0000

08007fe8 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 8007fe8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 8007fec:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 8007fee:	b13e      	cbz	r6, 8008000 <QSPI_Config+0x18>
 8007ff0:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8007ff4:	bf1f      	itttt	ne
 8007ff6:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 8007ff8:	6804      	ldrne	r4, [r0, #0]
 8007ffa:	f103 33ff 	addne.w	r3, r3, #4294967295
 8007ffe:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8008000:	f8d1 9018 	ldr.w	r9, [r1, #24]
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8008004:	e9d1 7507 	ldrd	r7, r5, [r1, #28]
  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 8008008:	f1b9 0f00 	cmp.w	r9, #0
 800800c:	d04f      	beq.n	80080ae <QSPI_Config+0xc6>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800800e:	694b      	ldr	r3, [r1, #20]
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8008010:	6800      	ldr	r0, [r0, #0]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8008012:	f8d1 a000 	ldr.w	sl, [r1]
 8008016:	f8d1 e034 	ldr.w	lr, [r1, #52]	; 0x34
 800801a:	ea46 0909 	orr.w	r9, r6, r9
 800801e:	e9d1 480b 	ldrd	r4, r8, [r1, #44]	; 0x2c
 8008022:	ea4f 4c83 	mov.w	ip, r3, lsl #18
 8008026:	ea49 0902 	orr.w	r9, r9, r2
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800802a:	b335      	cbz	r5, 800807a <QSPI_Config+0x92>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800802c:	688b      	ldr	r3, [r1, #8]
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800802e:	690e      	ldr	r6, [r1, #16]
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 8008030:	61c3      	str	r3, [r0, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8008032:	ea49 0505 	orr.w	r5, r9, r5
 8008036:	b19f      	cbz	r7, 8008060 <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8008038:	ea4a 0307 	orr.w	r3, sl, r7
 800803c:	4323      	orrs	r3, r4
 800803e:	ea43 0308 	orr.w	r3, r3, r8
 8008042:	68cc      	ldr	r4, [r1, #12]
 8008044:	ea43 030e 	orr.w	r3, r3, lr
 8008048:	4333      	orrs	r3, r6
 800804a:	4323      	orrs	r3, r4
 800804c:	ea43 030c 	orr.w	r3, r3, ip
 8008050:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize |
                                         cmd->AddressMode | cmd->InstructionMode | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8008052:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8008056:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8008058:	d00d      	beq.n	8008076 <QSPI_Config+0x8e>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 800805a:	684b      	ldr	r3, [r1, #4]
 800805c:	6183      	str	r3, [r0, #24]
 800805e:	e00a      	b.n	8008076 <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8008060:	ea4a 0304 	orr.w	r3, sl, r4
 8008064:	ea43 0308 	orr.w	r3, r3, r8
 8008068:	ea43 030e 	orr.w	r3, r3, lr
 800806c:	4333      	orrs	r3, r6
 800806e:	ea43 030c 	orr.w	r3, r3, ip
 8008072:	432b      	orrs	r3, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8008074:	6143      	str	r3, [r0, #20]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 8008076:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 800807a:	b16f      	cbz	r7, 8008098 <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800807c:	ea4a 0307 	orr.w	r3, sl, r7
 8008080:	4323      	orrs	r3, r4
 8008082:	ea43 0308 	orr.w	r3, r3, r8
 8008086:	68cc      	ldr	r4, [r1, #12]
 8008088:	ea43 030e 	orr.w	r3, r3, lr
 800808c:	4323      	orrs	r3, r4
 800808e:	ea43 030c 	orr.w	r3, r3, ip
 8008092:	ea43 0309 	orr.w	r3, r3, r9
 8008096:	e7dc      	b.n	8008052 <QSPI_Config+0x6a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8008098:	ea4a 0304 	orr.w	r3, sl, r4
 800809c:	ea43 0308 	orr.w	r3, r3, r8
 80080a0:	ea43 030e 	orr.w	r3, r3, lr
 80080a4:	ea43 030c 	orr.w	r3, r3, ip
 80080a8:	ea43 0309 	orr.w	r3, r3, r9
 80080ac:	e7e2      	b.n	8008074 <QSPI_Config+0x8c>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 80080ae:	b345      	cbz	r5, 8008102 <QSPI_Config+0x11a>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80080b0:	6804      	ldr	r4, [r0, #0]
 80080b2:	688b      	ldr	r3, [r1, #8]
 80080b4:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80080b6:	ea46 0305 	orr.w	r3, r6, r5
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80080ba:	694e      	ldr	r6, [r1, #20]
 80080bc:	6908      	ldr	r0, [r1, #16]
 80080be:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 80080c2:	ea43 0502 	orr.w	r5, r3, r2
 80080c6:	04b6      	lsls	r6, r6, #18
 80080c8:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80080cc:	b187      	cbz	r7, 80080f0 <QSPI_Config+0x108>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80080ce:	4338      	orrs	r0, r7
 80080d0:	ea40 0008 	orr.w	r0, r0, r8
 80080d4:	4303      	orrs	r3, r0
 80080d6:	68c8      	ldr	r0, [r1, #12]
 80080d8:	ea43 030c 	orr.w	r3, r3, ip
 80080dc:	4303      	orrs	r3, r0
 80080de:	4333      	orrs	r3, r6
 80080e0:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80080e2:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80080e6:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80080e8:	d0c5      	beq.n	8008076 <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 80080ea:	684b      	ldr	r3, [r1, #4]
 80080ec:	61a3      	str	r3, [r4, #24]
 80080ee:	e7c2      	b.n	8008076 <QSPI_Config+0x8e>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80080f0:	ea40 0008 	orr.w	r0, r0, r8
 80080f4:	4303      	orrs	r3, r0
 80080f6:	ea43 030c 	orr.w	r3, r3, ip
 80080fa:	4333      	orrs	r3, r6
 80080fc:	432b      	orrs	r3, r5
 80080fe:	6163      	str	r3, [r4, #20]
 8008100:	e7b9      	b.n	8008076 <QSPI_Config+0x8e>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8008102:	b17f      	cbz	r7, 8008124 <QSPI_Config+0x13c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8008104:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 8008106:	6800      	ldr	r0, [r0, #0]
 8008108:	ea46 0307 	orr.w	r3, r6, r7
 800810c:	4313      	orrs	r3, r2
 800810e:	4323      	orrs	r3, r4
 8008110:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 8008112:	4323      	orrs	r3, r4
 8008114:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 8008116:	4323      	orrs	r3, r4
 8008118:	68cc      	ldr	r4, [r1, #12]
 800811a:	4323      	orrs	r3, r4
 800811c:	694c      	ldr	r4, [r1, #20]
 800811e:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 8008122:	e796      	b.n	8008052 <QSPI_Config+0x6a>
        if (cmd->DataMode != QSPI_DATA_NONE)
 8008124:	2e00      	cmp	r6, #0
 8008126:	d0a6      	beq.n	8008076 <QSPI_Config+0x8e>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8008128:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 800812a:	6800      	ldr	r0, [r0, #0]
 800812c:	4333      	orrs	r3, r6
 800812e:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 8008130:	431a      	orrs	r2, r3
 8008132:	4332      	orrs	r2, r6
 8008134:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 8008136:	694b      	ldr	r3, [r1, #20]
 8008138:	4332      	orrs	r2, r6
 800813a:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 800813e:	6142      	str	r2, [r0, #20]
}
 8008140:	e799      	b.n	8008076 <QSPI_Config+0x8e>

08008142 <QSPI_WaitFlagStateUntilTimeout>:
{
 8008142:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008146:	f8dd 8018 	ldr.w	r8, [sp, #24]
 800814a:	4604      	mov	r4, r0
 800814c:	460e      	mov	r6, r1
 800814e:	4615      	mov	r5, r2
 8008150:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 8008152:	6822      	ldr	r2, [r4, #0]
 8008154:	6893      	ldr	r3, [r2, #8]
 8008156:	4233      	tst	r3, r6
 8008158:	bf14      	ite	ne
 800815a:	2301      	movne	r3, #1
 800815c:	2300      	moveq	r3, #0
 800815e:	42ab      	cmp	r3, r5
 8008160:	d101      	bne.n	8008166 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 8008162:	2000      	movs	r0, #0
 8008164:	e012      	b.n	800818c <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8008166:	f1b8 3fff 	cmp.w	r8, #4294967295
 800816a:	d0f3      	beq.n	8008154 <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800816c:	f7fe f902 	bl	8006374 <HAL_GetTick>
 8008170:	1bc0      	subs	r0, r0, r7
 8008172:	4540      	cmp	r0, r8
 8008174:	d802      	bhi.n	800817c <QSPI_WaitFlagStateUntilTimeout+0x3a>
 8008176:	f1b8 0f00 	cmp.w	r8, #0
 800817a:	d1ea      	bne.n	8008152 <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 800817c:	2304      	movs	r3, #4
 800817e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 8008182:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8008184:	f043 0301 	orr.w	r3, r3, #1
 8008188:	6463      	str	r3, [r4, #68]	; 0x44
 800818a:	2001      	movs	r0, #1
}
 800818c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008190 <HAL_QSPI_Init>:
{
 8008190:	b530      	push	{r4, r5, lr}
 8008192:	b085      	sub	sp, #20
 8008194:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8008196:	f7fe f8ed 	bl	8006374 <HAL_GetTick>
 800819a:	4603      	mov	r3, r0
  if(hqspi == NULL)
 800819c:	2c00      	cmp	r4, #0
 800819e:	d047      	beq.n	8008230 <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 80081a0:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80081a4:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 80081a8:	b94a      	cbnz	r2, 80081be <HAL_QSPI_Init+0x2e>
 80081aa:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 80081ac:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 80081b0:	4620      	mov	r0, r4
 80081b2:	f7fa fcdb 	bl	8002b6c <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 80081b6:	f241 3288 	movw	r2, #5000	; 0x1388
 80081ba:	9b03      	ldr	r3, [sp, #12]
 80081bc:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 80081be:	6820      	ldr	r0, [r4, #0]
 80081c0:	68a1      	ldr	r1, [r4, #8]
 80081c2:	6802      	ldr	r2, [r0, #0]
 80081c4:	3901      	subs	r1, #1
 80081c6:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 80081ca:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80081ce:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80081d0:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80081d2:	9200      	str	r2, [sp, #0]
 80081d4:	2120      	movs	r1, #32
 80081d6:	2200      	movs	r2, #0
 80081d8:	4620      	mov	r0, r4
 80081da:	f7ff ffb2 	bl	8008142 <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 80081de:	bb10      	cbnz	r0, 8008226 <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 80081e0:	69e5      	ldr	r5, [r4, #28]
 80081e2:	68e3      	ldr	r3, [r4, #12]
 80081e4:	6822      	ldr	r2, [r4, #0]
 80081e6:	432b      	orrs	r3, r5
 80081e8:	6a25      	ldr	r5, [r4, #32]
 80081ea:	6811      	ldr	r1, [r2, #0]
 80081ec:	432b      	orrs	r3, r5
 80081ee:	6865      	ldr	r5, [r4, #4]
 80081f0:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 80081f4:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 80081f8:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 80081fc:	430b      	orrs	r3, r1
 80081fe:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 8008200:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8008204:	430b      	orrs	r3, r1
 8008206:	6921      	ldr	r1, [r4, #16]
 8008208:	6855      	ldr	r5, [r2, #4]
 800820a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800820e:	4909      	ldr	r1, [pc, #36]	; (8008234 <HAL_QSPI_Init+0xa4>)
 8008210:	4029      	ands	r1, r5
 8008212:	430b      	orrs	r3, r1
 8008214:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 8008216:	6813      	ldr	r3, [r2, #0]
 8008218:	f043 0301 	orr.w	r3, r3, #1
 800821c:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 800821e:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8008220:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 8008222:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8008226:	2300      	movs	r3, #0
 8008228:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 800822c:	b005      	add	sp, #20
 800822e:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 8008230:	2001      	movs	r0, #1
 8008232:	e7fb      	b.n	800822c <HAL_QSPI_Init+0x9c>
 8008234:	ffe0f8fe 	.word	0xffe0f8fe

08008238 <HAL_QSPI_DeInit>:
{
 8008238:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 800823a:	4604      	mov	r4, r0
 800823c:	b168      	cbz	r0, 800825a <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 800823e:	6802      	ldr	r2, [r0, #0]
 8008240:	6813      	ldr	r3, [r2, #0]
 8008242:	f023 0301 	bic.w	r3, r3, #1
 8008246:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 8008248:	f7fa fcea 	bl	8002c20 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800824c:	2000      	movs	r0, #0
 800824e:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 8008250:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8008254:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 8008258:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 800825a:	2001      	movs	r0, #1
 800825c:	e7fc      	b.n	8008258 <HAL_QSPI_DeInit+0x20>

0800825e <HAL_QSPI_Command>:
{
 800825e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008262:	4604      	mov	r4, r0
 8008264:	b085      	sub	sp, #20
 8008266:	4617      	mov	r7, r2
 8008268:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 800826a:	f7fe f883 	bl	8006374 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800826e:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8008272:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8008274:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8008276:	d034      	beq.n	80082e2 <HAL_QSPI_Command+0x84>
 8008278:	2201      	movs	r2, #1
 800827a:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800827e:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8008282:	2a01      	cmp	r2, #1
 8008284:	fa5f f882 	uxtb.w	r8, r2
 8008288:	f04f 0602 	mov.w	r6, #2
 800828c:	d127      	bne.n	80082de <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800828e:	2200      	movs	r2, #0
 8008290:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8008292:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 8008294:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8008298:	9700      	str	r7, [sp, #0]
 800829a:	2120      	movs	r1, #32
 800829c:	4620      	mov	r0, r4
 800829e:	f7ff ff50 	bl	8008142 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80082a2:	4605      	mov	r5, r0
 80082a4:	b9a0      	cbnz	r0, 80082d0 <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 80082a6:	4602      	mov	r2, r0
 80082a8:	4649      	mov	r1, r9
 80082aa:	4620      	mov	r0, r4
 80082ac:	f7ff fe9c 	bl	8007fe8 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 80082b0:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 80082b4:	9b03      	ldr	r3, [sp, #12]
 80082b6:	b94a      	cbnz	r2, 80082cc <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80082b8:	9700      	str	r7, [sp, #0]
 80082ba:	4642      	mov	r2, r8
 80082bc:	4631      	mov	r1, r6
 80082be:	4620      	mov	r0, r4
 80082c0:	f7ff ff3f 	bl	8008142 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 80082c4:	4605      	mov	r5, r0
 80082c6:	b918      	cbnz	r0, 80082d0 <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80082c8:	6823      	ldr	r3, [r4, #0]
 80082ca:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 80082cc:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80082d0:	2300      	movs	r3, #0
 80082d2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80082d6:	4628      	mov	r0, r5
 80082d8:	b005      	add	sp, #20
 80082da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 80082de:	4635      	mov	r5, r6
 80082e0:	e7f6      	b.n	80082d0 <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 80082e2:	2502      	movs	r5, #2
 80082e4:	e7f7      	b.n	80082d6 <HAL_QSPI_Command+0x78>

080082e6 <HAL_QSPI_AutoPolling>:
{
 80082e6:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 80082ea:	4604      	mov	r4, r0
 80082ec:	4615      	mov	r5, r2
 80082ee:	461e      	mov	r6, r3
 80082f0:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 80082f2:	f7fe f83f 	bl	8006374 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80082f6:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80082fa:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 80082fc:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80082fe:	d040      	beq.n	8008382 <HAL_QSPI_AutoPolling+0x9c>
 8008300:	2201      	movs	r2, #1
 8008302:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8008306:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800830a:	2a01      	cmp	r2, #1
 800830c:	b2d7      	uxtb	r7, r2
 800830e:	d136      	bne.n	800837e <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8008310:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8008312:	2200      	movs	r2, #0
 8008314:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8008316:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8008318:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 800831c:	9600      	str	r6, [sp, #0]
 800831e:	2120      	movs	r1, #32
 8008320:	4620      	mov	r0, r4
 8008322:	f7ff ff0e 	bl	8008142 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8008326:	bb20      	cbnz	r0, 8008372 <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8008328:	6821      	ldr	r1, [r4, #0]
 800832a:	682a      	ldr	r2, [r5, #0]
 800832c:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 800832e:	686a      	ldr	r2, [r5, #4]
 8008330:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 8008332:	68aa      	ldr	r2, [r5, #8]
 8008334:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8008336:	680a      	ldr	r2, [r1, #0]
 8008338:	6928      	ldr	r0, [r5, #16]
 800833a:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 800833e:	4302      	orrs	r2, r0
 8008340:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8008344:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 8008346:	68ea      	ldr	r2, [r5, #12]
 8008348:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 800834c:	4641      	mov	r1, r8
 800834e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8008352:	4620      	mov	r0, r4
 8008354:	f7ff fe48 	bl	8007fe8 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 8008358:	9b03      	ldr	r3, [sp, #12]
 800835a:	9600      	str	r6, [sp, #0]
 800835c:	463a      	mov	r2, r7
 800835e:	2108      	movs	r1, #8
 8008360:	4620      	mov	r0, r4
 8008362:	f7ff feee 	bl	8008142 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8008366:	b920      	cbnz	r0, 8008372 <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 8008368:	6823      	ldr	r3, [r4, #0]
 800836a:	2208      	movs	r2, #8
 800836c:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800836e:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8008372:	2300      	movs	r3, #0
 8008374:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8008378:	b004      	add	sp, #16
 800837a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 800837e:	2002      	movs	r0, #2
 8008380:	e7f7      	b.n	8008372 <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 8008382:	2002      	movs	r0, #2
 8008384:	e7f8      	b.n	8008378 <HAL_QSPI_AutoPolling+0x92>

08008386 <HAL_QSPI_MemoryMapped>:
{
 8008386:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008388:	4604      	mov	r4, r0
 800838a:	4616      	mov	r6, r2
 800838c:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800838e:	f7fd fff1 	bl	8006374 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8008392:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8008396:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8008398:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800839a:	d032      	beq.n	8008402 <HAL_QSPI_MemoryMapped+0x7c>
 800839c:	2201      	movs	r2, #1
 800839e:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80083a2:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80083a6:	2a01      	cmp	r2, #1
 80083a8:	d129      	bne.n	80083fe <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80083aa:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80083ac:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80083ae:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80083b0:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80083b4:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80083b6:	9100      	str	r1, [sp, #0]
 80083b8:	4620      	mov	r0, r4
 80083ba:	2120      	movs	r1, #32
 80083bc:	f7ff fec1 	bl	8008142 <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80083c0:	4605      	mov	r5, r0
 80083c2:	b9b0      	cbnz	r0, 80083f2 <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 80083c4:	6823      	ldr	r3, [r4, #0]
 80083c6:	6872      	ldr	r2, [r6, #4]
 80083c8:	6818      	ldr	r0, [r3, #0]
 80083ca:	f020 0008 	bic.w	r0, r0, #8
 80083ce:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 80083d0:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 80083d2:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 80083d4:	d107      	bne.n	80083e6 <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 80083d6:	6832      	ldr	r2, [r6, #0]
 80083d8:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 80083da:	2210      	movs	r2, #16
 80083dc:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 80083de:	681a      	ldr	r2, [r3, #0]
 80083e0:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 80083e4:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 80083e6:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 80083ea:	4639      	mov	r1, r7
 80083ec:	4620      	mov	r0, r4
 80083ee:	f7ff fdfb 	bl	8007fe8 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 80083f2:	2300      	movs	r3, #0
 80083f4:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80083f8:	4628      	mov	r0, r5
 80083fa:	b003      	add	sp, #12
 80083fc:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 80083fe:	2502      	movs	r5, #2
 8008400:	e7f7      	b.n	80083f2 <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 8008402:	2502      	movs	r5, #2
 8008404:	e7f8      	b.n	80083f8 <HAL_QSPI_MemoryMapped+0x72>

08008406 <HAL_QSPI_Abort>:
{
 8008406:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8008408:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 800840a:	f7fd ffb3 	bl	8006374 <HAL_GetTick>
 800840e:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8008410:	f894 0041 	ldrb.w	r0, [r4, #65]	; 0x41
 8008414:	f010 0002 	ands.w	r0, r0, #2
 8008418:	d03a      	beq.n	8008490 <HAL_QSPI_Abort+0x8a>
    __HAL_UNLOCK(hqspi);
 800841a:	2200      	movs	r2, #0
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 800841c:	6821      	ldr	r1, [r4, #0]
    __HAL_UNLOCK(hqspi);
 800841e:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 8008422:	680a      	ldr	r2, [r1, #0]
 8008424:	f012 0204 	ands.w	r2, r2, #4
 8008428:	d034      	beq.n	8008494 <HAL_QSPI_Abort+0x8e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800842a:	680a      	ldr	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 800842c:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800842e:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8008430:	f022 0204 	bic.w	r2, r2, #4
 8008434:	600a      	str	r2, [r1, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8008436:	f7fe f8ed 	bl	8006614 <HAL_DMA_Abort>
      if(status != HAL_OK)
 800843a:	9b03      	ldr	r3, [sp, #12]
 800843c:	b118      	cbz	r0, 8008446 <HAL_QSPI_Abort+0x40>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 800843e:	6c62      	ldr	r2, [r4, #68]	; 0x44
 8008440:	f042 0204 	orr.w	r2, r2, #4
 8008444:	6462      	str	r2, [r4, #68]	; 0x44
    if (__HAL_QSPI_GET_FLAG(hqspi, QSPI_FLAG_BUSY) != RESET)
 8008446:	6822      	ldr	r2, [r4, #0]
 8008448:	6891      	ldr	r1, [r2, #8]
 800844a:	0689      	lsls	r1, r1, #26
 800844c:	d51d      	bpl.n	800848a <HAL_QSPI_Abort+0x84>
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 800844e:	6811      	ldr	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8008450:	9303      	str	r3, [sp, #12]
      SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8008452:	f041 0102 	orr.w	r1, r1, #2
 8008456:	6011      	str	r1, [r2, #0]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8008458:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800845a:	9200      	str	r2, [sp, #0]
 800845c:	2102      	movs	r1, #2
 800845e:	2201      	movs	r2, #1
 8008460:	4620      	mov	r0, r4
 8008462:	f7ff fe6e 	bl	8008142 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8008466:	9b03      	ldr	r3, [sp, #12]
 8008468:	b990      	cbnz	r0, 8008490 <HAL_QSPI_Abort+0x8a>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800846a:	6822      	ldr	r2, [r4, #0]
 800846c:	2102      	movs	r1, #2
 800846e:	60d1      	str	r1, [r2, #12]
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8008470:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8008472:	9200      	str	r2, [sp, #0]
 8008474:	2120      	movs	r1, #32
 8008476:	4602      	mov	r2, r0
 8008478:	4620      	mov	r0, r4
 800847a:	f7ff fe62 	bl	8008142 <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 800847e:	b938      	cbnz	r0, 8008490 <HAL_QSPI_Abort+0x8a>
        CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 8008480:	6822      	ldr	r2, [r4, #0]
 8008482:	6953      	ldr	r3, [r2, #20]
 8008484:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 8008488:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 800848a:	2301      	movs	r3, #1
 800848c:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 8008490:	b004      	add	sp, #16
 8008492:	bd10      	pop	{r4, pc}
  HAL_StatusTypeDef status = HAL_OK;
 8008494:	4610      	mov	r0, r2
 8008496:	e7d6      	b.n	8008446 <HAL_QSPI_Abort+0x40>

08008498 <HAL_QSPI_Transmit>:
{
 8008498:	b5f0      	push	{r4, r5, r6, r7, lr}
 800849a:	4604      	mov	r4, r0
 800849c:	b085      	sub	sp, #20
 800849e:	4616      	mov	r6, r2
 80084a0:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 80084a2:	f7fd ff67 	bl	8006374 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80084a6:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 80084aa:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 80084ac:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 80084ae:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80084b0:	d04c      	beq.n	800854c <HAL_QSPI_Transmit+0xb4>
 80084b2:	2201      	movs	r2, #1
 80084b4:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80084b8:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80084bc:	2a01      	cmp	r2, #1
 80084be:	b2d0      	uxtb	r0, r2
 80084c0:	d142      	bne.n	8008548 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80084c2:	2200      	movs	r2, #0
 80084c4:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 80084c6:	2f00      	cmp	r7, #0
 80084c8:	d039      	beq.n	800853e <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 80084ca:	2212      	movs	r2, #18
 80084cc:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 80084d0:	692a      	ldr	r2, [r5, #16]
 80084d2:	3201      	adds	r2, #1
 80084d4:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80084d6:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 80084d8:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80084da:	3201      	adds	r2, #1
 80084dc:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 80084de:	696a      	ldr	r2, [r5, #20]
 80084e0:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 80084e4:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 80084e6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80084e8:	b9a2      	cbnz	r2, 8008514 <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80084ea:	9600      	str	r6, [sp, #0]
 80084ec:	2201      	movs	r2, #1
 80084ee:	2102      	movs	r1, #2
 80084f0:	4620      	mov	r0, r4
 80084f2:	f7ff fe26 	bl	8008142 <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 80084f6:	b928      	cbnz	r0, 8008504 <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80084f8:	6823      	ldr	r3, [r4, #0]
 80084fa:	2202      	movs	r2, #2
 80084fc:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 80084fe:	4620      	mov	r0, r4
 8008500:	f7ff ff81 	bl	8008406 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8008504:	2301      	movs	r3, #1
 8008506:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800850a:	2300      	movs	r3, #0
 800850c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8008510:	b005      	add	sp, #20
 8008512:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8008514:	9600      	str	r6, [sp, #0]
 8008516:	2201      	movs	r2, #1
 8008518:	2104      	movs	r1, #4
 800851a:	4620      	mov	r0, r4
 800851c:	9303      	str	r3, [sp, #12]
 800851e:	f7ff fe10 	bl	8008142 <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8008522:	2800      	cmp	r0, #0
 8008524:	d1ee      	bne.n	8008504 <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8008526:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8008528:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800852a:	7812      	ldrb	r2, [r2, #0]
 800852c:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 8008530:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8008532:	3201      	adds	r2, #1
 8008534:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8008536:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008538:	3a01      	subs	r2, #1
 800853a:	62e2      	str	r2, [r4, #44]	; 0x2c
 800853c:	e7d3      	b.n	80084e6 <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800853e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8008540:	f043 0308 	orr.w	r3, r3, #8
 8008544:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8008546:	e7e0      	b.n	800850a <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 8008548:	2002      	movs	r0, #2
 800854a:	e7de      	b.n	800850a <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 800854c:	2002      	movs	r0, #2
 800854e:	e7df      	b.n	8008510 <HAL_QSPI_Transmit+0x78>

08008550 <HAL_QSPI_Receive>:
{
 8008550:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008552:	4604      	mov	r4, r0
 8008554:	b085      	sub	sp, #20
 8008556:	4616      	mov	r6, r2
 8008558:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800855a:	f7fd ff0b 	bl	8006374 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 800855e:	6825      	ldr	r5, [r4, #0]
 8008560:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 8008564:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8008568:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800856a:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800856c:	d050      	beq.n	8008610 <HAL_QSPI_Receive+0xc0>
 800856e:	2201      	movs	r2, #1
 8008570:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8008574:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8008578:	2a01      	cmp	r2, #1
 800857a:	b2d0      	uxtb	r0, r2
 800857c:	d146      	bne.n	800860c <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800857e:	2200      	movs	r2, #0
 8008580:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8008582:	2f00      	cmp	r7, #0
 8008584:	d03d      	beq.n	8008602 <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 8008586:	2222      	movs	r2, #34	; 0x22
 8008588:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800858c:	692a      	ldr	r2, [r5, #16]
 800858e:	3201      	adds	r2, #1
 8008590:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8008592:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 8008594:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 8008596:	3201      	adds	r2, #1
 8008598:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 800859a:	6969      	ldr	r1, [r5, #20]
 800859c:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 80085a0:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 80085a4:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 80085a6:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 80085aa:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80085ac:	b9a2      	cbnz	r2, 80085d8 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80085ae:	9600      	str	r6, [sp, #0]
 80085b0:	2201      	movs	r2, #1
 80085b2:	2102      	movs	r1, #2
 80085b4:	4620      	mov	r0, r4
 80085b6:	f7ff fdc4 	bl	8008142 <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 80085ba:	b928      	cbnz	r0, 80085c8 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80085bc:	6823      	ldr	r3, [r4, #0]
 80085be:	2202      	movs	r2, #2
 80085c0:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 80085c2:	4620      	mov	r0, r4
 80085c4:	f7ff ff1f 	bl	8008406 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 80085c8:	2301      	movs	r3, #1
 80085ca:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80085ce:	2300      	movs	r3, #0
 80085d0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80085d4:	b005      	add	sp, #20
 80085d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 80085d8:	9600      	str	r6, [sp, #0]
 80085da:	2201      	movs	r2, #1
 80085dc:	2106      	movs	r1, #6
 80085de:	4620      	mov	r0, r4
 80085e0:	9303      	str	r3, [sp, #12]
 80085e2:	f7ff fdae 	bl	8008142 <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 80085e6:	2800      	cmp	r0, #0
 80085e8:	d1ee      	bne.n	80085c8 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 80085ea:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80085ec:	f895 1020 	ldrb.w	r1, [r5, #32]
 80085f0:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 80085f2:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 80085f4:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 80085f6:	3201      	adds	r2, #1
 80085f8:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 80085fa:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80085fc:	3a01      	subs	r2, #1
 80085fe:	63a2      	str	r2, [r4, #56]	; 0x38
 8008600:	e7d3      	b.n	80085aa <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8008602:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8008604:	f043 0308 	orr.w	r3, r3, #8
 8008608:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 800860a:	e7e0      	b.n	80085ce <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 800860c:	2002      	movs	r0, #2
 800860e:	e7de      	b.n	80085ce <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 8008610:	2002      	movs	r0, #2
 8008612:	e7df      	b.n	80085d4 <HAL_QSPI_Receive+0x84>

08008614 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8008614:	4913      	ldr	r1, [pc, #76]	; (8008664 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8008616:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8008618:	688b      	ldr	r3, [r1, #8]
 800861a:	f003 030c 	and.w	r3, r3, #12
 800861e:	2b04      	cmp	r3, #4
 8008620:	d01c      	beq.n	800865c <HAL_RCC_GetSysClockFreq+0x48>
 8008622:	2b08      	cmp	r3, #8
 8008624:	d11c      	bne.n	8008660 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8008626:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8008628:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 800862a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800862c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008630:	bf14      	ite	ne
 8008632:	480d      	ldrne	r0, [pc, #52]	; (8008668 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008634:	480d      	ldreq	r0, [pc, #52]	; (800866c <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008636:	f3c1 1188 	ubfx	r1, r1, #6, #9
 800863a:	bf18      	it	ne
 800863c:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 800863e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8008642:	fba1 0100 	umull	r0, r1, r1, r0
 8008646:	f7f8 faa1 	bl	8000b8c <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 800864a:	4b06      	ldr	r3, [pc, #24]	; (8008664 <HAL_RCC_GetSysClockFreq+0x50>)
 800864c:	685b      	ldr	r3, [r3, #4]
 800864e:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8008652:	3301      	adds	r3, #1
 8008654:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8008656:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 800865a:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800865c:	4802      	ldr	r0, [pc, #8]	; (8008668 <HAL_RCC_GetSysClockFreq+0x54>)
 800865e:	e7fc      	b.n	800865a <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8008660:	4802      	ldr	r0, [pc, #8]	; (800866c <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8008662:	e7fa      	b.n	800865a <HAL_RCC_GetSysClockFreq+0x46>
 8008664:	40023800 	.word	0x40023800
 8008668:	007a1200 	.word	0x007a1200
 800866c:	00f42400 	.word	0x00f42400

08008670 <HAL_RCC_ClockConfig>:
{
 8008670:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008674:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8008676:	4604      	mov	r4, r0
 8008678:	b910      	cbnz	r0, 8008680 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 800867a:	2001      	movs	r0, #1
}
 800867c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8008680:	4b44      	ldr	r3, [pc, #272]	; (8008794 <HAL_RCC_ClockConfig+0x124>)
 8008682:	681a      	ldr	r2, [r3, #0]
 8008684:	f002 020f 	and.w	r2, r2, #15
 8008688:	428a      	cmp	r2, r1
 800868a:	d328      	bcc.n	80086de <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800868c:	6822      	ldr	r2, [r4, #0]
 800868e:	0797      	lsls	r7, r2, #30
 8008690:	d42d      	bmi.n	80086ee <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8008692:	07d0      	lsls	r0, r2, #31
 8008694:	d441      	bmi.n	800871a <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8008696:	4b3f      	ldr	r3, [pc, #252]	; (8008794 <HAL_RCC_ClockConfig+0x124>)
 8008698:	681a      	ldr	r2, [r3, #0]
 800869a:	f002 020f 	and.w	r2, r2, #15
 800869e:	42aa      	cmp	r2, r5
 80086a0:	d866      	bhi.n	8008770 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80086a2:	6822      	ldr	r2, [r4, #0]
 80086a4:	0751      	lsls	r1, r2, #29
 80086a6:	d46c      	bmi.n	8008782 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80086a8:	0713      	lsls	r3, r2, #28
 80086aa:	d507      	bpl.n	80086bc <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 80086ac:	4a3a      	ldr	r2, [pc, #232]	; (8008798 <HAL_RCC_ClockConfig+0x128>)
 80086ae:	6921      	ldr	r1, [r4, #16]
 80086b0:	6893      	ldr	r3, [r2, #8]
 80086b2:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 80086b6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 80086ba:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80086bc:	f7ff ffaa 	bl	8008614 <HAL_RCC_GetSysClockFreq>
 80086c0:	4b35      	ldr	r3, [pc, #212]	; (8008798 <HAL_RCC_ClockConfig+0x128>)
 80086c2:	4a36      	ldr	r2, [pc, #216]	; (800879c <HAL_RCC_ClockConfig+0x12c>)
 80086c4:	689b      	ldr	r3, [r3, #8]
 80086c6:	f3c3 1303 	ubfx	r3, r3, #4, #4
 80086ca:	5cd3      	ldrb	r3, [r2, r3]
 80086cc:	40d8      	lsrs	r0, r3
 80086ce:	4b34      	ldr	r3, [pc, #208]	; (80087a0 <HAL_RCC_ClockConfig+0x130>)
 80086d0:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 80086d2:	4b34      	ldr	r3, [pc, #208]	; (80087a4 <HAL_RCC_ClockConfig+0x134>)
 80086d4:	6818      	ldr	r0, [r3, #0]
 80086d6:	f7fa fbf3 	bl	8002ec0 <HAL_InitTick>
  return HAL_OK;
 80086da:	2000      	movs	r0, #0
 80086dc:	e7ce      	b.n	800867c <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 80086de:	b2ca      	uxtb	r2, r1
 80086e0:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80086e2:	681b      	ldr	r3, [r3, #0]
 80086e4:	f003 030f 	and.w	r3, r3, #15
 80086e8:	428b      	cmp	r3, r1
 80086ea:	d1c6      	bne.n	800867a <HAL_RCC_ClockConfig+0xa>
 80086ec:	e7ce      	b.n	800868c <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 80086ee:	4b2a      	ldr	r3, [pc, #168]	; (8008798 <HAL_RCC_ClockConfig+0x128>)
 80086f0:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 80086f4:	bf1e      	ittt	ne
 80086f6:	6899      	ldrne	r1, [r3, #8]
 80086f8:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 80086fc:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 80086fe:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8008700:	bf42      	ittt	mi
 8008702:	6899      	ldrmi	r1, [r3, #8]
 8008704:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8008708:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 800870a:	4923      	ldr	r1, [pc, #140]	; (8008798 <HAL_RCC_ClockConfig+0x128>)
 800870c:	68a0      	ldr	r0, [r4, #8]
 800870e:	688b      	ldr	r3, [r1, #8]
 8008710:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8008714:	4303      	orrs	r3, r0
 8008716:	608b      	str	r3, [r1, #8]
 8008718:	e7bb      	b.n	8008692 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 800871a:	6862      	ldr	r2, [r4, #4]
 800871c:	4b1e      	ldr	r3, [pc, #120]	; (8008798 <HAL_RCC_ClockConfig+0x128>)
 800871e:	2a01      	cmp	r2, #1
 8008720:	d11c      	bne.n	800875c <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8008722:	681b      	ldr	r3, [r3, #0]
 8008724:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008728:	d0a7      	beq.n	800867a <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800872a:	4e1b      	ldr	r6, [pc, #108]	; (8008798 <HAL_RCC_ClockConfig+0x128>)
 800872c:	68b3      	ldr	r3, [r6, #8]
 800872e:	f023 0303 	bic.w	r3, r3, #3
 8008732:	4313      	orrs	r3, r2
 8008734:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8008736:	f7fd fe1d 	bl	8006374 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800873a:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 800873e:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8008740:	68b3      	ldr	r3, [r6, #8]
 8008742:	6862      	ldr	r2, [r4, #4]
 8008744:	f003 030c 	and.w	r3, r3, #12
 8008748:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 800874c:	d0a3      	beq.n	8008696 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 800874e:	f7fd fe11 	bl	8006374 <HAL_GetTick>
 8008752:	1bc0      	subs	r0, r0, r7
 8008754:	4540      	cmp	r0, r8
 8008756:	d9f3      	bls.n	8008740 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8008758:	2003      	movs	r0, #3
 800875a:	e78f      	b.n	800867c <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 800875c:	1e91      	subs	r1, r2, #2
 800875e:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008760:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8008762:	d802      	bhi.n	800876a <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008764:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8008768:	e7de      	b.n	8008728 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 800876a:	f013 0f02 	tst.w	r3, #2
 800876e:	e7db      	b.n	8008728 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8008770:	b2ea      	uxtb	r2, r5
 8008772:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8008774:	681b      	ldr	r3, [r3, #0]
 8008776:	f003 030f 	and.w	r3, r3, #15
 800877a:	42ab      	cmp	r3, r5
 800877c:	f47f af7d 	bne.w	800867a <HAL_RCC_ClockConfig+0xa>
 8008780:	e78f      	b.n	80086a2 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8008782:	4905      	ldr	r1, [pc, #20]	; (8008798 <HAL_RCC_ClockConfig+0x128>)
 8008784:	68e0      	ldr	r0, [r4, #12]
 8008786:	688b      	ldr	r3, [r1, #8]
 8008788:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 800878c:	4303      	orrs	r3, r0
 800878e:	608b      	str	r3, [r1, #8]
 8008790:	e78a      	b.n	80086a8 <HAL_RCC_ClockConfig+0x38>
 8008792:	bf00      	nop
 8008794:	40023c00 	.word	0x40023c00
 8008798:	40023800 	.word	0x40023800
 800879c:	08023429 	.word	0x08023429
 80087a0:	20000050 	.word	0x20000050
 80087a4:	20000058 	.word	0x20000058

080087a8 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 80087a8:	4b04      	ldr	r3, [pc, #16]	; (80087bc <HAL_RCC_GetPCLK1Freq+0x14>)
 80087aa:	4a05      	ldr	r2, [pc, #20]	; (80087c0 <HAL_RCC_GetPCLK1Freq+0x18>)
 80087ac:	689b      	ldr	r3, [r3, #8]
 80087ae:	f3c3 2382 	ubfx	r3, r3, #10, #3
 80087b2:	5cd3      	ldrb	r3, [r2, r3]
 80087b4:	4a03      	ldr	r2, [pc, #12]	; (80087c4 <HAL_RCC_GetPCLK1Freq+0x1c>)
 80087b6:	6810      	ldr	r0, [r2, #0]
}
 80087b8:	40d8      	lsrs	r0, r3
 80087ba:	4770      	bx	lr
 80087bc:	40023800 	.word	0x40023800
 80087c0:	08023439 	.word	0x08023439
 80087c4:	20000050 	.word	0x20000050

080087c8 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 80087c8:	230f      	movs	r3, #15
 80087ca:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 80087cc:	4b0b      	ldr	r3, [pc, #44]	; (80087fc <HAL_RCC_GetClockConfig+0x34>)
 80087ce:	689a      	ldr	r2, [r3, #8]
 80087d0:	f002 0203 	and.w	r2, r2, #3
 80087d4:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 80087d6:	689a      	ldr	r2, [r3, #8]
 80087d8:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 80087dc:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 80087de:	689a      	ldr	r2, [r3, #8]
 80087e0:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 80087e4:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 80087e6:	689b      	ldr	r3, [r3, #8]
 80087e8:	08db      	lsrs	r3, r3, #3
 80087ea:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 80087ee:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 80087f0:	4b03      	ldr	r3, [pc, #12]	; (8008800 <HAL_RCC_GetClockConfig+0x38>)
 80087f2:	681b      	ldr	r3, [r3, #0]
 80087f4:	f003 030f 	and.w	r3, r3, #15
 80087f8:	600b      	str	r3, [r1, #0]
}
 80087fa:	4770      	bx	lr
 80087fc:	40023800 	.word	0x40023800
 8008800:	40023c00 	.word	0x40023c00

08008804 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8008804:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8008806:	6802      	ldr	r2, [r0, #0]
{
 8008808:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 800880a:	0610      	lsls	r0, r2, #24
 800880c:	d508      	bpl.n	8008820 <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 800880e:	49aa      	ldr	r1, [pc, #680]	; (8008ab8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8008810:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8008812:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8008816:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 800881a:	4303      	orrs	r3, r0
 800881c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 8008820:	05d1      	lsls	r1, r2, #23
 8008822:	d508      	bpl.n	8008836 <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 8008824:	49a4      	ldr	r1, [pc, #656]	; (8008ab8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8008826:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8008828:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 800882c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8008830:	4303      	orrs	r3, r0
 8008832:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8008836:	f012 0f43 	tst.w	r2, #67	; 0x43
 800883a:	d173      	bne.n	8008924 <HAL_RCCEx_PeriphCLKConfig+0x120>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 800883c:	6823      	ldr	r3, [r4, #0]
 800883e:	f013 0f0c 	tst.w	r3, #12
 8008842:	f000 80c1 	beq.w	80089c8 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8008846:	4b9d      	ldr	r3, [pc, #628]	; (8008abc <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8008848:	4d9b      	ldr	r5, [pc, #620]	; (8008ab8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_DISABLE();
 800884a:	2200      	movs	r2, #0
 800884c:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800884e:	f7fd fd91 	bl	8006374 <HAL_GetTick>
 8008852:	4606      	mov	r6, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8008854:	682b      	ldr	r3, [r5, #0]
 8008856:	009b      	lsls	r3, r3, #2
 8008858:	f100 80fc 	bmi.w	8008a54 <HAL_RCCEx_PeriphCLKConfig+0x250>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 800885c:	6821      	ldr	r1, [r4, #0]
 800885e:	074f      	lsls	r7, r1, #29
 8008860:	d51a      	bpl.n	8008898 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8008862:	f8d5 3088 	ldr.w	r3, [r5, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8008866:	f8d5 2088 	ldr.w	r2, [r5, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 800886a:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 800886e:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8008872:	4313      	orrs	r3, r2
 8008874:	6922      	ldr	r2, [r4, #16]
 8008876:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800887a:	69a2      	ldr	r2, [r4, #24]
 800887c:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8008880:	f8c5 3088 	str.w	r3, [r5, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8008884:	f8d5 308c 	ldr.w	r3, [r5, #140]	; 0x8c
 8008888:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800888a:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 800888e:	3a01      	subs	r2, #1
 8008890:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 8008894:	f8c5 308c 	str.w	r3, [r5, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8008898:	070e      	lsls	r6, r1, #28
 800889a:	d519      	bpl.n	80088d0 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 800889c:	4a86      	ldr	r2, [pc, #536]	; (8008ab8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 800889e:	f8d2 3088 	ldr.w	r3, [r2, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80088a2:	f8d2 0088 	ldr.w	r0, [r2, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 80088a6:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 80088aa:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 80088ae:	4303      	orrs	r3, r0
 80088b0:	6920      	ldr	r0, [r4, #16]
 80088b2:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 80088b6:	69e0      	ldr	r0, [r4, #28]
 80088b8:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 80088bc:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 80088c0:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 80088c4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 80088c6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 80088ca:	4303      	orrs	r3, r0
 80088cc:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 80088d0:	060d      	lsls	r5, r1, #24
 80088d2:	d517      	bpl.n	8008904 <HAL_RCCEx_PeriphCLKConfig+0x100>
 80088d4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80088d6:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 80088da:	d113      	bne.n	8008904 <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 80088dc:	4976      	ldr	r1, [pc, #472]	; (8008ab8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 80088de:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 80088e2:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 80088e6:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 80088ea:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 80088ee:	4313      	orrs	r3, r2
 80088f0:	6922      	ldr	r2, [r4, #16]
 80088f2:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 80088f6:	6962      	ldr	r2, [r4, #20]
 80088f8:	0852      	lsrs	r2, r2, #1
 80088fa:	3a01      	subs	r2, #1
 80088fc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8008900:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8008904:	4b6d      	ldr	r3, [pc, #436]	; (8008abc <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8008906:	4e6c      	ldr	r6, [pc, #432]	; (8008ab8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLSAI_ENABLE();
 8008908:	2201      	movs	r2, #1
 800890a:	671a      	str	r2, [r3, #112]	; 0x70
    tickstart = HAL_GetTick();
 800890c:	f7fd fd32 	bl	8006374 <HAL_GetTick>
 8008910:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8008912:	6833      	ldr	r3, [r6, #0]
 8008914:	0098      	lsls	r0, r3, #2
 8008916:	d459      	bmi.n	80089cc <HAL_RCCEx_PeriphCLKConfig+0x1c8>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8008918:	f7fd fd2c 	bl	8006374 <HAL_GetTick>
 800891c:	1b40      	subs	r0, r0, r5
 800891e:	2802      	cmp	r0, #2
 8008920:	d9f7      	bls.n	8008912 <HAL_RCCEx_PeriphCLKConfig+0x10e>
 8008922:	e04e      	b.n	80089c2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_PLLI2S_DISABLE();
 8008924:	4b65      	ldr	r3, [pc, #404]	; (8008abc <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8008926:	4e64      	ldr	r6, [pc, #400]	; (8008ab8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_DISABLE();
 8008928:	2200      	movs	r2, #0
 800892a:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800892c:	f7fd fd22 	bl	8006374 <HAL_GetTick>
 8008930:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8008932:	6833      	ldr	r3, [r6, #0]
 8008934:	011b      	lsls	r3, r3, #4
 8008936:	d43f      	bmi.n	80089b8 <HAL_RCCEx_PeriphCLKConfig+0x1b4>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8008938:	6821      	ldr	r1, [r4, #0]
 800893a:	07cf      	lsls	r7, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 800893c:	bf41      	itttt	mi
 800893e:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8008942:	071b      	lslmi	r3, r3, #28
 8008944:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8008948:	f8c6 3084 	strmi.w	r3, [r6, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 800894c:	078e      	lsls	r6, r1, #30
 800894e:	d515      	bpl.n	800897c <HAL_RCCEx_PeriphCLKConfig+0x178>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8008950:	4a59      	ldr	r2, [pc, #356]	; (8008ab8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8008952:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8008954:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8008958:	6865      	ldr	r5, [r4, #4]
 800895a:	061b      	lsls	r3, r3, #24
 800895c:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8008960:	ea43 1385 	orr.w	r3, r3, r5, lsl #6
 8008964:	4303      	orrs	r3, r0
 8008966:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 800896a:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 800896e:	6a23      	ldr	r3, [r4, #32]
 8008970:	f020 001f 	bic.w	r0, r0, #31
 8008974:	3b01      	subs	r3, #1
 8008976:	4303      	orrs	r3, r0
 8008978:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 800897c:	064d      	lsls	r5, r1, #25
 800897e:	d50a      	bpl.n	8008996 <HAL_RCCEx_PeriphCLKConfig+0x192>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8008980:	68e3      	ldr	r3, [r4, #12]
 8008982:	6862      	ldr	r2, [r4, #4]
 8008984:	061b      	lsls	r3, r3, #24
 8008986:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 800898a:	68a2      	ldr	r2, [r4, #8]
 800898c:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8008990:	4a49      	ldr	r2, [pc, #292]	; (8008ab8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8008992:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8008996:	4b49      	ldr	r3, [pc, #292]	; (8008abc <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8008998:	4e47      	ldr	r6, [pc, #284]	; (8008ab8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    __HAL_RCC_PLLI2S_ENABLE();
 800899a:	2201      	movs	r2, #1
 800899c:	669a      	str	r2, [r3, #104]	; 0x68
    tickstart = HAL_GetTick();
 800899e:	f7fd fce9 	bl	8006374 <HAL_GetTick>
 80089a2:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 80089a4:	6833      	ldr	r3, [r6, #0]
 80089a6:	0118      	lsls	r0, r3, #4
 80089a8:	f53f af48 	bmi.w	800883c <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80089ac:	f7fd fce2 	bl	8006374 <HAL_GetTick>
 80089b0:	1b40      	subs	r0, r0, r5
 80089b2:	2802      	cmp	r0, #2
 80089b4:	d9f6      	bls.n	80089a4 <HAL_RCCEx_PeriphCLKConfig+0x1a0>
 80089b6:	e004      	b.n	80089c2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 80089b8:	f7fd fcdc 	bl	8006374 <HAL_GetTick>
 80089bc:	1b40      	subs	r0, r0, r5
 80089be:	2802      	cmp	r0, #2
 80089c0:	d9b7      	bls.n	8008932 <HAL_RCCEx_PeriphCLKConfig+0x12e>
        return HAL_TIMEOUT;
 80089c2:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 80089c4:	b003      	add	sp, #12
 80089c6:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 80089c8:	0619      	lsls	r1, r3, #24
 80089ca:	d43e      	bmi.n	8008a4a <HAL_RCCEx_PeriphCLKConfig+0x246>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 80089cc:	6823      	ldr	r3, [r4, #0]
 80089ce:	069a      	lsls	r2, r3, #26
 80089d0:	d530      	bpl.n	8008a34 <HAL_RCCEx_PeriphCLKConfig+0x230>
    __HAL_RCC_PWR_CLK_ENABLE();
 80089d2:	2300      	movs	r3, #0
 80089d4:	9301      	str	r3, [sp, #4]
 80089d6:	4b38      	ldr	r3, [pc, #224]	; (8008ab8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    PWR->CR |= PWR_CR_DBP;
 80089d8:	4d39      	ldr	r5, [pc, #228]	; (8008ac0 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
    __HAL_RCC_PWR_CLK_ENABLE();
 80089da:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 80089dc:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 80089e0:	641a      	str	r2, [r3, #64]	; 0x40
 80089e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80089e4:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80089e8:	9301      	str	r3, [sp, #4]
 80089ea:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 80089ec:	682b      	ldr	r3, [r5, #0]
 80089ee:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80089f2:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 80089f4:	f7fd fcbe 	bl	8006374 <HAL_GetTick>
 80089f8:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 80089fa:	682b      	ldr	r3, [r5, #0]
 80089fc:	05d9      	lsls	r1, r3, #23
 80089fe:	d530      	bpl.n	8008a62 <HAL_RCCEx_PeriphCLKConfig+0x25e>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8008a00:	4d2d      	ldr	r5, [pc, #180]	; (8008ab8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8008a02:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8008a04:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8008a08:	d131      	bne.n	8008a6e <HAL_RCCEx_PeriphCLKConfig+0x26a>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8008a0a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008a0c:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8008a10:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8008a14:	4a28      	ldr	r2, [pc, #160]	; (8008ab8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
 8008a16:	d14b      	bne.n	8008ab0 <HAL_RCCEx_PeriphCLKConfig+0x2ac>
 8008a18:	6891      	ldr	r1, [r2, #8]
 8008a1a:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8008a1e:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8008a22:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8008a26:	4301      	orrs	r1, r0
 8008a28:	6091      	str	r1, [r2, #8]
 8008a2a:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8008a2c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8008a30:	430b      	orrs	r3, r1
 8008a32:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8008a34:	6820      	ldr	r0, [r4, #0]
 8008a36:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8008a3a:	bf1f      	itttt	ne
 8008a3c:	4b21      	ldrne	r3, [pc, #132]	; (8008ac4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8008a3e:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 8008a42:	f8c3 21e0 	strne.w	r2, [r3, #480]	; 0x1e0
  return HAL_OK;
 8008a46:	2000      	movne	r0, #0
 8008a48:	e7bc      	b.n	80089c4 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 8008a4a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8008a4c:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8008a50:	d1bc      	bne.n	80089cc <HAL_RCCEx_PeriphCLKConfig+0x1c8>
 8008a52:	e6f8      	b.n	8008846 <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8008a54:	f7fd fc8e 	bl	8006374 <HAL_GetTick>
 8008a58:	1b80      	subs	r0, r0, r6
 8008a5a:	2802      	cmp	r0, #2
 8008a5c:	f67f aefa 	bls.w	8008854 <HAL_RCCEx_PeriphCLKConfig+0x50>
 8008a60:	e7af      	b.n	80089c2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8008a62:	f7fd fc87 	bl	8006374 <HAL_GetTick>
 8008a66:	1b80      	subs	r0, r0, r6
 8008a68:	2802      	cmp	r0, #2
 8008a6a:	d9c6      	bls.n	80089fa <HAL_RCCEx_PeriphCLKConfig+0x1f6>
 8008a6c:	e7a9      	b.n	80089c2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8008a6e:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008a70:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8008a74:	4293      	cmp	r3, r2
 8008a76:	d0c8      	beq.n	8008a0a <HAL_RCCEx_PeriphCLKConfig+0x206>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8008a78:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8008a7a:	4a10      	ldr	r2, [pc, #64]	; (8008abc <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
 8008a7c:	2101      	movs	r1, #1
 8008a7e:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8008a82:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8008a86:	2100      	movs	r1, #0
 8008a88:	f8c2 1e40 	str.w	r1, [r2, #3648]	; 0xe40
      RCC->BDCR = tmpreg1;
 8008a8c:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8008a8e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8008a90:	07da      	lsls	r2, r3, #31
 8008a92:	d5ba      	bpl.n	8008a0a <HAL_RCCEx_PeriphCLKConfig+0x206>
        tickstart = HAL_GetTick();
 8008a94:	f7fd fc6e 	bl	8006374 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008a98:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8008a9c:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008a9e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8008aa0:	079b      	lsls	r3, r3, #30
 8008aa2:	d4b2      	bmi.n	8008a0a <HAL_RCCEx_PeriphCLKConfig+0x206>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008aa4:	f7fd fc66 	bl	8006374 <HAL_GetTick>
 8008aa8:	1b80      	subs	r0, r0, r6
 8008aaa:	42b8      	cmp	r0, r7
 8008aac:	d9f7      	bls.n	8008a9e <HAL_RCCEx_PeriphCLKConfig+0x29a>
 8008aae:	e788      	b.n	80089c2 <HAL_RCCEx_PeriphCLKConfig+0x1be>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8008ab0:	6891      	ldr	r1, [r2, #8]
 8008ab2:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8008ab6:	e7b7      	b.n	8008a28 <HAL_RCCEx_PeriphCLKConfig+0x224>
 8008ab8:	40023800 	.word	0x40023800
 8008abc:	42470000 	.word	0x42470000
 8008ac0:	40007000 	.word	0x40007000
 8008ac4:	42471000 	.word	0x42471000

08008ac8 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8008ac8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8008acc:	4604      	mov	r4, r0
 8008ace:	b340      	cbz	r0, 8008b22 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8008ad0:	6803      	ldr	r3, [r0, #0]
 8008ad2:	07dd      	lsls	r5, r3, #31
 8008ad4:	d410      	bmi.n	8008af8 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8008ad6:	6823      	ldr	r3, [r4, #0]
 8008ad8:	0798      	lsls	r0, r3, #30
 8008ada:	d45e      	bmi.n	8008b9a <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8008adc:	6823      	ldr	r3, [r4, #0]
 8008ade:	071a      	lsls	r2, r3, #28
 8008ae0:	f100 80a0 	bmi.w	8008c24 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8008ae4:	6823      	ldr	r3, [r4, #0]
 8008ae6:	075b      	lsls	r3, r3, #29
 8008ae8:	f100 80c0 	bmi.w	8008c6c <HAL_RCC_OscConfig+0x1a4>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8008aec:	69a0      	ldr	r0, [r4, #24]
 8008aee:	2800      	cmp	r0, #0
 8008af0:	f040 8128 	bne.w	8008d44 <HAL_RCC_OscConfig+0x27c>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8008af4:	2000      	movs	r0, #0
 8008af6:	e02b      	b.n	8008b50 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8008af8:	4b8f      	ldr	r3, [pc, #572]	; (8008d38 <HAL_RCC_OscConfig+0x270>)
 8008afa:	689a      	ldr	r2, [r3, #8]
 8008afc:	f002 020c 	and.w	r2, r2, #12
 8008b00:	2a04      	cmp	r2, #4
 8008b02:	d007      	beq.n	8008b14 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8008b04:	689a      	ldr	r2, [r3, #8]
 8008b06:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8008b0a:	2a08      	cmp	r2, #8
 8008b0c:	d10b      	bne.n	8008b26 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8008b0e:	685a      	ldr	r2, [r3, #4]
 8008b10:	0251      	lsls	r1, r2, #9
 8008b12:	d508      	bpl.n	8008b26 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8008b14:	4b88      	ldr	r3, [pc, #544]	; (8008d38 <HAL_RCC_OscConfig+0x270>)
 8008b16:	681b      	ldr	r3, [r3, #0]
 8008b18:	039a      	lsls	r2, r3, #14
 8008b1a:	d5dc      	bpl.n	8008ad6 <HAL_RCC_OscConfig+0xe>
 8008b1c:	6863      	ldr	r3, [r4, #4]
 8008b1e:	2b00      	cmp	r3, #0
 8008b20:	d1d9      	bne.n	8008ad6 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 8008b22:	2001      	movs	r0, #1
 8008b24:	e014      	b.n	8008b50 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8008b26:	6862      	ldr	r2, [r4, #4]
 8008b28:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8008b2c:	d113      	bne.n	8008b56 <HAL_RCC_OscConfig+0x8e>
 8008b2e:	681a      	ldr	r2, [r3, #0]
 8008b30:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8008b34:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8008b36:	f7fd fc1d 	bl	8006374 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8008b3a:	4e7f      	ldr	r6, [pc, #508]	; (8008d38 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8008b3c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8008b3e:	6833      	ldr	r3, [r6, #0]
 8008b40:	039b      	lsls	r3, r3, #14
 8008b42:	d4c8      	bmi.n	8008ad6 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8008b44:	f7fd fc16 	bl	8006374 <HAL_GetTick>
 8008b48:	1b40      	subs	r0, r0, r5
 8008b4a:	2864      	cmp	r0, #100	; 0x64
 8008b4c:	d9f7      	bls.n	8008b3e <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 8008b4e:	2003      	movs	r0, #3
}
 8008b50:	b002      	add	sp, #8
 8008b52:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8008b56:	4d78      	ldr	r5, [pc, #480]	; (8008d38 <HAL_RCC_OscConfig+0x270>)
 8008b58:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8008b5c:	682b      	ldr	r3, [r5, #0]
 8008b5e:	d107      	bne.n	8008b70 <HAL_RCC_OscConfig+0xa8>
 8008b60:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8008b64:	602b      	str	r3, [r5, #0]
 8008b66:	682b      	ldr	r3, [r5, #0]
 8008b68:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8008b6c:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8008b6e:	e7e2      	b.n	8008b36 <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8008b70:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8008b74:	602b      	str	r3, [r5, #0]
 8008b76:	682b      	ldr	r3, [r5, #0]
 8008b78:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8008b7c:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8008b7e:	2a00      	cmp	r2, #0
 8008b80:	d1d9      	bne.n	8008b36 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 8008b82:	f7fd fbf7 	bl	8006374 <HAL_GetTick>
 8008b86:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8008b88:	682b      	ldr	r3, [r5, #0]
 8008b8a:	039f      	lsls	r7, r3, #14
 8008b8c:	d5a3      	bpl.n	8008ad6 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8008b8e:	f7fd fbf1 	bl	8006374 <HAL_GetTick>
 8008b92:	1b80      	subs	r0, r0, r6
 8008b94:	2864      	cmp	r0, #100	; 0x64
 8008b96:	d9f7      	bls.n	8008b88 <HAL_RCC_OscConfig+0xc0>
 8008b98:	e7d9      	b.n	8008b4e <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8008b9a:	4b67      	ldr	r3, [pc, #412]	; (8008d38 <HAL_RCC_OscConfig+0x270>)
 8008b9c:	689a      	ldr	r2, [r3, #8]
 8008b9e:	f012 0f0c 	tst.w	r2, #12
 8008ba2:	d007      	beq.n	8008bb4 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8008ba4:	689a      	ldr	r2, [r3, #8]
 8008ba6:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8008baa:	2a08      	cmp	r2, #8
 8008bac:	d111      	bne.n	8008bd2 <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8008bae:	685b      	ldr	r3, [r3, #4]
 8008bb0:	025e      	lsls	r6, r3, #9
 8008bb2:	d40e      	bmi.n	8008bd2 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8008bb4:	4a60      	ldr	r2, [pc, #384]	; (8008d38 <HAL_RCC_OscConfig+0x270>)
 8008bb6:	6813      	ldr	r3, [r2, #0]
 8008bb8:	079d      	lsls	r5, r3, #30
 8008bba:	d502      	bpl.n	8008bc2 <HAL_RCC_OscConfig+0xfa>
 8008bbc:	68e3      	ldr	r3, [r4, #12]
 8008bbe:	2b01      	cmp	r3, #1
 8008bc0:	d1af      	bne.n	8008b22 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8008bc2:	6813      	ldr	r3, [r2, #0]
 8008bc4:	6921      	ldr	r1, [r4, #16]
 8008bc6:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8008bca:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8008bce:	6013      	str	r3, [r2, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8008bd0:	e784      	b.n	8008adc <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8008bd2:	68e2      	ldr	r2, [r4, #12]
 8008bd4:	4b59      	ldr	r3, [pc, #356]	; (8008d3c <HAL_RCC_OscConfig+0x274>)
 8008bd6:	b1b2      	cbz	r2, 8008c06 <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8008bd8:	2201      	movs	r2, #1
 8008bda:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8008bdc:	f7fd fbca 	bl	8006374 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008be0:	4d55      	ldr	r5, [pc, #340]	; (8008d38 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8008be2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8008be4:	682b      	ldr	r3, [r5, #0]
 8008be6:	0798      	lsls	r0, r3, #30
 8008be8:	d507      	bpl.n	8008bfa <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8008bea:	682b      	ldr	r3, [r5, #0]
 8008bec:	6922      	ldr	r2, [r4, #16]
 8008bee:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8008bf2:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8008bf6:	602b      	str	r3, [r5, #0]
 8008bf8:	e770      	b.n	8008adc <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8008bfa:	f7fd fbbb 	bl	8006374 <HAL_GetTick>
 8008bfe:	1b80      	subs	r0, r0, r6
 8008c00:	2802      	cmp	r0, #2
 8008c02:	d9ef      	bls.n	8008be4 <HAL_RCC_OscConfig+0x11c>
 8008c04:	e7a3      	b.n	8008b4e <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 8008c06:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8008c08:	f7fd fbb4 	bl	8006374 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8008c0c:	4e4a      	ldr	r6, [pc, #296]	; (8008d38 <HAL_RCC_OscConfig+0x270>)
        tickstart = HAL_GetTick();
 8008c0e:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8008c10:	6833      	ldr	r3, [r6, #0]
 8008c12:	0799      	lsls	r1, r3, #30
 8008c14:	f57f af62 	bpl.w	8008adc <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8008c18:	f7fd fbac 	bl	8006374 <HAL_GetTick>
 8008c1c:	1b40      	subs	r0, r0, r5
 8008c1e:	2802      	cmp	r0, #2
 8008c20:	d9f6      	bls.n	8008c10 <HAL_RCC_OscConfig+0x148>
 8008c22:	e794      	b.n	8008b4e <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8008c24:	6962      	ldr	r2, [r4, #20]
 8008c26:	4b45      	ldr	r3, [pc, #276]	; (8008d3c <HAL_RCC_OscConfig+0x274>)
 8008c28:	b182      	cbz	r2, 8008c4c <HAL_RCC_OscConfig+0x184>
      __HAL_RCC_LSI_ENABLE();
 8008c2a:	2201      	movs	r2, #1
 8008c2c:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8008c30:	f7fd fba0 	bl	8006374 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8008c34:	4e40      	ldr	r6, [pc, #256]	; (8008d38 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8008c36:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8008c38:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8008c3a:	079f      	lsls	r7, r3, #30
 8008c3c:	f53f af52 	bmi.w	8008ae4 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8008c40:	f7fd fb98 	bl	8006374 <HAL_GetTick>
 8008c44:	1b40      	subs	r0, r0, r5
 8008c46:	2802      	cmp	r0, #2
 8008c48:	d9f6      	bls.n	8008c38 <HAL_RCC_OscConfig+0x170>
 8008c4a:	e780      	b.n	8008b4e <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 8008c4c:	f8c3 2e80 	str.w	r2, [r3, #3712]	; 0xe80
      tickstart = HAL_GetTick();
 8008c50:	f7fd fb90 	bl	8006374 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8008c54:	4e38      	ldr	r6, [pc, #224]	; (8008d38 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8008c56:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8008c58:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8008c5a:	0798      	lsls	r0, r3, #30
 8008c5c:	f57f af42 	bpl.w	8008ae4 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8008c60:	f7fd fb88 	bl	8006374 <HAL_GetTick>
 8008c64:	1b40      	subs	r0, r0, r5
 8008c66:	2802      	cmp	r0, #2
 8008c68:	d9f6      	bls.n	8008c58 <HAL_RCC_OscConfig+0x190>
 8008c6a:	e770      	b.n	8008b4e <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8008c6c:	4b32      	ldr	r3, [pc, #200]	; (8008d38 <HAL_RCC_OscConfig+0x270>)
 8008c6e:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8008c70:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8008c74:	d128      	bne.n	8008cc8 <HAL_RCC_OscConfig+0x200>
      __HAL_RCC_PWR_CLK_ENABLE();
 8008c76:	9201      	str	r2, [sp, #4]
 8008c78:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8008c7a:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8008c7e:	641a      	str	r2, [r3, #64]	; 0x40
 8008c80:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8008c82:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008c86:	9301      	str	r3, [sp, #4]
 8008c88:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8008c8a:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8008c8c:	4d2c      	ldr	r5, [pc, #176]	; (8008d40 <HAL_RCC_OscConfig+0x278>)
 8008c8e:	682b      	ldr	r3, [r5, #0]
 8008c90:	05d9      	lsls	r1, r3, #23
 8008c92:	d51b      	bpl.n	8008ccc <HAL_RCC_OscConfig+0x204>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8008c94:	68a3      	ldr	r3, [r4, #8]
 8008c96:	4d28      	ldr	r5, [pc, #160]	; (8008d38 <HAL_RCC_OscConfig+0x270>)
 8008c98:	2b01      	cmp	r3, #1
 8008c9a:	d127      	bne.n	8008cec <HAL_RCC_OscConfig+0x224>
 8008c9c:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8008c9e:	f043 0301 	orr.w	r3, r3, #1
 8008ca2:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 8008ca4:	f7fd fb66 	bl	8006374 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008ca8:	4e23      	ldr	r6, [pc, #140]	; (8008d38 <HAL_RCC_OscConfig+0x270>)
      tickstart = HAL_GetTick();
 8008caa:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008cac:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8008cb0:	6f33      	ldr	r3, [r6, #112]	; 0x70
 8008cb2:	079b      	lsls	r3, r3, #30
 8008cb4:	d539      	bpl.n	8008d2a <HAL_RCC_OscConfig+0x262>
    if(pwrclkchanged == SET)
 8008cb6:	2f00      	cmp	r7, #0
 8008cb8:	f43f af18 	beq.w	8008aec <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 8008cbc:	4a1e      	ldr	r2, [pc, #120]	; (8008d38 <HAL_RCC_OscConfig+0x270>)
 8008cbe:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8008cc0:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8008cc4:	6413      	str	r3, [r2, #64]	; 0x40
 8008cc6:	e711      	b.n	8008aec <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 8008cc8:	2700      	movs	r7, #0
 8008cca:	e7df      	b.n	8008c8c <HAL_RCC_OscConfig+0x1c4>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8008ccc:	682b      	ldr	r3, [r5, #0]
 8008cce:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008cd2:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 8008cd4:	f7fd fb4e 	bl	8006374 <HAL_GetTick>
 8008cd8:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8008cda:	682b      	ldr	r3, [r5, #0]
 8008cdc:	05da      	lsls	r2, r3, #23
 8008cde:	d4d9      	bmi.n	8008c94 <HAL_RCC_OscConfig+0x1cc>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8008ce0:	f7fd fb48 	bl	8006374 <HAL_GetTick>
 8008ce4:	1b80      	subs	r0, r0, r6
 8008ce6:	2802      	cmp	r0, #2
 8008ce8:	d9f7      	bls.n	8008cda <HAL_RCC_OscConfig+0x212>
 8008cea:	e730      	b.n	8008b4e <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8008cec:	2b05      	cmp	r3, #5
 8008cee:	d104      	bne.n	8008cfa <HAL_RCC_OscConfig+0x232>
 8008cf0:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8008cf2:	f043 0304 	orr.w	r3, r3, #4
 8008cf6:	672b      	str	r3, [r5, #112]	; 0x70
 8008cf8:	e7d0      	b.n	8008c9c <HAL_RCC_OscConfig+0x1d4>
 8008cfa:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8008cfc:	f022 0201 	bic.w	r2, r2, #1
 8008d00:	672a      	str	r2, [r5, #112]	; 0x70
 8008d02:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8008d04:	f022 0204 	bic.w	r2, r2, #4
 8008d08:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8008d0a:	2b00      	cmp	r3, #0
 8008d0c:	d1ca      	bne.n	8008ca4 <HAL_RCC_OscConfig+0x1dc>
      tickstart = HAL_GetTick();
 8008d0e:	f7fd fb31 	bl	8006374 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008d12:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8008d16:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8008d18:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8008d1a:	0798      	lsls	r0, r3, #30
 8008d1c:	d5cb      	bpl.n	8008cb6 <HAL_RCC_OscConfig+0x1ee>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008d1e:	f7fd fb29 	bl	8006374 <HAL_GetTick>
 8008d22:	1b80      	subs	r0, r0, r6
 8008d24:	4540      	cmp	r0, r8
 8008d26:	d9f7      	bls.n	8008d18 <HAL_RCC_OscConfig+0x250>
 8008d28:	e711      	b.n	8008b4e <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8008d2a:	f7fd fb23 	bl	8006374 <HAL_GetTick>
 8008d2e:	1b40      	subs	r0, r0, r5
 8008d30:	4540      	cmp	r0, r8
 8008d32:	d9bd      	bls.n	8008cb0 <HAL_RCC_OscConfig+0x1e8>
 8008d34:	e70b      	b.n	8008b4e <HAL_RCC_OscConfig+0x86>
 8008d36:	bf00      	nop
 8008d38:	40023800 	.word	0x40023800
 8008d3c:	42470000 	.word	0x42470000
 8008d40:	40007000 	.word	0x40007000
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8008d44:	4d3b      	ldr	r5, [pc, #236]	; (8008e34 <HAL_RCC_OscConfig+0x36c>)
 8008d46:	68ab      	ldr	r3, [r5, #8]
 8008d48:	f003 030c 	and.w	r3, r3, #12
 8008d4c:	2b08      	cmp	r3, #8
 8008d4e:	d040      	beq.n	8008dd2 <HAL_RCC_OscConfig+0x30a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8008d50:	4b39      	ldr	r3, [pc, #228]	; (8008e38 <HAL_RCC_OscConfig+0x370>)
 8008d52:	2200      	movs	r2, #0
 8008d54:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8008d56:	661a      	str	r2, [r3, #96]	; 0x60
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8008d58:	d12e      	bne.n	8008db8 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 8008d5a:	f7fd fb0b 	bl	8006374 <HAL_GetTick>
 8008d5e:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8008d60:	682b      	ldr	r3, [r5, #0]
 8008d62:	0199      	lsls	r1, r3, #6
 8008d64:	d422      	bmi.n	8008dac <HAL_RCC_OscConfig+0x2e4>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8008d66:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8008d6a:	4313      	orrs	r3, r2
 8008d6c:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8008d6e:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8008d72:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008d74:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8008d78:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008d7a:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8008d7e:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8008d80:	0852      	lsrs	r2, r2, #1
 8008d82:	3a01      	subs	r2, #1
 8008d84:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8008d88:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8008d8a:	4b2b      	ldr	r3, [pc, #172]	; (8008e38 <HAL_RCC_OscConfig+0x370>)
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008d8c:	4d29      	ldr	r5, [pc, #164]	; (8008e34 <HAL_RCC_OscConfig+0x36c>)
        __HAL_RCC_PLL_ENABLE();
 8008d8e:	2201      	movs	r2, #1
 8008d90:	661a      	str	r2, [r3, #96]	; 0x60
        tickstart = HAL_GetTick();
 8008d92:	f7fd faef 	bl	8006374 <HAL_GetTick>
 8008d96:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8008d98:	682b      	ldr	r3, [r5, #0]
 8008d9a:	019a      	lsls	r2, r3, #6
 8008d9c:	f53f aeaa 	bmi.w	8008af4 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8008da0:	f7fd fae8 	bl	8006374 <HAL_GetTick>
 8008da4:	1b00      	subs	r0, r0, r4
 8008da6:	2802      	cmp	r0, #2
 8008da8:	d9f6      	bls.n	8008d98 <HAL_RCC_OscConfig+0x2d0>
 8008daa:	e6d0      	b.n	8008b4e <HAL_RCC_OscConfig+0x86>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8008dac:	f7fd fae2 	bl	8006374 <HAL_GetTick>
 8008db0:	1b80      	subs	r0, r0, r6
 8008db2:	2802      	cmp	r0, #2
 8008db4:	d9d4      	bls.n	8008d60 <HAL_RCC_OscConfig+0x298>
 8008db6:	e6ca      	b.n	8008b4e <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 8008db8:	f7fd fadc 	bl	8006374 <HAL_GetTick>
 8008dbc:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8008dbe:	682b      	ldr	r3, [r5, #0]
 8008dc0:	019b      	lsls	r3, r3, #6
 8008dc2:	f57f ae97 	bpl.w	8008af4 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8008dc6:	f7fd fad5 	bl	8006374 <HAL_GetTick>
 8008dca:	1b00      	subs	r0, r0, r4
 8008dcc:	2802      	cmp	r0, #2
 8008dce:	d9f6      	bls.n	8008dbe <HAL_RCC_OscConfig+0x2f6>
 8008dd0:	e6bd      	b.n	8008b4e <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8008dd2:	2801      	cmp	r0, #1
 8008dd4:	f43f aebc 	beq.w	8008b50 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 8008dd8:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8008dda:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8008ddc:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8008de0:	4291      	cmp	r1, r2
 8008de2:	f47f ae9e 	bne.w	8008b22 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8008de6:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8008de8:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8008dec:	428a      	cmp	r2, r1
 8008dee:	f47f ae98 	bne.w	8008b22 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8008df2:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8008df4:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8008df8:	401a      	ands	r2, r3
 8008dfa:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 8008dfe:	f47f ae90 	bne.w	8008b22 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8008e02:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8008e04:	0852      	lsrs	r2, r2, #1
 8008e06:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 8008e0a:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8008e0c:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8008e10:	f47f ae87 	bne.w	8008b22 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8008e14:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8008e16:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8008e1a:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 8008e1e:	f47f ae80 	bne.w	8008b22 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 8008e22:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8008e24:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8008e28:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 8008e2c:	f43f ae62 	beq.w	8008af4 <HAL_RCC_OscConfig+0x2c>
 8008e30:	e677      	b.n	8008b22 <HAL_RCC_OscConfig+0x5a>
 8008e32:	bf00      	nop
 8008e34:	40023800 	.word	0x40023800
 8008e38:	42470000 	.word	0x42470000

08008e3c <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{
 8008e3c:	b538      	push	{r3, r4, r5, lr}
 8008e3e:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if (hsdram == NULL)
 8008e40:	4604      	mov	r4, r0
 8008e42:	b1c8      	cbz	r0, 8008e78 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }

  if (hsdram->State == HAL_SDRAM_STATE_RESET)
 8008e44:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8008e48:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8008e4c:	b91b      	cbnz	r3, 8008e56 <HAL_SDRAM_Init+0x1a>
  {
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8008e4e:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 8008e52:	f7f9 ff7b 	bl	8002d4c <HAL_SDRAM_MspInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */
  }

  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008e56:	2302      	movs	r3, #2
 8008e58:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  /* Initialize SDRAM control Interface */
  (void)FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8008e5c:	1d21      	adds	r1, r4, #4
 8008e5e:	6820      	ldr	r0, [r4, #0]
 8008e60:	f000 fbca 	bl	80095f8 <FMC_SDRAM_Init>

  /* Initialize SDRAM timing Interface */
  (void)FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank);
 8008e64:	6862      	ldr	r2, [r4, #4]
 8008e66:	6820      	ldr	r0, [r4, #0]
 8008e68:	4629      	mov	r1, r5
 8008e6a:	f000 fc00 	bl	800966e <FMC_SDRAM_Timing_Init>
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8008e6e:	2301      	movs	r3, #1
 8008e70:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c

  return HAL_OK;
 8008e74:	2000      	movs	r0, #0
}
 8008e76:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8008e78:	2001      	movs	r0, #1
 8008e7a:	e7fc      	b.n	8008e76 <HAL_SDRAM_Init+0x3a>

08008e7c <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 8008e7c:	b510      	push	{r4, lr}
 8008e7e:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 8008e80:	f7f9 ffdc 	bl	8002e3c <HAL_SDRAM_MspDeInit>
#endif /* USE_HAL_SDRAM_REGISTER_CALLBACKS */

  /* Configure the SDRAM registers with their reset values */
  (void)FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 8008e84:	e9d4 0100 	ldrd	r0, r1, [r4]
 8008e88:	f000 fc27 	bl	80096da <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 8008e8c:	2000      	movs	r0, #0
 8008e8e:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 8008e92:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 8008e96:	bd10      	pop	{r4, pc}

08008e98 <HAL_SDRAM_SendCommand>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command,
                                        uint32_t Timeout)
{
 8008e98:	b570      	push	{r4, r5, r6, lr}
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8008e9a:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c

  /* Check the SDRAM controller state */
  if (state == HAL_SDRAM_STATE_BUSY)
 8008e9e:	2b02      	cmp	r3, #2
{
 8008ea0:	4605      	mov	r5, r0
 8008ea2:	460e      	mov	r6, r1
  HAL_SDRAM_StateTypeDef state = hsdram->State;
 8008ea4:	b2d8      	uxtb	r0, r3
  if (state == HAL_SDRAM_STATE_BUSY)
 8008ea6:	d012      	beq.n	8008ece <HAL_SDRAM_SendCommand+0x36>
  {
    return HAL_BUSY;
  }
  else if ((state == HAL_SDRAM_STATE_READY) || (state == HAL_SDRAM_STATE_PRECHARGED))
 8008ea8:	f000 04fb 	and.w	r4, r0, #251	; 0xfb
 8008eac:	2c01      	cmp	r4, #1
 8008eae:	d10f      	bne.n	8008ed0 <HAL_SDRAM_SendCommand+0x38>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008eb0:	2302      	movs	r3, #2
 8008eb2:	f885 302c 	strb.w	r3, [r5, #44]	; 0x2c

    /* Send SDRAM command */
    (void)FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 8008eb6:	6828      	ldr	r0, [r5, #0]
 8008eb8:	f000 fc1e 	bl	80096f8 <FMC_SDRAM_SendCommand>

    /* Update the SDRAM controller state state */
    if (Command->CommandMode == FMC_SDRAM_CMD_PALL)
 8008ebc:	6833      	ldr	r3, [r6, #0]
 8008ebe:	2b02      	cmp	r3, #2
    {
      hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 8008ec0:	bf06      	itte	eq
 8008ec2:	2305      	moveq	r3, #5
 8008ec4:	f885 302c 	strbeq.w	r3, [r5, #44]	; 0x2c
    }
    else
    {
      hsdram->State = HAL_SDRAM_STATE_READY;
 8008ec8:	f885 402c 	strbne.w	r4, [r5, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8008ecc:	2000      	movs	r0, #0
}
 8008ece:	bd70      	pop	{r4, r5, r6, pc}
    return HAL_ERROR;
 8008ed0:	2001      	movs	r0, #1
 8008ed2:	e7fc      	b.n	8008ece <HAL_SDRAM_SendCommand+0x36>

08008ed4 <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.
  * @param  RefreshRate The SDRAM refresh rate value
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 8008ed4:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8008ed6:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8008eda:	2b02      	cmp	r3, #2
{
 8008edc:	4604      	mov	r4, r0
  if (hsdram->State == HAL_SDRAM_STATE_BUSY)
 8008ede:	b2d8      	uxtb	r0, r3
 8008ee0:	d00d      	beq.n	8008efe <HAL_SDRAM_ProgramRefreshRate+0x2a>
  {
    return HAL_BUSY;
  }
  else if (hsdram->State == HAL_SDRAM_STATE_READY)
 8008ee2:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 8008ee6:	2b01      	cmp	r3, #1
 8008ee8:	b2dd      	uxtb	r5, r3
 8008eea:	d109      	bne.n	8008f00 <HAL_SDRAM_ProgramRefreshRate+0x2c>
  {
    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008eec:	2302      	movs	r3, #2

    /* Program the refresh rate */
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8008eee:	6820      	ldr	r0, [r4, #0]
    hsdram->State = HAL_SDRAM_STATE_BUSY;
 8008ef0:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
    (void)FMC_SDRAM_ProgramRefreshRate(hsdram->Instance, RefreshRate);
 8008ef4:	f000 fc26 	bl	8009744 <FMC_SDRAM_ProgramRefreshRate>

    /* Update the SDRAM state */
    hsdram->State = HAL_SDRAM_STATE_READY;
 8008ef8:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
  else
  {
    return HAL_ERROR;
  }

  return HAL_OK;
 8008efc:	2000      	movs	r0, #0
}
 8008efe:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8008f00:	2001      	movs	r0, #1
 8008f02:	e7fc      	b.n	8008efe <HAL_SDRAM_ProgramRefreshRate+0x2a>

08008f04 <TIM_OC1_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8008f04:	6a03      	ldr	r3, [r0, #32]
 8008f06:	f023 0301 	bic.w	r3, r3, #1
 8008f0a:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8008f0c:	6a03      	ldr	r3, [r0, #32]
{
 8008f0e:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8008f10:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8008f12:	6982      	ldr	r2, [r0, #24]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
  tmpccmrx &= ~TIM_CCMR1_CC1S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8008f14:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8008f16:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 8008f1a:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8008f1c:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC1P;
 8008f1e:	f023 0302 	bic.w	r3, r3, #2
  tmpccer |= OC_Config->OCPolarity;
 8008f22:	432b      	orrs	r3, r5

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8008f24:	4d0e      	ldr	r5, [pc, #56]	; (8008f60 <TIM_OC1_SetConfig+0x5c>)
 8008f26:	42a8      	cmp	r0, r5
 8008f28:	d002      	beq.n	8008f30 <TIM_OC1_SetConfig+0x2c>
 8008f2a:	4e0e      	ldr	r6, [pc, #56]	; (8008f64 <TIM_OC1_SetConfig+0x60>)
 8008f2c:	42b0      	cmp	r0, r6
 8008f2e:	d110      	bne.n	8008f52 <TIM_OC1_SetConfig+0x4e>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8008f30:	68ce      	ldr	r6, [r1, #12]
    tmpccer &= ~TIM_CCER_CC1NP;
 8008f32:	f023 0308 	bic.w	r3, r3, #8
    tmpccer |= OC_Config->OCNPolarity;
 8008f36:	4333      	orrs	r3, r6
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008f38:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC1NE;
 8008f3a:	f023 0304 	bic.w	r3, r3, #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008f3e:	d002      	beq.n	8008f46 <TIM_OC1_SetConfig+0x42>
 8008f40:	4d08      	ldr	r5, [pc, #32]	; (8008f64 <TIM_OC1_SetConfig+0x60>)
 8008f42:	42a8      	cmp	r0, r5
 8008f44:	d105      	bne.n	8008f52 <TIM_OC1_SetConfig+0x4e>
    tmpcr2 &= ~TIM_CR2_OIS1;
    tmpcr2 &= ~TIM_CR2_OIS1N;
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8008f46:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8008f4a:	f424 7440 	bic.w	r4, r4, #768	; 0x300
    tmpcr2 |= OC_Config->OCNIdleState;
 8008f4e:	4335      	orrs	r5, r6
 8008f50:	432c      	orrs	r4, r5
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8008f52:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8008f54:	6182      	str	r2, [r0, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8008f56:	684a      	ldr	r2, [r1, #4]
 8008f58:	6342      	str	r2, [r0, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8008f5a:	6203      	str	r3, [r0, #32]
}
 8008f5c:	bd70      	pop	{r4, r5, r6, pc}
 8008f5e:	bf00      	nop
 8008f60:	40010000 	.word	0x40010000
 8008f64:	40010400 	.word	0x40010400

08008f68 <TIM_OC3_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8008f68:	6a03      	ldr	r3, [r0, #32]
 8008f6a:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8008f6e:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8008f70:	6a03      	ldr	r3, [r0, #32]
{
 8008f72:	b570      	push	{r4, r5, r6, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8008f74:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8008f76:	69c2      	ldr	r2, [r0, #28]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
  tmpccmrx &= ~TIM_CCMR2_CC3S;
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8008f78:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8008f7a:	f022 0273 	bic.w	r2, r2, #115	; 0x73
  tmpccmrx |= OC_Config->OCMode;
 8008f7e:	432a      	orrs	r2, r5

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8008f80:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC3P;
 8008f82:	f423 7300 	bic.w	r3, r3, #512	; 0x200
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8008f86:	ea43 2305 	orr.w	r3, r3, r5, lsl #8

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8008f8a:	4d11      	ldr	r5, [pc, #68]	; (8008fd0 <TIM_OC3_SetConfig+0x68>)
 8008f8c:	42a8      	cmp	r0, r5
 8008f8e:	d003      	beq.n	8008f98 <TIM_OC3_SetConfig+0x30>
 8008f90:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8008f94:	42a8      	cmp	r0, r5
 8008f96:	d114      	bne.n	8008fc2 <TIM_OC3_SetConfig+0x5a>
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8008f98:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC3NP;
 8008f9a:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8008f9e:	ea43 2305 	orr.w	r3, r3, r5, lsl #8
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008fa2:	4d0b      	ldr	r5, [pc, #44]	; (8008fd0 <TIM_OC3_SetConfig+0x68>)
 8008fa4:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC3NE;
 8008fa6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008faa:	d003      	beq.n	8008fb4 <TIM_OC3_SetConfig+0x4c>
 8008fac:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8008fb0:	42a8      	cmp	r0, r5
 8008fb2:	d106      	bne.n	8008fc2 <TIM_OC3_SetConfig+0x5a>
    tmpcr2 &= ~TIM_CR2_OIS3;
    tmpcr2 &= ~TIM_CR2_OIS3N;
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8008fb4:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8008fb8:	f424 5440 	bic.w	r4, r4, #12288	; 0x3000
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8008fbc:	4335      	orrs	r5, r6
 8008fbe:	ea44 1405 	orr.w	r4, r4, r5, lsl #4
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8008fc2:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8008fc4:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8008fc6:	684a      	ldr	r2, [r1, #4]
 8008fc8:	63c2      	str	r2, [r0, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8008fca:	6203      	str	r3, [r0, #32]
}
 8008fcc:	bd70      	pop	{r4, r5, r6, pc}
 8008fce:	bf00      	nop
 8008fd0:	40010000 	.word	0x40010000

08008fd4 <TIM_OC4_SetConfig>:
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8008fd4:	6a03      	ldr	r3, [r0, #32]
 8008fd6:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8008fda:	6203      	str	r3, [r0, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8008fdc:	6a03      	ldr	r3, [r0, #32]
{
 8008fde:	b530      	push	{r4, r5, lr}
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8008fe0:	6844      	ldr	r4, [r0, #4]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8008fe2:	69c2      	ldr	r2, [r0, #28]
  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
  tmpccmrx &= ~TIM_CCMR2_CC4S;

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8008fe4:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8008fe6:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8008fea:	ea42 2205 	orr.w	r2, r2, r5, lsl #8

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8008fee:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC4P;
 8008ff0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8008ff4:	ea43 3305 	orr.w	r3, r3, r5, lsl #12

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8008ff8:	4d08      	ldr	r5, [pc, #32]	; (800901c <TIM_OC4_SetConfig+0x48>)
 8008ffa:	42a8      	cmp	r0, r5
 8008ffc:	d003      	beq.n	8009006 <TIM_OC4_SetConfig+0x32>
 8008ffe:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 8009002:	42a8      	cmp	r0, r5
 8009004:	d104      	bne.n	8009010 <TIM_OC4_SetConfig+0x3c>

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8009006:	694d      	ldr	r5, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS4;
 8009008:	f424 4480 	bic.w	r4, r4, #16384	; 0x4000
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 800900c:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8009010:	6044      	str	r4, [r0, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8009012:	61c2      	str	r2, [r0, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8009014:	684a      	ldr	r2, [r1, #4]
 8009016:	6402      	str	r2, [r0, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8009018:	6203      	str	r3, [r0, #32]
}
 800901a:	bd30      	pop	{r4, r5, pc}
 800901c:	40010000 	.word	0x40010000

08009020 <HAL_TIM_Base_Start_IT>:
  if (htim->State != HAL_TIM_STATE_READY)
 8009020:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8009024:	2b01      	cmp	r3, #1
 8009026:	d130      	bne.n	800908a <HAL_TIM_Base_Start_IT+0x6a>
  htim->State = HAL_TIM_STATE_BUSY;
 8009028:	2302      	movs	r3, #2
 800902a:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 800902e:	6803      	ldr	r3, [r0, #0]
 8009030:	68da      	ldr	r2, [r3, #12]
 8009032:	f042 0201 	orr.w	r2, r2, #1
 8009036:	60da      	str	r2, [r3, #12]
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8009038:	4a15      	ldr	r2, [pc, #84]	; (8009090 <HAL_TIM_Base_Start_IT+0x70>)
 800903a:	4293      	cmp	r3, r2
 800903c:	d01a      	beq.n	8009074 <HAL_TIM_Base_Start_IT+0x54>
 800903e:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8009042:	d017      	beq.n	8009074 <HAL_TIM_Base_Start_IT+0x54>
 8009044:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8009048:	4293      	cmp	r3, r2
 800904a:	d013      	beq.n	8009074 <HAL_TIM_Base_Start_IT+0x54>
 800904c:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009050:	4293      	cmp	r3, r2
 8009052:	d00f      	beq.n	8009074 <HAL_TIM_Base_Start_IT+0x54>
 8009054:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009058:	4293      	cmp	r3, r2
 800905a:	d00b      	beq.n	8009074 <HAL_TIM_Base_Start_IT+0x54>
 800905c:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8009060:	4293      	cmp	r3, r2
 8009062:	d007      	beq.n	8009074 <HAL_TIM_Base_Start_IT+0x54>
 8009064:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 8009068:	4293      	cmp	r3, r2
 800906a:	d003      	beq.n	8009074 <HAL_TIM_Base_Start_IT+0x54>
 800906c:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 8009070:	4293      	cmp	r3, r2
 8009072:	d104      	bne.n	800907e <HAL_TIM_Base_Start_IT+0x5e>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8009074:	689a      	ldr	r2, [r3, #8]
 8009076:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800907a:	2a06      	cmp	r2, #6
 800907c:	d003      	beq.n	8009086 <HAL_TIM_Base_Start_IT+0x66>
    __HAL_TIM_ENABLE(htim);
 800907e:	681a      	ldr	r2, [r3, #0]
 8009080:	f042 0201 	orr.w	r2, r2, #1
 8009084:	601a      	str	r2, [r3, #0]
  return HAL_OK;
 8009086:	2000      	movs	r0, #0
}
 8009088:	4770      	bx	lr
    return HAL_ERROR;
 800908a:	2001      	movs	r0, #1
 800908c:	4770      	bx	lr
 800908e:	bf00      	nop
 8009090:	40010000 	.word	0x40010000

08009094 <HAL_TIM_OC_DelayElapsedCallback>:
 8009094:	4770      	bx	lr

08009096 <HAL_TIM_IC_CaptureCallback>:
 8009096:	4770      	bx	lr

08009098 <HAL_TIM_PWM_PulseFinishedCallback>:
 8009098:	4770      	bx	lr

0800909a <HAL_TIM_TriggerCallback>:
 800909a:	4770      	bx	lr

0800909c <HAL_TIM_IRQHandler>:
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 800909c:	6803      	ldr	r3, [r0, #0]
 800909e:	691a      	ldr	r2, [r3, #16]
 80090a0:	0791      	lsls	r1, r2, #30
{
 80090a2:	b510      	push	{r4, lr}
 80090a4:	4604      	mov	r4, r0
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 80090a6:	d50e      	bpl.n	80090c6 <HAL_TIM_IRQHandler+0x2a>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 80090a8:	68da      	ldr	r2, [r3, #12]
 80090aa:	0792      	lsls	r2, r2, #30
 80090ac:	d50b      	bpl.n	80090c6 <HAL_TIM_IRQHandler+0x2a>
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80090ae:	f06f 0202 	mvn.w	r2, #2
 80090b2:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80090b4:	2201      	movs	r2, #1
 80090b6:	7702      	strb	r2, [r0, #28]
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80090b8:	699b      	ldr	r3, [r3, #24]
 80090ba:	079b      	lsls	r3, r3, #30
 80090bc:	d077      	beq.n	80091ae <HAL_TIM_IRQHandler+0x112>
          HAL_TIM_IC_CaptureCallback(htim);
 80090be:	f7ff ffea 	bl	8009096 <HAL_TIM_IC_CaptureCallback>
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80090c2:	2300      	movs	r3, #0
 80090c4:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80090c6:	6823      	ldr	r3, [r4, #0]
 80090c8:	691a      	ldr	r2, [r3, #16]
 80090ca:	0750      	lsls	r0, r2, #29
 80090cc:	d510      	bpl.n	80090f0 <HAL_TIM_IRQHandler+0x54>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80090ce:	68da      	ldr	r2, [r3, #12]
 80090d0:	0751      	lsls	r1, r2, #29
 80090d2:	d50d      	bpl.n	80090f0 <HAL_TIM_IRQHandler+0x54>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80090d4:	f06f 0204 	mvn.w	r2, #4
 80090d8:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 80090da:	2202      	movs	r2, #2
 80090dc:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80090de:	699b      	ldr	r3, [r3, #24]
 80090e0:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 80090e4:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 80090e6:	d068      	beq.n	80091ba <HAL_TIM_IRQHandler+0x11e>
        HAL_TIM_IC_CaptureCallback(htim);
 80090e8:	f7ff ffd5 	bl	8009096 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80090ec:	2300      	movs	r3, #0
 80090ee:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 80090f0:	6823      	ldr	r3, [r4, #0]
 80090f2:	691a      	ldr	r2, [r3, #16]
 80090f4:	0712      	lsls	r2, r2, #28
 80090f6:	d50f      	bpl.n	8009118 <HAL_TIM_IRQHandler+0x7c>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 80090f8:	68da      	ldr	r2, [r3, #12]
 80090fa:	0710      	lsls	r0, r2, #28
 80090fc:	d50c      	bpl.n	8009118 <HAL_TIM_IRQHandler+0x7c>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 80090fe:	f06f 0208 	mvn.w	r2, #8
 8009102:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8009104:	2204      	movs	r2, #4
 8009106:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8009108:	69db      	ldr	r3, [r3, #28]
 800910a:	0799      	lsls	r1, r3, #30
        HAL_TIM_IC_CaptureCallback(htim);
 800910c:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800910e:	d05a      	beq.n	80091c6 <HAL_TIM_IRQHandler+0x12a>
        HAL_TIM_IC_CaptureCallback(htim);
 8009110:	f7ff ffc1 	bl	8009096 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8009114:	2300      	movs	r3, #0
 8009116:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 8009118:	6823      	ldr	r3, [r4, #0]
 800911a:	691a      	ldr	r2, [r3, #16]
 800911c:	06d2      	lsls	r2, r2, #27
 800911e:	d510      	bpl.n	8009142 <HAL_TIM_IRQHandler+0xa6>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 8009120:	68da      	ldr	r2, [r3, #12]
 8009122:	06d0      	lsls	r0, r2, #27
 8009124:	d50d      	bpl.n	8009142 <HAL_TIM_IRQHandler+0xa6>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 8009126:	f06f 0210 	mvn.w	r2, #16
 800912a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 800912c:	2208      	movs	r2, #8
 800912e:	7722      	strb	r2, [r4, #28]
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8009130:	69db      	ldr	r3, [r3, #28]
 8009132:	f413 7f40 	tst.w	r3, #768	; 0x300
        HAL_TIM_IC_CaptureCallback(htim);
 8009136:	4620      	mov	r0, r4
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 8009138:	d04b      	beq.n	80091d2 <HAL_TIM_IRQHandler+0x136>
        HAL_TIM_IC_CaptureCallback(htim);
 800913a:	f7ff ffac 	bl	8009096 <HAL_TIM_IC_CaptureCallback>
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800913e:	2300      	movs	r3, #0
 8009140:	7723      	strb	r3, [r4, #28]
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 8009142:	6823      	ldr	r3, [r4, #0]
 8009144:	691a      	ldr	r2, [r3, #16]
 8009146:	07d1      	lsls	r1, r2, #31
 8009148:	d508      	bpl.n	800915c <HAL_TIM_IRQHandler+0xc0>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 800914a:	68da      	ldr	r2, [r3, #12]
 800914c:	07d2      	lsls	r2, r2, #31
 800914e:	d505      	bpl.n	800915c <HAL_TIM_IRQHandler+0xc0>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8009150:	f06f 0201 	mvn.w	r2, #1
 8009154:	611a      	str	r2, [r3, #16]
      HAL_TIM_PeriodElapsedCallback(htim);
 8009156:	4620      	mov	r0, r4
 8009158:	f7f9 fbde 	bl	8002918 <HAL_TIM_PeriodElapsedCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 800915c:	6823      	ldr	r3, [r4, #0]
 800915e:	691a      	ldr	r2, [r3, #16]
 8009160:	0610      	lsls	r0, r2, #24
 8009162:	d508      	bpl.n	8009176 <HAL_TIM_IRQHandler+0xda>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) != RESET)
 8009164:	68da      	ldr	r2, [r3, #12]
 8009166:	0611      	lsls	r1, r2, #24
 8009168:	d505      	bpl.n	8009176 <HAL_TIM_IRQHandler+0xda>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 800916a:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800916e:	611a      	str	r2, [r3, #16]
      HAL_TIMEx_BreakCallback(htim);
 8009170:	4620      	mov	r0, r4
 8009172:	f000 fa40 	bl	80095f6 <HAL_TIMEx_BreakCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8009176:	6823      	ldr	r3, [r4, #0]
 8009178:	691a      	ldr	r2, [r3, #16]
 800917a:	0652      	lsls	r2, r2, #25
 800917c:	d508      	bpl.n	8009190 <HAL_TIM_IRQHandler+0xf4>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 800917e:	68da      	ldr	r2, [r3, #12]
 8009180:	0650      	lsls	r0, r2, #25
 8009182:	d505      	bpl.n	8009190 <HAL_TIM_IRQHandler+0xf4>
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8009184:	f06f 0240 	mvn.w	r2, #64	; 0x40
 8009188:	611a      	str	r2, [r3, #16]
      HAL_TIM_TriggerCallback(htim);
 800918a:	4620      	mov	r0, r4
 800918c:	f7ff ff85 	bl	800909a <HAL_TIM_TriggerCallback>
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 8009190:	6823      	ldr	r3, [r4, #0]
 8009192:	691a      	ldr	r2, [r3, #16]
 8009194:	0691      	lsls	r1, r2, #26
 8009196:	d522      	bpl.n	80091de <HAL_TIM_IRQHandler+0x142>
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) != RESET)
 8009198:	68da      	ldr	r2, [r3, #12]
 800919a:	0692      	lsls	r2, r2, #26
 800919c:	d51f      	bpl.n	80091de <HAL_TIM_IRQHandler+0x142>
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 800919e:	f06f 0220 	mvn.w	r2, #32
      HAL_TIMEx_CommutCallback(htim);
 80091a2:	4620      	mov	r0, r4
      __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 80091a4:	611a      	str	r2, [r3, #16]
}
 80091a6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
      HAL_TIMEx_CommutCallback(htim);
 80091aa:	f000 ba23 	b.w	80095f4 <HAL_TIMEx_CommutCallback>
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80091ae:	f7ff ff71 	bl	8009094 <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80091b2:	4620      	mov	r0, r4
 80091b4:	f7ff ff70 	bl	8009098 <HAL_TIM_PWM_PulseFinishedCallback>
 80091b8:	e783      	b.n	80090c2 <HAL_TIM_IRQHandler+0x26>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80091ba:	f7ff ff6b 	bl	8009094 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80091be:	4620      	mov	r0, r4
 80091c0:	f7ff ff6a 	bl	8009098 <HAL_TIM_PWM_PulseFinishedCallback>
 80091c4:	e792      	b.n	80090ec <HAL_TIM_IRQHandler+0x50>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80091c6:	f7ff ff65 	bl	8009094 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80091ca:	4620      	mov	r0, r4
 80091cc:	f7ff ff64 	bl	8009098 <HAL_TIM_PWM_PulseFinishedCallback>
 80091d0:	e7a0      	b.n	8009114 <HAL_TIM_IRQHandler+0x78>
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80091d2:	f7ff ff5f 	bl	8009094 <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80091d6:	4620      	mov	r0, r4
 80091d8:	f7ff ff5e 	bl	8009098 <HAL_TIM_PWM_PulseFinishedCallback>
 80091dc:	e7af      	b.n	800913e <HAL_TIM_IRQHandler+0xa2>
}
 80091de:	bd10      	pop	{r4, pc}

080091e0 <TIM_Base_SetConfig>:
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80091e0:	4a30      	ldr	r2, [pc, #192]	; (80092a4 <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 80091e2:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80091e4:	4290      	cmp	r0, r2
 80091e6:	d012      	beq.n	800920e <TIM_Base_SetConfig+0x2e>
 80091e8:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80091ec:	d00f      	beq.n	800920e <TIM_Base_SetConfig+0x2e>
 80091ee:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80091f2:	4290      	cmp	r0, r2
 80091f4:	d00b      	beq.n	800920e <TIM_Base_SetConfig+0x2e>
 80091f6:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80091fa:	4290      	cmp	r0, r2
 80091fc:	d007      	beq.n	800920e <TIM_Base_SetConfig+0x2e>
 80091fe:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009202:	4290      	cmp	r0, r2
 8009204:	d003      	beq.n	800920e <TIM_Base_SetConfig+0x2e>
 8009206:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800920a:	4290      	cmp	r0, r2
 800920c:	d119      	bne.n	8009242 <TIM_Base_SetConfig+0x62>
    tmpcr1 |= Structure->CounterMode;
 800920e:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8009210:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 8009214:	4313      	orrs	r3, r2
  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 8009216:	4a23      	ldr	r2, [pc, #140]	; (80092a4 <TIM_Base_SetConfig+0xc4>)
 8009218:	4290      	cmp	r0, r2
 800921a:	d029      	beq.n	8009270 <TIM_Base_SetConfig+0x90>
 800921c:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8009220:	d026      	beq.n	8009270 <TIM_Base_SetConfig+0x90>
 8009222:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 8009226:	4290      	cmp	r0, r2
 8009228:	d022      	beq.n	8009270 <TIM_Base_SetConfig+0x90>
 800922a:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800922e:	4290      	cmp	r0, r2
 8009230:	d01e      	beq.n	8009270 <TIM_Base_SetConfig+0x90>
 8009232:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009236:	4290      	cmp	r0, r2
 8009238:	d01a      	beq.n	8009270 <TIM_Base_SetConfig+0x90>
 800923a:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 800923e:	4290      	cmp	r0, r2
 8009240:	d016      	beq.n	8009270 <TIM_Base_SetConfig+0x90>
 8009242:	4a19      	ldr	r2, [pc, #100]	; (80092a8 <TIM_Base_SetConfig+0xc8>)
 8009244:	4290      	cmp	r0, r2
 8009246:	d013      	beq.n	8009270 <TIM_Base_SetConfig+0x90>
 8009248:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800924c:	4290      	cmp	r0, r2
 800924e:	d00f      	beq.n	8009270 <TIM_Base_SetConfig+0x90>
 8009250:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009254:	4290      	cmp	r0, r2
 8009256:	d00b      	beq.n	8009270 <TIM_Base_SetConfig+0x90>
 8009258:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 800925c:	4290      	cmp	r0, r2
 800925e:	d007      	beq.n	8009270 <TIM_Base_SetConfig+0x90>
 8009260:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009264:	4290      	cmp	r0, r2
 8009266:	d003      	beq.n	8009270 <TIM_Base_SetConfig+0x90>
 8009268:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800926c:	4290      	cmp	r0, r2
 800926e:	d103      	bne.n	8009278 <TIM_Base_SetConfig+0x98>
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8009270:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 8009272:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8009276:	4313      	orrs	r3, r2
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8009278:	694a      	ldr	r2, [r1, #20]
 800927a:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800927e:	4313      	orrs	r3, r2
  TIMx->CR1 = tmpcr1;
 8009280:	6003      	str	r3, [r0, #0]
  TIMx->ARR = (uint32_t)Structure->Period ;
 8009282:	688b      	ldr	r3, [r1, #8]
 8009284:	62c3      	str	r3, [r0, #44]	; 0x2c
  TIMx->PSC = Structure->Prescaler;
 8009286:	680b      	ldr	r3, [r1, #0]
 8009288:	6283      	str	r3, [r0, #40]	; 0x28
  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 800928a:	4b06      	ldr	r3, [pc, #24]	; (80092a4 <TIM_Base_SetConfig+0xc4>)
 800928c:	4298      	cmp	r0, r3
 800928e:	d003      	beq.n	8009298 <TIM_Base_SetConfig+0xb8>
 8009290:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8009294:	4298      	cmp	r0, r3
 8009296:	d101      	bne.n	800929c <TIM_Base_SetConfig+0xbc>
    TIMx->RCR = Structure->RepetitionCounter;
 8009298:	690b      	ldr	r3, [r1, #16]
 800929a:	6303      	str	r3, [r0, #48]	; 0x30
  TIMx->EGR = TIM_EGR_UG;
 800929c:	2301      	movs	r3, #1
 800929e:	6143      	str	r3, [r0, #20]
}
 80092a0:	4770      	bx	lr
 80092a2:	bf00      	nop
 80092a4:	40010000 	.word	0x40010000
 80092a8:	40014000 	.word	0x40014000

080092ac <HAL_TIM_Base_Init>:
{
 80092ac:	b510      	push	{r4, lr}
  if (htim == NULL)
 80092ae:	4604      	mov	r4, r0
 80092b0:	b330      	cbz	r0, 8009300 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 80092b2:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80092b6:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80092ba:	b91b      	cbnz	r3, 80092c4 <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 80092bc:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 80092c0:	f7f9 fce4 	bl	8002c8c <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 80092c4:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80092c6:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 80092c8:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 80092cc:	1d21      	adds	r1, r4, #4
 80092ce:	f7ff ff87 	bl	80091e0 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80092d2:	2301      	movs	r3, #1
 80092d4:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 80092d8:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80092da:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 80092de:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 80092e2:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 80092e6:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80092ea:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80092ee:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80092f2:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 80092f6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 80092fa:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 80092fe:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009300:	2001      	movs	r0, #1
 8009302:	e7fc      	b.n	80092fe <HAL_TIM_Base_Init+0x52>

08009304 <HAL_TIM_PWM_Init>:
{
 8009304:	b510      	push	{r4, lr}
  if (htim == NULL)
 8009306:	4604      	mov	r4, r0
 8009308:	b330      	cbz	r0, 8009358 <HAL_TIM_PWM_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800930a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800930e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8009312:	b91b      	cbnz	r3, 800931c <HAL_TIM_PWM_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8009314:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_PWM_MspInit(htim);
 8009318:	f7f9 fca0 	bl	8002c5c <HAL_TIM_PWM_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800931c:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800931e:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8009320:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8009324:	1d21      	adds	r1, r4, #4
 8009326:	f7ff ff5b 	bl	80091e0 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800932a:	2301      	movs	r3, #1
 800932c:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 8009330:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8009332:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8009336:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800933a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800933e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8009342:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8009346:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800934a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800934e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 8009352:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 8009356:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8009358:	2001      	movs	r0, #1
 800935a:	e7fc      	b.n	8009356 <HAL_TIM_PWM_Init+0x52>

0800935c <TIM_OC2_SetConfig>:
  TIMx->CCER &= ~TIM_CCER_CC2E;
 800935c:	6a03      	ldr	r3, [r0, #32]
 800935e:	f023 0310 	bic.w	r3, r3, #16
 8009362:	6203      	str	r3, [r0, #32]
  tmpccer = TIMx->CCER;
 8009364:	6a03      	ldr	r3, [r0, #32]
{
 8009366:	b570      	push	{r4, r5, r6, lr}
  tmpcr2 =  TIMx->CR2;
 8009368:	6844      	ldr	r4, [r0, #4]
  tmpccmrx = TIMx->CCMR1;
 800936a:	6982      	ldr	r2, [r0, #24]
  tmpccmrx |= (OC_Config->OCMode << 8U);
 800936c:	680d      	ldr	r5, [r1, #0]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 800936e:	f422 42e6 	bic.w	r2, r2, #29440	; 0x7300
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8009372:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8009376:	688d      	ldr	r5, [r1, #8]
  tmpccer &= ~TIM_CCER_CC2P;
 8009378:	f023 0320 	bic.w	r3, r3, #32
  tmpccer |= (OC_Config->OCPolarity << 4U);
 800937c:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8009380:	4d10      	ldr	r5, [pc, #64]	; (80093c4 <TIM_OC2_SetConfig+0x68>)
 8009382:	42a8      	cmp	r0, r5
 8009384:	d003      	beq.n	800938e <TIM_OC2_SetConfig+0x32>
 8009386:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 800938a:	42a8      	cmp	r0, r5
 800938c:	d114      	bne.n	80093b8 <TIM_OC2_SetConfig+0x5c>
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 800938e:	68cd      	ldr	r5, [r1, #12]
    tmpccer &= ~TIM_CCER_CC2NP;
 8009390:	f023 0380 	bic.w	r3, r3, #128	; 0x80
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8009394:	ea43 1305 	orr.w	r3, r3, r5, lsl #4
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8009398:	4d0a      	ldr	r5, [pc, #40]	; (80093c4 <TIM_OC2_SetConfig+0x68>)
 800939a:	42a8      	cmp	r0, r5
    tmpccer &= ~TIM_CCER_CC2NE;
 800939c:	f023 0340 	bic.w	r3, r3, #64	; 0x40
  if (IS_TIM_BREAK_INSTANCE(TIMx))
 80093a0:	d003      	beq.n	80093aa <TIM_OC2_SetConfig+0x4e>
 80093a2:	f505 6580 	add.w	r5, r5, #1024	; 0x400
 80093a6:	42a8      	cmp	r0, r5
 80093a8:	d106      	bne.n	80093b8 <TIM_OC2_SetConfig+0x5c>
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 80093aa:	e9d1 5605 	ldrd	r5, r6, [r1, #20]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 80093ae:	f424 6440 	bic.w	r4, r4, #3072	; 0xc00
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 80093b2:	4335      	orrs	r5, r6
 80093b4:	ea44 0485 	orr.w	r4, r4, r5, lsl #2
  TIMx->CR2 = tmpcr2;
 80093b8:	6044      	str	r4, [r0, #4]
  TIMx->CCMR1 = tmpccmrx;
 80093ba:	6182      	str	r2, [r0, #24]
  TIMx->CCR2 = OC_Config->Pulse;
 80093bc:	684a      	ldr	r2, [r1, #4]
 80093be:	6382      	str	r2, [r0, #56]	; 0x38
  TIMx->CCER = tmpccer;
 80093c0:	6203      	str	r3, [r0, #32]
}
 80093c2:	bd70      	pop	{r4, r5, r6, pc}
 80093c4:	40010000 	.word	0x40010000

080093c8 <HAL_TIM_PWM_ConfigChannel>:
{
 80093c8:	b570      	push	{r4, r5, r6, lr}
  __HAL_LOCK(htim);
 80093ca:	f890 303c 	ldrb.w	r3, [r0, #60]	; 0x3c
 80093ce:	2b01      	cmp	r3, #1
{
 80093d0:	4605      	mov	r5, r0
  __HAL_LOCK(htim);
 80093d2:	d053      	beq.n	800947c <HAL_TIM_PWM_ConfigChannel+0xb4>
 80093d4:	2001      	movs	r0, #1
  switch (Channel)
 80093d6:	2a08      	cmp	r2, #8
  __HAL_LOCK(htim);
 80093d8:	f885 003c 	strb.w	r0, [r5, #60]	; 0x3c
  switch (Channel)
 80093dc:	d03d      	beq.n	800945a <HAL_TIM_PWM_ConfigChannel+0x92>
 80093de:	d806      	bhi.n	80093ee <HAL_TIM_PWM_ConfigChannel+0x26>
 80093e0:	b1c2      	cbz	r2, 8009414 <HAL_TIM_PWM_ConfigChannel+0x4c>
 80093e2:	2a04      	cmp	r2, #4
 80093e4:	d028      	beq.n	8009438 <HAL_TIM_PWM_ConfigChannel+0x70>
  __HAL_UNLOCK(htim);
 80093e6:	2300      	movs	r3, #0
 80093e8:	f885 303c 	strb.w	r3, [r5, #60]	; 0x3c
}
 80093ec:	bd70      	pop	{r4, r5, r6, pc}
  switch (Channel)
 80093ee:	2a0c      	cmp	r2, #12
 80093f0:	d1f9      	bne.n	80093e6 <HAL_TIM_PWM_ConfigChannel+0x1e>
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 80093f2:	6828      	ldr	r0, [r5, #0]
 80093f4:	f7ff fdee 	bl	8008fd4 <TIM_OC4_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 80093f8:	682b      	ldr	r3, [r5, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 80093fa:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 80093fc:	69da      	ldr	r2, [r3, #28]
 80093fe:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009402:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 8009404:	69da      	ldr	r2, [r3, #28]
 8009406:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800940a:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 800940c:	69da      	ldr	r2, [r3, #28]
 800940e:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8009412:	e031      	b.n	8009478 <HAL_TIM_PWM_ConfigChannel+0xb0>
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 8009414:	6828      	ldr	r0, [r5, #0]
 8009416:	f7ff fd75 	bl	8008f04 <TIM_OC1_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800941a:	682b      	ldr	r3, [r5, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800941c:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 800941e:	699a      	ldr	r2, [r3, #24]
 8009420:	f042 0208 	orr.w	r2, r2, #8
 8009424:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 8009426:	699a      	ldr	r2, [r3, #24]
 8009428:	f022 0204 	bic.w	r2, r2, #4
 800942c:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800942e:	699a      	ldr	r2, [r3, #24]
 8009430:	430a      	orrs	r2, r1
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8009432:	619a      	str	r2, [r3, #24]
  HAL_StatusTypeDef status = HAL_OK;
 8009434:	2000      	movs	r0, #0
      break;
 8009436:	e7d6      	b.n	80093e6 <HAL_TIM_PWM_ConfigChannel+0x1e>
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8009438:	6828      	ldr	r0, [r5, #0]
 800943a:	f7ff ff8f 	bl	800935c <TIM_OC2_SetConfig>
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800943e:	682b      	ldr	r3, [r5, #0]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8009440:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 8009442:	699a      	ldr	r2, [r3, #24]
 8009444:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8009448:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800944a:	699a      	ldr	r2, [r3, #24]
 800944c:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8009450:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 8009452:	699a      	ldr	r2, [r3, #24]
 8009454:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8009458:	e7eb      	b.n	8009432 <HAL_TIM_PWM_ConfigChannel+0x6a>
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 800945a:	6828      	ldr	r0, [r5, #0]
 800945c:	f7ff fd84 	bl	8008f68 <TIM_OC3_SetConfig>
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8009460:	682b      	ldr	r3, [r5, #0]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8009462:	6909      	ldr	r1, [r1, #16]
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 8009464:	69da      	ldr	r2, [r3, #28]
 8009466:	f042 0208 	orr.w	r2, r2, #8
 800946a:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800946c:	69da      	ldr	r2, [r3, #28]
 800946e:	f022 0204 	bic.w	r2, r2, #4
 8009472:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 8009474:	69da      	ldr	r2, [r3, #28]
 8009476:	430a      	orrs	r2, r1
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 8009478:	61da      	str	r2, [r3, #28]
 800947a:	e7db      	b.n	8009434 <HAL_TIM_PWM_ConfigChannel+0x6c>
  __HAL_LOCK(htim);
 800947c:	2002      	movs	r0, #2
 800947e:	e7b5      	b.n	80093ec <HAL_TIM_PWM_ConfigChannel+0x24>

08009480 <TIM_CCxChannelCmd>:
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8009480:	6a03      	ldr	r3, [r0, #32]
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8009482:	f001 011f 	and.w	r1, r1, #31
{
 8009486:	b510      	push	{r4, lr}
  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8009488:	2401      	movs	r4, #1
 800948a:	408c      	lsls	r4, r1
  TIMx->CCER &= ~tmp;
 800948c:	ea23 0304 	bic.w	r3, r3, r4
 8009490:	6203      	str	r3, [r0, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8009492:	6a03      	ldr	r3, [r0, #32]
 8009494:	408a      	lsls	r2, r1
 8009496:	431a      	orrs	r2, r3
 8009498:	6202      	str	r2, [r0, #32]
}
 800949a:	bd10      	pop	{r4, pc}

0800949c <HAL_TIM_OC_Start>:
{
 800949c:	b510      	push	{r4, lr}
 800949e:	4604      	mov	r4, r0
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 80094a0:	b929      	cbnz	r1, 80094ae <HAL_TIM_OC_Start+0x12>
 80094a2:	f890 303e 	ldrb.w	r3, [r0, #62]	; 0x3e
 80094a6:	2b01      	cmp	r3, #1
 80094a8:	d018      	beq.n	80094dc <HAL_TIM_OC_Start+0x40>
    return HAL_ERROR;
 80094aa:	2001      	movs	r0, #1
 80094ac:	e02d      	b.n	800950a <HAL_TIM_OC_Start+0x6e>
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 80094ae:	2904      	cmp	r1, #4
 80094b0:	d10d      	bne.n	80094ce <HAL_TIM_OC_Start+0x32>
 80094b2:	f890 303f 	ldrb.w	r3, [r0, #63]	; 0x3f
 80094b6:	3b01      	subs	r3, #1
 80094b8:	bf18      	it	ne
 80094ba:	2301      	movne	r3, #1
 80094bc:	2b00      	cmp	r3, #0
 80094be:	d1f4      	bne.n	80094aa <HAL_TIM_OC_Start+0xe>
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 80094c0:	2904      	cmp	r1, #4
 80094c2:	f04f 0302 	mov.w	r3, #2
 80094c6:	d121      	bne.n	800950c <HAL_TIM_OC_Start+0x70>
 80094c8:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 80094cc:	e009      	b.n	80094e2 <HAL_TIM_OC_Start+0x46>
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 80094ce:	2908      	cmp	r1, #8
 80094d0:	bf0c      	ite	eq
 80094d2:	f890 3040 	ldrbeq.w	r3, [r0, #64]	; 0x40
 80094d6:	f890 3041 	ldrbne.w	r3, [r0, #65]	; 0x41
 80094da:	e7ec      	b.n	80094b6 <HAL_TIM_OC_Start+0x1a>
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 80094dc:	2302      	movs	r3, #2
 80094de:	f880 303e 	strb.w	r3, [r0, #62]	; 0x3e
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 80094e2:	6820      	ldr	r0, [r4, #0]
 80094e4:	2201      	movs	r2, #1
 80094e6:	f7ff ffcb 	bl	8009480 <TIM_CCxChannelCmd>
  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 80094ea:	6823      	ldr	r3, [r4, #0]
 80094ec:	491c      	ldr	r1, [pc, #112]	; (8009560 <HAL_TIM_OC_Start+0xc4>)
 80094ee:	428b      	cmp	r3, r1
 80094f0:	d013      	beq.n	800951a <HAL_TIM_OC_Start+0x7e>
 80094f2:	4a1c      	ldr	r2, [pc, #112]	; (8009564 <HAL_TIM_OC_Start+0xc8>)
 80094f4:	4293      	cmp	r3, r2
 80094f6:	d010      	beq.n	800951a <HAL_TIM_OC_Start+0x7e>
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80094f8:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80094fc:	d114      	bne.n	8009528 <HAL_TIM_OC_Start+0x8c>
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 80094fe:	689a      	ldr	r2, [r3, #8]
 8009500:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8009504:	2a06      	cmp	r2, #6
 8009506:	d126      	bne.n	8009556 <HAL_TIM_OC_Start+0xba>
  return HAL_OK;
 8009508:	2000      	movs	r0, #0
}
 800950a:	bd10      	pop	{r4, pc}
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 800950c:	2908      	cmp	r1, #8
 800950e:	bf0c      	ite	eq
 8009510:	f884 3040 	strbeq.w	r3, [r4, #64]	; 0x40
 8009514:	f884 3041 	strbne.w	r3, [r4, #65]	; 0x41
 8009518:	e7e3      	b.n	80094e2 <HAL_TIM_OC_Start+0x46>
    __HAL_TIM_MOE_ENABLE(htim);
 800951a:	6c5a      	ldr	r2, [r3, #68]	; 0x44
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800951c:	428b      	cmp	r3, r1
    __HAL_TIM_MOE_ENABLE(htim);
 800951e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8009522:	645a      	str	r2, [r3, #68]	; 0x44
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8009524:	d0eb      	beq.n	80094fe <HAL_TIM_OC_Start+0x62>
 8009526:	e7e7      	b.n	80094f8 <HAL_TIM_OC_Start+0x5c>
 8009528:	4a0f      	ldr	r2, [pc, #60]	; (8009568 <HAL_TIM_OC_Start+0xcc>)
 800952a:	4293      	cmp	r3, r2
 800952c:	d0e7      	beq.n	80094fe <HAL_TIM_OC_Start+0x62>
 800952e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8009532:	4293      	cmp	r3, r2
 8009534:	d0e3      	beq.n	80094fe <HAL_TIM_OC_Start+0x62>
 8009536:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800953a:	4293      	cmp	r3, r2
 800953c:	d0df      	beq.n	80094fe <HAL_TIM_OC_Start+0x62>
 800953e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8009542:	4293      	cmp	r3, r2
 8009544:	d0db      	beq.n	80094fe <HAL_TIM_OC_Start+0x62>
 8009546:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800954a:	4293      	cmp	r3, r2
 800954c:	d0d7      	beq.n	80094fe <HAL_TIM_OC_Start+0x62>
 800954e:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 8009552:	4293      	cmp	r3, r2
 8009554:	d0d3      	beq.n	80094fe <HAL_TIM_OC_Start+0x62>
    __HAL_TIM_ENABLE(htim);
 8009556:	681a      	ldr	r2, [r3, #0]
 8009558:	f042 0201 	orr.w	r2, r2, #1
 800955c:	601a      	str	r2, [r3, #0]
 800955e:	e7d3      	b.n	8009508 <HAL_TIM_OC_Start+0x6c>
 8009560:	40010000 	.word	0x40010000
 8009564:	40010400 	.word	0x40010400
 8009568:	40000400 	.word	0x40000400

0800956c <HAL_TIM_PWM_Start>:
 800956c:	f7ff bf96 	b.w	800949c <HAL_TIM_OC_Start>

08009570 <HAL_TIM_OC_Stop>:
{
 8009570:	b538      	push	{r3, r4, r5, lr}
 8009572:	4604      	mov	r4, r0
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 8009574:	2200      	movs	r2, #0
 8009576:	6800      	ldr	r0, [r0, #0]
{
 8009578:	460d      	mov	r5, r1
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 800957a:	f7ff ff81 	bl	8009480 <TIM_CCxChannelCmd>
  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 800957e:	6823      	ldr	r3, [r4, #0]
 8009580:	4a1a      	ldr	r2, [pc, #104]	; (80095ec <HAL_TIM_OC_Stop+0x7c>)
 8009582:	4293      	cmp	r3, r2
 8009584:	d003      	beq.n	800958e <HAL_TIM_OC_Stop+0x1e>
 8009586:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800958a:	4293      	cmp	r3, r2
 800958c:	d10d      	bne.n	80095aa <HAL_TIM_OC_Stop+0x3a>
    __HAL_TIM_MOE_DISABLE(htim);
 800958e:	6a19      	ldr	r1, [r3, #32]
 8009590:	f241 1211 	movw	r2, #4369	; 0x1111
 8009594:	4211      	tst	r1, r2
 8009596:	d108      	bne.n	80095aa <HAL_TIM_OC_Stop+0x3a>
 8009598:	6a19      	ldr	r1, [r3, #32]
 800959a:	f240 4244 	movw	r2, #1092	; 0x444
 800959e:	4211      	tst	r1, r2
 80095a0:	bf02      	ittt	eq
 80095a2:	6c5a      	ldreq	r2, [r3, #68]	; 0x44
 80095a4:	f422 4200 	biceq.w	r2, r2, #32768	; 0x8000
 80095a8:	645a      	streq	r2, [r3, #68]	; 0x44
  __HAL_TIM_DISABLE(htim);
 80095aa:	6a19      	ldr	r1, [r3, #32]
 80095ac:	f241 1211 	movw	r2, #4369	; 0x1111
 80095b0:	4211      	tst	r1, r2
 80095b2:	d108      	bne.n	80095c6 <HAL_TIM_OC_Stop+0x56>
 80095b4:	6a19      	ldr	r1, [r3, #32]
 80095b6:	f240 4244 	movw	r2, #1092	; 0x444
 80095ba:	4211      	tst	r1, r2
 80095bc:	bf02      	ittt	eq
 80095be:	681a      	ldreq	r2, [r3, #0]
 80095c0:	f022 0201 	biceq.w	r2, r2, #1
 80095c4:	601a      	streq	r2, [r3, #0]
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 80095c6:	2301      	movs	r3, #1
 80095c8:	b91d      	cbnz	r5, 80095d2 <HAL_TIM_OC_Stop+0x62>
 80095ca:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
}
 80095ce:	2000      	movs	r0, #0
 80095d0:	bd38      	pop	{r3, r4, r5, pc}
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_READY);
 80095d2:	2d04      	cmp	r5, #4
 80095d4:	d102      	bne.n	80095dc <HAL_TIM_OC_Stop+0x6c>
 80095d6:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 80095da:	e7f8      	b.n	80095ce <HAL_TIM_OC_Stop+0x5e>
 80095dc:	2d08      	cmp	r5, #8
 80095de:	bf0c      	ite	eq
 80095e0:	f884 3040 	strbeq.w	r3, [r4, #64]	; 0x40
 80095e4:	f884 3041 	strbne.w	r3, [r4, #65]	; 0x41
 80095e8:	e7f1      	b.n	80095ce <HAL_TIM_OC_Stop+0x5e>
 80095ea:	bf00      	nop
 80095ec:	40010000 	.word	0x40010000

080095f0 <HAL_TIM_PWM_Stop>:
 80095f0:	f7ff bfbe 	b.w	8009570 <HAL_TIM_OC_Stop>

080095f4 <HAL_TIMEx_CommutCallback>:
 80095f4:	4770      	bx	lr

080095f6 <HAL_TIMEx_BreakCallback>:
 80095f6:	4770      	bx	lr

080095f8 <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 80095f8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 80095fc:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8009600:	680a      	ldr	r2, [r1, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8009602:	f8d1 9024 	ldr.w	r9, [r1, #36]	; 0x24
 8009606:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 800960a:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 800960e:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
 8009612:	4323      	orrs	r3, r4
  if (Init->SDBank == FMC_SDRAM_BANK1)
 8009614:	b9a2      	cbnz	r2, 8009640 <FMC_SDRAM_Init+0x48>
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8009616:	ea43 0209 	orr.w	r2, r3, r9
 800961a:	432a      	orrs	r2, r5
 800961c:	ea42 0308 	orr.w	r3, r2, r8
 8009620:	6801      	ldr	r1, [r0, #0]
 8009622:	ea43 030e 	orr.w	r3, r3, lr
 8009626:	ea43 030c 	orr.w	r3, r3, ip
 800962a:	433b      	orrs	r3, r7
 800962c:	f421 41ff 	bic.w	r1, r1, #32640	; 0x7f80
 8009630:	4333      	orrs	r3, r6
 8009632:	f021 017f 	bic.w	r1, r1, #127	; 0x7f
 8009636:	430b      	orrs	r3, r1
 8009638:	6003      	str	r3, [r0, #0]
                Init->CASLatency         |
                Init->WriteProtection));
  }

  return HAL_OK;
}
 800963a:	2000      	movs	r0, #0
 800963c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK1],
 8009640:	6802      	ldr	r2, [r0, #0]
 8009642:	ea43 0309 	orr.w	r3, r3, r9
 8009646:	f422 42f8 	bic.w	r2, r2, #31744	; 0x7c00
 800964a:	4313      	orrs	r3, r2
 800964c:	6003      	str	r3, [r0, #0]
    MODIFY_REG(Device->SDCR[FMC_SDRAM_BANK2],
 800964e:	ea45 0308 	orr.w	r3, r5, r8
 8009652:	6842      	ldr	r2, [r0, #4]
 8009654:	ea43 030e 	orr.w	r3, r3, lr
 8009658:	ea43 030c 	orr.w	r3, r3, ip
 800965c:	433b      	orrs	r3, r7
 800965e:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
 8009662:	4333      	orrs	r3, r6
 8009664:	f022 027f 	bic.w	r2, r2, #127	; 0x7f
 8009668:	4313      	orrs	r3, r2
 800966a:	6043      	str	r3, [r0, #4]
 800966c:	e7e5      	b.n	800963a <FMC_SDRAM_Init+0x42>

0800966e <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* Set SDRAM device timing parameters */
  if (Bank == FMC_SDRAM_BANK1)
  {
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800966e:	68cb      	ldr	r3, [r1, #12]
 8009670:	f103 3cff 	add.w	ip, r3, #4294967295
 8009674:	694b      	ldr	r3, [r1, #20]
{
 8009676:	b5f0      	push	{r4, r5, r6, r7, lr}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 8009678:	680f      	ldr	r7, [r1, #0]
 800967a:	684c      	ldr	r4, [r1, #4]
 800967c:	688e      	ldr	r6, [r1, #8]
 800967e:	690d      	ldr	r5, [r1, #16]
 8009680:	6989      	ldr	r1, [r1, #24]
 8009682:	3b01      	subs	r3, #1
 8009684:	051b      	lsls	r3, r3, #20
 8009686:	3c01      	subs	r4, #1
 8009688:	3e01      	subs	r6, #1
 800968a:	3d01      	subs	r5, #1
 800968c:	3901      	subs	r1, #1
 800968e:	3f01      	subs	r7, #1
 8009690:	0124      	lsls	r4, r4, #4
 8009692:	0236      	lsls	r6, r6, #8
 8009694:	042d      	lsls	r5, r5, #16
 8009696:	0609      	lsls	r1, r1, #24
 8009698:	ea43 330c 	orr.w	r3, r3, ip, lsl #12
  if (Bank == FMC_SDRAM_BANK1)
 800969c:	b95a      	cbnz	r2, 80096b6 <FMC_SDRAM_Timing_Init+0x48>
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 800969e:	433b      	orrs	r3, r7
 80096a0:	4323      	orrs	r3, r4
 80096a2:	6882      	ldr	r2, [r0, #8]
 80096a4:	4333      	orrs	r3, r6
 80096a6:	432b      	orrs	r3, r5
 80096a8:	430b      	orrs	r3, r1
 80096aa:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 80096ae:	4313      	orrs	r3, r2
 80096b0:	6083      	str	r3, [r0, #8]
                (((Timing->WriteRecoveryTime) - 1U)    << FMC_SDTR1_TWR_Pos)  |
                (((Timing->RCDDelay) - 1U)             << FMC_SDTR1_TRCD_Pos)));
  }

  return HAL_OK;
}
 80096b2:	2000      	movs	r0, #0
 80096b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK1],
 80096b6:	6882      	ldr	r2, [r0, #8]
 80096b8:	f422 0270 	bic.w	r2, r2, #15728640	; 0xf00000
 80096bc:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
 80096c0:	431a      	orrs	r2, r3
 80096c2:	6082      	str	r2, [r0, #8]
    MODIFY_REG(Device->SDTR[FMC_SDRAM_BANK2],
 80096c4:	ea44 0306 	orr.w	r3, r4, r6
 80096c8:	68c2      	ldr	r2, [r0, #12]
 80096ca:	433b      	orrs	r3, r7
 80096cc:	432b      	orrs	r3, r5
 80096ce:	430b      	orrs	r3, r1
 80096d0:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
 80096d4:	4313      	orrs	r3, r2
 80096d6:	60c3      	str	r3, [r0, #12]
 80096d8:	e7eb      	b.n	80096b2 <FMC_SDRAM_Timing_Init+0x44>

080096da <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));

  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 80096da:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 80096de:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 80096e2:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;
 80096e6:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 80096ea:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 80096ec:	2300      	movs	r3, #0
 80096ee:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 80096f0:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 80096f2:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 80096f4:	4618      	mov	r0, r3
 80096f6:	4770      	bx	lr

080096f8 <FMC_SDRAM_SendCommand>:
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device,
                                        FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80096f8:	b570      	push	{r4, r5, r6, lr}
 80096fa:	4604      	mov	r4, r0
 80096fc:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));

  /* Set command register */
  MODIFY_REG(Device->SDCMR, (FMC_SDCMR_MODE | FMC_SDCMR_CTB2 | FMC_SDCMR_CTB1 | FMC_SDCMR_NRFS | FMC_SDCMR_MRD),
 80096fe:	6902      	ldr	r2, [r0, #16]
 8009700:	e9d1 3000 	ldrd	r3, r0, [r1]
 8009704:	4303      	orrs	r3, r0
 8009706:	68c8      	ldr	r0, [r1, #12]
 8009708:	0d92      	lsrs	r2, r2, #22
 800970a:	ea43 2340 	orr.w	r3, r3, r0, lsl #9
 800970e:	0592      	lsls	r2, r2, #22
 8009710:	4313      	orrs	r3, r2
 8009712:	688a      	ldr	r2, [r1, #8]
 8009714:	3a01      	subs	r2, #1
 8009716:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 800971a:	6123      	str	r3, [r4, #16]
             ((Command->CommandMode) | (Command->CommandTarget) |
              (((Command->AutoRefreshNumber) - 1U) << FMC_SDCMR_NRFS_Pos) |
              ((Command->ModeRegisterDefinition) << FMC_SDCMR_MRD_Pos)));
  /* Get tick */
  tickstart = HAL_GetTick();
 800971c:	f7fc fe2a 	bl	8006374 <HAL_GetTick>
 8009720:	4606      	mov	r6, r0

  /* wait until command is send */
  while (HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 8009722:	69a3      	ldr	r3, [r4, #24]
 8009724:	f013 0320 	ands.w	r3, r3, #32
 8009728:	d101      	bne.n	800972e <FMC_SDRAM_SendCommand+0x36>
      {
        return HAL_TIMEOUT;
      }
    }
  }
  return HAL_OK;
 800972a:	4618      	mov	r0, r3
 800972c:	e003      	b.n	8009736 <FMC_SDRAM_SendCommand+0x3e>
    if (Timeout != HAL_MAX_DELAY)
 800972e:	1c6b      	adds	r3, r5, #1
 8009730:	d0f7      	beq.n	8009722 <FMC_SDRAM_SendCommand+0x2a>
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8009732:	b90d      	cbnz	r5, 8009738 <FMC_SDRAM_SendCommand+0x40>
        return HAL_TIMEOUT;
 8009734:	2003      	movs	r0, #3
}
 8009736:	bd70      	pop	{r4, r5, r6, pc}
      if ((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 8009738:	f7fc fe1c 	bl	8006374 <HAL_GetTick>
 800973c:	1b80      	subs	r0, r0, r6
 800973e:	42a8      	cmp	r0, r5
 8009740:	d9ef      	bls.n	8009722 <FMC_SDRAM_SendCommand+0x2a>
 8009742:	e7f7      	b.n	8009734 <FMC_SDRAM_SendCommand+0x3c>

08009744 <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));

  /* Set the refresh rate in command register */
  MODIFY_REG(Device->SDRTR, FMC_SDRTR_COUNT, (RefreshRate << FMC_SDRTR_COUNT_Pos));
 8009744:	6943      	ldr	r3, [r0, #20]
 8009746:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 800974a:	f023 033e 	bic.w	r3, r3, #62	; 0x3e
 800974e:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 8009752:	6141      	str	r1, [r0, #20]

  return HAL_OK;
}
 8009754:	2000      	movs	r0, #0
 8009756:	4770      	bx	lr

08009758 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 8009758:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 800975a:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800975e:	691b      	ldr	r3, [r3, #16]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 8009760:	f001 fe40 	bl	800b3e4 <xTaskGetSchedulerState>
 8009764:	2801      	cmp	r0, #1
 8009766:	d003      	beq.n	8009770 <SysTick_Handler+0x18>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 8009768:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 800976c:	f000 bbe2 	b.w	8009f34 <xPortSysTickHandler>
}
 8009770:	bd08      	pop	{r3, pc}
	...

08009774 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8009774:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8009778:	b92b      	cbnz	r3, 8009786 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800977a:	4b06      	ldr	r3, [pc, #24]	; (8009794 <osKernelInitialize+0x20>)
 800977c:	6818      	ldr	r0, [r3, #0]
 800977e:	b928      	cbnz	r0, 800978c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8009780:	2201      	movs	r2, #1
 8009782:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8009784:	4770      	bx	lr
    stat = osErrorISR;
 8009786:	f06f 0005 	mvn.w	r0, #5
 800978a:	4770      	bx	lr
    } else {
      stat = osError;
 800978c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8009790:	4770      	bx	lr
 8009792:	bf00      	nop
 8009794:	20009340 	.word	0x20009340

08009798 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8009798:	b510      	push	{r4, lr}
 800979a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800979e:	b95c      	cbnz	r4, 80097b8 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 80097a0:	4b08      	ldr	r3, [pc, #32]	; (80097c4 <osKernelStart+0x2c>)
 80097a2:	681a      	ldr	r2, [r3, #0]
 80097a4:	2a01      	cmp	r2, #1
 80097a6:	d10a      	bne.n	80097be <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80097a8:	4a07      	ldr	r2, [pc, #28]	; (80097c8 <osKernelStart+0x30>)
 80097aa:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 80097ac:	2202      	movs	r2, #2
 80097ae:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 80097b0:	f001 fcbc 	bl	800b12c <vTaskStartScheduler>
      stat = osOK;
 80097b4:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 80097b6:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 80097b8:	f06f 0005 	mvn.w	r0, #5
 80097bc:	e7fb      	b.n	80097b6 <osKernelStart+0x1e>
      stat = osError;
 80097be:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 80097c2:	e7f8      	b.n	80097b6 <osKernelStart+0x1e>
 80097c4:	20009340 	.word	0x20009340
 80097c8:	e000ed00 	.word	0xe000ed00

080097cc <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80097cc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80097ce:	b087      	sub	sp, #28
 80097d0:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 80097d2:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 80097d4:	460b      	mov	r3, r1
  hTask = NULL;
 80097d6:	9205      	str	r2, [sp, #20]
 80097d8:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 80097dc:	b9d2      	cbnz	r2, 8009814 <osThreadNew+0x48>
 80097de:	b1c8      	cbz	r0, 8009814 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 80097e0:	2c00      	cmp	r4, #0
 80097e2:	d02f      	beq.n	8009844 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 80097e4:	69a5      	ldr	r5, [r4, #24]
 80097e6:	2d00      	cmp	r5, #0
 80097e8:	bf08      	it	eq
 80097ea:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 80097ec:	1e69      	subs	r1, r5, #1
 80097ee:	2937      	cmp	r1, #55	; 0x37
 80097f0:	46ac      	mov	ip, r5
 80097f2:	d82b      	bhi.n	800984c <osThreadNew+0x80>
 80097f4:	6861      	ldr	r1, [r4, #4]
 80097f6:	07c9      	lsls	r1, r1, #31
 80097f8:	d428      	bmi.n	800984c <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 80097fa:	6966      	ldr	r6, [r4, #20]
 80097fc:	b16e      	cbz	r6, 800981a <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 80097fe:	08b2      	lsrs	r2, r6, #2
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8009800:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8009804:	6821      	ldr	r1, [r4, #0]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8009806:	b157      	cbz	r7, 800981e <osThreadNew+0x52>
 8009808:	f1be 0f5f 	cmp.w	lr, #95	; 0x5f
 800980c:	d902      	bls.n	8009814 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800980e:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8009810:	b104      	cbz	r4, 8009814 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 8009812:	b9ee      	cbnz	r6, 8009850 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 8009814:	9805      	ldr	r0, [sp, #20]
}
 8009816:	b007      	add	sp, #28
 8009818:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 800981a:	2280      	movs	r2, #128	; 0x80
 800981c:	e7f0      	b.n	8009800 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 800981e:	f1be 0f00 	cmp.w	lr, #0
 8009822:	d1f7      	bne.n	8009814 <osThreadNew+0x48>
      if (mem == 0) {
 8009824:	6924      	ldr	r4, [r4, #16]
 8009826:	2c00      	cmp	r4, #0
 8009828:	d1f4      	bne.n	8009814 <osThreadNew+0x48>
 800982a:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 800982c:	a905      	add	r1, sp, #20
 800982e:	e9cd c100 	strd	ip, r1, [sp]
 8009832:	b292      	uxth	r2, r2
 8009834:	4621      	mov	r1, r4
 8009836:	f001 faf4 	bl	800ae22 <xTaskCreate>
 800983a:	2801      	cmp	r0, #1
            hTask = NULL;
 800983c:	bf1c      	itt	ne
 800983e:	2300      	movne	r3, #0
 8009840:	9305      	strne	r3, [sp, #20]
 8009842:	e7e7      	b.n	8009814 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 8009844:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 8009848:	2280      	movs	r2, #128	; 0x80
 800984a:	e7ef      	b.n	800982c <osThreadNew+0x60>
        return (NULL);
 800984c:	4610      	mov	r0, r2
 800984e:	e7e2      	b.n	8009816 <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 8009850:	e9cd 4701 	strd	r4, r7, [sp, #4]
 8009854:	9500      	str	r5, [sp, #0]
 8009856:	f001 faac 	bl	800adb2 <xTaskCreateStatic>
 800985a:	9005      	str	r0, [sp, #20]
 800985c:	e7da      	b.n	8009814 <osThreadNew+0x48>

0800985e <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 800985e:	b510      	push	{r4, lr}
 8009860:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 8009864:	b924      	cbnz	r4, 8009870 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 8009866:	b110      	cbz	r0, 800986e <osDelay+0x10>
      vTaskDelay(ticks);
 8009868:	f001 fc20 	bl	800b0ac <vTaskDelay>
    stat = osOK;
 800986c:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 800986e:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8009870:	f06f 0005 	mvn.w	r0, #5
 8009874:	e7fb      	b.n	800986e <osDelay+0x10>

08009876 <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 8009876:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009878:	4604      	mov	r4, r0
 800987a:	460e      	mov	r6, r1
 800987c:	4615      	mov	r5, r2
 800987e:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8009882:	b11a      	cbz	r2, 800988c <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 8009884:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 8009886:	4620      	mov	r0, r4
 8009888:	b003      	add	sp, #12
 800988a:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 800988c:	2800      	cmp	r0, #0
 800988e:	d0f9      	beq.n	8009884 <osSemaphoreNew+0xe>
 8009890:	4288      	cmp	r0, r1
 8009892:	d3f7      	bcc.n	8009884 <osSemaphoreNew+0xe>
    if (attr != NULL) {
 8009894:	b1e5      	cbz	r5, 80098d0 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 8009896:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 800989a:	b1bb      	cbz	r3, 80098cc <osSemaphoreNew+0x56>
 800989c:	2f4f      	cmp	r7, #79	; 0x4f
 800989e:	d9f1      	bls.n	8009884 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 80098a0:	2801      	cmp	r0, #1
 80098a2:	d12a      	bne.n	80098fa <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 80098a4:	2103      	movs	r1, #3
 80098a6:	9100      	str	r1, [sp, #0]
 80098a8:	4611      	mov	r1, r2
 80098aa:	f000 fcec 	bl	800a286 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 80098ae:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 80098b0:	2800      	cmp	r0, #0
 80098b2:	d0e7      	beq.n	8009884 <osSemaphoreNew+0xe>
 80098b4:	b1de      	cbz	r6, 80098ee <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 80098b6:	2300      	movs	r3, #0
 80098b8:	461a      	mov	r2, r3
 80098ba:	4619      	mov	r1, r3
 80098bc:	f000 fd98 	bl	800a3f0 <xQueueGenericSend>
 80098c0:	2801      	cmp	r0, #1
 80098c2:	d014      	beq.n	80098ee <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 80098c4:	4620      	mov	r0, r4
 80098c6:	f001 f8d3 	bl	800aa70 <vQueueDelete>
 80098ca:	e7db      	b.n	8009884 <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 80098cc:	2f00      	cmp	r7, #0
 80098ce:	d1d9      	bne.n	8009884 <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 80098d0:	2c01      	cmp	r4, #1
 80098d2:	d105      	bne.n	80098e0 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 80098d4:	2203      	movs	r2, #3
 80098d6:	2100      	movs	r1, #0
 80098d8:	4620      	mov	r0, r4
 80098da:	f000 fd22 	bl	800a322 <xQueueGenericCreate>
 80098de:	e7e6      	b.n	80098ae <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 80098e0:	4620      	mov	r0, r4
 80098e2:	4631      	mov	r1, r6
 80098e4:	f000 fd66 	bl	800a3b4 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 80098e8:	4604      	mov	r4, r0
 80098ea:	2800      	cmp	r0, #0
 80098ec:	d0ca      	beq.n	8009884 <osSemaphoreNew+0xe>
        if (attr != NULL) {
 80098ee:	b955      	cbnz	r5, 8009906 <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 80098f0:	4629      	mov	r1, r5
 80098f2:	4620      	mov	r0, r4
 80098f4:	f001 f896 	bl	800aa24 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80098f8:	e7c5      	b.n	8009886 <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80098fa:	461a      	mov	r2, r3
 80098fc:	f000 fd38 	bl	800a370 <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 8009900:	4604      	mov	r4, r0
 8009902:	2800      	cmp	r0, #0
 8009904:	d0be      	beq.n	8009884 <osSemaphoreNew+0xe>
          name = attr->name;
 8009906:	682d      	ldr	r5, [r5, #0]
 8009908:	e7f2      	b.n	80098f0 <osSemaphoreNew+0x7a>

0800990a <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 800990a:	b513      	push	{r0, r1, r4, lr}
 800990c:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800990e:	b308      	cbz	r0, 8009954 <osSemaphoreAcquire+0x4a>
 8009910:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8009914:	b1b3      	cbz	r3, 8009944 <osSemaphoreAcquire+0x3a>
    if (timeout != 0U) {
 8009916:	b9e9      	cbnz	r1, 8009954 <osSemaphoreAcquire+0x4a>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 8009918:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 800991a:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 800991c:	f001 f833 	bl	800a986 <xQueueReceiveFromISR>
 8009920:	2801      	cmp	r0, #1
 8009922:	d114      	bne.n	800994e <osSemaphoreAcquire+0x44>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8009924:	9b01      	ldr	r3, [sp, #4]
 8009926:	b913      	cbnz	r3, 800992e <osSemaphoreAcquire+0x24>
  stat = osOK;
 8009928:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 800992a:	b002      	add	sp, #8
 800992c:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 800992e:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009932:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009936:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800993a:	f3bf 8f4f 	dsb	sy
 800993e:	f3bf 8f6f 	isb	sy
 8009942:	e7f1      	b.n	8009928 <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 8009944:	f000 ff5c 	bl	800a800 <xQueueSemaphoreTake>
 8009948:	2801      	cmp	r0, #1
 800994a:	d0ed      	beq.n	8009928 <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 800994c:	b92c      	cbnz	r4, 800995a <osSemaphoreAcquire+0x50>
        stat = osErrorResource;
 800994e:	f06f 0002 	mvn.w	r0, #2
 8009952:	e7ea      	b.n	800992a <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 8009954:	f06f 0003 	mvn.w	r0, #3
 8009958:	e7e7      	b.n	800992a <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 800995a:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800995e:	e7e4      	b.n	800992a <osSemaphoreAcquire+0x20>

08009960 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8009960:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 8009962:	b310      	cbz	r0, 80099aa <osSemaphoreRelease+0x4a>
 8009964:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8009968:	b1b3      	cbz	r3, 8009998 <osSemaphoreRelease+0x38>
    yield = pdFALSE;
 800996a:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 800996c:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 800996e:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8009970:	f000 fe53 	bl	800a61a <xQueueGiveFromISR>
 8009974:	2801      	cmp	r0, #1
 8009976:	d115      	bne.n	80099a4 <osSemaphoreRelease+0x44>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8009978:	9b01      	ldr	r3, [sp, #4]
 800997a:	b913      	cbnz	r3, 8009982 <osSemaphoreRelease+0x22>
  stat = osOK;
 800997c:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 800997e:	b002      	add	sp, #8
 8009980:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 8009982:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009986:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800998a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800998e:	f3bf 8f4f 	dsb	sy
 8009992:	f3bf 8f6f 	isb	sy
 8009996:	e7f1      	b.n	800997c <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 8009998:	461a      	mov	r2, r3
 800999a:	4619      	mov	r1, r3
 800999c:	f000 fd28 	bl	800a3f0 <xQueueGenericSend>
 80099a0:	2801      	cmp	r0, #1
 80099a2:	d0eb      	beq.n	800997c <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 80099a4:	f06f 0002 	mvn.w	r0, #2
 80099a8:	e7e9      	b.n	800997e <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 80099aa:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 80099ae:	e7e6      	b.n	800997e <osSemaphoreRelease+0x1e>

080099b0 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 80099b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80099b2:	4605      	mov	r5, r0
 80099b4:	460e      	mov	r6, r1
 80099b6:	4614      	mov	r4, r2
 80099b8:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80099bc:	b11f      	cbz	r7, 80099c6 <osMessageQueueNew+0x16>
  hQueue = NULL;
 80099be:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 80099c0:	4628      	mov	r0, r5
 80099c2:	b003      	add	sp, #12
 80099c4:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 80099c6:	2800      	cmp	r0, #0
 80099c8:	d0f9      	beq.n	80099be <osMessageQueueNew+0xe>
 80099ca:	2900      	cmp	r1, #0
 80099cc:	d0f7      	beq.n	80099be <osMessageQueueNew+0xe>
    if (attr != NULL) {
 80099ce:	b1da      	cbz	r2, 8009a08 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80099d0:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 80099d4:	b183      	cbz	r3, 80099f8 <osMessageQueueNew+0x48>
 80099d6:	2a4f      	cmp	r2, #79	; 0x4f
 80099d8:	d9f1      	bls.n	80099be <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80099da:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 80099dc:	2a00      	cmp	r2, #0
 80099de:	d0ee      	beq.n	80099be <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 80099e0:	6966      	ldr	r6, [r4, #20]
 80099e2:	434d      	muls	r5, r1
 80099e4:	42ae      	cmp	r6, r5
 80099e6:	d3ea      	bcc.n	80099be <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80099e8:	9700      	str	r7, [sp, #0]
 80099ea:	f000 fc4c 	bl	800a286 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80099ee:	4605      	mov	r5, r0
 80099f0:	2800      	cmp	r0, #0
 80099f2:	d0e4      	beq.n	80099be <osMessageQueueNew+0xe>
        name = attr->name;
 80099f4:	6824      	ldr	r4, [r4, #0]
 80099f6:	e011      	b.n	8009a1c <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80099f8:	2a00      	cmp	r2, #0
 80099fa:	d1e0      	bne.n	80099be <osMessageQueueNew+0xe>
 80099fc:	6923      	ldr	r3, [r4, #16]
 80099fe:	2b00      	cmp	r3, #0
 8009a00:	d1dd      	bne.n	80099be <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 8009a02:	6963      	ldr	r3, [r4, #20]
 8009a04:	2b00      	cmp	r3, #0
 8009a06:	d1da      	bne.n	80099be <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 8009a08:	4628      	mov	r0, r5
 8009a0a:	2200      	movs	r2, #0
 8009a0c:	4631      	mov	r1, r6
 8009a0e:	f000 fc88 	bl	800a322 <xQueueGenericCreate>
    if (hQueue != NULL) {
 8009a12:	4605      	mov	r5, r0
 8009a14:	2800      	cmp	r0, #0
 8009a16:	d0d2      	beq.n	80099be <osMessageQueueNew+0xe>
      if (attr != NULL) {
 8009a18:	2c00      	cmp	r4, #0
 8009a1a:	d1eb      	bne.n	80099f4 <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 8009a1c:	4621      	mov	r1, r4
 8009a1e:	4628      	mov	r0, r5
 8009a20:	f001 f800 	bl	800aa24 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 8009a24:	e7cc      	b.n	80099c0 <osMessageQueueNew+0x10>

08009a26 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 8009a26:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8009a28:	461c      	mov	r4, r3
 8009a2a:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8009a2e:	b1c6      	cbz	r6, 8009a62 <osMessageQueuePut+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8009a30:	b318      	cbz	r0, 8009a7a <osMessageQueuePut+0x54>
 8009a32:	b311      	cbz	r1, 8009a7a <osMessageQueuePut+0x54>
 8009a34:	bb0b      	cbnz	r3, 8009a7a <osMessageQueuePut+0x54>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8009a36:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8009a38:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 8009a3a:	f000 fd8c 	bl	800a556 <xQueueGenericSendFromISR>
 8009a3e:	2801      	cmp	r0, #1
 8009a40:	d118      	bne.n	8009a74 <osMessageQueuePut+0x4e>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8009a42:	9b01      	ldr	r3, [sp, #4]
 8009a44:	b913      	cbnz	r3, 8009a4c <osMessageQueuePut+0x26>
  stat = osOK;
 8009a46:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8009a48:	b002      	add	sp, #8
 8009a4a:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8009a4c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009a50:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009a54:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009a58:	f3bf 8f4f 	dsb	sy
 8009a5c:	f3bf 8f6f 	isb	sy
 8009a60:	e7f1      	b.n	8009a46 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8009a62:	b150      	cbz	r0, 8009a7a <osMessageQueuePut+0x54>
 8009a64:	b149      	cbz	r1, 8009a7a <osMessageQueuePut+0x54>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8009a66:	4633      	mov	r3, r6
 8009a68:	4622      	mov	r2, r4
 8009a6a:	f000 fcc1 	bl	800a3f0 <xQueueGenericSend>
 8009a6e:	2801      	cmp	r0, #1
 8009a70:	d0e9      	beq.n	8009a46 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 8009a72:	b92c      	cbnz	r4, 8009a80 <osMessageQueuePut+0x5a>
          stat = osErrorResource;
 8009a74:	f06f 0002 	mvn.w	r0, #2
 8009a78:	e7e6      	b.n	8009a48 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 8009a7a:	f06f 0003 	mvn.w	r0, #3
 8009a7e:	e7e3      	b.n	8009a48 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 8009a80:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8009a84:	e7e0      	b.n	8009a48 <osMessageQueuePut+0x22>

08009a86 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8009a86:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009a88:	461c      	mov	r4, r3
 8009a8a:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8009a8e:	b1c3      	cbz	r3, 8009ac2 <osMessageQueueGet+0x3c>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 8009a90:	b310      	cbz	r0, 8009ad8 <osMessageQueueGet+0x52>
 8009a92:	b309      	cbz	r1, 8009ad8 <osMessageQueueGet+0x52>
 8009a94:	bb04      	cbnz	r4, 8009ad8 <osMessageQueueGet+0x52>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8009a96:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8009a98:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8009a9a:	f000 ff74 	bl	800a986 <xQueueReceiveFromISR>
 8009a9e:	2801      	cmp	r0, #1
 8009aa0:	d117      	bne.n	8009ad2 <osMessageQueueGet+0x4c>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 8009aa2:	9b01      	ldr	r3, [sp, #4]
 8009aa4:	b913      	cbnz	r3, 8009aac <osMessageQueueGet+0x26>
  stat = osOK;
 8009aa6:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8009aa8:	b003      	add	sp, #12
 8009aaa:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8009aac:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009ab0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009ab4:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 8009ab8:	f3bf 8f4f 	dsb	sy
 8009abc:	f3bf 8f6f 	isb	sy
 8009ac0:	e7f1      	b.n	8009aa6 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8009ac2:	b148      	cbz	r0, 8009ad8 <osMessageQueueGet+0x52>
 8009ac4:	b141      	cbz	r1, 8009ad8 <osMessageQueueGet+0x52>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 8009ac6:	4622      	mov	r2, r4
 8009ac8:	f000 fdfb 	bl	800a6c2 <xQueueReceive>
 8009acc:	2801      	cmp	r0, #1
 8009ace:	d0ea      	beq.n	8009aa6 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 8009ad0:	b92c      	cbnz	r4, 8009ade <osMessageQueueGet+0x58>
          stat = osErrorResource;
 8009ad2:	f06f 0002 	mvn.w	r0, #2
 8009ad6:	e7e7      	b.n	8009aa8 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 8009ad8:	f06f 0003 	mvn.w	r0, #3
 8009adc:	e7e4      	b.n	8009aa8 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 8009ade:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8009ae2:	e7e1      	b.n	8009aa8 <osMessageQueueGet+0x22>

08009ae4 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 8009ae4:	4b03      	ldr	r3, [pc, #12]	; (8009af4 <vApplicationGetIdleTaskMemory+0x10>)
 8009ae6:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 8009ae8:	4b03      	ldr	r3, [pc, #12]	; (8009af8 <vApplicationGetIdleTaskMemory+0x14>)
 8009aea:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 8009aec:	2380      	movs	r3, #128	; 0x80
 8009aee:	6013      	str	r3, [r2, #0]
}
 8009af0:	4770      	bx	lr
 8009af2:	bf00      	nop
 8009af4:	200092e0 	.word	0x200092e0
 8009af8:	200090e0 	.word	0x200090e0

08009afc <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 8009afc:	4b03      	ldr	r3, [pc, #12]	; (8009b0c <vApplicationGetTimerTaskMemory+0x10>)
 8009afe:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 8009b00:	4b03      	ldr	r3, [pc, #12]	; (8009b10 <vApplicationGetTimerTaskMemory+0x14>)
 8009b02:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 8009b04:	f44f 7380 	mov.w	r3, #256	; 0x100
 8009b08:	6013      	str	r3, [r2, #0]
}
 8009b0a:	4770      	bx	lr
 8009b0c:	20009744 	.word	0x20009744
 8009b10:	20009344 	.word	0x20009344

08009b14 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 8009b14:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 8009b16:	4b0f      	ldr	r3, [pc, #60]	; (8009b54 <prvInsertBlockIntoFreeList+0x40>)
 8009b18:	461a      	mov	r2, r3
 8009b1a:	681b      	ldr	r3, [r3, #0]
 8009b1c:	4283      	cmp	r3, r0
 8009b1e:	d3fb      	bcc.n	8009b18 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 8009b20:	6854      	ldr	r4, [r2, #4]
 8009b22:	1911      	adds	r1, r2, r4
 8009b24:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 8009b26:	bf01      	itttt	eq
 8009b28:	6841      	ldreq	r1, [r0, #4]
 8009b2a:	4610      	moveq	r0, r2
 8009b2c:	1909      	addeq	r1, r1, r4
 8009b2e:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 8009b30:	6844      	ldr	r4, [r0, #4]
 8009b32:	1901      	adds	r1, r0, r4
 8009b34:	428b      	cmp	r3, r1
 8009b36:	d107      	bne.n	8009b48 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 8009b38:	4907      	ldr	r1, [pc, #28]	; (8009b58 <prvInsertBlockIntoFreeList+0x44>)
 8009b3a:	6809      	ldr	r1, [r1, #0]
 8009b3c:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8009b3e:	bf1f      	itttt	ne
 8009b40:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 8009b42:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8009b44:	1909      	addne	r1, r1, r4
 8009b46:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8009b48:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8009b4a:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8009b4c:	bf18      	it	ne
 8009b4e:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8009b50:	bd10      	pop	{r4, pc}
 8009b52:	bf00      	nop
 8009b54:	200117bc 	.word	0x200117bc
 8009b58:	200097a4 	.word	0x200097a4

08009b5c <pvPortMalloc>:
{
 8009b5c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009b60:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8009b62:	f001 f98b 	bl	800ae7c <vTaskSuspendAll>
		if( pxEnd == NULL )
 8009b66:	4842      	ldr	r0, [pc, #264]	; (8009c70 <pvPortMalloc+0x114>)
 8009b68:	4d42      	ldr	r5, [pc, #264]	; (8009c74 <pvPortMalloc+0x118>)
 8009b6a:	6803      	ldr	r3, [r0, #0]
 8009b6c:	bb0b      	cbnz	r3, 8009bb2 <pvPortMalloc+0x56>
	uxAddress = ( size_t ) ucHeap;
 8009b6e:	4942      	ldr	r1, [pc, #264]	; (8009c78 <pvPortMalloc+0x11c>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8009b70:	074e      	lsls	r6, r1, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8009b72:	bf1f      	itttt	ne
 8009b74:	1dcb      	addne	r3, r1, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8009b76:	f023 0307 	bicne.w	r3, r3, #7
		xTotalHeapSize -= uxAddress - ( size_t ) ucHeap;
 8009b7a:	f501 4200 	addne.w	r2, r1, #32768	; 0x8000
 8009b7e:	1ad2      	subne	r2, r2, r3
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8009b80:	bf14      	ite	ne
 8009b82:	4619      	movne	r1, r3
size_t xTotalHeapSize = configTOTAL_HEAP_SIZE;
 8009b84:	f44f 4200 	moveq.w	r2, #32768	; 0x8000
	uxAddress = ( ( size_t ) pucAlignedHeap ) + xTotalHeapSize;
 8009b88:	440a      	add	r2, r1
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8009b8a:	4e3c      	ldr	r6, [pc, #240]	; (8009c7c <pvPortMalloc+0x120>)
	uxAddress -= xHeapStructSize;
 8009b8c:	3a08      	subs	r2, #8
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8009b8e:	f022 0207 	bic.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8009b92:	2300      	movs	r3, #0
 8009b94:	6073      	str	r3, [r6, #4]
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8009b96:	6031      	str	r1, [r6, #0]
	pxEnd->pxNextFreeBlock = NULL;
 8009b98:	e9c2 3300 	strd	r3, r3, [r2]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8009b9c:	1a53      	subs	r3, r2, r1
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8009b9e:	e9c1 2300 	strd	r2, r3, [r1]
	pxEnd = ( void * ) uxAddress;
 8009ba2:	6002      	str	r2, [r0, #0]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8009ba4:	4a36      	ldr	r2, [pc, #216]	; (8009c80 <pvPortMalloc+0x124>)
 8009ba6:	6013      	str	r3, [r2, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8009ba8:	4a36      	ldr	r2, [pc, #216]	; (8009c84 <pvPortMalloc+0x128>)
 8009baa:	6013      	str	r3, [r2, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8009bac:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8009bb0:	602b      	str	r3, [r5, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8009bb2:	682f      	ldr	r7, [r5, #0]
 8009bb4:	4227      	tst	r7, r4
 8009bb6:	d155      	bne.n	8009c64 <pvPortMalloc+0x108>
			if( xWantedSize > 0 )
 8009bb8:	2c00      	cmp	r4, #0
 8009bba:	d046      	beq.n	8009c4a <pvPortMalloc+0xee>
				xWantedSize += xHeapStructSize;
 8009bbc:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8009bc0:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8009bc2:	bf1c      	itt	ne
 8009bc4:	f023 0307 	bicne.w	r3, r3, #7
 8009bc8:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8009bca:	2b00      	cmp	r3, #0
 8009bcc:	d04a      	beq.n	8009c64 <pvPortMalloc+0x108>
 8009bce:	4c2d      	ldr	r4, [pc, #180]	; (8009c84 <pvPortMalloc+0x128>)
 8009bd0:	6826      	ldr	r6, [r4, #0]
 8009bd2:	429e      	cmp	r6, r3
 8009bd4:	d346      	bcc.n	8009c64 <pvPortMalloc+0x108>
				pxBlock = xStart.pxNextFreeBlock;
 8009bd6:	4a29      	ldr	r2, [pc, #164]	; (8009c7c <pvPortMalloc+0x120>)
 8009bd8:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8009bda:	6869      	ldr	r1, [r5, #4]
 8009bdc:	4299      	cmp	r1, r3
 8009bde:	d204      	bcs.n	8009bea <pvPortMalloc+0x8e>
 8009be0:	f8d5 c000 	ldr.w	ip, [r5]
 8009be4:	f1bc 0f00 	cmp.w	ip, #0
 8009be8:	d115      	bne.n	8009c16 <pvPortMalloc+0xba>
				if( pxBlock != pxEnd )
 8009bea:	6800      	ldr	r0, [r0, #0]
 8009bec:	42a8      	cmp	r0, r5
 8009bee:	d039      	beq.n	8009c64 <pvPortMalloc+0x108>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8009bf0:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8009bf2:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8009bf4:	f8d2 8000 	ldr.w	r8, [r2]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8009bf8:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8009bfa:	2910      	cmp	r1, #16
 8009bfc:	d912      	bls.n	8009c24 <pvPortMalloc+0xc8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8009bfe:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8009c00:	0742      	lsls	r2, r0, #29
 8009c02:	d00b      	beq.n	8009c1c <pvPortMalloc+0xc0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8009c04:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c08:	f383 8811 	msr	BASEPRI, r3
 8009c0c:	f3bf 8f6f 	isb	sy
 8009c10:	f3bf 8f4f 	dsb	sy
 8009c14:	e7fe      	b.n	8009c14 <pvPortMalloc+0xb8>
 8009c16:	462a      	mov	r2, r5
 8009c18:	4665      	mov	r5, ip
 8009c1a:	e7de      	b.n	8009bda <pvPortMalloc+0x7e>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8009c1c:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8009c1e:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8009c20:	f7ff ff78 	bl	8009b14 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8009c24:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8009c26:	4916      	ldr	r1, [pc, #88]	; (8009c80 <pvPortMalloc+0x124>)
					xNumberOfSuccessfulAllocations++;
 8009c28:	4a17      	ldr	r2, [pc, #92]	; (8009c88 <pvPortMalloc+0x12c>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8009c2a:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8009c2c:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8009c2e:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 8009c30:	2300      	movs	r3, #0
 8009c32:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8009c34:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8009c36:	6026      	str	r6, [r4, #0]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8009c38:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 8009c3a:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8009c3e:	bf38      	it	cc
 8009c40:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8009c42:	f108 0408 	add.w	r4, r8, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8009c46:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 8009c48:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 8009c4a:	f001 f9bb 	bl	800afc4 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8009c4e:	0763      	lsls	r3, r4, #29
 8009c50:	d00a      	beq.n	8009c68 <pvPortMalloc+0x10c>
 8009c52:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009c56:	f383 8811 	msr	BASEPRI, r3
 8009c5a:	f3bf 8f6f 	isb	sy
 8009c5e:	f3bf 8f4f 	dsb	sy
 8009c62:	e7fe      	b.n	8009c62 <pvPortMalloc+0x106>
void *pvReturn = NULL;
 8009c64:	2400      	movs	r4, #0
 8009c66:	e7f0      	b.n	8009c4a <pvPortMalloc+0xee>
}
 8009c68:	4620      	mov	r0, r4
 8009c6a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009c6e:	bf00      	nop
 8009c70:	200097a4 	.word	0x200097a4
 8009c74:	200117a8 	.word	0x200117a8
 8009c78:	200097a8 	.word	0x200097a8
 8009c7c:	200117bc 	.word	0x200117bc
 8009c80:	200117b0 	.word	0x200117b0
 8009c84:	200117ac 	.word	0x200117ac
 8009c88:	200117b4 	.word	0x200117b4

08009c8c <vPortFree>:
{
 8009c8c:	b510      	push	{r4, lr}
	if( pv != NULL )
 8009c8e:	4604      	mov	r4, r0
 8009c90:	b390      	cbz	r0, 8009cf8 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8009c92:	4a1a      	ldr	r2, [pc, #104]	; (8009cfc <vPortFree+0x70>)
 8009c94:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8009c98:	6812      	ldr	r2, [r2, #0]
 8009c9a:	4213      	tst	r3, r2
 8009c9c:	d108      	bne.n	8009cb0 <vPortFree+0x24>
 8009c9e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009ca2:	f383 8811 	msr	BASEPRI, r3
 8009ca6:	f3bf 8f6f 	isb	sy
 8009caa:	f3bf 8f4f 	dsb	sy
 8009cae:	e7fe      	b.n	8009cae <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8009cb0:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8009cb4:	b141      	cbz	r1, 8009cc8 <vPortFree+0x3c>
 8009cb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009cba:	f383 8811 	msr	BASEPRI, r3
 8009cbe:	f3bf 8f6f 	isb	sy
 8009cc2:	f3bf 8f4f 	dsb	sy
 8009cc6:	e7fe      	b.n	8009cc6 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8009cc8:	ea23 0302 	bic.w	r3, r3, r2
 8009ccc:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8009cd0:	f001 f8d4 	bl	800ae7c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8009cd4:	4a0a      	ldr	r2, [pc, #40]	; (8009d00 <vPortFree+0x74>)
 8009cd6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8009cda:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8009cdc:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8009ce0:	440b      	add	r3, r1
 8009ce2:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8009ce4:	f7ff ff16 	bl	8009b14 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8009ce8:	4a06      	ldr	r2, [pc, #24]	; (8009d04 <vPortFree+0x78>)
 8009cea:	6813      	ldr	r3, [r2, #0]
}
 8009cec:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8009cf0:	3301      	adds	r3, #1
 8009cf2:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8009cf4:	f001 b966 	b.w	800afc4 <xTaskResumeAll>
}
 8009cf8:	bd10      	pop	{r4, pc}
 8009cfa:	bf00      	nop
 8009cfc:	200117a8 	.word	0x200117a8
 8009d00:	200117ac 	.word	0x200117ac
 8009d04:	200117b8 	.word	0x200117b8

08009d08 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009d08:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8009d0c:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009d10:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009d14:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8009d16:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8009d18:	2300      	movs	r3, #0
 8009d1a:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8009d1c:	4770      	bx	lr

08009d1e <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8009d1e:	2300      	movs	r3, #0
 8009d20:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8009d22:	4770      	bx	lr

08009d24 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8009d24:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8009d26:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8009d28:	689a      	ldr	r2, [r3, #8]
 8009d2a:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8009d2c:	689a      	ldr	r2, [r3, #8]
 8009d2e:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8009d30:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8009d32:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8009d34:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8009d36:	3301      	adds	r3, #1
 8009d38:	6003      	str	r3, [r0, #0]
}
 8009d3a:	4770      	bx	lr

08009d3c <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8009d3c:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8009d3e:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8009d40:	1c63      	adds	r3, r4, #1
 8009d42:	d10a      	bne.n	8009d5a <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8009d44:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8009d46:	685a      	ldr	r2, [r3, #4]
 8009d48:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8009d4a:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8009d4c:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8009d4e:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8009d50:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8009d52:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8009d54:	3301      	adds	r3, #1
 8009d56:	6003      	str	r3, [r0, #0]
}
 8009d58:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8009d5a:	f100 0208 	add.w	r2, r0, #8
 8009d5e:	4613      	mov	r3, r2
 8009d60:	6852      	ldr	r2, [r2, #4]
 8009d62:	6815      	ldr	r5, [r2, #0]
 8009d64:	42a5      	cmp	r5, r4
 8009d66:	d9fa      	bls.n	8009d5e <vListInsert+0x22>
 8009d68:	e7ed      	b.n	8009d46 <vListInsert+0xa>

08009d6a <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8009d6a:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8009d6e:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8009d70:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8009d72:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8009d74:	6859      	ldr	r1, [r3, #4]
 8009d76:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8009d78:	bf08      	it	eq
 8009d7a:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8009d7c:	2200      	movs	r2, #0
 8009d7e:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8009d80:	681a      	ldr	r2, [r3, #0]
 8009d82:	3a01      	subs	r2, #1
 8009d84:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8009d86:	6818      	ldr	r0, [r3, #0]
}
 8009d88:	4770      	bx	lr
	...

08009d8c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8009d8c:	4808      	ldr	r0, [pc, #32]	; (8009db0 <prvPortStartFirstTask+0x24>)
 8009d8e:	6800      	ldr	r0, [r0, #0]
 8009d90:	6800      	ldr	r0, [r0, #0]
 8009d92:	f380 8808 	msr	MSP, r0
 8009d96:	f04f 0000 	mov.w	r0, #0
 8009d9a:	f380 8814 	msr	CONTROL, r0
 8009d9e:	b662      	cpsie	i
 8009da0:	b661      	cpsie	f
 8009da2:	f3bf 8f4f 	dsb	sy
 8009da6:	f3bf 8f6f 	isb	sy
 8009daa:	df00      	svc	0
 8009dac:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8009dae:	0000      	.short	0x0000
 8009db0:	e000ed08 	.word	0xe000ed08

08009db4 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8009db4:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8009dc4 <vPortEnableVFP+0x10>
 8009db8:	6801      	ldr	r1, [r0, #0]
 8009dba:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8009dbe:	6001      	str	r1, [r0, #0]
 8009dc0:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8009dc2:	0000      	.short	0x0000
 8009dc4:	e000ed88 	.word	0xe000ed88

08009dc8 <prvTaskExitError>:
{
 8009dc8:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8009dca:	2300      	movs	r3, #0
 8009dcc:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8009dce:	4b0d      	ldr	r3, [pc, #52]	; (8009e04 <prvTaskExitError+0x3c>)
 8009dd0:	681b      	ldr	r3, [r3, #0]
 8009dd2:	3301      	adds	r3, #1
 8009dd4:	d008      	beq.n	8009de8 <prvTaskExitError+0x20>
 8009dd6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009dda:	f383 8811 	msr	BASEPRI, r3
 8009dde:	f3bf 8f6f 	isb	sy
 8009de2:	f3bf 8f4f 	dsb	sy
 8009de6:	e7fe      	b.n	8009de6 <prvTaskExitError+0x1e>
 8009de8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009dec:	f383 8811 	msr	BASEPRI, r3
 8009df0:	f3bf 8f6f 	isb	sy
 8009df4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8009df8:	9b01      	ldr	r3, [sp, #4]
 8009dfa:	2b00      	cmp	r3, #0
 8009dfc:	d0fc      	beq.n	8009df8 <prvTaskExitError+0x30>
}
 8009dfe:	b002      	add	sp, #8
 8009e00:	4770      	bx	lr
 8009e02:	bf00      	nop
 8009e04:	2000005c 	.word	0x2000005c

08009e08 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8009e08:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8009e0c:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8009e10:	4b07      	ldr	r3, [pc, #28]	; (8009e30 <pxPortInitialiseStack+0x28>)
 8009e12:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8009e16:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8009e1a:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8009e1e:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8009e22:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8009e26:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8009e2a:	3844      	subs	r0, #68	; 0x44
 8009e2c:	4770      	bx	lr
 8009e2e:	bf00      	nop
 8009e30:	08009dc9 	.word	0x08009dc9
	...

08009e40 <SVC_Handler>:
	__asm volatile (
 8009e40:	4b07      	ldr	r3, [pc, #28]	; (8009e60 <pxCurrentTCBConst2>)
 8009e42:	6819      	ldr	r1, [r3, #0]
 8009e44:	6808      	ldr	r0, [r1, #0]
 8009e46:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009e4a:	f380 8809 	msr	PSP, r0
 8009e4e:	f3bf 8f6f 	isb	sy
 8009e52:	f04f 0000 	mov.w	r0, #0
 8009e56:	f380 8811 	msr	BASEPRI, r0
 8009e5a:	4770      	bx	lr
 8009e5c:	f3af 8000 	nop.w

08009e60 <pxCurrentTCBConst2>:
 8009e60:	2001180c 	.word	0x2001180c

08009e64 <vPortEnterCritical>:
 8009e64:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e68:	f383 8811 	msr	BASEPRI, r3
 8009e6c:	f3bf 8f6f 	isb	sy
 8009e70:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8009e74:	4a0a      	ldr	r2, [pc, #40]	; (8009ea0 <vPortEnterCritical+0x3c>)
 8009e76:	6813      	ldr	r3, [r2, #0]
 8009e78:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8009e7a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8009e7c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8009e7e:	d10e      	bne.n	8009e9e <vPortEnterCritical+0x3a>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8009e80:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009e84:	f8d3 3d04 	ldr.w	r3, [r3, #3332]	; 0xd04
 8009e88:	b2db      	uxtb	r3, r3
 8009e8a:	b143      	cbz	r3, 8009e9e <vPortEnterCritical+0x3a>
 8009e8c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009e90:	f383 8811 	msr	BASEPRI, r3
 8009e94:	f3bf 8f6f 	isb	sy
 8009e98:	f3bf 8f4f 	dsb	sy
 8009e9c:	e7fe      	b.n	8009e9c <vPortEnterCritical+0x38>
}
 8009e9e:	4770      	bx	lr
 8009ea0:	2000005c 	.word	0x2000005c

08009ea4 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8009ea4:	4a08      	ldr	r2, [pc, #32]	; (8009ec8 <vPortExitCritical+0x24>)
 8009ea6:	6813      	ldr	r3, [r2, #0]
 8009ea8:	b943      	cbnz	r3, 8009ebc <vPortExitCritical+0x18>
 8009eaa:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009eae:	f383 8811 	msr	BASEPRI, r3
 8009eb2:	f3bf 8f6f 	isb	sy
 8009eb6:	f3bf 8f4f 	dsb	sy
 8009eba:	e7fe      	b.n	8009eba <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8009ebc:	3b01      	subs	r3, #1
 8009ebe:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8009ec0:	b90b      	cbnz	r3, 8009ec6 <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8009ec2:	f383 8811 	msr	BASEPRI, r3
}
 8009ec6:	4770      	bx	lr
 8009ec8:	2000005c 	.word	0x2000005c
 8009ecc:	00000000 	.word	0x00000000

08009ed0 <PendSV_Handler>:
	__asm volatile
 8009ed0:	f3ef 8009 	mrs	r0, PSP
 8009ed4:	f3bf 8f6f 	isb	sy
 8009ed8:	4b15      	ldr	r3, [pc, #84]	; (8009f30 <pxCurrentTCBConst>)
 8009eda:	681a      	ldr	r2, [r3, #0]
 8009edc:	f01e 0f10 	tst.w	lr, #16
 8009ee0:	bf08      	it	eq
 8009ee2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8009ee6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009eea:	6010      	str	r0, [r2, #0]
 8009eec:	e92d 0009 	stmdb	sp!, {r0, r3}
 8009ef0:	f04f 0050 	mov.w	r0, #80	; 0x50
 8009ef4:	f380 8811 	msr	BASEPRI, r0
 8009ef8:	f3bf 8f4f 	dsb	sy
 8009efc:	f3bf 8f6f 	isb	sy
 8009f00:	f001 f962 	bl	800b1c8 <vTaskSwitchContext>
 8009f04:	f04f 0000 	mov.w	r0, #0
 8009f08:	f380 8811 	msr	BASEPRI, r0
 8009f0c:	bc09      	pop	{r0, r3}
 8009f0e:	6819      	ldr	r1, [r3, #0]
 8009f10:	6808      	ldr	r0, [r1, #0]
 8009f12:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009f16:	f01e 0f10 	tst.w	lr, #16
 8009f1a:	bf08      	it	eq
 8009f1c:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8009f20:	f380 8809 	msr	PSP, r0
 8009f24:	f3bf 8f6f 	isb	sy
 8009f28:	4770      	bx	lr
 8009f2a:	bf00      	nop
 8009f2c:	f3af 8000 	nop.w

08009f30 <pxCurrentTCBConst>:
 8009f30:	2001180c 	.word	0x2001180c

08009f34 <xPortSysTickHandler>:
{
 8009f34:	b508      	push	{r3, lr}
	__asm volatile
 8009f36:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f3a:	f383 8811 	msr	BASEPRI, r3
 8009f3e:	f3bf 8f6f 	isb	sy
 8009f42:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8009f46:	f000 ffa7 	bl	800ae98 <xTaskIncrementTick>
 8009f4a:	b128      	cbz	r0, 8009f58 <xPortSysTickHandler+0x24>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8009f4c:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8009f50:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8009f54:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
	__asm volatile
 8009f58:	2300      	movs	r3, #0
 8009f5a:	f383 8811 	msr	BASEPRI, r3
}
 8009f5e:	bd08      	pop	{r3, pc}

08009f60 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8009f60:	f04f 22e0 	mov.w	r2, #3758153728	; 0xe000e000
 8009f64:	2300      	movs	r3, #0
 8009f66:	6113      	str	r3, [r2, #16]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8009f68:	6193      	str	r3, [r2, #24]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8009f6a:	4b05      	ldr	r3, [pc, #20]	; (8009f80 <vPortSetupTimerInterrupt+0x20>)
 8009f6c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8009f70:	681b      	ldr	r3, [r3, #0]
 8009f72:	fbb3 f3f1 	udiv	r3, r3, r1
 8009f76:	3b01      	subs	r3, #1
 8009f78:	6153      	str	r3, [r2, #20]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8009f7a:	2307      	movs	r3, #7
 8009f7c:	6113      	str	r3, [r2, #16]
}
 8009f7e:	4770      	bx	lr
 8009f80:	20000050 	.word	0x20000050

08009f84 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8009f84:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
{
 8009f88:	b537      	push	{r0, r1, r2, r4, r5, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8009f8a:	f8d3 1d00 	ldr.w	r1, [r3, #3328]	; 0xd00
 8009f8e:	4a3a      	ldr	r2, [pc, #232]	; (800a078 <xPortStartScheduler+0xf4>)
 8009f90:	4291      	cmp	r1, r2
 8009f92:	d108      	bne.n	8009fa6 <xPortStartScheduler+0x22>
	__asm volatile
 8009f94:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009f98:	f383 8811 	msr	BASEPRI, r3
 8009f9c:	f3bf 8f6f 	isb	sy
 8009fa0:	f3bf 8f4f 	dsb	sy
 8009fa4:	e7fe      	b.n	8009fa4 <xPortStartScheduler+0x20>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8009fa6:	f8d3 2d00 	ldr.w	r2, [r3, #3328]	; 0xd00
 8009faa:	4b34      	ldr	r3, [pc, #208]	; (800a07c <xPortStartScheduler+0xf8>)
 8009fac:	429a      	cmp	r2, r3
 8009fae:	d108      	bne.n	8009fc2 <xPortStartScheduler+0x3e>
 8009fb0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8009fb4:	f383 8811 	msr	BASEPRI, r3
 8009fb8:	f3bf 8f6f 	isb	sy
 8009fbc:	f3bf 8f4f 	dsb	sy
 8009fc0:	e7fe      	b.n	8009fc0 <xPortStartScheduler+0x3c>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8009fc2:	4b2f      	ldr	r3, [pc, #188]	; (800a080 <xPortStartScheduler+0xfc>)
 8009fc4:	781a      	ldrb	r2, [r3, #0]
 8009fc6:	b2d2      	uxtb	r2, r2
 8009fc8:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8009fca:	22ff      	movs	r2, #255	; 0xff
 8009fcc:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8009fce:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8009fd0:	4a2c      	ldr	r2, [pc, #176]	; (800a084 <xPortStartScheduler+0x100>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8009fd2:	b2db      	uxtb	r3, r3
 8009fd4:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8009fd8:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8009fdc:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8009fe0:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8009fe2:	4a29      	ldr	r2, [pc, #164]	; (800a088 <xPortStartScheduler+0x104>)
 8009fe4:	2307      	movs	r3, #7
 8009fe6:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8009fe8:	2100      	movs	r1, #0
 8009fea:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8009fee:	0600      	lsls	r0, r0, #24
 8009ff0:	f103 34ff 	add.w	r4, r3, #4294967295
 8009ff4:	d40c      	bmi.n	800a010 <xPortStartScheduler+0x8c>
 8009ff6:	b111      	cbz	r1, 8009ffe <xPortStartScheduler+0x7a>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8009ff8:	2b03      	cmp	r3, #3
 8009ffa:	6013      	str	r3, [r2, #0]
 8009ffc:	d011      	beq.n	800a022 <xPortStartScheduler+0x9e>
 8009ffe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a002:	f383 8811 	msr	BASEPRI, r3
 800a006:	f3bf 8f6f 	isb	sy
 800a00a:	f3bf 8f4f 	dsb	sy
 800a00e:	e7fe      	b.n	800a00e <xPortStartScheduler+0x8a>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 800a010:	f89d 3003 	ldrb.w	r3, [sp, #3]
 800a014:	005b      	lsls	r3, r3, #1
 800a016:	b2db      	uxtb	r3, r3
 800a018:	f88d 3003 	strb.w	r3, [sp, #3]
 800a01c:	2101      	movs	r1, #1
 800a01e:	4623      	mov	r3, r4
 800a020:	e7e3      	b.n	8009fea <xPortStartScheduler+0x66>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 800a022:	f44f 7340 	mov.w	r3, #768	; 0x300
 800a026:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800a028:	9b01      	ldr	r3, [sp, #4]
 800a02a:	4a15      	ldr	r2, [pc, #84]	; (800a080 <xPortStartScheduler+0xfc>)
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800a02c:	f04f 24e0 	mov.w	r4, #3758153728	; 0xe000e000
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 800a030:	b2db      	uxtb	r3, r3
 800a032:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 800a034:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800a038:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800a03c:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 800a040:	f8d4 3d20 	ldr.w	r3, [r4, #3360]	; 0xd20
 800a044:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800a048:	f8c4 3d20 	str.w	r3, [r4, #3360]	; 0xd20
	vPortSetupTimerInterrupt();
 800a04c:	f7ff ff88 	bl	8009f60 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 800a050:	4b0e      	ldr	r3, [pc, #56]	; (800a08c <xPortStartScheduler+0x108>)
 800a052:	2500      	movs	r5, #0
 800a054:	601d      	str	r5, [r3, #0]
	vPortEnableVFP();
 800a056:	f7ff fead 	bl	8009db4 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 800a05a:	f8d4 3f34 	ldr.w	r3, [r4, #3892]	; 0xf34
 800a05e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800a062:	f8c4 3f34 	str.w	r3, [r4, #3892]	; 0xf34
	prvPortStartFirstTask();
 800a066:	f7ff fe91 	bl	8009d8c <prvPortStartFirstTask>
	vTaskSwitchContext();
 800a06a:	f001 f8ad 	bl	800b1c8 <vTaskSwitchContext>
	prvTaskExitError();
 800a06e:	f7ff feab 	bl	8009dc8 <prvTaskExitError>
}
 800a072:	4628      	mov	r0, r5
 800a074:	b003      	add	sp, #12
 800a076:	bd30      	pop	{r4, r5, pc}
 800a078:	410fc271 	.word	0x410fc271
 800a07c:	410fc270 	.word	0x410fc270
 800a080:	e000e400 	.word	0xe000e400
 800a084:	200117c4 	.word	0x200117c4
 800a088:	200117c8 	.word	0x200117c8
 800a08c:	2000005c 	.word	0x2000005c

0800a090 <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 800a090:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 800a094:	2b0f      	cmp	r3, #15
 800a096:	d90e      	bls.n	800a0b6 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 800a098:	4a11      	ldr	r2, [pc, #68]	; (800a0e0 <vPortValidateInterruptPriority+0x50>)
 800a09a:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 800a09c:	4a11      	ldr	r2, [pc, #68]	; (800a0e4 <vPortValidateInterruptPriority+0x54>)
 800a09e:	7812      	ldrb	r2, [r2, #0]
 800a0a0:	429a      	cmp	r2, r3
 800a0a2:	d908      	bls.n	800a0b6 <vPortValidateInterruptPriority+0x26>
 800a0a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0a8:	f383 8811 	msr	BASEPRI, r3
 800a0ac:	f3bf 8f6f 	isb	sy
 800a0b0:	f3bf 8f4f 	dsb	sy
 800a0b4:	e7fe      	b.n	800a0b4 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 800a0b6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a0ba:	4a0b      	ldr	r2, [pc, #44]	; (800a0e8 <vPortValidateInterruptPriority+0x58>)
 800a0bc:	f8d3 3d0c 	ldr.w	r3, [r3, #3340]	; 0xd0c
 800a0c0:	6812      	ldr	r2, [r2, #0]
 800a0c2:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800a0c6:	4293      	cmp	r3, r2
 800a0c8:	d908      	bls.n	800a0dc <vPortValidateInterruptPriority+0x4c>
 800a0ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a0ce:	f383 8811 	msr	BASEPRI, r3
 800a0d2:	f3bf 8f6f 	isb	sy
 800a0d6:	f3bf 8f4f 	dsb	sy
 800a0da:	e7fe      	b.n	800a0da <vPortValidateInterruptPriority+0x4a>
	}
 800a0dc:	4770      	bx	lr
 800a0de:	bf00      	nop
 800a0e0:	e000e3f0 	.word	0xe000e3f0
 800a0e4:	200117c4 	.word	0x200117c4
 800a0e8:	200117c8 	.word	0x200117c8

0800a0ec <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 800a0ec:	b510      	push	{r4, lr}
 800a0ee:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800a0f0:	f7ff feb8 	bl	8009e64 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 800a0f4:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800a0f6:	f7ff fed5 	bl	8009ea4 <vPortExitCritical>

	return xReturn;
}
 800a0fa:	fab4 f084 	clz	r0, r4
 800a0fe:	0940      	lsrs	r0, r0, #5
 800a100:	bd10      	pop	{r4, pc}

0800a102 <prvCopyDataToQueue>:
{
 800a102:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a104:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800a106:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a108:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 800a10a:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 800a10c:	b952      	cbnz	r2, 800a124 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800a10e:	6807      	ldr	r7, [r0, #0]
 800a110:	bb47      	cbnz	r7, 800a164 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800a112:	6880      	ldr	r0, [r0, #8]
 800a114:	f001 f9b8 	bl	800b488 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 800a118:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 800a11a:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800a11c:	3601      	adds	r6, #1
 800a11e:	63a6      	str	r6, [r4, #56]	; 0x38
}
 800a120:	4628      	mov	r0, r5
 800a122:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 800a124:	b965      	cbnz	r5, 800a140 <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800a126:	6840      	ldr	r0, [r0, #4]
 800a128:	f016 fb6e 	bl	8020808 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a12c:	6863      	ldr	r3, [r4, #4]
 800a12e:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a130:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a132:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a134:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a136:	4293      	cmp	r3, r2
 800a138:	d3f0      	bcc.n	800a11c <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 800a13a:	6823      	ldr	r3, [r4, #0]
 800a13c:	6063      	str	r3, [r4, #4]
 800a13e:	e7ed      	b.n	800a11c <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 800a140:	68c0      	ldr	r0, [r0, #12]
 800a142:	f016 fb61 	bl	8020808 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800a146:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800a148:	68e3      	ldr	r3, [r4, #12]
 800a14a:	4251      	negs	r1, r2
 800a14c:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a14e:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800a150:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800a152:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 800a154:	bf3e      	ittt	cc
 800a156:	68a3      	ldrcc	r3, [r4, #8]
 800a158:	185b      	addcc	r3, r3, r1
 800a15a:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 800a15c:	2d02      	cmp	r5, #2
 800a15e:	d101      	bne.n	800a164 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800a160:	b116      	cbz	r6, 800a168 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800a162:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 800a164:	2500      	movs	r5, #0
 800a166:	e7d9      	b.n	800a11c <prvCopyDataToQueue+0x1a>
 800a168:	4635      	mov	r5, r6
 800a16a:	e7d7      	b.n	800a11c <prvCopyDataToQueue+0x1a>

0800a16c <prvCopyDataFromQueue>:
{
 800a16c:	4603      	mov	r3, r0
 800a16e:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800a170:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800a172:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800a174:	b16a      	cbz	r2, 800a192 <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a176:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800a178:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a17a:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 800a17c:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800a17e:	bf28      	it	cs
 800a180:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800a182:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800a184:	bf28      	it	cs
 800a186:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800a188:	68d9      	ldr	r1, [r3, #12]
}
 800a18a:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800a18e:	f016 bb3b 	b.w	8020808 <memcpy>
}
 800a192:	f85d 4b04 	ldr.w	r4, [sp], #4
 800a196:	4770      	bx	lr

0800a198 <prvUnlockQueue>:
{
 800a198:	b570      	push	{r4, r5, r6, lr}
 800a19a:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 800a19c:	f7ff fe62 	bl	8009e64 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800a1a0:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a1a4:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 800a1a8:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 800a1aa:	2d00      	cmp	r5, #0
 800a1ac:	dc14      	bgt.n	800a1d8 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800a1ae:	23ff      	movs	r3, #255	; 0xff
 800a1b0:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 800a1b4:	f7ff fe76 	bl	8009ea4 <vPortExitCritical>
	taskENTER_CRITICAL();
 800a1b8:	f7ff fe54 	bl	8009e64 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 800a1bc:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a1c0:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 800a1c4:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 800a1c6:	2d00      	cmp	r5, #0
 800a1c8:	dc12      	bgt.n	800a1f0 <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 800a1ca:	23ff      	movs	r3, #255	; 0xff
 800a1cc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800a1d0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 800a1d4:	f7ff be66 	b.w	8009ea4 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a1d8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a1da:	2b00      	cmp	r3, #0
 800a1dc:	d0e7      	beq.n	800a1ae <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a1de:	4630      	mov	r0, r6
 800a1e0:	f001 f86e 	bl	800b2c0 <xTaskRemoveFromEventList>
 800a1e4:	b108      	cbz	r0, 800a1ea <prvUnlockQueue+0x52>
						vTaskMissedYield();
 800a1e6:	f001 f8f7 	bl	800b3d8 <vTaskMissedYield>
			--cTxLock;
 800a1ea:	3d01      	subs	r5, #1
 800a1ec:	b26d      	sxtb	r5, r5
 800a1ee:	e7dc      	b.n	800a1aa <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a1f0:	6923      	ldr	r3, [r4, #16]
 800a1f2:	2b00      	cmp	r3, #0
 800a1f4:	d0e9      	beq.n	800a1ca <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a1f6:	4630      	mov	r0, r6
 800a1f8:	f001 f862 	bl	800b2c0 <xTaskRemoveFromEventList>
 800a1fc:	b108      	cbz	r0, 800a202 <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 800a1fe:	f001 f8eb 	bl	800b3d8 <vTaskMissedYield>
				--cRxLock;
 800a202:	3d01      	subs	r5, #1
 800a204:	b26d      	sxtb	r5, r5
 800a206:	e7de      	b.n	800a1c6 <prvUnlockQueue+0x2e>

0800a208 <xQueueGenericReset>:
{
 800a208:	b538      	push	{r3, r4, r5, lr}
 800a20a:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800a20c:	4604      	mov	r4, r0
 800a20e:	b940      	cbnz	r0, 800a222 <xQueueGenericReset+0x1a>
 800a210:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a214:	f383 8811 	msr	BASEPRI, r3
 800a218:	f3bf 8f6f 	isb	sy
 800a21c:	f3bf 8f4f 	dsb	sy
 800a220:	e7fe      	b.n	800a220 <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 800a222:	f7ff fe1f 	bl	8009e64 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a226:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 800a22a:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 800a22c:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a22e:	434b      	muls	r3, r1
 800a230:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a232:	1a5b      	subs	r3, r3, r1
 800a234:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a236:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a238:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800a23a:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 800a23c:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 800a23e:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 800a240:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 800a244:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 800a248:	b9a5      	cbnz	r5, 800a274 <xQueueGenericReset+0x6c>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a24a:	6923      	ldr	r3, [r4, #16]
 800a24c:	b173      	cbz	r3, 800a26c <xQueueGenericReset+0x64>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a24e:	f104 0010 	add.w	r0, r4, #16
 800a252:	f001 f835 	bl	800b2c0 <xTaskRemoveFromEventList>
 800a256:	b148      	cbz	r0, 800a26c <xQueueGenericReset+0x64>
					queueYIELD_IF_USING_PREEMPTION();
 800a258:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a25c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a260:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a264:	f3bf 8f4f 	dsb	sy
 800a268:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 800a26c:	f7ff fe1a 	bl	8009ea4 <vPortExitCritical>
}
 800a270:	2001      	movs	r0, #1
 800a272:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800a274:	f104 0010 	add.w	r0, r4, #16
 800a278:	f7ff fd46 	bl	8009d08 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 800a27c:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a280:	f7ff fd42 	bl	8009d08 <vListInitialise>
 800a284:	e7f2      	b.n	800a26c <xQueueGenericReset+0x64>

0800a286 <xQueueGenericCreateStatic>:
	{
 800a286:	b513      	push	{r0, r1, r4, lr}
 800a288:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800a28a:	b940      	cbnz	r0, 800a29e <xQueueGenericCreateStatic+0x18>
 800a28c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a290:	f383 8811 	msr	BASEPRI, r3
 800a294:	f3bf 8f6f 	isb	sy
 800a298:	f3bf 8f4f 	dsb	sy
 800a29c:	e7fe      	b.n	800a29c <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800a29e:	b943      	cbnz	r3, 800a2b2 <xQueueGenericCreateStatic+0x2c>
 800a2a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2a4:	f383 8811 	msr	BASEPRI, r3
 800a2a8:	f3bf 8f6f 	isb	sy
 800a2ac:	f3bf 8f4f 	dsb	sy
 800a2b0:	e7fe      	b.n	800a2b0 <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 800a2b2:	b14a      	cbz	r2, 800a2c8 <xQueueGenericCreateStatic+0x42>
 800a2b4:	b991      	cbnz	r1, 800a2dc <xQueueGenericCreateStatic+0x56>
 800a2b6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2ba:	f383 8811 	msr	BASEPRI, r3
 800a2be:	f3bf 8f6f 	isb	sy
 800a2c2:	f3bf 8f4f 	dsb	sy
 800a2c6:	e7fe      	b.n	800a2c6 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 800a2c8:	b141      	cbz	r1, 800a2dc <xQueueGenericCreateStatic+0x56>
 800a2ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2ce:	f383 8811 	msr	BASEPRI, r3
 800a2d2:	f3bf 8f6f 	isb	sy
 800a2d6:	f3bf 8f4f 	dsb	sy
 800a2da:	e7fe      	b.n	800a2da <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800a2dc:	2350      	movs	r3, #80	; 0x50
 800a2de:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800a2e0:	9b01      	ldr	r3, [sp, #4]
 800a2e2:	2b50      	cmp	r3, #80	; 0x50
 800a2e4:	d008      	beq.n	800a2f8 <xQueueGenericCreateStatic+0x72>
 800a2e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a2ea:	f383 8811 	msr	BASEPRI, r3
 800a2ee:	f3bf 8f6f 	isb	sy
 800a2f2:	f3bf 8f4f 	dsb	sy
 800a2f6:	e7fe      	b.n	800a2f6 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 800a2f8:	2900      	cmp	r1, #0
 800a2fa:	bf08      	it	eq
 800a2fc:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 800a2fe:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800a300:	6022      	str	r2, [r4, #0]
 800a302:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 800a304:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 800a308:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800a30c:	4619      	mov	r1, r3
 800a30e:	4620      	mov	r0, r4
 800a310:	f7ff ff7a 	bl	800a208 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800a314:	f89d 3010 	ldrb.w	r3, [sp, #16]
 800a318:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 800a31c:	4620      	mov	r0, r4
 800a31e:	b002      	add	sp, #8
 800a320:	bd10      	pop	{r4, pc}

0800a322 <xQueueGenericCreate>:
	{
 800a322:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a324:	460d      	mov	r5, r1
 800a326:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 800a328:	4606      	mov	r6, r0
 800a32a:	b940      	cbnz	r0, 800a33e <xQueueGenericCreate+0x1c>
 800a32c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a330:	f383 8811 	msr	BASEPRI, r3
 800a334:	f3bf 8f6f 	isb	sy
 800a338:	f3bf 8f4f 	dsb	sy
 800a33c:	e7fe      	b.n	800a33c <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800a33e:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 800a340:	3050      	adds	r0, #80	; 0x50
 800a342:	f7ff fc0b 	bl	8009b5c <pvPortMalloc>
		if( pxNewQueue != NULL )
 800a346:	4604      	mov	r4, r0
 800a348:	b170      	cbz	r0, 800a368 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 800a34a:	2300      	movs	r3, #0
 800a34c:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800a350:	b165      	cbz	r5, 800a36c <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 800a352:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 800a356:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 800a35a:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800a35c:	2101      	movs	r1, #1
 800a35e:	4620      	mov	r0, r4
 800a360:	f7ff ff52 	bl	800a208 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 800a364:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 800a368:	4620      	mov	r0, r4
 800a36a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a36c:	4603      	mov	r3, r0
 800a36e:	e7f2      	b.n	800a356 <xQueueGenericCreate+0x34>

0800a370 <xQueueCreateCountingSemaphoreStatic>:
	{
 800a370:	b513      	push	{r0, r1, r4, lr}
 800a372:	4613      	mov	r3, r2
 800a374:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800a376:	b940      	cbnz	r0, 800a38a <xQueueCreateCountingSemaphoreStatic+0x1a>
 800a378:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a37c:	f383 8811 	msr	BASEPRI, r3
 800a380:	f3bf 8f6f 	isb	sy
 800a384:	f3bf 8f4f 	dsb	sy
 800a388:	e7fe      	b.n	800a388 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 800a38a:	4288      	cmp	r0, r1
 800a38c:	d208      	bcs.n	800a3a0 <xQueueCreateCountingSemaphoreStatic+0x30>
 800a38e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a392:	f383 8811 	msr	BASEPRI, r3
 800a396:	f3bf 8f6f 	isb	sy
 800a39a:	f3bf 8f4f 	dsb	sy
 800a39e:	e7fe      	b.n	800a39e <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800a3a0:	2202      	movs	r2, #2
 800a3a2:	9200      	str	r2, [sp, #0]
 800a3a4:	2200      	movs	r2, #0
 800a3a6:	4611      	mov	r1, r2
 800a3a8:	f7ff ff6d 	bl	800a286 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800a3ac:	b100      	cbz	r0, 800a3b0 <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800a3ae:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800a3b0:	b002      	add	sp, #8
 800a3b2:	bd10      	pop	{r4, pc}

0800a3b4 <xQueueCreateCountingSemaphore>:
	{
 800a3b4:	b510      	push	{r4, lr}
 800a3b6:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 800a3b8:	b940      	cbnz	r0, 800a3cc <xQueueCreateCountingSemaphore+0x18>
 800a3ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a3be:	f383 8811 	msr	BASEPRI, r3
 800a3c2:	f3bf 8f6f 	isb	sy
 800a3c6:	f3bf 8f4f 	dsb	sy
 800a3ca:	e7fe      	b.n	800a3ca <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800a3cc:	4288      	cmp	r0, r1
 800a3ce:	d208      	bcs.n	800a3e2 <xQueueCreateCountingSemaphore+0x2e>
 800a3d0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a3d4:	f383 8811 	msr	BASEPRI, r3
 800a3d8:	f3bf 8f6f 	isb	sy
 800a3dc:	f3bf 8f4f 	dsb	sy
 800a3e0:	e7fe      	b.n	800a3e0 <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800a3e2:	2202      	movs	r2, #2
 800a3e4:	2100      	movs	r1, #0
 800a3e6:	f7ff ff9c 	bl	800a322 <xQueueGenericCreate>
		if( xHandle != NULL )
 800a3ea:	b100      	cbz	r0, 800a3ee <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800a3ec:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800a3ee:	bd10      	pop	{r4, pc}

0800a3f0 <xQueueGenericSend>:
{
 800a3f0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a3f4:	b085      	sub	sp, #20
 800a3f6:	4688      	mov	r8, r1
 800a3f8:	9201      	str	r2, [sp, #4]
 800a3fa:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800a3fc:	4604      	mov	r4, r0
 800a3fe:	b940      	cbnz	r0, 800a412 <xQueueGenericSend+0x22>
 800a400:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a404:	f383 8811 	msr	BASEPRI, r3
 800a408:	f3bf 8f6f 	isb	sy
 800a40c:	f3bf 8f4f 	dsb	sy
 800a410:	e7fe      	b.n	800a410 <xQueueGenericSend+0x20>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800a412:	b951      	cbnz	r1, 800a42a <xQueueGenericSend+0x3a>
 800a414:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a416:	b143      	cbz	r3, 800a42a <xQueueGenericSend+0x3a>
 800a418:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a41c:	f383 8811 	msr	BASEPRI, r3
 800a420:	f3bf 8f6f 	isb	sy
 800a424:	f3bf 8f4f 	dsb	sy
 800a428:	e7fe      	b.n	800a428 <xQueueGenericSend+0x38>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800a42a:	2f02      	cmp	r7, #2
 800a42c:	d10b      	bne.n	800a446 <xQueueGenericSend+0x56>
 800a42e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a430:	2b01      	cmp	r3, #1
 800a432:	d008      	beq.n	800a446 <xQueueGenericSend+0x56>
 800a434:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a438:	f383 8811 	msr	BASEPRI, r3
 800a43c:	f3bf 8f6f 	isb	sy
 800a440:	f3bf 8f4f 	dsb	sy
 800a444:	e7fe      	b.n	800a444 <xQueueGenericSend+0x54>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800a446:	f000 ffcd 	bl	800b3e4 <xTaskGetSchedulerState>
 800a44a:	4606      	mov	r6, r0
 800a44c:	b950      	cbnz	r0, 800a464 <xQueueGenericSend+0x74>
 800a44e:	9b01      	ldr	r3, [sp, #4]
 800a450:	b14b      	cbz	r3, 800a466 <xQueueGenericSend+0x76>
 800a452:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a456:	f383 8811 	msr	BASEPRI, r3
 800a45a:	f3bf 8f6f 	isb	sy
 800a45e:	f3bf 8f4f 	dsb	sy
 800a462:	e7fe      	b.n	800a462 <xQueueGenericSend+0x72>
 800a464:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800a466:	f04f 0900 	mov.w	r9, #0
 800a46a:	e037      	b.n	800a4dc <xQueueGenericSend+0xec>
				if( xTicksToWait == ( TickType_t ) 0 )
 800a46c:	9d01      	ldr	r5, [sp, #4]
 800a46e:	b91d      	cbnz	r5, 800a478 <xQueueGenericSend+0x88>
					taskEXIT_CRITICAL();
 800a470:	f7ff fd18 	bl	8009ea4 <vPortExitCritical>
			return errQUEUE_FULL;
 800a474:	2000      	movs	r0, #0
 800a476:	e052      	b.n	800a51e <xQueueGenericSend+0x12e>
				else if( xEntryTimeSet == pdFALSE )
 800a478:	b916      	cbnz	r6, 800a480 <xQueueGenericSend+0x90>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800a47a:	a802      	add	r0, sp, #8
 800a47c:	f000 ff64 	bl	800b348 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800a480:	f7ff fd10 	bl	8009ea4 <vPortExitCritical>
		vTaskSuspendAll();
 800a484:	f000 fcfa 	bl	800ae7c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800a488:	f7ff fcec 	bl	8009e64 <vPortEnterCritical>
 800a48c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800a490:	2bff      	cmp	r3, #255	; 0xff
 800a492:	bf08      	it	eq
 800a494:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 800a498:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800a49c:	2bff      	cmp	r3, #255	; 0xff
 800a49e:	bf08      	it	eq
 800a4a0:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 800a4a4:	f7ff fcfe 	bl	8009ea4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800a4a8:	a901      	add	r1, sp, #4
 800a4aa:	a802      	add	r0, sp, #8
 800a4ac:	f000 ff58 	bl	800b360 <xTaskCheckForTimeOut>
 800a4b0:	2800      	cmp	r0, #0
 800a4b2:	d14a      	bne.n	800a54a <xQueueGenericSend+0x15a>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 800a4b4:	f7ff fcd6 	bl	8009e64 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800a4b8:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a4ba:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a4bc:	429a      	cmp	r2, r3
 800a4be:	d131      	bne.n	800a524 <xQueueGenericSend+0x134>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 800a4c0:	f7ff fcf0 	bl	8009ea4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 800a4c4:	9901      	ldr	r1, [sp, #4]
 800a4c6:	f104 0010 	add.w	r0, r4, #16
 800a4ca:	f000 fec1 	bl	800b250 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800a4ce:	4620      	mov	r0, r4
 800a4d0:	f7ff fe62 	bl	800a198 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800a4d4:	f000 fd76 	bl	800afc4 <xTaskResumeAll>
 800a4d8:	b360      	cbz	r0, 800a534 <xQueueGenericSend+0x144>
 800a4da:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800a4dc:	f7ff fcc2 	bl	8009e64 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800a4e0:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a4e2:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a4e4:	429a      	cmp	r2, r3
 800a4e6:	d301      	bcc.n	800a4ec <xQueueGenericSend+0xfc>
 800a4e8:	2f02      	cmp	r7, #2
 800a4ea:	d1bf      	bne.n	800a46c <xQueueGenericSend+0x7c>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800a4ec:	463a      	mov	r2, r7
 800a4ee:	4641      	mov	r1, r8
 800a4f0:	4620      	mov	r0, r4
 800a4f2:	f7ff fe06 	bl	800a102 <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a4f6:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a4f8:	b11b      	cbz	r3, 800a502 <xQueueGenericSend+0x112>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a4fa:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a4fe:	f000 fedf 	bl	800b2c0 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 800a502:	b148      	cbz	r0, 800a518 <xQueueGenericSend+0x128>
						queueYIELD_IF_USING_PREEMPTION();
 800a504:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a508:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a50c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a510:	f3bf 8f4f 	dsb	sy
 800a514:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800a518:	f7ff fcc4 	bl	8009ea4 <vPortExitCritical>
				return pdPASS;
 800a51c:	2001      	movs	r0, #1
}
 800a51e:	b005      	add	sp, #20
 800a520:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	taskEXIT_CRITICAL();
 800a524:	f7ff fcbe 	bl	8009ea4 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 800a528:	4620      	mov	r0, r4
 800a52a:	f7ff fe35 	bl	800a198 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800a52e:	f000 fd49 	bl	800afc4 <xTaskResumeAll>
 800a532:	e7d2      	b.n	800a4da <xQueueGenericSend+0xea>
					portYIELD_WITHIN_API();
 800a534:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a538:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a53c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a540:	f3bf 8f4f 	dsb	sy
 800a544:	f3bf 8f6f 	isb	sy
 800a548:	e7c7      	b.n	800a4da <xQueueGenericSend+0xea>
			prvUnlockQueue( pxQueue );
 800a54a:	4620      	mov	r0, r4
 800a54c:	f7ff fe24 	bl	800a198 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800a550:	f000 fd38 	bl	800afc4 <xTaskResumeAll>
 800a554:	e78e      	b.n	800a474 <xQueueGenericSend+0x84>

0800a556 <xQueueGenericSendFromISR>:
{
 800a556:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a55a:	4689      	mov	r9, r1
 800a55c:	4690      	mov	r8, r2
 800a55e:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800a560:	4604      	mov	r4, r0
 800a562:	b940      	cbnz	r0, 800a576 <xQueueGenericSendFromISR+0x20>
 800a564:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a568:	f383 8811 	msr	BASEPRI, r3
 800a56c:	f3bf 8f6f 	isb	sy
 800a570:	f3bf 8f4f 	dsb	sy
 800a574:	e7fe      	b.n	800a574 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800a576:	b951      	cbnz	r1, 800a58e <xQueueGenericSendFromISR+0x38>
 800a578:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a57a:	b143      	cbz	r3, 800a58e <xQueueGenericSendFromISR+0x38>
 800a57c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a580:	f383 8811 	msr	BASEPRI, r3
 800a584:	f3bf 8f6f 	isb	sy
 800a588:	f3bf 8f4f 	dsb	sy
 800a58c:	e7fe      	b.n	800a58c <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800a58e:	2f02      	cmp	r7, #2
 800a590:	d10b      	bne.n	800a5aa <xQueueGenericSendFromISR+0x54>
 800a592:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a594:	2b01      	cmp	r3, #1
 800a596:	d008      	beq.n	800a5aa <xQueueGenericSendFromISR+0x54>
 800a598:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a59c:	f383 8811 	msr	BASEPRI, r3
 800a5a0:	f3bf 8f6f 	isb	sy
 800a5a4:	f3bf 8f4f 	dsb	sy
 800a5a8:	e7fe      	b.n	800a5a8 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800a5aa:	f7ff fd71 	bl	800a090 <vPortValidateInterruptPriority>
	__asm volatile
 800a5ae:	f3ef 8611 	mrs	r6, BASEPRI
 800a5b2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a5b6:	f383 8811 	msr	BASEPRI, r3
 800a5ba:	f3bf 8f6f 	isb	sy
 800a5be:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 800a5c2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800a5c4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a5c6:	429a      	cmp	r2, r3
 800a5c8:	d301      	bcc.n	800a5ce <xQueueGenericSendFromISR+0x78>
 800a5ca:	2f02      	cmp	r7, #2
 800a5cc:	d123      	bne.n	800a616 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 800a5ce:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a5d2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 800a5d4:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 800a5d6:	463a      	mov	r2, r7
 800a5d8:	4649      	mov	r1, r9
 800a5da:	4620      	mov	r0, r4
 800a5dc:	f7ff fd91 	bl	800a102 <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800a5e0:	1c6b      	adds	r3, r5, #1
 800a5e2:	d113      	bne.n	800a60c <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a5e4:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a5e6:	b90b      	cbnz	r3, 800a5ec <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 800a5e8:	2001      	movs	r0, #1
 800a5ea:	e00b      	b.n	800a604 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a5ec:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a5f0:	f000 fe66 	bl	800b2c0 <xTaskRemoveFromEventList>
 800a5f4:	2800      	cmp	r0, #0
 800a5f6:	d0f7      	beq.n	800a5e8 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 800a5f8:	f1b8 0f00 	cmp.w	r8, #0
 800a5fc:	d0f4      	beq.n	800a5e8 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800a5fe:	2001      	movs	r0, #1
 800a600:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800a604:	f386 8811 	msr	BASEPRI, r6
}
 800a608:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800a60c:	3501      	adds	r5, #1
 800a60e:	b26d      	sxtb	r5, r5
 800a610:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 800a614:	e7e8      	b.n	800a5e8 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 800a616:	2000      	movs	r0, #0
 800a618:	e7f4      	b.n	800a604 <xQueueGenericSendFromISR+0xae>

0800a61a <xQueueGiveFromISR>:
{
 800a61a:	b570      	push	{r4, r5, r6, lr}
 800a61c:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 800a61e:	4604      	mov	r4, r0
 800a620:	b940      	cbnz	r0, 800a634 <xQueueGiveFromISR+0x1a>
	__asm volatile
 800a622:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a626:	f383 8811 	msr	BASEPRI, r3
 800a62a:	f3bf 8f6f 	isb	sy
 800a62e:	f3bf 8f4f 	dsb	sy
 800a632:	e7fe      	b.n	800a632 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 800a634:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a636:	b143      	cbz	r3, 800a64a <xQueueGiveFromISR+0x30>
 800a638:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a63c:	f383 8811 	msr	BASEPRI, r3
 800a640:	f3bf 8f6f 	isb	sy
 800a644:	f3bf 8f4f 	dsb	sy
 800a648:	e7fe      	b.n	800a648 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 800a64a:	6803      	ldr	r3, [r0, #0]
 800a64c:	b953      	cbnz	r3, 800a664 <xQueueGiveFromISR+0x4a>
 800a64e:	6883      	ldr	r3, [r0, #8]
 800a650:	b143      	cbz	r3, 800a664 <xQueueGiveFromISR+0x4a>
 800a652:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a656:	f383 8811 	msr	BASEPRI, r3
 800a65a:	f3bf 8f6f 	isb	sy
 800a65e:	f3bf 8f4f 	dsb	sy
 800a662:	e7fe      	b.n	800a662 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800a664:	f7ff fd14 	bl	800a090 <vPortValidateInterruptPriority>
	__asm volatile
 800a668:	f3ef 8611 	mrs	r6, BASEPRI
 800a66c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a670:	f383 8811 	msr	BASEPRI, r3
 800a674:	f3bf 8f6f 	isb	sy
 800a678:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a67c:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800a67e:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800a680:	4293      	cmp	r3, r2
 800a682:	d91c      	bls.n	800a6be <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 800a684:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800a688:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 800a68a:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800a68c:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800a68e:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800a690:	d110      	bne.n	800a6b4 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 800a692:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800a694:	b90b      	cbnz	r3, 800a69a <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 800a696:	2001      	movs	r0, #1
 800a698:	e009      	b.n	800a6ae <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800a69a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a69e:	f000 fe0f 	bl	800b2c0 <xTaskRemoveFromEventList>
 800a6a2:	2800      	cmp	r0, #0
 800a6a4:	d0f7      	beq.n	800a696 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 800a6a6:	2d00      	cmp	r5, #0
 800a6a8:	d0f5      	beq.n	800a696 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 800a6aa:	2001      	movs	r0, #1
 800a6ac:	6028      	str	r0, [r5, #0]
	__asm volatile
 800a6ae:	f386 8811 	msr	BASEPRI, r6
}
 800a6b2:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 800a6b4:	3301      	adds	r3, #1
 800a6b6:	b25b      	sxtb	r3, r3
 800a6b8:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800a6bc:	e7eb      	b.n	800a696 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800a6be:	2000      	movs	r0, #0
 800a6c0:	e7f5      	b.n	800a6ae <xQueueGiveFromISR+0x94>

0800a6c2 <xQueueReceive>:
{
 800a6c2:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800a6c6:	460f      	mov	r7, r1
 800a6c8:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800a6ca:	4604      	mov	r4, r0
 800a6cc:	b940      	cbnz	r0, 800a6e0 <xQueueReceive+0x1e>
	__asm volatile
 800a6ce:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a6d2:	f383 8811 	msr	BASEPRI, r3
 800a6d6:	f3bf 8f6f 	isb	sy
 800a6da:	f3bf 8f4f 	dsb	sy
 800a6de:	e7fe      	b.n	800a6de <xQueueReceive+0x1c>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800a6e0:	b951      	cbnz	r1, 800a6f8 <xQueueReceive+0x36>
 800a6e2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a6e4:	b143      	cbz	r3, 800a6f8 <xQueueReceive+0x36>
 800a6e6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a6ea:	f383 8811 	msr	BASEPRI, r3
 800a6ee:	f3bf 8f6f 	isb	sy
 800a6f2:	f3bf 8f4f 	dsb	sy
 800a6f6:	e7fe      	b.n	800a6f6 <xQueueReceive+0x34>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800a6f8:	f000 fe74 	bl	800b3e4 <xTaskGetSchedulerState>
 800a6fc:	4606      	mov	r6, r0
 800a6fe:	b950      	cbnz	r0, 800a716 <xQueueReceive+0x54>
 800a700:	9b01      	ldr	r3, [sp, #4]
 800a702:	b14b      	cbz	r3, 800a718 <xQueueReceive+0x56>
 800a704:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a708:	f383 8811 	msr	BASEPRI, r3
 800a70c:	f3bf 8f6f 	isb	sy
 800a710:	f3bf 8f4f 	dsb	sy
 800a714:	e7fe      	b.n	800a714 <xQueueReceive+0x52>
 800a716:	2600      	movs	r6, #0
		prvLockQueue( pxQueue );
 800a718:	f04f 0800 	mov.w	r8, #0
 800a71c:	e03d      	b.n	800a79a <xQueueReceive+0xd8>
				if( xTicksToWait == ( TickType_t ) 0 )
 800a71e:	9d01      	ldr	r5, [sp, #4]
 800a720:	b91d      	cbnz	r5, 800a72a <xQueueReceive+0x68>
					taskEXIT_CRITICAL();
 800a722:	f7ff fbbf 	bl	8009ea4 <vPortExitCritical>
				return errQUEUE_EMPTY;
 800a726:	2000      	movs	r0, #0
 800a728:	e056      	b.n	800a7d8 <xQueueReceive+0x116>
				else if( xEntryTimeSet == pdFALSE )
 800a72a:	b916      	cbnz	r6, 800a732 <xQueueReceive+0x70>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800a72c:	a802      	add	r0, sp, #8
 800a72e:	f000 fe0b 	bl	800b348 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800a732:	f7ff fbb7 	bl	8009ea4 <vPortExitCritical>
		vTaskSuspendAll();
 800a736:	f000 fba1 	bl	800ae7c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800a73a:	f7ff fb93 	bl	8009e64 <vPortEnterCritical>
 800a73e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800a742:	2bff      	cmp	r3, #255	; 0xff
 800a744:	bf08      	it	eq
 800a746:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800a74a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800a74e:	2bff      	cmp	r3, #255	; 0xff
 800a750:	bf08      	it	eq
 800a752:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800a756:	f7ff fba5 	bl	8009ea4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800a75a:	a901      	add	r1, sp, #4
 800a75c:	a802      	add	r0, sp, #8
 800a75e:	f000 fdff 	bl	800b360 <xTaskCheckForTimeOut>
 800a762:	2800      	cmp	r0, #0
 800a764:	d141      	bne.n	800a7ea <xQueueReceive+0x128>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800a766:	4620      	mov	r0, r4
 800a768:	f7ff fcc0 	bl	800a0ec <prvIsQueueEmpty>
 800a76c:	b3b8      	cbz	r0, 800a7de <xQueueReceive+0x11c>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800a76e:	9901      	ldr	r1, [sp, #4]
 800a770:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a774:	f000 fd6c 	bl	800b250 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800a778:	4620      	mov	r0, r4
 800a77a:	f7ff fd0d 	bl	800a198 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800a77e:	f000 fc21 	bl	800afc4 <xTaskResumeAll>
 800a782:	b948      	cbnz	r0, 800a798 <xQueueReceive+0xd6>
					portYIELD_WITHIN_API();
 800a784:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a788:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a78c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a790:	f3bf 8f4f 	dsb	sy
 800a794:	f3bf 8f6f 	isb	sy
 800a798:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800a79a:	f7ff fb63 	bl	8009e64 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a79e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800a7a0:	2d00      	cmp	r5, #0
 800a7a2:	d0bc      	beq.n	800a71e <xQueueReceive+0x5c>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800a7a4:	4639      	mov	r1, r7
 800a7a6:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800a7a8:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800a7aa:	f7ff fcdf 	bl	800a16c <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800a7ae:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a7b0:	6923      	ldr	r3, [r4, #16]
 800a7b2:	b173      	cbz	r3, 800a7d2 <xQueueReceive+0x110>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a7b4:	f104 0010 	add.w	r0, r4, #16
 800a7b8:	f000 fd82 	bl	800b2c0 <xTaskRemoveFromEventList>
 800a7bc:	b148      	cbz	r0, 800a7d2 <xQueueReceive+0x110>
						queueYIELD_IF_USING_PREEMPTION();
 800a7be:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a7c2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a7c6:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a7ca:	f3bf 8f4f 	dsb	sy
 800a7ce:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800a7d2:	f7ff fb67 	bl	8009ea4 <vPortExitCritical>
				return pdPASS;
 800a7d6:	2001      	movs	r0, #1
}
 800a7d8:	b004      	add	sp, #16
 800a7da:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 800a7de:	4620      	mov	r0, r4
 800a7e0:	f7ff fcda 	bl	800a198 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800a7e4:	f000 fbee 	bl	800afc4 <xTaskResumeAll>
 800a7e8:	e7d6      	b.n	800a798 <xQueueReceive+0xd6>
			prvUnlockQueue( pxQueue );
 800a7ea:	4620      	mov	r0, r4
 800a7ec:	f7ff fcd4 	bl	800a198 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800a7f0:	f000 fbe8 	bl	800afc4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800a7f4:	4620      	mov	r0, r4
 800a7f6:	f7ff fc79 	bl	800a0ec <prvIsQueueEmpty>
 800a7fa:	2800      	cmp	r0, #0
 800a7fc:	d0cc      	beq.n	800a798 <xQueueReceive+0xd6>
 800a7fe:	e792      	b.n	800a726 <xQueueReceive+0x64>

0800a800 <xQueueSemaphoreTake>:
{
 800a800:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a802:	b085      	sub	sp, #20
	configASSERT( ( pxQueue ) );
 800a804:	4604      	mov	r4, r0
{
 800a806:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 800a808:	b940      	cbnz	r0, 800a81c <xQueueSemaphoreTake+0x1c>
 800a80a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a80e:	f383 8811 	msr	BASEPRI, r3
 800a812:	f3bf 8f6f 	isb	sy
 800a816:	f3bf 8f4f 	dsb	sy
 800a81a:	e7fe      	b.n	800a81a <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 800a81c:	6c05      	ldr	r5, [r0, #64]	; 0x40
 800a81e:	b145      	cbz	r5, 800a832 <xQueueSemaphoreTake+0x32>
 800a820:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a824:	f383 8811 	msr	BASEPRI, r3
 800a828:	f3bf 8f6f 	isb	sy
 800a82c:	f3bf 8f4f 	dsb	sy
 800a830:	e7fe      	b.n	800a830 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 800a832:	f000 fdd7 	bl	800b3e4 <xTaskGetSchedulerState>
 800a836:	4606      	mov	r6, r0
 800a838:	b950      	cbnz	r0, 800a850 <xQueueSemaphoreTake+0x50>
 800a83a:	9b01      	ldr	r3, [sp, #4]
 800a83c:	b15b      	cbz	r3, 800a856 <xQueueSemaphoreTake+0x56>
 800a83e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a842:	f383 8811 	msr	BASEPRI, r3
 800a846:	f3bf 8f6f 	isb	sy
 800a84a:	f3bf 8f4f 	dsb	sy
 800a84e:	e7fe      	b.n	800a84e <xQueueSemaphoreTake+0x4e>
 800a850:	462e      	mov	r6, r5
		prvLockQueue( pxQueue );
 800a852:	2700      	movs	r7, #0
 800a854:	e053      	b.n	800a8fe <xQueueSemaphoreTake+0xfe>
 800a856:	4605      	mov	r5, r0
 800a858:	e7fb      	b.n	800a852 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800a85a:	9b01      	ldr	r3, [sp, #4]
 800a85c:	b963      	cbnz	r3, 800a878 <xQueueSemaphoreTake+0x78>
						configASSERT( xInheritanceOccurred == pdFALSE );
 800a85e:	b145      	cbz	r5, 800a872 <xQueueSemaphoreTake+0x72>
 800a860:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a864:	f383 8811 	msr	BASEPRI, r3
 800a868:	f3bf 8f6f 	isb	sy
 800a86c:	f3bf 8f4f 	dsb	sy
 800a870:	e7fe      	b.n	800a870 <xQueueSemaphoreTake+0x70>
					taskEXIT_CRITICAL();
 800a872:	f7ff fb17 	bl	8009ea4 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800a876:	e062      	b.n	800a93e <xQueueSemaphoreTake+0x13e>
				else if( xEntryTimeSet == pdFALSE )
 800a878:	b916      	cbnz	r6, 800a880 <xQueueSemaphoreTake+0x80>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800a87a:	a802      	add	r0, sp, #8
 800a87c:	f000 fd64 	bl	800b348 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 800a880:	f7ff fb10 	bl	8009ea4 <vPortExitCritical>
		vTaskSuspendAll();
 800a884:	f000 fafa 	bl	800ae7c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800a888:	f7ff faec 	bl	8009e64 <vPortEnterCritical>
 800a88c:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800a890:	2bff      	cmp	r3, #255	; 0xff
 800a892:	bf08      	it	eq
 800a894:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 800a898:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800a89c:	2bff      	cmp	r3, #255	; 0xff
 800a89e:	bf08      	it	eq
 800a8a0:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 800a8a4:	f7ff fafe 	bl	8009ea4 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800a8a8:	a901      	add	r1, sp, #4
 800a8aa:	a802      	add	r0, sp, #8
 800a8ac:	f000 fd58 	bl	800b360 <xTaskCheckForTimeOut>
 800a8b0:	2800      	cmp	r0, #0
 800a8b2:	d14d      	bne.n	800a950 <xQueueSemaphoreTake+0x150>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800a8b4:	4620      	mov	r0, r4
 800a8b6:	f7ff fc19 	bl	800a0ec <prvIsQueueEmpty>
 800a8ba:	2800      	cmp	r0, #0
 800a8bc:	d042      	beq.n	800a944 <xQueueSemaphoreTake+0x144>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800a8be:	6823      	ldr	r3, [r4, #0]
 800a8c0:	b93b      	cbnz	r3, 800a8d2 <xQueueSemaphoreTake+0xd2>
						taskENTER_CRITICAL();
 800a8c2:	f7ff facf 	bl	8009e64 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800a8c6:	68a0      	ldr	r0, [r4, #8]
 800a8c8:	f000 fd9c 	bl	800b404 <xTaskPriorityInherit>
 800a8cc:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 800a8ce:	f7ff fae9 	bl	8009ea4 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 800a8d2:	9901      	ldr	r1, [sp, #4]
 800a8d4:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800a8d8:	f000 fcba 	bl	800b250 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800a8dc:	4620      	mov	r0, r4
 800a8de:	f7ff fc5b 	bl	800a198 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 800a8e2:	f000 fb6f 	bl	800afc4 <xTaskResumeAll>
 800a8e6:	b948      	cbnz	r0, 800a8fc <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 800a8e8:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a8ec:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a8f0:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a8f4:	f3bf 8f4f 	dsb	sy
 800a8f8:	f3bf 8f6f 	isb	sy
 800a8fc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800a8fe:	f7ff fab1 	bl	8009e64 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 800a902:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 800a904:	2b00      	cmp	r3, #0
 800a906:	d0a8      	beq.n	800a85a <xQueueSemaphoreTake+0x5a>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 800a908:	3b01      	subs	r3, #1
 800a90a:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 800a90c:	6823      	ldr	r3, [r4, #0]
 800a90e:	b913      	cbnz	r3, 800a916 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 800a910:	f000 fe50 	bl	800b5b4 <pvTaskIncrementMutexHeldCount>
 800a914:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a916:	6923      	ldr	r3, [r4, #16]
 800a918:	b173      	cbz	r3, 800a938 <xQueueSemaphoreTake+0x138>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a91a:	f104 0010 	add.w	r0, r4, #16
 800a91e:	f000 fccf 	bl	800b2c0 <xTaskRemoveFromEventList>
 800a922:	b148      	cbz	r0, 800a938 <xQueueSemaphoreTake+0x138>
						queueYIELD_IF_USING_PREEMPTION();
 800a924:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800a928:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800a92c:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800a930:	f3bf 8f4f 	dsb	sy
 800a934:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800a938:	f7ff fab4 	bl	8009ea4 <vPortExitCritical>
				return pdPASS;
 800a93c:	2501      	movs	r5, #1
}
 800a93e:	4628      	mov	r0, r5
 800a940:	b005      	add	sp, #20
 800a942:	bdf0      	pop	{r4, r5, r6, r7, pc}
				prvUnlockQueue( pxQueue );
 800a944:	4620      	mov	r0, r4
 800a946:	f7ff fc27 	bl	800a198 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 800a94a:	f000 fb3b 	bl	800afc4 <xTaskResumeAll>
 800a94e:	e7d5      	b.n	800a8fc <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800a950:	4620      	mov	r0, r4
 800a952:	f7ff fc21 	bl	800a198 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800a956:	f000 fb35 	bl	800afc4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800a95a:	4620      	mov	r0, r4
 800a95c:	f7ff fbc6 	bl	800a0ec <prvIsQueueEmpty>
 800a960:	2800      	cmp	r0, #0
 800a962:	d0cb      	beq.n	800a8fc <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 800a964:	2d00      	cmp	r5, #0
 800a966:	d0ea      	beq.n	800a93e <xQueueSemaphoreTake+0x13e>
						taskENTER_CRITICAL();
 800a968:	f7ff fa7c 	bl	8009e64 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800a96c:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a96e:	b119      	cbz	r1, 800a978 <xQueueSemaphoreTake+0x178>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800a970:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800a972:	6819      	ldr	r1, [r3, #0]
 800a974:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 800a978:	68a0      	ldr	r0, [r4, #8]
 800a97a:	f000 fdc9 	bl	800b510 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800a97e:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800a980:	f7ff fa90 	bl	8009ea4 <vPortExitCritical>
 800a984:	e7db      	b.n	800a93e <xQueueSemaphoreTake+0x13e>

0800a986 <xQueueReceiveFromISR>:
{
 800a986:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a98a:	4689      	mov	r9, r1
 800a98c:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 800a98e:	4605      	mov	r5, r0
 800a990:	b940      	cbnz	r0, 800a9a4 <xQueueReceiveFromISR+0x1e>
 800a992:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a996:	f383 8811 	msr	BASEPRI, r3
 800a99a:	f3bf 8f6f 	isb	sy
 800a99e:	f3bf 8f4f 	dsb	sy
 800a9a2:	e7fe      	b.n	800a9a2 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 800a9a4:	b951      	cbnz	r1, 800a9bc <xQueueReceiveFromISR+0x36>
 800a9a6:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800a9a8:	b143      	cbz	r3, 800a9bc <xQueueReceiveFromISR+0x36>
 800a9aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a9ae:	f383 8811 	msr	BASEPRI, r3
 800a9b2:	f3bf 8f6f 	isb	sy
 800a9b6:	f3bf 8f4f 	dsb	sy
 800a9ba:	e7fe      	b.n	800a9ba <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800a9bc:	f7ff fb68 	bl	800a090 <vPortValidateInterruptPriority>
	__asm volatile
 800a9c0:	f3ef 8711 	mrs	r7, BASEPRI
 800a9c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800a9c8:	f383 8811 	msr	BASEPRI, r3
 800a9cc:	f3bf 8f6f 	isb	sy
 800a9d0:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800a9d4:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800a9d6:	b31c      	cbz	r4, 800aa20 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 800a9d8:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800a9dc:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 800a9de:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800a9e0:	4628      	mov	r0, r5
 800a9e2:	f7ff fbc3 	bl	800a16c <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800a9e6:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 800a9e8:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800a9ea:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 800a9ec:	d113      	bne.n	800aa16 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 800a9ee:	692b      	ldr	r3, [r5, #16]
 800a9f0:	b90b      	cbnz	r3, 800a9f6 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 800a9f2:	2001      	movs	r0, #1
 800a9f4:	e00b      	b.n	800aa0e <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800a9f6:	f105 0010 	add.w	r0, r5, #16
 800a9fa:	f000 fc61 	bl	800b2c0 <xTaskRemoveFromEventList>
 800a9fe:	2800      	cmp	r0, #0
 800aa00:	d0f7      	beq.n	800a9f2 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 800aa02:	f1b8 0f00 	cmp.w	r8, #0
 800aa06:	d0f4      	beq.n	800a9f2 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 800aa08:	2001      	movs	r0, #1
 800aa0a:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 800aa0e:	f387 8811 	msr	BASEPRI, r7
}
 800aa12:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 800aa16:	3601      	adds	r6, #1
 800aa18:	b276      	sxtb	r6, r6
 800aa1a:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 800aa1e:	e7e8      	b.n	800a9f2 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 800aa20:	4620      	mov	r0, r4
 800aa22:	e7f4      	b.n	800aa0e <xQueueReceiveFromISR+0x88>

0800aa24 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 800aa24:	b510      	push	{r4, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800aa26:	4a07      	ldr	r2, [pc, #28]	; (800aa44 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800aa28:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 800aa2a:	f852 4033 	ldr.w	r4, [r2, r3, lsl #3]
 800aa2e:	b92c      	cbnz	r4, 800aa3c <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 800aa30:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 800aa34:	eb02 03c3 	add.w	r3, r2, r3, lsl #3
 800aa38:	6058      	str	r0, [r3, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 800aa3a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800aa3c:	3301      	adds	r3, #1
 800aa3e:	2b08      	cmp	r3, #8
 800aa40:	d1f3      	bne.n	800aa2a <vQueueAddToRegistry+0x6>
 800aa42:	e7fa      	b.n	800aa3a <vQueueAddToRegistry+0x16>
 800aa44:	200117cc 	.word	0x200117cc

0800aa48 <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800aa48:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800aa4a:	4a08      	ldr	r2, [pc, #32]	; (800aa6c <vQueueUnregisterQueue+0x24>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800aa4c:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800aa4e:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
 800aa52:	684c      	ldr	r4, [r1, #4]
 800aa54:	4284      	cmp	r4, r0
 800aa56:	d104      	bne.n	800aa62 <vQueueUnregisterQueue+0x1a>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800aa58:	2000      	movs	r0, #0
 800aa5a:	f842 0033 	str.w	r0, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 800aa5e:	6048      	str	r0, [r1, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800aa60:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800aa62:	3301      	adds	r3, #1
 800aa64:	2b08      	cmp	r3, #8
 800aa66:	d1f2      	bne.n	800aa4e <vQueueUnregisterQueue+0x6>
 800aa68:	e7fa      	b.n	800aa60 <vQueueUnregisterQueue+0x18>
 800aa6a:	bf00      	nop
 800aa6c:	200117cc 	.word	0x200117cc

0800aa70 <vQueueDelete>:
{
 800aa70:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800aa72:	4604      	mov	r4, r0
 800aa74:	b940      	cbnz	r0, 800aa88 <vQueueDelete+0x18>
	__asm volatile
 800aa76:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aa7a:	f383 8811 	msr	BASEPRI, r3
 800aa7e:	f3bf 8f6f 	isb	sy
 800aa82:	f3bf 8f4f 	dsb	sy
 800aa86:	e7fe      	b.n	800aa86 <vQueueDelete+0x16>
		vQueueUnregisterQueue( pxQueue );
 800aa88:	f7ff ffde 	bl	800aa48 <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 800aa8c:	f894 3046 	ldrb.w	r3, [r4, #70]	; 0x46
 800aa90:	b923      	cbnz	r3, 800aa9c <vQueueDelete+0x2c>
			vPortFree( pxQueue );
 800aa92:	4620      	mov	r0, r4
}
 800aa94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 800aa98:	f7ff b8f8 	b.w	8009c8c <vPortFree>
}
 800aa9c:	bd10      	pop	{r4, pc}

0800aa9e <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 800aa9e:	b570      	push	{r4, r5, r6, lr}
 800aaa0:	4604      	mov	r4, r0
 800aaa2:	460d      	mov	r5, r1
 800aaa4:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800aaa6:	f7ff f9dd 	bl	8009e64 <vPortEnterCritical>
 800aaaa:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 800aaae:	2bff      	cmp	r3, #255	; 0xff
 800aab0:	bf04      	itt	eq
 800aab2:	2300      	moveq	r3, #0
 800aab4:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 800aab8:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800aabc:	2bff      	cmp	r3, #255	; 0xff
 800aabe:	bf04      	itt	eq
 800aac0:	2300      	moveq	r3, #0
 800aac2:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800aac6:	f7ff f9ed 	bl	8009ea4 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 800aaca:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 800aacc:	b92b      	cbnz	r3, 800aada <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 800aace:	4632      	mov	r2, r6
 800aad0:	4629      	mov	r1, r5
 800aad2:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800aad6:	f000 fbd5 	bl	800b284 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 800aada:	4620      	mov	r0, r4
	}
 800aadc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 800aae0:	f7ff bb5a 	b.w	800a198 <prvUnlockQueue>

0800aae4 <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 800aae4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800aae8:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 800aaea:	f7ff f9bb 	bl	8009e64 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 800aaee:	4b30      	ldr	r3, [pc, #192]	; (800abb0 <prvAddNewTaskToReadyList+0xcc>)
		if( pxCurrentTCB == NULL )
 800aaf0:	4e30      	ldr	r6, [pc, #192]	; (800abb4 <prvAddNewTaskToReadyList+0xd0>)
		uxCurrentNumberOfTasks++;
 800aaf2:	681a      	ldr	r2, [r3, #0]
 800aaf4:	4f30      	ldr	r7, [pc, #192]	; (800abb8 <prvAddNewTaskToReadyList+0xd4>)
 800aaf6:	3201      	adds	r2, #1
 800aaf8:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 800aafa:	6835      	ldr	r5, [r6, #0]
 800aafc:	2d00      	cmp	r5, #0
 800aafe:	d14b      	bne.n	800ab98 <prvAddNewTaskToReadyList+0xb4>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 800ab00:	6034      	str	r4, [r6, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 800ab02:	681b      	ldr	r3, [r3, #0]
 800ab04:	2b01      	cmp	r3, #1
 800ab06:	d11f      	bne.n	800ab48 <prvAddNewTaskToReadyList+0x64>
 800ab08:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800ab0a:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800ab0c:	3501      	adds	r5, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 800ab0e:	f7ff f8fb 	bl	8009d08 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 800ab12:	2d38      	cmp	r5, #56	; 0x38
 800ab14:	f108 0814 	add.w	r8, r8, #20
 800ab18:	d1f7      	bne.n	800ab0a <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 800ab1a:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 800abe0 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 800ab1e:	4d27      	ldr	r5, [pc, #156]	; (800abbc <prvAddNewTaskToReadyList+0xd8>)
	vListInitialise( &xDelayedTaskList1 );
 800ab20:	4640      	mov	r0, r8
 800ab22:	f7ff f8f1 	bl	8009d08 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 800ab26:	4628      	mov	r0, r5
 800ab28:	f7ff f8ee 	bl	8009d08 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 800ab2c:	4824      	ldr	r0, [pc, #144]	; (800abc0 <prvAddNewTaskToReadyList+0xdc>)
 800ab2e:	f7ff f8eb 	bl	8009d08 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 800ab32:	4824      	ldr	r0, [pc, #144]	; (800abc4 <prvAddNewTaskToReadyList+0xe0>)
 800ab34:	f7ff f8e8 	bl	8009d08 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 800ab38:	4823      	ldr	r0, [pc, #140]	; (800abc8 <prvAddNewTaskToReadyList+0xe4>)
 800ab3a:	f7ff f8e5 	bl	8009d08 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 800ab3e:	4b23      	ldr	r3, [pc, #140]	; (800abcc <prvAddNewTaskToReadyList+0xe8>)
 800ab40:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 800ab44:	4b22      	ldr	r3, [pc, #136]	; (800abd0 <prvAddNewTaskToReadyList+0xec>)
 800ab46:	601d      	str	r5, [r3, #0]
		uxTaskNumber++;
 800ab48:	4a22      	ldr	r2, [pc, #136]	; (800abd4 <prvAddNewTaskToReadyList+0xf0>)
 800ab4a:	6813      	ldr	r3, [r2, #0]
 800ab4c:	3301      	adds	r3, #1
 800ab4e:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 800ab50:	4a21      	ldr	r2, [pc, #132]	; (800abd8 <prvAddNewTaskToReadyList+0xf4>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 800ab52:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 800ab54:	6811      	ldr	r1, [r2, #0]
 800ab56:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ab58:	2014      	movs	r0, #20
 800ab5a:	428b      	cmp	r3, r1
 800ab5c:	fb00 7003 	mla	r0, r0, r3, r7
 800ab60:	f104 0104 	add.w	r1, r4, #4
 800ab64:	bf88      	it	hi
 800ab66:	6013      	strhi	r3, [r2, #0]
 800ab68:	f7ff f8dc 	bl	8009d24 <vListInsertEnd>
	taskEXIT_CRITICAL();
 800ab6c:	f7ff f99a 	bl	8009ea4 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 800ab70:	4b1a      	ldr	r3, [pc, #104]	; (800abdc <prvAddNewTaskToReadyList+0xf8>)
 800ab72:	681b      	ldr	r3, [r3, #0]
 800ab74:	b173      	cbz	r3, 800ab94 <prvAddNewTaskToReadyList+0xb0>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 800ab76:	6833      	ldr	r3, [r6, #0]
 800ab78:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ab7a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800ab7c:	429a      	cmp	r2, r3
 800ab7e:	d209      	bcs.n	800ab94 <prvAddNewTaskToReadyList+0xb0>
			taskYIELD_IF_USING_PREEMPTION();
 800ab80:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800ab84:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ab88:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800ab8c:	f3bf 8f4f 	dsb	sy
 800ab90:	f3bf 8f6f 	isb	sy
}
 800ab94:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 800ab98:	4b10      	ldr	r3, [pc, #64]	; (800abdc <prvAddNewTaskToReadyList+0xf8>)
 800ab9a:	681b      	ldr	r3, [r3, #0]
 800ab9c:	2b00      	cmp	r3, #0
 800ab9e:	d1d3      	bne.n	800ab48 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 800aba0:	6833      	ldr	r3, [r6, #0]
 800aba2:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800aba4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800aba6:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 800aba8:	bf98      	it	ls
 800abaa:	6034      	strls	r4, [r6, #0]
 800abac:	e7cc      	b.n	800ab48 <prvAddNewTaskToReadyList+0x64>
 800abae:	bf00      	nop
 800abb0:	20011c78 	.word	0x20011c78
 800abb4:	2001180c 	.word	0x2001180c
 800abb8:	20011818 	.word	0x20011818
 800abbc:	20011ca0 	.word	0x20011ca0
 800abc0:	20011cc0 	.word	0x20011cc0
 800abc4:	20011cec 	.word	0x20011cec
 800abc8:	20011cd8 	.word	0x20011cd8
 800abcc:	20011810 	.word	0x20011810
 800abd0:	20011814 	.word	0x20011814
 800abd4:	20011c84 	.word	0x20011c84
 800abd8:	20011c88 	.word	0x20011c88
 800abdc:	20011cd4 	.word	0x20011cd4
 800abe0:	20011c8c 	.word	0x20011c8c

0800abe4 <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 800abe4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 800abe6:	4b15      	ldr	r3, [pc, #84]	; (800ac3c <prvAddCurrentTaskToDelayedList+0x58>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800abe8:	4e15      	ldr	r6, [pc, #84]	; (800ac40 <prvAddCurrentTaskToDelayedList+0x5c>)
const TickType_t xConstTickCount = xTickCount;
 800abea:	681d      	ldr	r5, [r3, #0]
{
 800abec:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800abee:	6830      	ldr	r0, [r6, #0]
 800abf0:	3004      	adds	r0, #4
{
 800abf2:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800abf4:	f7ff f8b9 	bl	8009d6a <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 800abf8:	1c63      	adds	r3, r4, #1
 800abfa:	d107      	bne.n	800ac0c <prvAddCurrentTaskToDelayedList+0x28>
 800abfc:	b137      	cbz	r7, 800ac0c <prvAddCurrentTaskToDelayedList+0x28>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800abfe:	6831      	ldr	r1, [r6, #0]
 800ac00:	4810      	ldr	r0, [pc, #64]	; (800ac44 <prvAddCurrentTaskToDelayedList+0x60>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 800ac02:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ac06:	3104      	adds	r1, #4
 800ac08:	f7ff b88c 	b.w	8009d24 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 800ac0c:	6833      	ldr	r3, [r6, #0]
 800ac0e:	192c      	adds	r4, r5, r4
 800ac10:	605c      	str	r4, [r3, #4]
			if( xTimeToWake < xConstTickCount )
 800ac12:	d307      	bcc.n	800ac24 <prvAddCurrentTaskToDelayedList+0x40>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ac14:	4b0c      	ldr	r3, [pc, #48]	; (800ac48 <prvAddCurrentTaskToDelayedList+0x64>)
 800ac16:	6818      	ldr	r0, [r3, #0]
 800ac18:	6831      	ldr	r1, [r6, #0]
}
 800ac1a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ac1e:	3104      	adds	r1, #4
 800ac20:	f7ff b88c 	b.w	8009d3c <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 800ac24:	4b09      	ldr	r3, [pc, #36]	; (800ac4c <prvAddCurrentTaskToDelayedList+0x68>)
 800ac26:	6818      	ldr	r0, [r3, #0]
 800ac28:	6831      	ldr	r1, [r6, #0]
 800ac2a:	3104      	adds	r1, #4
 800ac2c:	f7ff f886 	bl	8009d3c <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 800ac30:	4b07      	ldr	r3, [pc, #28]	; (800ac50 <prvAddCurrentTaskToDelayedList+0x6c>)
 800ac32:	681a      	ldr	r2, [r3, #0]
 800ac34:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 800ac36:	bf88      	it	hi
 800ac38:	601c      	strhi	r4, [r3, #0]
}
 800ac3a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ac3c:	20011d00 	.word	0x20011d00
 800ac40:	2001180c 	.word	0x2001180c
 800ac44:	20011cd8 	.word	0x20011cd8
 800ac48:	20011814 	.word	0x20011814
 800ac4c:	20011810 	.word	0x20011810
 800ac50:	20011cb4 	.word	0x20011cb4

0800ac54 <prvResetNextTaskUnblockTime>:
	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800ac54:	4a06      	ldr	r2, [pc, #24]	; (800ac70 <prvResetNextTaskUnblockTime+0x1c>)
 800ac56:	6813      	ldr	r3, [r2, #0]
 800ac58:	6819      	ldr	r1, [r3, #0]
 800ac5a:	4b06      	ldr	r3, [pc, #24]	; (800ac74 <prvResetNextTaskUnblockTime+0x20>)
 800ac5c:	b919      	cbnz	r1, 800ac66 <prvResetNextTaskUnblockTime+0x12>
		xNextTaskUnblockTime = portMAX_DELAY;
 800ac5e:	f04f 32ff 	mov.w	r2, #4294967295
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ac62:	601a      	str	r2, [r3, #0]
}
 800ac64:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ac66:	6812      	ldr	r2, [r2, #0]
 800ac68:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 800ac6a:	68d2      	ldr	r2, [r2, #12]
 800ac6c:	6852      	ldr	r2, [r2, #4]
 800ac6e:	e7f8      	b.n	800ac62 <prvResetNextTaskUnblockTime+0xe>
 800ac70:	20011810 	.word	0x20011810
 800ac74:	20011cb4 	.word	0x20011cb4

0800ac78 <prvDeleteTCB>:
	{
 800ac78:	b510      	push	{r4, lr}
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800ac7a:	f890 305d 	ldrb.w	r3, [r0, #93]	; 0x5d
	{
 800ac7e:	4604      	mov	r4, r0
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 800ac80:	b93b      	cbnz	r3, 800ac92 <prvDeleteTCB+0x1a>
				vPortFree( pxTCB->pxStack );
 800ac82:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800ac84:	f7ff f802 	bl	8009c8c <vPortFree>
				vPortFree( pxTCB );
 800ac88:	4620      	mov	r0, r4
	}
 800ac8a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 800ac8e:	f7fe bffd 	b.w	8009c8c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 800ac92:	2b01      	cmp	r3, #1
 800ac94:	d0f9      	beq.n	800ac8a <prvDeleteTCB+0x12>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 800ac96:	2b02      	cmp	r3, #2
 800ac98:	d008      	beq.n	800acac <prvDeleteTCB+0x34>
 800ac9a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ac9e:	f383 8811 	msr	BASEPRI, r3
 800aca2:	f3bf 8f6f 	isb	sy
 800aca6:	f3bf 8f4f 	dsb	sy
 800acaa:	e7fe      	b.n	800acaa <prvDeleteTCB+0x32>
	}
 800acac:	bd10      	pop	{r4, pc}
	...

0800acb0 <prvIdleTask>:
{
 800acb0:	b580      	push	{r7, lr}
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800acb2:	4c14      	ldr	r4, [pc, #80]	; (800ad04 <prvIdleTask+0x54>)
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800acb4:	4f14      	ldr	r7, [pc, #80]	; (800ad08 <prvIdleTask+0x58>)
				--uxCurrentNumberOfTasks;
 800acb6:	4d15      	ldr	r5, [pc, #84]	; (800ad0c <prvIdleTask+0x5c>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 800acb8:	6823      	ldr	r3, [r4, #0]
 800acba:	b983      	cbnz	r3, 800acde <prvIdleTask+0x2e>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 800acbc:	4b14      	ldr	r3, [pc, #80]	; (800ad10 <prvIdleTask+0x60>)
 800acbe:	681b      	ldr	r3, [r3, #0]
 800acc0:	2b01      	cmp	r3, #1
 800acc2:	d909      	bls.n	800acd8 <prvIdleTask+0x28>
				taskYIELD();
 800acc4:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800acc8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800accc:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800acd0:	f3bf 8f4f 	dsb	sy
 800acd4:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 800acd8:	f7f7 f886 	bl	8001de8 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 800acdc:	e7eb      	b.n	800acb6 <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 800acde:	f7ff f8c1 	bl	8009e64 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800ace2:	68fb      	ldr	r3, [r7, #12]
 800ace4:	68de      	ldr	r6, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800ace6:	1d30      	adds	r0, r6, #4
 800ace8:	f7ff f83f 	bl	8009d6a <uxListRemove>
				--uxCurrentNumberOfTasks;
 800acec:	682b      	ldr	r3, [r5, #0]
 800acee:	3b01      	subs	r3, #1
 800acf0:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 800acf2:	6823      	ldr	r3, [r4, #0]
 800acf4:	3b01      	subs	r3, #1
 800acf6:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 800acf8:	f7ff f8d4 	bl	8009ea4 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 800acfc:	4630      	mov	r0, r6
 800acfe:	f7ff ffbb 	bl	800ac78 <prvDeleteTCB>
 800ad02:	e7d9      	b.n	800acb8 <prvIdleTask+0x8>
 800ad04:	20011c7c 	.word	0x20011c7c
 800ad08:	20011cec 	.word	0x20011cec
 800ad0c:	20011c78 	.word	0x20011c78
 800ad10:	20011818 	.word	0x20011818

0800ad14 <prvInitialiseNewTask.constprop.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800ad14:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800ad18:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800ad1c:	ea4f 0982 	mov.w	r9, r2, lsl #2
 800ad20:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800ad22:	4606      	mov	r6, r0
 800ad24:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800ad26:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800ad28:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 800ad2a:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 800ad2c:	f015 fd7a 	bl	8020824 <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 800ad30:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800ad32:	f1a9 0904 	sub.w	r9, r9, #4
 800ad36:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 800ad38:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 800ad3c:	b3b5      	cbz	r5, 800adac <prvInitialiseNewTask.constprop.0+0x98>
 800ad3e:	1e6b      	subs	r3, r5, #1
 800ad40:	f104 0234 	add.w	r2, r4, #52	; 0x34
 800ad44:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 800ad46:	f813 0f01 	ldrb.w	r0, [r3, #1]!
 800ad4a:	f802 0b01 	strb.w	r0, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 800ad4e:	b108      	cbz	r0, 800ad54 <prvInitialiseNewTask.constprop.0+0x40>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 800ad50:	42ab      	cmp	r3, r5
 800ad52:	d1f8      	bne.n	800ad46 <prvInitialiseNewTask.constprop.0+0x32>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 800ad54:	2300      	movs	r3, #0
 800ad56:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 800ad5a:	9d08      	ldr	r5, [sp, #32]
 800ad5c:	2d37      	cmp	r5, #55	; 0x37
 800ad5e:	bf28      	it	cs
 800ad60:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 800ad62:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 800ad66:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 800ad68:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800ad6a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 800ad6c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 800ad70:	f7fe ffd5 	bl	8009d1e <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ad74:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 800ad78:	f104 0018 	add.w	r0, r4, #24
 800ad7c:	f7fe ffcf 	bl	8009d1e <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 800ad80:	f8c4 a058 	str.w	sl, [r4, #88]	; 0x58
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 800ad84:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800ad86:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 800ad88:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 800ad8a:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 800ad8e:	f884 a05c 	strb.w	sl, [r4, #92]	; 0x5c
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 800ad92:	463a      	mov	r2, r7
 800ad94:	4631      	mov	r1, r6
 800ad96:	4648      	mov	r0, r9
 800ad98:	f7ff f836 	bl	8009e08 <pxPortInitialiseStack>
 800ad9c:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 800ad9e:	f1b8 0f00 	cmp.w	r8, #0
 800ada2:	d001      	beq.n	800ada8 <prvInitialiseNewTask.constprop.0+0x94>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 800ada4:	f8c8 4000 	str.w	r4, [r8]
}
 800ada8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 800adac:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 800adb0:	e7d3      	b.n	800ad5a <prvInitialiseNewTask.constprop.0+0x46>

0800adb2 <xTaskCreateStatic>:
	{
 800adb2:	b570      	push	{r4, r5, r6, lr}
 800adb4:	b086      	sub	sp, #24
 800adb6:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 800adba:	b945      	cbnz	r5, 800adce <xTaskCreateStatic+0x1c>
 800adbc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800adc0:	f383 8811 	msr	BASEPRI, r3
 800adc4:	f3bf 8f6f 	isb	sy
 800adc8:	f3bf 8f4f 	dsb	sy
 800adcc:	e7fe      	b.n	800adcc <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 800adce:	b944      	cbnz	r4, 800ade2 <xTaskCreateStatic+0x30>
 800add0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800add4:	f383 8811 	msr	BASEPRI, r3
 800add8:	f3bf 8f6f 	isb	sy
 800addc:	f3bf 8f4f 	dsb	sy
 800ade0:	e7fe      	b.n	800ade0 <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 800ade2:	2660      	movs	r6, #96	; 0x60
 800ade4:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 800ade6:	9e05      	ldr	r6, [sp, #20]
 800ade8:	2e60      	cmp	r6, #96	; 0x60
 800adea:	d008      	beq.n	800adfe <xTaskCreateStatic+0x4c>
 800adec:	f04f 0350 	mov.w	r3, #80	; 0x50
 800adf0:	f383 8811 	msr	BASEPRI, r3
 800adf4:	f3bf 8f6f 	isb	sy
 800adf8:	f3bf 8f4f 	dsb	sy
 800adfc:	e7fe      	b.n	800adfc <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 800adfe:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 800ae00:	2502      	movs	r5, #2
 800ae02:	f884 505d 	strb.w	r5, [r4, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ae06:	ad04      	add	r5, sp, #16
 800ae08:	9501      	str	r5, [sp, #4]
 800ae0a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800ae0c:	9402      	str	r4, [sp, #8]
 800ae0e:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 800ae10:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 800ae12:	f7ff ff7f 	bl	800ad14 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ae16:	4620      	mov	r0, r4
 800ae18:	f7ff fe64 	bl	800aae4 <prvAddNewTaskToReadyList>
	}
 800ae1c:	9804      	ldr	r0, [sp, #16]
 800ae1e:	b006      	add	sp, #24
 800ae20:	bd70      	pop	{r4, r5, r6, pc}

0800ae22 <xTaskCreate>:
	{
 800ae22:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800ae26:	4607      	mov	r7, r0
 800ae28:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ae2a:	0090      	lsls	r0, r2, #2
	{
 800ae2c:	4688      	mov	r8, r1
 800ae2e:	4616      	mov	r6, r2
 800ae30:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 800ae32:	f7fe fe93 	bl	8009b5c <pvPortMalloc>
			if( pxStack != NULL )
 800ae36:	4605      	mov	r5, r0
 800ae38:	b1e8      	cbz	r0, 800ae76 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 800ae3a:	2060      	movs	r0, #96	; 0x60
 800ae3c:	f7fe fe8e 	bl	8009b5c <pvPortMalloc>
				if( pxNewTCB != NULL )
 800ae40:	4604      	mov	r4, r0
 800ae42:	b1a8      	cbz	r0, 800ae70 <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 800ae44:	2300      	movs	r3, #0
 800ae46:	f880 305d 	strb.w	r3, [r0, #93]	; 0x5d
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800ae4a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 800ae4c:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 800ae4e:	9301      	str	r3, [sp, #4]
 800ae50:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ae52:	9002      	str	r0, [sp, #8]
 800ae54:	9300      	str	r3, [sp, #0]
 800ae56:	4632      	mov	r2, r6
 800ae58:	464b      	mov	r3, r9
 800ae5a:	4641      	mov	r1, r8
 800ae5c:	4638      	mov	r0, r7
 800ae5e:	f7ff ff59 	bl	800ad14 <prvInitialiseNewTask.constprop.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 800ae62:	4620      	mov	r0, r4
 800ae64:	f7ff fe3e 	bl	800aae4 <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 800ae68:	2001      	movs	r0, #1
	}
 800ae6a:	b005      	add	sp, #20
 800ae6c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 800ae70:	4628      	mov	r0, r5
 800ae72:	f7fe ff0b 	bl	8009c8c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 800ae76:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 800ae7a:	e7f6      	b.n	800ae6a <xTaskCreate+0x48>

0800ae7c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 800ae7c:	4a02      	ldr	r2, [pc, #8]	; (800ae88 <vTaskSuspendAll+0xc>)
 800ae7e:	6813      	ldr	r3, [r2, #0]
 800ae80:	3301      	adds	r3, #1
 800ae82:	6013      	str	r3, [r2, #0]
}
 800ae84:	4770      	bx	lr
 800ae86:	bf00      	nop
 800ae88:	20011c80 	.word	0x20011c80

0800ae8c <xTaskGetTickCount>:
		xTicks = xTickCount;
 800ae8c:	4b01      	ldr	r3, [pc, #4]	; (800ae94 <xTaskGetTickCount+0x8>)
 800ae8e:	6818      	ldr	r0, [r3, #0]
}
 800ae90:	4770      	bx	lr
 800ae92:	bf00      	nop
 800ae94:	20011d00 	.word	0x20011d00

0800ae98 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800ae98:	4b3f      	ldr	r3, [pc, #252]	; (800af98 <xTaskIncrementTick+0x100>)
 800ae9a:	681b      	ldr	r3, [r3, #0]
{
 800ae9c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800aea0:	2b00      	cmp	r3, #0
 800aea2:	d173      	bne.n	800af8c <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 800aea4:	4b3d      	ldr	r3, [pc, #244]	; (800af9c <xTaskIncrementTick+0x104>)
 800aea6:	681d      	ldr	r5, [r3, #0]
 800aea8:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 800aeaa:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 800aeac:	b9bd      	cbnz	r5, 800aede <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 800aeae:	4b3c      	ldr	r3, [pc, #240]	; (800afa0 <xTaskIncrementTick+0x108>)
 800aeb0:	681a      	ldr	r2, [r3, #0]
 800aeb2:	6812      	ldr	r2, [r2, #0]
 800aeb4:	b142      	cbz	r2, 800aec8 <xTaskIncrementTick+0x30>
 800aeb6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800aeba:	f383 8811 	msr	BASEPRI, r3
 800aebe:	f3bf 8f6f 	isb	sy
 800aec2:	f3bf 8f4f 	dsb	sy
 800aec6:	e7fe      	b.n	800aec6 <xTaskIncrementTick+0x2e>
 800aec8:	4a36      	ldr	r2, [pc, #216]	; (800afa4 <xTaskIncrementTick+0x10c>)
 800aeca:	6819      	ldr	r1, [r3, #0]
 800aecc:	6810      	ldr	r0, [r2, #0]
 800aece:	6018      	str	r0, [r3, #0]
 800aed0:	6011      	str	r1, [r2, #0]
 800aed2:	4a35      	ldr	r2, [pc, #212]	; (800afa8 <xTaskIncrementTick+0x110>)
 800aed4:	6813      	ldr	r3, [r2, #0]
 800aed6:	3301      	adds	r3, #1
 800aed8:	6013      	str	r3, [r2, #0]
 800aeda:	f7ff febb 	bl	800ac54 <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 800aede:	4e33      	ldr	r6, [pc, #204]	; (800afac <xTaskIncrementTick+0x114>)
 800aee0:	4f33      	ldr	r7, [pc, #204]	; (800afb0 <xTaskIncrementTick+0x118>)
 800aee2:	6833      	ldr	r3, [r6, #0]
 800aee4:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 800afbc <xTaskIncrementTick+0x124>
 800aee8:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 800aeea:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 800aeee:	d211      	bcs.n	800af14 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 800aef0:	f8d8 3000 	ldr.w	r3, [r8]
 800aef4:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800aef6:	2214      	movs	r2, #20
 800aef8:	4353      	muls	r3, r2
 800aefa:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 800aefc:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 800aefe:	4b2d      	ldr	r3, [pc, #180]	; (800afb4 <xTaskIncrementTick+0x11c>)
 800af00:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 800af02:	bf28      	it	cs
 800af04:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 800af06:	2b00      	cmp	r3, #0
 800af08:	bf18      	it	ne
 800af0a:	2401      	movne	r4, #1
}
 800af0c:	4620      	mov	r0, r4
 800af0e:	b003      	add	sp, #12
 800af10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800af14:	f8df 9088 	ldr.w	r9, [pc, #136]	; 800afa0 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 800af18:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 800afc0 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 800af1c:	f8d9 3000 	ldr.w	r3, [r9]
 800af20:	681b      	ldr	r3, [r3, #0]
 800af22:	b91b      	cbnz	r3, 800af2c <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800af24:	f04f 33ff 	mov.w	r3, #4294967295
 800af28:	6033      	str	r3, [r6, #0]
					break;
 800af2a:	e7e1      	b.n	800aef0 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800af2c:	f8d9 3000 	ldr.w	r3, [r9]
 800af30:	68db      	ldr	r3, [r3, #12]
 800af32:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 800af36:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 800af3a:	4295      	cmp	r5, r2
 800af3c:	d201      	bcs.n	800af42 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 800af3e:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 800af40:	e7d6      	b.n	800aef0 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800af42:	f10b 0104 	add.w	r1, fp, #4
 800af46:	4608      	mov	r0, r1
 800af48:	9101      	str	r1, [sp, #4]
 800af4a:	f7fe ff0e 	bl	8009d6a <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 800af4e:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 800af52:	9901      	ldr	r1, [sp, #4]
 800af54:	b122      	cbz	r2, 800af60 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800af56:	f10b 0018 	add.w	r0, fp, #24
 800af5a:	f7fe ff06 	bl	8009d6a <uxListRemove>
 800af5e:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 800af60:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 800af64:	f8da 2000 	ldr.w	r2, [sl]
 800af68:	2314      	movs	r3, #20
 800af6a:	4290      	cmp	r0, r2
 800af6c:	bf88      	it	hi
 800af6e:	f8ca 0000 	strhi.w	r0, [sl]
 800af72:	fb03 7000 	mla	r0, r3, r0, r7
 800af76:	f7fe fed5 	bl	8009d24 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800af7a:	f8d8 1000 	ldr.w	r1, [r8]
 800af7e:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 800af82:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 800af84:	429a      	cmp	r2, r3
 800af86:	bf28      	it	cs
 800af88:	2401      	movcs	r4, #1
 800af8a:	e7c7      	b.n	800af1c <xTaskIncrementTick+0x84>
		++xPendedTicks;
 800af8c:	4a0a      	ldr	r2, [pc, #40]	; (800afb8 <xTaskIncrementTick+0x120>)
 800af8e:	6813      	ldr	r3, [r2, #0]
 800af90:	3301      	adds	r3, #1
 800af92:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 800af94:	2400      	movs	r4, #0
	return xSwitchRequired;
 800af96:	e7b9      	b.n	800af0c <xTaskIncrementTick+0x74>
 800af98:	20011c80 	.word	0x20011c80
 800af9c:	20011d00 	.word	0x20011d00
 800afa0:	20011810 	.word	0x20011810
 800afa4:	20011814 	.word	0x20011814
 800afa8:	20011cb8 	.word	0x20011cb8
 800afac:	20011cb4 	.word	0x20011cb4
 800afb0:	20011818 	.word	0x20011818
 800afb4:	20011d04 	.word	0x20011d04
 800afb8:	20011cbc 	.word	0x20011cbc
 800afbc:	2001180c 	.word	0x2001180c
 800afc0:	20011c88 	.word	0x20011c88

0800afc4 <xTaskResumeAll>:
{
 800afc4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 800afc6:	4c31      	ldr	r4, [pc, #196]	; (800b08c <xTaskResumeAll+0xc8>)
 800afc8:	6823      	ldr	r3, [r4, #0]
 800afca:	b943      	cbnz	r3, 800afde <xTaskResumeAll+0x1a>
 800afcc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800afd0:	f383 8811 	msr	BASEPRI, r3
 800afd4:	f3bf 8f6f 	isb	sy
 800afd8:	f3bf 8f4f 	dsb	sy
 800afdc:	e7fe      	b.n	800afdc <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 800afde:	f7fe ff41 	bl	8009e64 <vPortEnterCritical>
		--uxSchedulerSuspended;
 800afe2:	6823      	ldr	r3, [r4, #0]
 800afe4:	3b01      	subs	r3, #1
 800afe6:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800afe8:	6824      	ldr	r4, [r4, #0]
 800afea:	b12c      	cbz	r4, 800aff8 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 800afec:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800afee:	f7fe ff59 	bl	8009ea4 <vPortExitCritical>
}
 800aff2:	4620      	mov	r0, r4
 800aff4:	b003      	add	sp, #12
 800aff6:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 800aff8:	4b25      	ldr	r3, [pc, #148]	; (800b090 <xTaskResumeAll+0xcc>)
 800affa:	681b      	ldr	r3, [r3, #0]
 800affc:	2b00      	cmp	r3, #0
 800affe:	d0f5      	beq.n	800afec <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800b000:	4d24      	ldr	r5, [pc, #144]	; (800b094 <xTaskResumeAll+0xd0>)
					prvAddTaskToReadyList( pxTCB );
 800b002:	4e25      	ldr	r6, [pc, #148]	; (800b098 <xTaskResumeAll+0xd4>)
 800b004:	4f25      	ldr	r7, [pc, #148]	; (800b09c <xTaskResumeAll+0xd8>)
 800b006:	e01e      	b.n	800b046 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b008:	68eb      	ldr	r3, [r5, #12]
 800b00a:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 800b00c:	f104 0018 	add.w	r0, r4, #24
 800b010:	f7fe feab 	bl	8009d6a <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 800b014:	1d21      	adds	r1, r4, #4
 800b016:	4608      	mov	r0, r1
 800b018:	9101      	str	r1, [sp, #4]
 800b01a:	f7fe fea6 	bl	8009d6a <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 800b01e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b020:	6832      	ldr	r2, [r6, #0]
 800b022:	9901      	ldr	r1, [sp, #4]
 800b024:	2014      	movs	r0, #20
 800b026:	4293      	cmp	r3, r2
 800b028:	fb00 7003 	mla	r0, r0, r3, r7
 800b02c:	bf88      	it	hi
 800b02e:	6033      	strhi	r3, [r6, #0]
 800b030:	f7fe fe78 	bl	8009d24 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 800b034:	4b1a      	ldr	r3, [pc, #104]	; (800b0a0 <xTaskResumeAll+0xdc>)
 800b036:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b038:	681b      	ldr	r3, [r3, #0]
 800b03a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b03c:	429a      	cmp	r2, r3
 800b03e:	d302      	bcc.n	800b046 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 800b040:	4b18      	ldr	r3, [pc, #96]	; (800b0a4 <xTaskResumeAll+0xe0>)
 800b042:	2201      	movs	r2, #1
 800b044:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 800b046:	682b      	ldr	r3, [r5, #0]
 800b048:	2b00      	cmp	r3, #0
 800b04a:	d1dd      	bne.n	800b008 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 800b04c:	b10c      	cbz	r4, 800b052 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 800b04e:	f7ff fe01 	bl	800ac54 <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 800b052:	4d15      	ldr	r5, [pc, #84]	; (800b0a8 <xTaskResumeAll+0xe4>)
 800b054:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 800b056:	b144      	cbz	r4, 800b06a <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 800b058:	4e12      	ldr	r6, [pc, #72]	; (800b0a4 <xTaskResumeAll+0xe0>)
 800b05a:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 800b05c:	f7ff ff1c 	bl	800ae98 <xTaskIncrementTick>
 800b060:	b100      	cbz	r0, 800b064 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 800b062:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 800b064:	3c01      	subs	r4, #1
 800b066:	d1f9      	bne.n	800b05c <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 800b068:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 800b06a:	4b0e      	ldr	r3, [pc, #56]	; (800b0a4 <xTaskResumeAll+0xe0>)
 800b06c:	681b      	ldr	r3, [r3, #0]
 800b06e:	2b00      	cmp	r3, #0
 800b070:	d0bc      	beq.n	800afec <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 800b072:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b076:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b07a:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b07e:	f3bf 8f4f 	dsb	sy
 800b082:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 800b086:	2401      	movs	r4, #1
 800b088:	e7b1      	b.n	800afee <xTaskResumeAll+0x2a>
 800b08a:	bf00      	nop
 800b08c:	20011c80 	.word	0x20011c80
 800b090:	20011c78 	.word	0x20011c78
 800b094:	20011cc0 	.word	0x20011cc0
 800b098:	20011c88 	.word	0x20011c88
 800b09c:	20011818 	.word	0x20011818
 800b0a0:	2001180c 	.word	0x2001180c
 800b0a4:	20011d04 	.word	0x20011d04
 800b0a8:	20011cbc 	.word	0x20011cbc

0800b0ac <vTaskDelay>:
	{
 800b0ac:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 800b0ae:	b950      	cbnz	r0, 800b0c6 <vTaskDelay+0x1a>
			portYIELD_WITHIN_API();
 800b0b0:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b0b4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b0b8:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b0bc:	f3bf 8f4f 	dsb	sy
 800b0c0:	f3bf 8f6f 	isb	sy
	}
 800b0c4:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 800b0c6:	4b0a      	ldr	r3, [pc, #40]	; (800b0f0 <vTaskDelay+0x44>)
 800b0c8:	6819      	ldr	r1, [r3, #0]
 800b0ca:	b141      	cbz	r1, 800b0de <vTaskDelay+0x32>
 800b0cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b0d0:	f383 8811 	msr	BASEPRI, r3
 800b0d4:	f3bf 8f6f 	isb	sy
 800b0d8:	f3bf 8f4f 	dsb	sy
 800b0dc:	e7fe      	b.n	800b0dc <vTaskDelay+0x30>
			vTaskSuspendAll();
 800b0de:	f7ff fecd 	bl	800ae7c <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 800b0e2:	f7ff fd7f 	bl	800abe4 <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 800b0e6:	f7ff ff6d 	bl	800afc4 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 800b0ea:	2800      	cmp	r0, #0
 800b0ec:	d0e0      	beq.n	800b0b0 <vTaskDelay+0x4>
 800b0ee:	e7e9      	b.n	800b0c4 <vTaskDelay+0x18>
 800b0f0:	20011c80 	.word	0x20011c80

0800b0f4 <vTaskSetApplicationTaskTag>:
	{
 800b0f4:	b538      	push	{r3, r4, r5, lr}
 800b0f6:	460d      	mov	r5, r1
		if( xTask == NULL )
 800b0f8:	4604      	mov	r4, r0
 800b0fa:	b908      	cbnz	r0, 800b100 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 800b0fc:	4b04      	ldr	r3, [pc, #16]	; (800b110 <vTaskSetApplicationTaskTag+0x1c>)
 800b0fe:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 800b100:	f7fe feb0 	bl	8009e64 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 800b104:	6565      	str	r5, [r4, #84]	; 0x54
	}
 800b106:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 800b10a:	f7fe becb 	b.w	8009ea4 <vPortExitCritical>
 800b10e:	bf00      	nop
 800b110:	2001180c 	.word	0x2001180c

0800b114 <xTaskCallApplicationTaskHook>:
	{
 800b114:	4603      	mov	r3, r0
 800b116:	4608      	mov	r0, r1
		if( xTask == NULL )
 800b118:	b90b      	cbnz	r3, 800b11e <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 800b11a:	4b03      	ldr	r3, [pc, #12]	; (800b128 <xTaskCallApplicationTaskHook+0x14>)
 800b11c:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 800b11e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800b120:	b103      	cbz	r3, 800b124 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 800b122:	4718      	bx	r3
	}
 800b124:	4618      	mov	r0, r3
 800b126:	4770      	bx	lr
 800b128:	2001180c 	.word	0x2001180c

0800b12c <vTaskStartScheduler>:
{
 800b12c:	b510      	push	{r4, lr}
 800b12e:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 800b130:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800b132:	aa07      	add	r2, sp, #28
 800b134:	a906      	add	r1, sp, #24
 800b136:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 800b138:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800b13c:	f7fe fcd2 	bl	8009ae4 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 800b140:	9b05      	ldr	r3, [sp, #20]
 800b142:	9302      	str	r3, [sp, #8]
 800b144:	9b06      	ldr	r3, [sp, #24]
 800b146:	9a07      	ldr	r2, [sp, #28]
 800b148:	4919      	ldr	r1, [pc, #100]	; (800b1b0 <vTaskStartScheduler+0x84>)
 800b14a:	481a      	ldr	r0, [pc, #104]	; (800b1b4 <vTaskStartScheduler+0x88>)
 800b14c:	e9cd 4300 	strd	r4, r3, [sp]
 800b150:	4623      	mov	r3, r4
 800b152:	f7ff fe2e 	bl	800adb2 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 800b156:	b340      	cbz	r0, 800b1aa <vTaskStartScheduler+0x7e>
			xReturn = xTimerCreateTimerTask();
 800b158:	f000 fa8a 	bl	800b670 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800b15c:	2801      	cmp	r0, #1
 800b15e:	d119      	bne.n	800b194 <vTaskStartScheduler+0x68>
 800b160:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b164:	f383 8811 	msr	BASEPRI, r3
 800b168:	f3bf 8f6f 	isb	sy
 800b16c:	f3bf 8f4f 	dsb	sy
		xNextTaskUnblockTime = portMAX_DELAY;
 800b170:	4b11      	ldr	r3, [pc, #68]	; (800b1b8 <vTaskStartScheduler+0x8c>)
 800b172:	f04f 32ff 	mov.w	r2, #4294967295
 800b176:	601a      	str	r2, [r3, #0]
		xSchedulerRunning = pdTRUE;
 800b178:	4b10      	ldr	r3, [pc, #64]	; (800b1bc <vTaskStartScheduler+0x90>)
 800b17a:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 800b17c:	4b10      	ldr	r3, [pc, #64]	; (800b1c0 <vTaskStartScheduler+0x94>)
 800b17e:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 800b180:	4b10      	ldr	r3, [pc, #64]	; (800b1c4 <vTaskStartScheduler+0x98>)
 800b182:	4621      	mov	r1, r4
 800b184:	6818      	ldr	r0, [r3, #0]
 800b186:	f7ff ffc5 	bl	800b114 <xTaskCallApplicationTaskHook>
}
 800b18a:	b008      	add	sp, #32
 800b18c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
		if( xPortStartScheduler() != pdFALSE )
 800b190:	f7fe bef8 	b.w	8009f84 <xPortStartScheduler>
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800b194:	3001      	adds	r0, #1
 800b196:	d108      	bne.n	800b1aa <vTaskStartScheduler+0x7e>
 800b198:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b19c:	f383 8811 	msr	BASEPRI, r3
 800b1a0:	f3bf 8f6f 	isb	sy
 800b1a4:	f3bf 8f4f 	dsb	sy
 800b1a8:	e7fe      	b.n	800b1a8 <vTaskStartScheduler+0x7c>
}
 800b1aa:	b008      	add	sp, #32
 800b1ac:	bd10      	pop	{r4, pc}
 800b1ae:	bf00      	nop
 800b1b0:	08023449 	.word	0x08023449
 800b1b4:	0800acb1 	.word	0x0800acb1
 800b1b8:	20011cb4 	.word	0x20011cb4
 800b1bc:	20011cd4 	.word	0x20011cd4
 800b1c0:	20011d00 	.word	0x20011d00
 800b1c4:	2001180c 	.word	0x2001180c

0800b1c8 <vTaskSwitchContext>:
{
 800b1c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 800b1ca:	4b1c      	ldr	r3, [pc, #112]	; (800b23c <vTaskSwitchContext+0x74>)
 800b1cc:	681a      	ldr	r2, [r3, #0]
 800b1ce:	4b1c      	ldr	r3, [pc, #112]	; (800b240 <vTaskSwitchContext+0x78>)
 800b1d0:	b112      	cbz	r2, 800b1d8 <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 800b1d2:	2201      	movs	r2, #1
 800b1d4:	601a      	str	r2, [r3, #0]
}
 800b1d6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 800b1d8:	4c1a      	ldr	r4, [pc, #104]	; (800b244 <vTaskSwitchContext+0x7c>)
		xYieldPending = pdFALSE;
 800b1da:	601a      	str	r2, [r3, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b1dc:	4e1a      	ldr	r6, [pc, #104]	; (800b248 <vTaskSwitchContext+0x80>)
		traceTASK_SWITCHED_OUT();
 800b1de:	6820      	ldr	r0, [r4, #0]
 800b1e0:	2101      	movs	r1, #1
 800b1e2:	f7ff ff97 	bl	800b114 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b1e6:	6832      	ldr	r2, [r6, #0]
 800b1e8:	4918      	ldr	r1, [pc, #96]	; (800b24c <vTaskSwitchContext+0x84>)
 800b1ea:	2714      	movs	r7, #20
 800b1ec:	fb07 f302 	mul.w	r3, r7, r2
 800b1f0:	18c8      	adds	r0, r1, r3
 800b1f2:	58cd      	ldr	r5, [r1, r3]
 800b1f4:	b1ad      	cbz	r5, 800b222 <vTaskSwitchContext+0x5a>
 800b1f6:	6845      	ldr	r5, [r0, #4]
 800b1f8:	3308      	adds	r3, #8
 800b1fa:	686d      	ldr	r5, [r5, #4]
 800b1fc:	6045      	str	r5, [r0, #4]
 800b1fe:	440b      	add	r3, r1
 800b200:	429d      	cmp	r5, r3
 800b202:	bf04      	itt	eq
 800b204:	686b      	ldreq	r3, [r5, #4]
 800b206:	6043      	streq	r3, [r0, #4]
 800b208:	2314      	movs	r3, #20
 800b20a:	fb03 1102 	mla	r1, r3, r2, r1
 800b20e:	684b      	ldr	r3, [r1, #4]
 800b210:	68db      	ldr	r3, [r3, #12]
 800b212:	6023      	str	r3, [r4, #0]
 800b214:	6032      	str	r2, [r6, #0]
		traceTASK_SWITCHED_IN();
 800b216:	6820      	ldr	r0, [r4, #0]
 800b218:	2100      	movs	r1, #0
}
 800b21a:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
		traceTASK_SWITCHED_IN();
 800b21e:	f7ff bf79 	b.w	800b114 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b222:	b942      	cbnz	r2, 800b236 <vTaskSwitchContext+0x6e>
 800b224:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b228:	f383 8811 	msr	BASEPRI, r3
 800b22c:	f3bf 8f6f 	isb	sy
 800b230:	f3bf 8f4f 	dsb	sy
 800b234:	e7fe      	b.n	800b234 <vTaskSwitchContext+0x6c>
 800b236:	3a01      	subs	r2, #1
 800b238:	e7d8      	b.n	800b1ec <vTaskSwitchContext+0x24>
 800b23a:	bf00      	nop
 800b23c:	20011c80 	.word	0x20011c80
 800b240:	20011d04 	.word	0x20011d04
 800b244:	2001180c 	.word	0x2001180c
 800b248:	20011c88 	.word	0x20011c88
 800b24c:	20011818 	.word	0x20011818

0800b250 <vTaskPlaceOnEventList>:
{
 800b250:	b510      	push	{r4, lr}
 800b252:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 800b254:	b940      	cbnz	r0, 800b268 <vTaskPlaceOnEventList+0x18>
 800b256:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b25a:	f383 8811 	msr	BASEPRI, r3
 800b25e:	f3bf 8f6f 	isb	sy
 800b262:	f3bf 8f4f 	dsb	sy
 800b266:	e7fe      	b.n	800b266 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800b268:	4b05      	ldr	r3, [pc, #20]	; (800b280 <vTaskPlaceOnEventList+0x30>)
 800b26a:	6819      	ldr	r1, [r3, #0]
 800b26c:	3118      	adds	r1, #24
 800b26e:	f7fe fd65 	bl	8009d3c <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800b272:	4620      	mov	r0, r4
 800b274:	2101      	movs	r1, #1
}
 800b276:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800b27a:	f7ff bcb3 	b.w	800abe4 <prvAddCurrentTaskToDelayedList>
 800b27e:	bf00      	nop
 800b280:	2001180c 	.word	0x2001180c

0800b284 <vTaskPlaceOnEventListRestricted>:
	{
 800b284:	b538      	push	{r3, r4, r5, lr}
 800b286:	460d      	mov	r5, r1
 800b288:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800b28a:	b940      	cbnz	r0, 800b29e <vTaskPlaceOnEventListRestricted+0x1a>
 800b28c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b290:	f383 8811 	msr	BASEPRI, r3
 800b294:	f3bf 8f6f 	isb	sy
 800b298:	f3bf 8f4f 	dsb	sy
 800b29c:	e7fe      	b.n	800b29c <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 800b29e:	4b07      	ldr	r3, [pc, #28]	; (800b2bc <vTaskPlaceOnEventListRestricted+0x38>)
 800b2a0:	6819      	ldr	r1, [r3, #0]
 800b2a2:	3118      	adds	r1, #24
 800b2a4:	f7fe fd3e 	bl	8009d24 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 800b2a8:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800b2aa:	4621      	mov	r1, r4
 800b2ac:	bf0c      	ite	eq
 800b2ae:	4628      	moveq	r0, r5
 800b2b0:	f04f 30ff 	movne.w	r0, #4294967295
	}
 800b2b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 800b2b8:	f7ff bc94 	b.w	800abe4 <prvAddCurrentTaskToDelayedList>
 800b2bc:	2001180c 	.word	0x2001180c

0800b2c0 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b2c0:	68c3      	ldr	r3, [r0, #12]
{
 800b2c2:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b2c4:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 800b2c6:	b944      	cbnz	r4, 800b2da <xTaskRemoveFromEventList+0x1a>
 800b2c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b2cc:	f383 8811 	msr	BASEPRI, r3
 800b2d0:	f3bf 8f6f 	isb	sy
 800b2d4:	f3bf 8f4f 	dsb	sy
 800b2d8:	e7fe      	b.n	800b2d8 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 800b2da:	f104 0118 	add.w	r1, r4, #24
 800b2de:	4608      	mov	r0, r1
 800b2e0:	9101      	str	r1, [sp, #4]
 800b2e2:	f7fe fd42 	bl	8009d6a <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b2e6:	4b12      	ldr	r3, [pc, #72]	; (800b330 <xTaskRemoveFromEventList+0x70>)
 800b2e8:	9901      	ldr	r1, [sp, #4]
 800b2ea:	681b      	ldr	r3, [r3, #0]
 800b2ec:	b9eb      	cbnz	r3, 800b32a <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 800b2ee:	1d21      	adds	r1, r4, #4
 800b2f0:	4608      	mov	r0, r1
 800b2f2:	9101      	str	r1, [sp, #4]
 800b2f4:	f7fe fd39 	bl	8009d6a <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 800b2f8:	4a0e      	ldr	r2, [pc, #56]	; (800b334 <xTaskRemoveFromEventList+0x74>)
 800b2fa:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b2fc:	6810      	ldr	r0, [r2, #0]
 800b2fe:	9901      	ldr	r1, [sp, #4]
 800b300:	4283      	cmp	r3, r0
 800b302:	bf88      	it	hi
 800b304:	6013      	strhi	r3, [r2, #0]
 800b306:	4a0c      	ldr	r2, [pc, #48]	; (800b338 <xTaskRemoveFromEventList+0x78>)
 800b308:	2014      	movs	r0, #20
 800b30a:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800b30e:	f7fe fd09 	bl	8009d24 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 800b312:	4b0a      	ldr	r3, [pc, #40]	; (800b33c <xTaskRemoveFromEventList+0x7c>)
 800b314:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800b316:	681b      	ldr	r3, [r3, #0]
 800b318:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b31a:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800b31c:	bf85      	ittet	hi
 800b31e:	4b08      	ldrhi	r3, [pc, #32]	; (800b340 <xTaskRemoveFromEventList+0x80>)
 800b320:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 800b322:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 800b324:	6018      	strhi	r0, [r3, #0]
}
 800b326:	b002      	add	sp, #8
 800b328:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800b32a:	4806      	ldr	r0, [pc, #24]	; (800b344 <xTaskRemoveFromEventList+0x84>)
 800b32c:	e7ef      	b.n	800b30e <xTaskRemoveFromEventList+0x4e>
 800b32e:	bf00      	nop
 800b330:	20011c80 	.word	0x20011c80
 800b334:	20011c88 	.word	0x20011c88
 800b338:	20011818 	.word	0x20011818
 800b33c:	2001180c 	.word	0x2001180c
 800b340:	20011d04 	.word	0x20011d04
 800b344:	20011cc0 	.word	0x20011cc0

0800b348 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 800b348:	4b03      	ldr	r3, [pc, #12]	; (800b358 <vTaskInternalSetTimeOutState+0x10>)
 800b34a:	681b      	ldr	r3, [r3, #0]
 800b34c:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800b34e:	4b03      	ldr	r3, [pc, #12]	; (800b35c <vTaskInternalSetTimeOutState+0x14>)
 800b350:	681b      	ldr	r3, [r3, #0]
 800b352:	6043      	str	r3, [r0, #4]
}
 800b354:	4770      	bx	lr
 800b356:	bf00      	nop
 800b358:	20011cb8 	.word	0x20011cb8
 800b35c:	20011d00 	.word	0x20011d00

0800b360 <xTaskCheckForTimeOut>:
{
 800b360:	b570      	push	{r4, r5, r6, lr}
 800b362:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 800b364:	4605      	mov	r5, r0
 800b366:	b940      	cbnz	r0, 800b37a <xTaskCheckForTimeOut+0x1a>
 800b368:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b36c:	f383 8811 	msr	BASEPRI, r3
 800b370:	f3bf 8f6f 	isb	sy
 800b374:	f3bf 8f4f 	dsb	sy
 800b378:	e7fe      	b.n	800b378 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800b37a:	b941      	cbnz	r1, 800b38e <xTaskCheckForTimeOut+0x2e>
 800b37c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b380:	f383 8811 	msr	BASEPRI, r3
 800b384:	f3bf 8f6f 	isb	sy
 800b388:	f3bf 8f4f 	dsb	sy
 800b38c:	e7fe      	b.n	800b38c <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800b38e:	f7fe fd69 	bl	8009e64 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 800b392:	4b0f      	ldr	r3, [pc, #60]	; (800b3d0 <xTaskCheckForTimeOut+0x70>)
 800b394:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 800b396:	6823      	ldr	r3, [r4, #0]
 800b398:	1c5a      	adds	r2, r3, #1
 800b39a:	d010      	beq.n	800b3be <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800b39c:	480d      	ldr	r0, [pc, #52]	; (800b3d4 <xTaskCheckForTimeOut+0x74>)
 800b39e:	682e      	ldr	r6, [r5, #0]
 800b3a0:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800b3a2:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 800b3a4:	4286      	cmp	r6, r0
 800b3a6:	d001      	beq.n	800b3ac <xTaskCheckForTimeOut+0x4c>
 800b3a8:	428a      	cmp	r2, r1
 800b3aa:	d90f      	bls.n	800b3cc <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 800b3ac:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 800b3ae:	4283      	cmp	r3, r0
 800b3b0:	d90a      	bls.n	800b3c8 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 800b3b2:	1a5b      	subs	r3, r3, r1
 800b3b4:	4413      	add	r3, r2
 800b3b6:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 800b3b8:	4628      	mov	r0, r5
 800b3ba:	f7ff ffc5 	bl	800b348 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 800b3be:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 800b3c0:	f7fe fd70 	bl	8009ea4 <vPortExitCritical>
}
 800b3c4:	4620      	mov	r0, r4
 800b3c6:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 800b3c8:	2300      	movs	r3, #0
 800b3ca:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 800b3cc:	2401      	movs	r4, #1
 800b3ce:	e7f7      	b.n	800b3c0 <xTaskCheckForTimeOut+0x60>
 800b3d0:	20011d00 	.word	0x20011d00
 800b3d4:	20011cb8 	.word	0x20011cb8

0800b3d8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 800b3d8:	4b01      	ldr	r3, [pc, #4]	; (800b3e0 <vTaskMissedYield+0x8>)
 800b3da:	2201      	movs	r2, #1
 800b3dc:	601a      	str	r2, [r3, #0]
}
 800b3de:	4770      	bx	lr
 800b3e0:	20011d04 	.word	0x20011d04

0800b3e4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 800b3e4:	4b05      	ldr	r3, [pc, #20]	; (800b3fc <xTaskGetSchedulerState+0x18>)
 800b3e6:	681b      	ldr	r3, [r3, #0]
 800b3e8:	b133      	cbz	r3, 800b3f8 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 800b3ea:	4b05      	ldr	r3, [pc, #20]	; (800b400 <xTaskGetSchedulerState+0x1c>)
 800b3ec:	681b      	ldr	r3, [r3, #0]
				xReturn = taskSCHEDULER_SUSPENDED;
 800b3ee:	2b00      	cmp	r3, #0
 800b3f0:	bf0c      	ite	eq
 800b3f2:	2002      	moveq	r0, #2
 800b3f4:	2000      	movne	r0, #0
 800b3f6:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 800b3f8:	2001      	movs	r0, #1
	}
 800b3fa:	4770      	bx	lr
 800b3fc:	20011cd4 	.word	0x20011cd4
 800b400:	20011c80 	.word	0x20011c80

0800b404 <xTaskPriorityInherit>:
	{
 800b404:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 800b406:	4604      	mov	r4, r0
 800b408:	b348      	cbz	r0, 800b45e <xTaskPriorityInherit+0x5a>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800b40a:	4d1c      	ldr	r5, [pc, #112]	; (800b47c <xTaskPriorityInherit+0x78>)
 800b40c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800b40e:	682a      	ldr	r2, [r5, #0]
 800b410:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800b412:	4293      	cmp	r3, r2
 800b414:	d229      	bcs.n	800b46a <xTaskPriorityInherit+0x66>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800b416:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800b418:	4e19      	ldr	r6, [pc, #100]	; (800b480 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800b41a:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b41c:	bfa1      	itttt	ge
 800b41e:	682a      	ldrge	r2, [r5, #0]
 800b420:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 800b422:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 800b426:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800b428:	2214      	movs	r2, #20
 800b42a:	fb02 6303 	mla	r3, r2, r3, r6
 800b42e:	6942      	ldr	r2, [r0, #20]
 800b430:	429a      	cmp	r2, r3
 800b432:	d116      	bne.n	800b462 <xTaskPriorityInherit+0x5e>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b434:	1d01      	adds	r1, r0, #4
 800b436:	4608      	mov	r0, r1
 800b438:	9101      	str	r1, [sp, #4]
 800b43a:	f7fe fc96 	bl	8009d6a <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b43e:	682b      	ldr	r3, [r5, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800b440:	4a10      	ldr	r2, [pc, #64]	; (800b484 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b442:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800b444:	6810      	ldr	r0, [r2, #0]
 800b446:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b448:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800b44a:	4283      	cmp	r3, r0
 800b44c:	f04f 0014 	mov.w	r0, #20
 800b450:	fb00 6003 	mla	r0, r0, r3, r6
 800b454:	bf88      	it	hi
 800b456:	6013      	strhi	r3, [r2, #0]
 800b458:	f7fe fc64 	bl	8009d24 <vListInsertEnd>
				xReturn = pdTRUE;
 800b45c:	2001      	movs	r0, #1
	}
 800b45e:	b002      	add	sp, #8
 800b460:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800b462:	682b      	ldr	r3, [r5, #0]
 800b464:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800b466:	62c3      	str	r3, [r0, #44]	; 0x2c
 800b468:	e7f8      	b.n	800b45c <xTaskPriorityInherit+0x58>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800b46a:	682b      	ldr	r3, [r5, #0]
 800b46c:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800b46e:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 800b470:	42a0      	cmp	r0, r4
 800b472:	bf2c      	ite	cs
 800b474:	2000      	movcs	r0, #0
 800b476:	2001      	movcc	r0, #1
 800b478:	e7f1      	b.n	800b45e <xTaskPriorityInherit+0x5a>
 800b47a:	bf00      	nop
 800b47c:	2001180c 	.word	0x2001180c
 800b480:	20011818 	.word	0x20011818
 800b484:	20011c88 	.word	0x20011c88

0800b488 <xTaskPriorityDisinherit>:
	{
 800b488:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800b48a:	b910      	cbnz	r0, 800b492 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800b48c:	2000      	movs	r0, #0
	}
 800b48e:	b002      	add	sp, #8
 800b490:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 800b492:	4b1c      	ldr	r3, [pc, #112]	; (800b504 <xTaskPriorityDisinherit+0x7c>)
 800b494:	681c      	ldr	r4, [r3, #0]
 800b496:	4284      	cmp	r4, r0
 800b498:	d008      	beq.n	800b4ac <xTaskPriorityDisinherit+0x24>
 800b49a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b49e:	f383 8811 	msr	BASEPRI, r3
 800b4a2:	f3bf 8f6f 	isb	sy
 800b4a6:	f3bf 8f4f 	dsb	sy
 800b4aa:	e7fe      	b.n	800b4aa <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 800b4ac:	6d23      	ldr	r3, [r4, #80]	; 0x50
 800b4ae:	b943      	cbnz	r3, 800b4c2 <xTaskPriorityDisinherit+0x3a>
 800b4b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b4b4:	f383 8811 	msr	BASEPRI, r3
 800b4b8:	f3bf 8f6f 	isb	sy
 800b4bc:	f3bf 8f4f 	dsb	sy
 800b4c0:	e7fe      	b.n	800b4c0 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800b4c2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800b4c4:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 800b4c6:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800b4c8:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 800b4ca:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 800b4cc:	d0de      	beq.n	800b48c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 800b4ce:	2b00      	cmp	r3, #0
 800b4d0:	d1dc      	bne.n	800b48c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b4d2:	1d21      	adds	r1, r4, #4
 800b4d4:	4608      	mov	r0, r1
 800b4d6:	9101      	str	r1, [sp, #4]
 800b4d8:	f7fe fc47 	bl	8009d6a <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800b4dc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 800b4de:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 800b4e0:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b4e2:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800b4e6:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 800b4e8:	4a07      	ldr	r2, [pc, #28]	; (800b508 <xTaskPriorityDisinherit+0x80>)
 800b4ea:	6810      	ldr	r0, [r2, #0]
 800b4ec:	4283      	cmp	r3, r0
 800b4ee:	bf88      	it	hi
 800b4f0:	6013      	strhi	r3, [r2, #0]
 800b4f2:	4a06      	ldr	r2, [pc, #24]	; (800b50c <xTaskPriorityDisinherit+0x84>)
 800b4f4:	2014      	movs	r0, #20
 800b4f6:	fb00 2003 	mla	r0, r0, r3, r2
 800b4fa:	f7fe fc13 	bl	8009d24 <vListInsertEnd>
					xReturn = pdTRUE;
 800b4fe:	2001      	movs	r0, #1
		return xReturn;
 800b500:	e7c5      	b.n	800b48e <xTaskPriorityDisinherit+0x6>
 800b502:	bf00      	nop
 800b504:	2001180c 	.word	0x2001180c
 800b508:	20011c88 	.word	0x20011c88
 800b50c:	20011818 	.word	0x20011818

0800b510 <vTaskPriorityDisinheritAfterTimeout>:
	{
 800b510:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 800b512:	4604      	mov	r4, r0
 800b514:	2800      	cmp	r0, #0
 800b516:	d044      	beq.n	800b5a2 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 800b518:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800b51a:	b942      	cbnz	r2, 800b52e <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800b51c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b520:	f383 8811 	msr	BASEPRI, r3
 800b524:	f3bf 8f6f 	isb	sy
 800b528:	f3bf 8f4f 	dsb	sy
 800b52c:	e7fe      	b.n	800b52c <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800b52e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 800b530:	4299      	cmp	r1, r3
 800b532:	bf38      	it	cc
 800b534:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 800b536:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800b538:	428b      	cmp	r3, r1
 800b53a:	d032      	beq.n	800b5a2 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800b53c:	2a01      	cmp	r2, #1
 800b53e:	d130      	bne.n	800b5a2 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 800b540:	4a19      	ldr	r2, [pc, #100]	; (800b5a8 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 800b542:	6812      	ldr	r2, [r2, #0]
 800b544:	4282      	cmp	r2, r0
 800b546:	d108      	bne.n	800b55a <vTaskPriorityDisinheritAfterTimeout+0x4a>
 800b548:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b54c:	f383 8811 	msr	BASEPRI, r3
 800b550:	f3bf 8f6f 	isb	sy
 800b554:	f3bf 8f4f 	dsb	sy
 800b558:	e7fe      	b.n	800b558 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800b55a:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800b55c:	4d13      	ldr	r5, [pc, #76]	; (800b5ac <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800b55e:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800b560:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800b562:	f04f 0214 	mov.w	r2, #20
 800b566:	fb02 5303 	mla	r3, r2, r3, r5
 800b56a:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b56c:	bfa4      	itt	ge
 800b56e:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 800b572:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800b574:	429a      	cmp	r2, r3
 800b576:	d114      	bne.n	800b5a2 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 800b578:	1d01      	adds	r1, r0, #4
 800b57a:	4608      	mov	r0, r1
 800b57c:	9101      	str	r1, [sp, #4]
 800b57e:	f7fe fbf4 	bl	8009d6a <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 800b582:	4a0b      	ldr	r2, [pc, #44]	; (800b5b0 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 800b584:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800b586:	6810      	ldr	r0, [r2, #0]
 800b588:	9901      	ldr	r1, [sp, #4]
 800b58a:	4283      	cmp	r3, r0
 800b58c:	f04f 0014 	mov.w	r0, #20
 800b590:	fb00 5003 	mla	r0, r0, r3, r5
 800b594:	bf88      	it	hi
 800b596:	6013      	strhi	r3, [r2, #0]
	}
 800b598:	b003      	add	sp, #12
 800b59a:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 800b59e:	f7fe bbc1 	b.w	8009d24 <vListInsertEnd>
	}
 800b5a2:	b003      	add	sp, #12
 800b5a4:	bd30      	pop	{r4, r5, pc}
 800b5a6:	bf00      	nop
 800b5a8:	2001180c 	.word	0x2001180c
 800b5ac:	20011818 	.word	0x20011818
 800b5b0:	20011c88 	.word	0x20011c88

0800b5b4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 800b5b4:	4b04      	ldr	r3, [pc, #16]	; (800b5c8 <pvTaskIncrementMutexHeldCount+0x14>)
 800b5b6:	681a      	ldr	r2, [r3, #0]
 800b5b8:	b11a      	cbz	r2, 800b5c2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 800b5ba:	6819      	ldr	r1, [r3, #0]
 800b5bc:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 800b5be:	3201      	adds	r2, #1
 800b5c0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 800b5c2:	6818      	ldr	r0, [r3, #0]
	}
 800b5c4:	4770      	bx	lr
 800b5c6:	bf00      	nop
 800b5c8:	2001180c 	.word	0x2001180c

0800b5cc <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 800b5cc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 800b5ce:	4c11      	ldr	r4, [pc, #68]	; (800b614 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 800b5d0:	f7fe fc48 	bl	8009e64 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 800b5d4:	6825      	ldr	r5, [r4, #0]
 800b5d6:	b9bd      	cbnz	r5, 800b608 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 800b5d8:	4f0f      	ldr	r7, [pc, #60]	; (800b618 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 800b5da:	4e10      	ldr	r6, [pc, #64]	; (800b61c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 800b5dc:	4638      	mov	r0, r7
 800b5de:	f7fe fb93 	bl	8009d08 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 800b5e2:	4630      	mov	r0, r6
 800b5e4:	f7fe fb90 	bl	8009d08 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 800b5e8:	4b0d      	ldr	r3, [pc, #52]	; (800b620 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800b5ea:	4a0e      	ldr	r2, [pc, #56]	; (800b624 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 800b5ec:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 800b5ee:	4b0e      	ldr	r3, [pc, #56]	; (800b628 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800b5f0:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 800b5f2:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 800b5f4:	200a      	movs	r0, #10
 800b5f6:	4b0d      	ldr	r3, [pc, #52]	; (800b62c <prvCheckForValidListAndQueue+0x60>)
 800b5f8:	9500      	str	r5, [sp, #0]
 800b5fa:	f7fe fe44 	bl	800a286 <xQueueGenericCreateStatic>
 800b5fe:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 800b600:	b110      	cbz	r0, 800b608 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 800b602:	490b      	ldr	r1, [pc, #44]	; (800b630 <prvCheckForValidListAndQueue+0x64>)
 800b604:	f7ff fa0e 	bl	800aa24 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 800b608:	b003      	add	sp, #12
 800b60a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800b60e:	f7fe bc49 	b.w	8009ea4 <vPortExitCritical>
 800b612:	bf00      	nop
 800b614:	20011e2c 	.word	0x20011e2c
 800b618:	20011db0 	.word	0x20011db0
 800b61c:	20011dc4 	.word	0x20011dc4
 800b620:	20011d08 	.word	0x20011d08
 800b624:	20011d10 	.word	0x20011d10
 800b628:	20011d0c 	.word	0x20011d0c
 800b62c:	20011ddc 	.word	0x20011ddc
 800b630:	0802344e 	.word	0x0802344e

0800b634 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 800b634:	4291      	cmp	r1, r2
{
 800b636:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 800b638:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800b63a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800b63c:	d80a      	bhi.n	800b654 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800b63e:	1ad2      	subs	r2, r2, r3
 800b640:	6983      	ldr	r3, [r0, #24]
 800b642:	429a      	cmp	r2, r3
 800b644:	d20d      	bcs.n	800b662 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 800b646:	4b08      	ldr	r3, [pc, #32]	; (800b668 <prvInsertTimerInActiveList+0x34>)
 800b648:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b64a:	6818      	ldr	r0, [r3, #0]
 800b64c:	f7fe fb76 	bl	8009d3c <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 800b650:	2000      	movs	r0, #0
}
 800b652:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 800b654:	429a      	cmp	r2, r3
 800b656:	d201      	bcs.n	800b65c <prvInsertTimerInActiveList+0x28>
 800b658:	4299      	cmp	r1, r3
 800b65a:	d202      	bcs.n	800b662 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b65c:	4b03      	ldr	r3, [pc, #12]	; (800b66c <prvInsertTimerInActiveList+0x38>)
 800b65e:	1d01      	adds	r1, r0, #4
 800b660:	e7f3      	b.n	800b64a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 800b662:	2001      	movs	r0, #1
	return xProcessTimerNow;
 800b664:	e7f5      	b.n	800b652 <prvInsertTimerInActiveList+0x1e>
 800b666:	bf00      	nop
 800b668:	20011d0c 	.word	0x20011d0c
 800b66c:	20011d08 	.word	0x20011d08

0800b670 <xTimerCreateTimerTask>:
{
 800b670:	b510      	push	{r4, lr}
 800b672:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 800b674:	f7ff ffaa 	bl	800b5cc <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 800b678:	4b12      	ldr	r3, [pc, #72]	; (800b6c4 <xTimerCreateTimerTask+0x54>)
 800b67a:	681b      	ldr	r3, [r3, #0]
 800b67c:	b1b3      	cbz	r3, 800b6ac <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800b67e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800b680:	aa07      	add	r2, sp, #28
 800b682:	a906      	add	r1, sp, #24
 800b684:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 800b686:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800b68a:	f7fe fa37 	bl	8009afc <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800b68e:	9b05      	ldr	r3, [sp, #20]
 800b690:	9302      	str	r3, [sp, #8]
 800b692:	9b06      	ldr	r3, [sp, #24]
 800b694:	9301      	str	r3, [sp, #4]
 800b696:	2302      	movs	r3, #2
 800b698:	9300      	str	r3, [sp, #0]
 800b69a:	9a07      	ldr	r2, [sp, #28]
 800b69c:	490a      	ldr	r1, [pc, #40]	; (800b6c8 <xTimerCreateTimerTask+0x58>)
 800b69e:	480b      	ldr	r0, [pc, #44]	; (800b6cc <xTimerCreateTimerTask+0x5c>)
 800b6a0:	4623      	mov	r3, r4
 800b6a2:	f7ff fb86 	bl	800adb2 <xTaskCreateStatic>
 800b6a6:	4b0a      	ldr	r3, [pc, #40]	; (800b6d0 <xTimerCreateTimerTask+0x60>)
 800b6a8:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 800b6aa:	b940      	cbnz	r0, 800b6be <xTimerCreateTimerTask+0x4e>
 800b6ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b6b0:	f383 8811 	msr	BASEPRI, r3
 800b6b4:	f3bf 8f6f 	isb	sy
 800b6b8:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 800b6bc:	e7fe      	b.n	800b6bc <xTimerCreateTimerTask+0x4c>
}
 800b6be:	2001      	movs	r0, #1
 800b6c0:	b008      	add	sp, #32
 800b6c2:	bd10      	pop	{r4, pc}
 800b6c4:	20011e2c 	.word	0x20011e2c
 800b6c8:	08023453 	.word	0x08023453
 800b6cc:	0800b7d9 	.word	0x0800b7d9
 800b6d0:	20011e30 	.word	0x20011e30

0800b6d4 <xTimerGenericCommand>:
{
 800b6d4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800b6d6:	4616      	mov	r6, r2
	configASSERT( xTimer );
 800b6d8:	4604      	mov	r4, r0
{
 800b6da:	461a      	mov	r2, r3
	configASSERT( xTimer );
 800b6dc:	b940      	cbnz	r0, 800b6f0 <xTimerGenericCommand+0x1c>
 800b6de:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b6e2:	f383 8811 	msr	BASEPRI, r3
 800b6e6:	f3bf 8f6f 	isb	sy
 800b6ea:	f3bf 8f4f 	dsb	sy
 800b6ee:	e7fe      	b.n	800b6ee <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 800b6f0:	4d0d      	ldr	r5, [pc, #52]	; (800b728 <xTimerGenericCommand+0x54>)
 800b6f2:	6828      	ldr	r0, [r5, #0]
 800b6f4:	b180      	cbz	r0, 800b718 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800b6f6:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 800b6f8:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800b6fc:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800b6fe:	dc0d      	bgt.n	800b71c <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800b700:	f7ff fe70 	bl	800b3e4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800b704:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 800b706:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 800b708:	bf08      	it	eq
 800b70a:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800b70c:	6828      	ldr	r0, [r5, #0]
 800b70e:	bf18      	it	ne
 800b710:	461a      	movne	r2, r3
 800b712:	4669      	mov	r1, sp
 800b714:	f7fe fe6c 	bl	800a3f0 <xQueueGenericSend>
}
 800b718:	b004      	add	sp, #16
 800b71a:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800b71c:	2300      	movs	r3, #0
 800b71e:	4669      	mov	r1, sp
 800b720:	f7fe ff19 	bl	800a556 <xQueueGenericSendFromISR>
 800b724:	e7f8      	b.n	800b718 <xTimerGenericCommand+0x44>
 800b726:	bf00      	nop
 800b728:	20011e2c 	.word	0x20011e2c

0800b72c <prvSampleTimeNow>:
{
 800b72c:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
	if( xTimeNow < xLastTime )
 800b730:	f8df 80a0 	ldr.w	r8, [pc, #160]	; 800b7d4 <prvSampleTimeNow+0xa8>
{
 800b734:	4606      	mov	r6, r0
	xTimeNow = xTaskGetTickCount();
 800b736:	f7ff fba9 	bl	800ae8c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 800b73a:	f8d8 3000 	ldr.w	r3, [r8]
 800b73e:	4283      	cmp	r3, r0
	xTimeNow = xTaskGetTickCount();
 800b740:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 800b742:	d940      	bls.n	800b7c6 <prvSampleTimeNow+0x9a>
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800b744:	4f21      	ldr	r7, [pc, #132]	; (800b7cc <prvSampleTimeNow+0xa0>)
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800b746:	f04f 0900 	mov.w	r9, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800b74a:	683b      	ldr	r3, [r7, #0]
 800b74c:	681a      	ldr	r2, [r3, #0]
 800b74e:	b95a      	cbnz	r2, 800b768 <prvSampleTimeNow+0x3c>
	pxCurrentTimerList = pxOverflowTimerList;
 800b750:	4a1f      	ldr	r2, [pc, #124]	; (800b7d0 <prvSampleTimeNow+0xa4>)
 800b752:	6811      	ldr	r1, [r2, #0]
 800b754:	6039      	str	r1, [r7, #0]
	pxOverflowTimerList = pxTemp;
 800b756:	6013      	str	r3, [r2, #0]
		*pxTimerListsWereSwitched = pdTRUE;
 800b758:	2301      	movs	r3, #1
}
 800b75a:	4628      	mov	r0, r5
		*pxTimerListsWereSwitched = pdFALSE;
 800b75c:	6033      	str	r3, [r6, #0]
	xLastTime = xTimeNow;
 800b75e:	f8c8 5000 	str.w	r5, [r8]
}
 800b762:	b004      	add	sp, #16
 800b764:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800b768:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b76a:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800b76c:	f8d3 a000 	ldr.w	sl, [r3]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800b770:	1d21      	adds	r1, r4, #4
 800b772:	4608      	mov	r0, r1
 800b774:	9103      	str	r1, [sp, #12]
 800b776:	f7fe faf8 	bl	8009d6a <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800b77a:	6a23      	ldr	r3, [r4, #32]
 800b77c:	4620      	mov	r0, r4
 800b77e:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800b780:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800b784:	9903      	ldr	r1, [sp, #12]
 800b786:	f013 0f04 	tst.w	r3, #4
 800b78a:	d0de      	beq.n	800b74a <prvSampleTimeNow+0x1e>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 800b78c:	69a3      	ldr	r3, [r4, #24]
 800b78e:	4453      	add	r3, sl
			if( xReloadTime > xNextExpireTime )
 800b790:	459a      	cmp	sl, r3
 800b792:	d205      	bcs.n	800b7a0 <prvSampleTimeNow+0x74>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b794:	6838      	ldr	r0, [r7, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 800b796:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800b798:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800b79a:	f7fe facf 	bl	8009d3c <vListInsert>
 800b79e:	e7d4      	b.n	800b74a <prvSampleTimeNow+0x1e>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800b7a0:	2300      	movs	r3, #0
 800b7a2:	f8cd 9000 	str.w	r9, [sp]
 800b7a6:	4652      	mov	r2, sl
 800b7a8:	4619      	mov	r1, r3
 800b7aa:	4620      	mov	r0, r4
 800b7ac:	f7ff ff92 	bl	800b6d4 <xTimerGenericCommand>
				configASSERT( xResult );
 800b7b0:	2800      	cmp	r0, #0
 800b7b2:	d1ca      	bne.n	800b74a <prvSampleTimeNow+0x1e>
 800b7b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b7b8:	f383 8811 	msr	BASEPRI, r3
 800b7bc:	f3bf 8f6f 	isb	sy
 800b7c0:	f3bf 8f4f 	dsb	sy
 800b7c4:	e7fe      	b.n	800b7c4 <prvSampleTimeNow+0x98>
		*pxTimerListsWereSwitched = pdFALSE;
 800b7c6:	2300      	movs	r3, #0
 800b7c8:	e7c7      	b.n	800b75a <prvSampleTimeNow+0x2e>
 800b7ca:	bf00      	nop
 800b7cc:	20011d08 	.word	0x20011d08
 800b7d0:	20011d0c 	.word	0x20011d0c
 800b7d4:	20011dd8 	.word	0x20011dd8

0800b7d8 <prvTimerTask>:
{
 800b7d8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800b7dc:	4d6e      	ldr	r5, [pc, #440]	; (800b998 <prvTimerTask+0x1c0>)
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800b7de:	4e6f      	ldr	r6, [pc, #444]	; (800b99c <prvTimerTask+0x1c4>)
{
 800b7e0:	b089      	sub	sp, #36	; 0x24
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800b7e2:	682b      	ldr	r3, [r5, #0]
 800b7e4:	f8d3 8000 	ldr.w	r8, [r3]
 800b7e8:	f1b8 0f00 	cmp.w	r8, #0
 800b7ec:	d035      	beq.n	800b85a <prvTimerTask+0x82>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800b7ee:	68db      	ldr	r3, [r3, #12]
 800b7f0:	f8d3 8000 	ldr.w	r8, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800b7f4:	2400      	movs	r4, #0
	vTaskSuspendAll();
 800b7f6:	f7ff fb41 	bl	800ae7c <vTaskSuspendAll>
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800b7fa:	a804      	add	r0, sp, #16
 800b7fc:	f7ff ff96 	bl	800b72c <prvSampleTimeNow>
		if( xTimerListsWereSwitched == pdFALSE )
 800b800:	9b04      	ldr	r3, [sp, #16]
		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800b802:	4681      	mov	r9, r0
		if( xTimerListsWereSwitched == pdFALSE )
 800b804:	2b00      	cmp	r3, #0
 800b806:	d169      	bne.n	800b8dc <prvTimerTask+0x104>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800b808:	2c00      	cmp	r4, #0
 800b80a:	d14c      	bne.n	800b8a6 <prvTimerTask+0xce>
 800b80c:	4540      	cmp	r0, r8
 800b80e:	d350      	bcc.n	800b8b2 <prvTimerTask+0xda>
				( void ) xTaskResumeAll();
 800b810:	f7ff fbd8 	bl	800afc4 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 800b814:	682b      	ldr	r3, [r5, #0]
 800b816:	68db      	ldr	r3, [r3, #12]
 800b818:	68df      	ldr	r7, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800b81a:	1d38      	adds	r0, r7, #4
 800b81c:	f7fe faa5 	bl	8009d6a <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800b820:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800b824:	0758      	lsls	r0, r3, #29
 800b826:	d51a      	bpl.n	800b85e <prvTimerTask+0x86>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 800b828:	69b9      	ldr	r1, [r7, #24]
 800b82a:	4643      	mov	r3, r8
 800b82c:	464a      	mov	r2, r9
 800b82e:	4441      	add	r1, r8
 800b830:	4638      	mov	r0, r7
 800b832:	f7ff feff 	bl	800b634 <prvInsertTimerInActiveList>
 800b836:	b1b0      	cbz	r0, 800b866 <prvTimerTask+0x8e>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800b838:	9400      	str	r4, [sp, #0]
 800b83a:	4623      	mov	r3, r4
 800b83c:	4642      	mov	r2, r8
 800b83e:	4621      	mov	r1, r4
 800b840:	4638      	mov	r0, r7
 800b842:	f7ff ff47 	bl	800b6d4 <xTimerGenericCommand>
			configASSERT( xResult );
 800b846:	b970      	cbnz	r0, 800b866 <prvTimerTask+0x8e>
 800b848:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b84c:	f383 8811 	msr	BASEPRI, r3
 800b850:	f3bf 8f6f 	isb	sy
 800b854:	f3bf 8f4f 	dsb	sy
 800b858:	e7fe      	b.n	800b858 <prvTimerTask+0x80>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 800b85a:	2401      	movs	r4, #1
 800b85c:	e7cb      	b.n	800b7f6 <prvTimerTask+0x1e>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800b85e:	f023 0301 	bic.w	r3, r3, #1
 800b862:	f887 3028 	strb.w	r3, [r7, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800b866:	6a3b      	ldr	r3, [r7, #32]
 800b868:	4638      	mov	r0, r7
 800b86a:	4798      	blx	r3
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 800b86c:	6830      	ldr	r0, [r6, #0]
 800b86e:	2200      	movs	r2, #0
 800b870:	a904      	add	r1, sp, #16
 800b872:	f7fe ff26 	bl	800a6c2 <xQueueReceive>
 800b876:	2800      	cmp	r0, #0
 800b878:	d0b3      	beq.n	800b7e2 <prvTimerTask+0xa>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800b87a:	9b04      	ldr	r3, [sp, #16]
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800b87c:	9806      	ldr	r0, [sp, #24]
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 800b87e:	2b00      	cmp	r3, #0
 800b880:	db2f      	blt.n	800b8e2 <prvTimerTask+0x10a>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 800b882:	9c06      	ldr	r4, [sp, #24]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 800b884:	6963      	ldr	r3, [r4, #20]
 800b886:	2b00      	cmp	r3, #0
 800b888:	d132      	bne.n	800b8f0 <prvTimerTask+0x118>
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800b88a:	a803      	add	r0, sp, #12
 800b88c:	f7ff ff4e 	bl	800b72c <prvSampleTimeNow>
			switch( xMessage.xMessageID )
 800b890:	9b04      	ldr	r3, [sp, #16]
			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 800b892:	4602      	mov	r2, r0
			switch( xMessage.xMessageID )
 800b894:	2b09      	cmp	r3, #9
 800b896:	d8e9      	bhi.n	800b86c <prvTimerTask+0x94>
 800b898:	e8df f003 	tbb	[pc, r3]
 800b89c:	572e2e2e 	.word	0x572e2e2e
 800b8a0:	2e2e765e 	.word	0x2e2e765e
 800b8a4:	5e57      	.short	0x5e57
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 800b8a6:	4b3e      	ldr	r3, [pc, #248]	; (800b9a0 <prvTimerTask+0x1c8>)
 800b8a8:	681b      	ldr	r3, [r3, #0]
 800b8aa:	681c      	ldr	r4, [r3, #0]
 800b8ac:	fab4 f484 	clz	r4, r4
 800b8b0:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 800b8b2:	6830      	ldr	r0, [r6, #0]
 800b8b4:	4622      	mov	r2, r4
 800b8b6:	eba8 0109 	sub.w	r1, r8, r9
 800b8ba:	f7ff f8f0 	bl	800aa9e <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800b8be:	f7ff fb81 	bl	800afc4 <xTaskResumeAll>
 800b8c2:	2800      	cmp	r0, #0
 800b8c4:	d1d2      	bne.n	800b86c <prvTimerTask+0x94>
					portYIELD_WITHIN_API();
 800b8c6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 800b8ca:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800b8ce:	f8c3 2d04 	str.w	r2, [r3, #3332]	; 0xd04
 800b8d2:	f3bf 8f4f 	dsb	sy
 800b8d6:	f3bf 8f6f 	isb	sy
 800b8da:	e7c7      	b.n	800b86c <prvTimerTask+0x94>
			( void ) xTaskResumeAll();
 800b8dc:	f7ff fb72 	bl	800afc4 <xTaskResumeAll>
}
 800b8e0:	e7c4      	b.n	800b86c <prvTimerTask+0x94>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800b8e2:	9b05      	ldr	r3, [sp, #20]
 800b8e4:	9907      	ldr	r1, [sp, #28]
 800b8e6:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 800b8e8:	9b04      	ldr	r3, [sp, #16]
 800b8ea:	2b00      	cmp	r3, #0
 800b8ec:	dbbe      	blt.n	800b86c <prvTimerTask+0x94>
 800b8ee:	e7c8      	b.n	800b882 <prvTimerTask+0xaa>
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800b8f0:	1d20      	adds	r0, r4, #4
 800b8f2:	f7fe fa3a 	bl	8009d6a <uxListRemove>
 800b8f6:	e7c8      	b.n	800b88a <prvTimerTask+0xb2>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800b8f8:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800b8fc:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800b8fe:	f043 0301 	orr.w	r3, r3, #1
 800b902:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 800b906:	9b05      	ldr	r3, [sp, #20]
 800b908:	4620      	mov	r0, r4
 800b90a:	4419      	add	r1, r3
 800b90c:	f7ff fe92 	bl	800b634 <prvInsertTimerInActiveList>
 800b910:	2800      	cmp	r0, #0
 800b912:	d0ab      	beq.n	800b86c <prvTimerTask+0x94>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 800b914:	6a23      	ldr	r3, [r4, #32]
 800b916:	4620      	mov	r0, r4
 800b918:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800b91a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800b91e:	0759      	lsls	r1, r3, #29
 800b920:	d5a4      	bpl.n	800b86c <prvTimerTask+0x94>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 800b922:	69a2      	ldr	r2, [r4, #24]
 800b924:	9905      	ldr	r1, [sp, #20]
 800b926:	2300      	movs	r3, #0
 800b928:	440a      	add	r2, r1
 800b92a:	9300      	str	r3, [sp, #0]
 800b92c:	4619      	mov	r1, r3
 800b92e:	4620      	mov	r0, r4
 800b930:	f7ff fed0 	bl	800b6d4 <xTimerGenericCommand>
							configASSERT( xResult );
 800b934:	2800      	cmp	r0, #0
 800b936:	d199      	bne.n	800b86c <prvTimerTask+0x94>
 800b938:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b93c:	f383 8811 	msr	BASEPRI, r3
 800b940:	f3bf 8f6f 	isb	sy
 800b944:	f3bf 8f4f 	dsb	sy
 800b948:	e7fe      	b.n	800b948 <prvTimerTask+0x170>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800b94a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800b94e:	f023 0301 	bic.w	r3, r3, #1
 800b952:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800b956:	e789      	b.n	800b86c <prvTimerTask+0x94>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 800b958:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800b95c:	f043 0301 	orr.w	r3, r3, #1
 800b960:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800b964:	9905      	ldr	r1, [sp, #20]
 800b966:	61a1      	str	r1, [r4, #24]
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 800b968:	b941      	cbnz	r1, 800b97c <prvTimerTask+0x1a4>
 800b96a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800b96e:	f383 8811 	msr	BASEPRI, r3
 800b972:	f3bf 8f6f 	isb	sy
 800b976:	f3bf 8f4f 	dsb	sy
 800b97a:	e7fe      	b.n	800b97a <prvTimerTask+0x1a2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800b97c:	4603      	mov	r3, r0
 800b97e:	4401      	add	r1, r0
 800b980:	4620      	mov	r0, r4
 800b982:	f7ff fe57 	bl	800b634 <prvInsertTimerInActiveList>
					break;
 800b986:	e771      	b.n	800b86c <prvTimerTask+0x94>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800b988:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800b98c:	079a      	lsls	r2, r3, #30
 800b98e:	d4de      	bmi.n	800b94e <prvTimerTask+0x176>
							vPortFree( pxTimer );
 800b990:	4620      	mov	r0, r4
 800b992:	f7fe f97b 	bl	8009c8c <vPortFree>
 800b996:	e769      	b.n	800b86c <prvTimerTask+0x94>
 800b998:	20011d08 	.word	0x20011d08
 800b99c:	20011e2c 	.word	0x20011e2c
 800b9a0:	20011d0c 	.word	0x20011d0c

0800b9a4 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 800b9a4:	8880      	ldrh	r0, [r0, #4]
 800b9a6:	4770      	bx	lr

0800b9a8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 800b9a8:	b570      	push	{r4, r5, r6, lr}
 800b9aa:	6803      	ldr	r3, [r0, #0]
 800b9ac:	4605      	mov	r5, r0
 800b9ae:	460c      	mov	r4, r1
 800b9b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b9b2:	2100      	movs	r1, #0
 800b9b4:	4798      	blx	r3
 800b9b6:	682b      	ldr	r3, [r5, #0]
 800b9b8:	4606      	mov	r6, r0
 800b9ba:	6a1b      	ldr	r3, [r3, #32]
 800b9bc:	4628      	mov	r0, r5
 800b9be:	4798      	blx	r3
 800b9c0:	1ba4      	subs	r4, r4, r6
 800b9c2:	b2a4      	uxth	r4, r4
 800b9c4:	fbb4 f0f0 	udiv	r0, r4, r0
 800b9c8:	bd70      	pop	{r4, r5, r6, pc}

0800b9ca <_ZN8touchgfx17AbstractPartition5clearEv>:
 800b9ca:	2300      	movs	r3, #0
 800b9cc:	8083      	strh	r3, [r0, #4]
 800b9ce:	4770      	bx	lr

0800b9d0 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800b9d0:	b510      	push	{r4, lr}
 800b9d2:	6803      	ldr	r3, [r0, #0]
 800b9d4:	8881      	ldrh	r1, [r0, #4]
 800b9d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b9d8:	4604      	mov	r4, r0
 800b9da:	4798      	blx	r3
 800b9dc:	88a3      	ldrh	r3, [r4, #4]
 800b9de:	3301      	adds	r3, #1
 800b9e0:	80a3      	strh	r3, [r4, #4]
 800b9e2:	bd10      	pop	{r4, pc}

0800b9e4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 800b9e4:	6803      	ldr	r3, [r0, #0]
 800b9e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800b9e8:	4718      	bx	r3

0800b9ea <_ZN8touchgfx17AbstractPartitionD1Ev>:
 800b9ea:	4770      	bx	lr

0800b9ec <_ZN8touchgfx17AbstractPartitionC1Ev>:
 800b9ec:	4a02      	ldr	r2, [pc, #8]	; (800b9f8 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 800b9ee:	6002      	str	r2, [r0, #0]
 800b9f0:	2200      	movs	r2, #0
 800b9f2:	8082      	strh	r2, [r0, #4]
 800b9f4:	4770      	bx	lr
 800b9f6:	bf00      	nop
 800b9f8:	08023464 	.word	0x08023464

0800b9fc <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 800b9fc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800b9fe:	2000      	movs	r0, #0
 800ba00:	b12b      	cbz	r3, 800ba0e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800ba02:	b920      	cbnz	r0, 800ba0e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 800ba04:	1a5a      	subs	r2, r3, r1
 800ba06:	4250      	negs	r0, r2
 800ba08:	4150      	adcs	r0, r2
 800ba0a:	699b      	ldr	r3, [r3, #24]
 800ba0c:	e7f8      	b.n	800ba00 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 800ba0e:	4770      	bx	lr

0800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 800ba10:	2300      	movs	r3, #0
 800ba12:	6148      	str	r0, [r1, #20]
 800ba14:	618b      	str	r3, [r1, #24]
 800ba16:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ba18:	b913      	cbnz	r3, 800ba20 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 800ba1a:	6281      	str	r1, [r0, #40]	; 0x28
 800ba1c:	4770      	bx	lr
 800ba1e:	4613      	mov	r3, r2
 800ba20:	699a      	ldr	r2, [r3, #24]
 800ba22:	2a00      	cmp	r2, #0
 800ba24:	d1fb      	bne.n	800ba1e <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 800ba26:	6199      	str	r1, [r3, #24]
 800ba28:	4770      	bx	lr

0800ba2a <_ZN8touchgfx9Container9removeAllEv>:
 800ba2a:	2200      	movs	r2, #0
 800ba2c:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ba2e:	b123      	cbz	r3, 800ba3a <_ZN8touchgfx9Container9removeAllEv+0x10>
 800ba30:	6999      	ldr	r1, [r3, #24]
 800ba32:	6281      	str	r1, [r0, #40]	; 0x28
 800ba34:	e9c3 2205 	strd	r2, r2, [r3, #20]
 800ba38:	e7f8      	b.n	800ba2c <_ZN8touchgfx9Container9removeAllEv+0x2>
 800ba3a:	4770      	bx	lr

0800ba3c <_ZN8touchgfx9Container6unlinkEv>:
 800ba3c:	2300      	movs	r3, #0
 800ba3e:	6283      	str	r3, [r0, #40]	; 0x28
 800ba40:	4770      	bx	lr

0800ba42 <_ZNK8touchgfx9Container12getSolidRectEv>:
 800ba42:	2200      	movs	r2, #0
 800ba44:	8002      	strh	r2, [r0, #0]
 800ba46:	8042      	strh	r2, [r0, #2]
 800ba48:	8082      	strh	r2, [r0, #4]
 800ba4a:	80c2      	strh	r2, [r0, #6]
 800ba4c:	4770      	bx	lr

0800ba4e <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 800ba4e:	b570      	push	{r4, r5, r6, lr}
 800ba50:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ba52:	460d      	mov	r5, r1
 800ba54:	4616      	mov	r6, r2
 800ba56:	b13c      	cbz	r4, 800ba68 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 800ba58:	6823      	ldr	r3, [r4, #0]
 800ba5a:	4620      	mov	r0, r4
 800ba5c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800ba5e:	4632      	mov	r2, r6
 800ba60:	4629      	mov	r1, r5
 800ba62:	4798      	blx	r3
 800ba64:	69a4      	ldr	r4, [r4, #24]
 800ba66:	e7f6      	b.n	800ba56 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 800ba68:	bd70      	pop	{r4, r5, r6, pc}

0800ba6a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 800ba6a:	b538      	push	{r3, r4, r5, lr}
 800ba6c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800ba6e:	460d      	mov	r5, r1
 800ba70:	b134      	cbz	r4, 800ba80 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 800ba72:	682b      	ldr	r3, [r5, #0]
 800ba74:	4621      	mov	r1, r4
 800ba76:	689b      	ldr	r3, [r3, #8]
 800ba78:	4628      	mov	r0, r5
 800ba7a:	4798      	blx	r3
 800ba7c:	69a4      	ldr	r4, [r4, #24]
 800ba7e:	e7f7      	b.n	800ba70 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 800ba80:	bd38      	pop	{r3, r4, r5, pc}

0800ba82 <_ZN8touchgfx9ContainerD1Ev>:
 800ba82:	4770      	bx	lr

0800ba84 <_ZN8touchgfx9ContainerD0Ev>:
 800ba84:	b510      	push	{r4, lr}
 800ba86:	212c      	movs	r1, #44	; 0x2c
 800ba88:	4604      	mov	r4, r0
 800ba8a:	f014 fe11 	bl	80206b0 <_ZdlPvj>
 800ba8e:	4620      	mov	r0, r4
 800ba90:	bd10      	pop	{r4, pc}

0800ba92 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 800ba92:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800ba94:	b19b      	cbz	r3, 800babe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800ba96:	428b      	cmp	r3, r1
 800ba98:	d109      	bne.n	800baae <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 800ba9a:	699a      	ldr	r2, [r3, #24]
 800ba9c:	2100      	movs	r1, #0
 800ba9e:	6159      	str	r1, [r3, #20]
 800baa0:	6282      	str	r2, [r0, #40]	; 0x28
 800baa2:	b902      	cbnz	r2, 800baa6 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 800baa4:	4770      	bx	lr
 800baa6:	6199      	str	r1, [r3, #24]
 800baa8:	4770      	bx	lr
 800baaa:	4613      	mov	r3, r2
 800baac:	b13a      	cbz	r2, 800babe <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 800baae:	699a      	ldr	r2, [r3, #24]
 800bab0:	428a      	cmp	r2, r1
 800bab2:	d1fa      	bne.n	800baaa <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 800bab4:	698a      	ldr	r2, [r1, #24]
 800bab6:	619a      	str	r2, [r3, #24]
 800bab8:	2300      	movs	r3, #0
 800baba:	e9c1 3305 	strd	r3, r3, [r1, #20]
 800babe:	4770      	bx	lr

0800bac0 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 800bac0:	b410      	push	{r4}
 800bac2:	6a83      	ldr	r3, [r0, #40]	; 0x28
 800bac4:	4604      	mov	r4, r0
 800bac6:	b92b      	cbnz	r3, 800bad4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 800bac8:	6803      	ldr	r3, [r0, #0]
 800baca:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bace:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800bad0:	4611      	mov	r1, r2
 800bad2:	4718      	bx	r3
 800bad4:	b941      	cbnz	r1, 800bae8 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 800bad6:	6193      	str	r3, [r2, #24]
 800bad8:	6282      	str	r2, [r0, #40]	; 0x28
 800bada:	6154      	str	r4, [r2, #20]
 800badc:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bae0:	4770      	bx	lr
 800bae2:	4603      	mov	r3, r0
 800bae4:	2800      	cmp	r0, #0
 800bae6:	d0f9      	beq.n	800badc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 800bae8:	4299      	cmp	r1, r3
 800baea:	6998      	ldr	r0, [r3, #24]
 800baec:	d1f9      	bne.n	800bae2 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 800baee:	6190      	str	r0, [r2, #24]
 800baf0:	618a      	str	r2, [r1, #24]
 800baf2:	e7f2      	b.n	800bada <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

0800baf4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 800baf4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800baf8:	461f      	mov	r7, r3
 800bafa:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 800bafe:	460d      	mov	r5, r1
 800bb00:	4616      	mov	r6, r2
 800bb02:	b103      	cbz	r3, 800bb06 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 800bb04:	6038      	str	r0, [r7, #0]
 800bb06:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800bb08:	b314      	cbz	r4, 800bb50 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 800bb0a:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800bb0e:	b1eb      	cbz	r3, 800bb4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bb10:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800bb14:	428d      	cmp	r5, r1
 800bb16:	db19      	blt.n	800bb4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bb18:	8923      	ldrh	r3, [r4, #8]
 800bb1a:	b289      	uxth	r1, r1
 800bb1c:	440b      	add	r3, r1
 800bb1e:	b21b      	sxth	r3, r3
 800bb20:	429d      	cmp	r5, r3
 800bb22:	da13      	bge.n	800bb4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bb24:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800bb28:	4296      	cmp	r6, r2
 800bb2a:	db0f      	blt.n	800bb4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bb2c:	8963      	ldrh	r3, [r4, #10]
 800bb2e:	b292      	uxth	r2, r2
 800bb30:	4413      	add	r3, r2
 800bb32:	b21b      	sxth	r3, r3
 800bb34:	429e      	cmp	r6, r3
 800bb36:	da09      	bge.n	800bb4c <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 800bb38:	6823      	ldr	r3, [r4, #0]
 800bb3a:	1ab2      	subs	r2, r6, r2
 800bb3c:	1a69      	subs	r1, r5, r1
 800bb3e:	f8d3 8024 	ldr.w	r8, [r3, #36]	; 0x24
 800bb42:	b212      	sxth	r2, r2
 800bb44:	463b      	mov	r3, r7
 800bb46:	b209      	sxth	r1, r1
 800bb48:	4620      	mov	r0, r4
 800bb4a:	47c0      	blx	r8
 800bb4c:	69a4      	ldr	r4, [r4, #24]
 800bb4e:	e7db      	b.n	800bb08 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 800bb50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bb54 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 800bb54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bb58:	4c6e      	ldr	r4, [pc, #440]	; (800bd14 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 800bb5a:	b0a1      	sub	sp, #132	; 0x84
 800bb5c:	6824      	ldr	r4, [r4, #0]
 800bb5e:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 800bb60:	f894 9049 	ldrb.w	r9, [r4, #73]	; 0x49
 800bb64:	9303      	str	r3, [sp, #12]
 800bb66:	2400      	movs	r4, #0
 800bb68:	802c      	strh	r4, [r5, #0]
 800bb6a:	9d2b      	ldr	r5, [sp, #172]	; 0xac
 800bb6c:	802c      	strh	r4, [r5, #0]
 800bb6e:	601c      	str	r4, [r3, #0]
 800bb70:	4606      	mov	r6, r0
 800bb72:	e9cd 1201 	strd	r1, r2, [sp, #4]
 800bb76:	f7ff ffbd 	bl	800baf4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800bb7a:	f1b9 0f03 	cmp.w	r9, #3
 800bb7e:	f340 80c2 	ble.w	800bd06 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 800bb82:	4631      	mov	r1, r6
 800bb84:	a80c      	add	r0, sp, #48	; 0x30
 800bb86:	f006 ff5f 	bl	8012a48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bb8a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 800bb8e:	9306      	str	r3, [sp, #24]
 800bb90:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 800bb94:	9307      	str	r3, [sp, #28]
 800bb96:	9b03      	ldr	r3, [sp, #12]
 800bb98:	f8d3 a000 	ldr.w	sl, [r3]
 800bb9c:	f1ba 0f00 	cmp.w	sl, #0
 800bba0:	f000 80b4 	beq.w	800bd0c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 800bba4:	4651      	mov	r1, sl
 800bba6:	a810      	add	r0, sp, #64	; 0x40
 800bba8:	f006 ff4e 	bl	8012a48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bbac:	9b01      	ldr	r3, [sp, #4]
 800bbae:	9a06      	ldr	r2, [sp, #24]
 800bbb0:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	; 0x44
 800bbb4:	189d      	adds	r5, r3, r2
 800bbb6:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	; 0x40
 800bbba:	9a07      	ldr	r2, [sp, #28]
 800bbbc:	2002      	movs	r0, #2
 800bbbe:	fb91 f1f0 	sdiv	r1, r1, r0
 800bbc2:	4419      	add	r1, r3
 800bbc4:	1a6d      	subs	r5, r5, r1
 800bbc6:	9b02      	ldr	r3, [sp, #8]
 800bbc8:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	; 0x42
 800bbcc:	4413      	add	r3, r2
 800bbce:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	; 0x46
 800bbd2:	fb92 f2f0 	sdiv	r2, r2, r0
 800bbd6:	440a      	add	r2, r1
 800bbd8:	1a9b      	subs	r3, r3, r2
 800bbda:	435b      	muls	r3, r3
 800bbdc:	fb05 3505 	mla	r5, r5, r5, r3
 800bbe0:	4f4d      	ldr	r7, [pc, #308]	; (800bd18 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 800bbe2:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800bbe4:	ac10      	add	r4, sp, #64	; 0x40
 800bbe6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bbe8:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800bbea:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bbec:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 800bbee:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800bbf0:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 800bbf4:	f1b9 0f0c 	cmp.w	r9, #12
 800bbf8:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 800bbfc:	f04f 0303 	mov.w	r3, #3
 800bc00:	bfc8      	it	gt
 800bc02:	4698      	movgt	r8, r3
 800bc04:	f8cd 9000 	str.w	r9, [sp]
 800bc08:	f04f 0400 	mov.w	r4, #0
 800bc0c:	bfdc      	itt	le
 800bc0e:	f109 32ff 	addle.w	r2, r9, #4294967295
 800bc12:	fb92 f8f3 	sdivle	r8, r2, r3
 800bc16:	1c63      	adds	r3, r4, #1
 800bc18:	aa10      	add	r2, sp, #64	; 0x40
 800bc1a:	f004 0401 	and.w	r4, r4, #1
 800bc1e:	9308      	str	r3, [sp, #32]
 800bc20:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 800bc24:	9b00      	ldr	r3, [sp, #0]
 800bc26:	fb93 f3f8 	sdiv	r3, r3, r8
 800bc2a:	b29b      	uxth	r3, r3
 800bc2c:	3404      	adds	r4, #4
 800bc2e:	f04f 0b00 	mov.w	fp, #0
 800bc32:	9304      	str	r3, [sp, #16]
 800bc34:	9a04      	ldr	r2, [sp, #16]
 800bc36:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800bc3a:	fb13 f302 	smulbb	r3, r3, r2
 800bc3e:	9a01      	ldr	r2, [sp, #4]
 800bc40:	b29b      	uxth	r3, r3
 800bc42:	1899      	adds	r1, r3, r2
 800bc44:	9305      	str	r3, [sp, #20]
 800bc46:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800bc4a:	b209      	sxth	r1, r1
 800bc4c:	4299      	cmp	r1, r3
 800bc4e:	db4d      	blt.n	800bcec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bc50:	8932      	ldrh	r2, [r6, #8]
 800bc52:	4413      	add	r3, r2
 800bc54:	b21b      	sxth	r3, r3
 800bc56:	4299      	cmp	r1, r3
 800bc58:	da48      	bge.n	800bcec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bc5a:	9b04      	ldr	r3, [sp, #16]
 800bc5c:	6827      	ldr	r7, [r4, #0]
 800bc5e:	fb17 f703 	smulbb	r7, r7, r3
 800bc62:	9b02      	ldr	r3, [sp, #8]
 800bc64:	b2bf      	uxth	r7, r7
 800bc66:	18fa      	adds	r2, r7, r3
 800bc68:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800bc6c:	b212      	sxth	r2, r2
 800bc6e:	429a      	cmp	r2, r3
 800bc70:	db3c      	blt.n	800bcec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bc72:	8970      	ldrh	r0, [r6, #10]
 800bc74:	4403      	add	r3, r0
 800bc76:	b21b      	sxth	r3, r3
 800bc78:	429a      	cmp	r2, r3
 800bc7a:	da37      	bge.n	800bcec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bc7c:	2300      	movs	r3, #0
 800bc7e:	930b      	str	r3, [sp, #44]	; 0x2c
 800bc80:	4630      	mov	r0, r6
 800bc82:	ab0b      	add	r3, sp, #44	; 0x2c
 800bc84:	f7ff ff36 	bl	800baf4 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800bc88:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800bc8a:	b37a      	cbz	r2, 800bcec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bc8c:	4552      	cmp	r2, sl
 800bc8e:	d02d      	beq.n	800bcec <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 800bc90:	4611      	mov	r1, r2
 800bc92:	a80e      	add	r0, sp, #56	; 0x38
 800bc94:	9209      	str	r2, [sp, #36]	; 0x24
 800bc96:	f006 fed7 	bl	8012a48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bc9a:	9a06      	ldr	r2, [sp, #24]
 800bc9c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	; 0x38
 800bca0:	9b01      	ldr	r3, [sp, #4]
 800bca2:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	; 0x3c
 800bca6:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	; 0x3e
 800bcaa:	4413      	add	r3, r2
 800bcac:	f04f 0e02 	mov.w	lr, #2
 800bcb0:	fb91 f1fe 	sdiv	r1, r1, lr
 800bcb4:	4401      	add	r1, r0
 800bcb6:	1a58      	subs	r0, r3, r1
 800bcb8:	9a07      	ldr	r2, [sp, #28]
 800bcba:	9b02      	ldr	r3, [sp, #8]
 800bcbc:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	; 0x3a
 800bcc0:	fb9c fcfe 	sdiv	ip, ip, lr
 800bcc4:	4413      	add	r3, r2
 800bcc6:	448c      	add	ip, r1
 800bcc8:	eba3 030c 	sub.w	r3, r3, ip
 800bccc:	435b      	muls	r3, r3
 800bcce:	fb00 3300 	mla	r3, r0, r0, r3
 800bcd2:	42ab      	cmp	r3, r5
 800bcd4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800bcd6:	d208      	bcs.n	800bcea <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 800bcd8:	9803      	ldr	r0, [sp, #12]
 800bcda:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800bcdc:	6001      	str	r1, [r0, #0]
 800bcde:	992a      	ldr	r1, [sp, #168]	; 0xa8
 800bce0:	9805      	ldr	r0, [sp, #20]
 800bce2:	8008      	strh	r0, [r1, #0]
 800bce4:	992b      	ldr	r1, [sp, #172]	; 0xac
 800bce6:	461d      	mov	r5, r3
 800bce8:	800f      	strh	r7, [r1, #0]
 800bcea:	4692      	mov	sl, r2
 800bcec:	f10b 0b01 	add.w	fp, fp, #1
 800bcf0:	f1bb 0f04 	cmp.w	fp, #4
 800bcf4:	f104 0408 	add.w	r4, r4, #8
 800bcf8:	d19c      	bne.n	800bc34 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 800bcfa:	9b00      	ldr	r3, [sp, #0]
 800bcfc:	9c08      	ldr	r4, [sp, #32]
 800bcfe:	444b      	add	r3, r9
 800bd00:	4544      	cmp	r4, r8
 800bd02:	9300      	str	r3, [sp, #0]
 800bd04:	d187      	bne.n	800bc16 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 800bd06:	b021      	add	sp, #132	; 0x84
 800bd08:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bd0c:	f04f 35ff 	mov.w	r5, #4294967295
 800bd10:	e766      	b.n	800bbe0 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 800bd12:	bf00      	nop
 800bd14:	20011e40 	.word	0x20011e40
 800bd18:	08021968 	.word	0x08021968

0800bd1c <_ZN8touchgfx4RectaNERKS0_>:
 800bd1c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800bd20:	f9b1 7000 	ldrsh.w	r7, [r1]
 800bd24:	888c      	ldrh	r4, [r1, #4]
 800bd26:	f9b0 9000 	ldrsh.w	r9, [r0]
 800bd2a:	443c      	add	r4, r7
 800bd2c:	b2a4      	uxth	r4, r4
 800bd2e:	fa0f f884 	sxth.w	r8, r4
 800bd32:	45c1      	cmp	r9, r8
 800bd34:	da2f      	bge.n	800bd96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800bd36:	8882      	ldrh	r2, [r0, #4]
 800bd38:	444a      	add	r2, r9
 800bd3a:	b292      	uxth	r2, r2
 800bd3c:	fa0f fe82 	sxth.w	lr, r2
 800bd40:	4577      	cmp	r7, lr
 800bd42:	da28      	bge.n	800bd96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800bd44:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800bd48:	88cb      	ldrh	r3, [r1, #6]
 800bd4a:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 800bd4e:	442b      	add	r3, r5
 800bd50:	b21b      	sxth	r3, r3
 800bd52:	429e      	cmp	r6, r3
 800bd54:	da1f      	bge.n	800bd96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800bd56:	88c3      	ldrh	r3, [r0, #6]
 800bd58:	4433      	add	r3, r6
 800bd5a:	b29b      	uxth	r3, r3
 800bd5c:	fa0f fc83 	sxth.w	ip, r3
 800bd60:	4565      	cmp	r5, ip
 800bd62:	da18      	bge.n	800bd96 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 800bd64:	454f      	cmp	r7, r9
 800bd66:	bfb8      	it	lt
 800bd68:	464f      	movlt	r7, r9
 800bd6a:	42b5      	cmp	r5, r6
 800bd6c:	bfb8      	it	lt
 800bd6e:	4635      	movlt	r5, r6
 800bd70:	45f0      	cmp	r8, lr
 800bd72:	bfd8      	it	le
 800bd74:	4622      	movle	r2, r4
 800bd76:	1bd2      	subs	r2, r2, r7
 800bd78:	8082      	strh	r2, [r0, #4]
 800bd7a:	884a      	ldrh	r2, [r1, #2]
 800bd7c:	88c9      	ldrh	r1, [r1, #6]
 800bd7e:	8007      	strh	r7, [r0, #0]
 800bd80:	440a      	add	r2, r1
 800bd82:	b292      	uxth	r2, r2
 800bd84:	b211      	sxth	r1, r2
 800bd86:	458c      	cmp	ip, r1
 800bd88:	bfa8      	it	ge
 800bd8a:	4613      	movge	r3, r2
 800bd8c:	1b5b      	subs	r3, r3, r5
 800bd8e:	80c3      	strh	r3, [r0, #6]
 800bd90:	8045      	strh	r5, [r0, #2]
 800bd92:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800bd96:	2300      	movs	r3, #0
 800bd98:	8003      	strh	r3, [r0, #0]
 800bd9a:	8043      	strh	r3, [r0, #2]
 800bd9c:	8083      	strh	r3, [r0, #4]
 800bd9e:	80c3      	strh	r3, [r0, #6]
 800bda0:	e7f7      	b.n	800bd92 <_ZN8touchgfx4RectaNERKS0_+0x76>

0800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>:
 800bda2:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800bda6:	2b00      	cmp	r3, #0
 800bda8:	dd06      	ble.n	800bdb8 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 800bdaa:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 800bdae:	2800      	cmp	r0, #0
 800bdb0:	bfcc      	ite	gt
 800bdb2:	2000      	movgt	r0, #0
 800bdb4:	2001      	movle	r0, #1
 800bdb6:	4770      	bx	lr
 800bdb8:	2001      	movs	r0, #1
 800bdba:	4770      	bx	lr

0800bdbc <_ZNK8touchgfx9Container16getContainedAreaEv>:
 800bdbc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800bdc0:	2300      	movs	r3, #0
 800bdc2:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800bdc4:	8003      	strh	r3, [r0, #0]
 800bdc6:	4604      	mov	r4, r0
 800bdc8:	8043      	strh	r3, [r0, #2]
 800bdca:	8083      	strh	r3, [r0, #4]
 800bdcc:	80c3      	strh	r3, [r0, #6]
 800bdce:	2d00      	cmp	r5, #0
 800bdd0:	d040      	beq.n	800be54 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 800bdd2:	1d28      	adds	r0, r5, #4
 800bdd4:	f7ff ffe5 	bl	800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bdd8:	b988      	cbnz	r0, 800bdfe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800bdda:	4620      	mov	r0, r4
 800bddc:	f7ff ffe1 	bl	800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bde0:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 800bde4:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800bde8:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 800bdec:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 800bdf0:	b138      	cbz	r0, 800be02 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 800bdf2:	8022      	strh	r2, [r4, #0]
 800bdf4:	8063      	strh	r3, [r4, #2]
 800bdf6:	f8a4 e004 	strh.w	lr, [r4, #4]
 800bdfa:	f8a4 c006 	strh.w	ip, [r4, #6]
 800bdfe:	69ad      	ldr	r5, [r5, #24]
 800be00:	e7e5      	b.n	800bdce <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 800be02:	f9b4 0000 	ldrsh.w	r0, [r4]
 800be06:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 800be0a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 800be0e:	4290      	cmp	r0, r2
 800be10:	4607      	mov	r7, r0
 800be12:	bfa8      	it	ge
 800be14:	4617      	movge	r7, r2
 800be16:	4472      	add	r2, lr
 800be18:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 800be1c:	8027      	strh	r7, [r4, #0]
 800be1e:	4299      	cmp	r1, r3
 800be20:	460e      	mov	r6, r1
 800be22:	4440      	add	r0, r8
 800be24:	bfa8      	it	ge
 800be26:	461e      	movge	r6, r3
 800be28:	4471      	add	r1, lr
 800be2a:	4463      	add	r3, ip
 800be2c:	b200      	sxth	r0, r0
 800be2e:	b212      	sxth	r2, r2
 800be30:	b209      	sxth	r1, r1
 800be32:	b21b      	sxth	r3, r3
 800be34:	4290      	cmp	r0, r2
 800be36:	bfac      	ite	ge
 800be38:	ebc7 0200 	rsbge	r2, r7, r0
 800be3c:	ebc7 0202 	rsblt	r2, r7, r2
 800be40:	4299      	cmp	r1, r3
 800be42:	bfac      	ite	ge
 800be44:	ebc6 0301 	rsbge	r3, r6, r1
 800be48:	ebc6 0303 	rsblt	r3, r6, r3
 800be4c:	8066      	strh	r6, [r4, #2]
 800be4e:	80a2      	strh	r2, [r4, #4]
 800be50:	80e3      	strh	r3, [r4, #6]
 800be52:	e7d4      	b.n	800bdfe <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 800be54:	4620      	mov	r0, r4
 800be56:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800be5a <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 800be5a:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 800be5e:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800be62:	b383      	cbz	r3, 800bec6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800be64:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800be66:	b374      	cbz	r4, 800bec6 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 800be68:	f9b1 5000 	ldrsh.w	r5, [r1]
 800be6c:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 800be70:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 800be74:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 800be78:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800be7c:	b303      	cbz	r3, 800bec0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800be7e:	4668      	mov	r0, sp
 800be80:	1d21      	adds	r1, r4, #4
 800be82:	f8ad 5000 	strh.w	r5, [sp]
 800be86:	f8ad 6002 	strh.w	r6, [sp, #2]
 800be8a:	f8ad 7004 	strh.w	r7, [sp, #4]
 800be8e:	f8ad 8006 	strh.w	r8, [sp, #6]
 800be92:	f7ff ff43 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 800be96:	4668      	mov	r0, sp
 800be98:	f7ff ff83 	bl	800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800be9c:	b980      	cbnz	r0, 800bec0 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 800be9e:	f8bd 3000 	ldrh.w	r3, [sp]
 800bea2:	88a2      	ldrh	r2, [r4, #4]
 800bea4:	1a9b      	subs	r3, r3, r2
 800bea6:	f8ad 3000 	strh.w	r3, [sp]
 800beaa:	88e2      	ldrh	r2, [r4, #6]
 800beac:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800beb0:	1a9b      	subs	r3, r3, r2
 800beb2:	f8ad 3002 	strh.w	r3, [sp, #2]
 800beb6:	6823      	ldr	r3, [r4, #0]
 800beb8:	4669      	mov	r1, sp
 800beba:	689b      	ldr	r3, [r3, #8]
 800bebc:	4620      	mov	r0, r4
 800bebe:	4798      	blx	r3
 800bec0:	69a4      	ldr	r4, [r4, #24]
 800bec2:	2c00      	cmp	r4, #0
 800bec4:	d1d8      	bne.n	800be78 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 800bec6:	b002      	add	sp, #8
 800bec8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800becc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 800becc:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800bece:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 800bed2:	460d      	mov	r5, r1
 800bed4:	4616      	mov	r6, r2
 800bed6:	b323      	cbz	r3, 800bf22 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800bed8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 800beda:	b314      	cbz	r4, 800bf22 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 800bedc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 800bee0:	b1eb      	cbz	r3, 800bf1e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800bee2:	6828      	ldr	r0, [r5, #0]
 800bee4:	6869      	ldr	r1, [r5, #4]
 800bee6:	466b      	mov	r3, sp
 800bee8:	c303      	stmia	r3!, {r0, r1}
 800beea:	4668      	mov	r0, sp
 800beec:	1d21      	adds	r1, r4, #4
 800beee:	f7ff ff15 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 800bef2:	4668      	mov	r0, sp
 800bef4:	f7ff ff55 	bl	800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800bef8:	b988      	cbnz	r0, 800bf1e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 800befa:	f8bd 3000 	ldrh.w	r3, [sp]
 800befe:	88a2      	ldrh	r2, [r4, #4]
 800bf00:	1a9b      	subs	r3, r3, r2
 800bf02:	f8ad 3000 	strh.w	r3, [sp]
 800bf06:	88e2      	ldrh	r2, [r4, #6]
 800bf08:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800bf0c:	1a9b      	subs	r3, r3, r2
 800bf0e:	f8ad 3002 	strh.w	r3, [sp, #2]
 800bf12:	6823      	ldr	r3, [r4, #0]
 800bf14:	4632      	mov	r2, r6
 800bf16:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800bf18:	4669      	mov	r1, sp
 800bf1a:	4620      	mov	r0, r4
 800bf1c:	4798      	blx	r3
 800bf1e:	69a4      	ldr	r4, [r4, #24]
 800bf20:	e7db      	b.n	800beda <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 800bf22:	b002      	add	sp, #8
 800bf24:	bd70      	pop	{r4, r5, r6, pc}

0800bf26 <_ZNK8touchgfx6Slider15getIndicatorMinEv>:
 800bf26:	f8b0 00ec 	ldrh.w	r0, [r0, #236]	; 0xec
 800bf2a:	4770      	bx	lr

0800bf2c <_ZNK8touchgfx6Slider15getIndicatorMaxEv>:
 800bf2c:	f8b0 00ee 	ldrh.w	r0, [r0, #238]	; 0xee
 800bf30:	4770      	bx	lr

0800bf32 <_ZNK8touchgfx6Slider11getMinValueEv>:
 800bf32:	8e80      	ldrh	r0, [r0, #52]	; 0x34
 800bf34:	4770      	bx	lr

0800bf36 <_ZNK8touchgfx6Slider11getMaxValueEv>:
 800bf36:	8f00      	ldrh	r0, [r0, #56]	; 0x38
 800bf38:	4770      	bx	lr

0800bf3a <_ZN8touchgfx6Slider8setValueEi>:
 800bf3a:	b570      	push	{r4, r5, r6, lr}
 800bf3c:	6803      	ldr	r3, [r0, #0]
 800bf3e:	e9d3 532b 	ldrd	r5, r3, [r3, #172]	; 0xac
 800bf42:	4604      	mov	r4, r0
 800bf44:	4798      	blx	r3
 800bf46:	462b      	mov	r3, r5
 800bf48:	4601      	mov	r1, r0
 800bf4a:	4620      	mov	r0, r4
 800bf4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bf50:	4718      	bx	r3

0800bf52 <_ZNK8touchgfx6Slider15valueToPositionEi>:
 800bf52:	b538      	push	{r3, r4, r5, lr}
 800bf54:	e9d0 340d 	ldrd	r3, r4, [r0, #52]	; 0x34
 800bf58:	428c      	cmp	r4, r1
 800bf5a:	bfa8      	it	ge
 800bf5c:	460c      	movge	r4, r1
 800bf5e:	429c      	cmp	r4, r3
 800bf60:	bfac      	ite	ge
 800bf62:	ebc3 0404 	rsbge	r4, r3, r4
 800bf66:	ebc3 0403 	rsblt	r4, r3, r3
 800bf6a:	6803      	ldr	r3, [r0, #0]
 800bf6c:	4605      	mov	r5, r0
 800bf6e:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800bf72:	4798      	blx	r3
 800bf74:	682b      	ldr	r3, [r5, #0]
 800bf76:	fb00 4404 	mla	r4, r0, r4, r4
 800bf7a:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800bf7e:	4628      	mov	r0, r5
 800bf80:	4798      	blx	r3
 800bf82:	f895 202c 	ldrb.w	r2, [r5, #44]	; 0x2c
 800bf86:	f9b5 30ec 	ldrsh.w	r3, [r5, #236]	; 0xec
 800bf8a:	fb94 f0f0 	sdiv	r0, r4, r0
 800bf8e:	2a01      	cmp	r2, #1
 800bf90:	bf08      	it	eq
 800bf92:	f9b5 20ee 	ldrsheq.w	r2, [r5, #238]	; 0xee
 800bf96:	4418      	add	r0, r3
 800bf98:	bf04      	itt	eq
 800bf9a:	1a10      	subeq	r0, r2, r0
 800bf9c:	18c0      	addeq	r0, r0, r3
 800bf9e:	b200      	sxth	r0, r0
 800bfa0:	bd38      	pop	{r3, r4, r5, pc}

0800bfa2 <_ZNK8touchgfx6Slider15positionToValueEs>:
 800bfa2:	b570      	push	{r4, r5, r6, lr}
 800bfa4:	f9b0 30ec 	ldrsh.w	r3, [r0, #236]	; 0xec
 800bfa8:	428b      	cmp	r3, r1
 800bfaa:	4605      	mov	r5, r0
 800bfac:	460c      	mov	r4, r1
 800bfae:	d109      	bne.n	800bfc4 <_ZNK8touchgfx6Slider15positionToValueEs+0x22>
 800bfb0:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800bfb2:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800bfb6:	2b01      	cmp	r3, #1
 800bfb8:	bf01      	itttt	eq
 800bfba:	6bab      	ldreq	r3, [r5, #56]	; 0x38
 800bfbc:	1a18      	subeq	r0, r3, r0
 800bfbe:	6b6b      	ldreq	r3, [r5, #52]	; 0x34
 800bfc0:	18c0      	addeq	r0, r0, r3
 800bfc2:	bd70      	pop	{r4, r5, r6, pc}
 800bfc4:	f9b0 30ee 	ldrsh.w	r3, [r0, #238]	; 0xee
 800bfc8:	428b      	cmp	r3, r1
 800bfca:	d101      	bne.n	800bfd0 <_ZNK8touchgfx6Slider15positionToValueEs+0x2e>
 800bfcc:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800bfce:	e7f0      	b.n	800bfb2 <_ZNK8touchgfx6Slider15positionToValueEs+0x10>
 800bfd0:	6803      	ldr	r3, [r0, #0]
 800bfd2:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800bfd6:	4798      	blx	r3
 800bfd8:	682b      	ldr	r3, [r5, #0]
 800bfda:	f9b5 10ec 	ldrsh.w	r1, [r5, #236]	; 0xec
 800bfde:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800bfe2:	4606      	mov	r6, r0
 800bfe4:	4628      	mov	r0, r5
 800bfe6:	1a64      	subs	r4, r4, r1
 800bfe8:	4798      	blx	r3
 800bfea:	682b      	ldr	r3, [r5, #0]
 800bfec:	2102      	movs	r1, #2
 800bfee:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800bff2:	fb96 f6f1 	sdiv	r6, r6, r1
 800bff6:	fb00 6404 	mla	r4, r0, r4, r6
 800bffa:	4628      	mov	r0, r5
 800bffc:	4798      	blx	r3
 800bffe:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800c000:	fb94 f0f0 	sdiv	r0, r4, r0
 800c004:	4418      	add	r0, r3
 800c006:	e7d4      	b.n	800bfb2 <_ZNK8touchgfx6Slider15positionToValueEs+0x10>

0800c008 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv>:
 800c008:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 800c00c:	2302      	movs	r3, #2
 800c00e:	b92a      	cbnz	r2, 800c01c <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0x14>
 800c010:	f9b0 009c 	ldrsh.w	r0, [r0, #156]	; 0x9c
 800c014:	fb90 f0f3 	sdiv	r0, r0, r3
 800c018:	b280      	uxth	r0, r0
 800c01a:	4770      	bx	lr
 800c01c:	f9b0 009e 	ldrsh.w	r0, [r0, #158]	; 0x9e
 800c020:	e7f8      	b.n	800c014 <_ZNK8touchgfx6Slider18getIndicatorRadiusEv+0xc>

0800c022 <_ZN8touchgfx6Slider13setValueRangeEiii>:
 800c022:	b410      	push	{r4}
 800c024:	e9c0 120d 	strd	r1, r2, [r0, #52]	; 0x34
 800c028:	6802      	ldr	r2, [r0, #0]
 800c02a:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c02e:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800c032:	4619      	mov	r1, r3
 800c034:	4710      	bx	r2

0800c036 <_ZN8touchgfx6Slider13setValueRangeEii>:
 800c036:	6b03      	ldr	r3, [r0, #48]	; 0x30
 800c038:	428b      	cmp	r3, r1
 800c03a:	b410      	push	{r4}
 800c03c:	db09      	blt.n	800c052 <_ZN8touchgfx6Slider13setValueRangeEii+0x1c>
 800c03e:	4293      	cmp	r3, r2
 800c040:	bfa8      	it	ge
 800c042:	4613      	movge	r3, r2
 800c044:	6804      	ldr	r4, [r0, #0]
 800c046:	f8d4 4098 	ldr.w	r4, [r4, #152]	; 0x98
 800c04a:	46a4      	mov	ip, r4
 800c04c:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c050:	4760      	bx	ip
 800c052:	460b      	mov	r3, r1
 800c054:	e7f6      	b.n	800c044 <_ZN8touchgfx6Slider13setValueRangeEii+0xe>

0800c056 <_ZNK8touchgfx6Slider29getIndicatorPositionRangeSizeEv>:
 800c056:	f9b0 20ee 	ldrsh.w	r2, [r0, #238]	; 0xee
 800c05a:	f9b0 00ec 	ldrsh.w	r0, [r0, #236]	; 0xec
 800c05e:	1a10      	subs	r0, r2, r0
 800c060:	4770      	bx	lr

0800c062 <_ZNK8touchgfx6Slider17getValueRangeSizeEv>:
 800c062:	e9d0 020d 	ldrd	r0, r2, [r0, #52]	; 0x34
 800c066:	1a10      	subs	r0, r2, r0
 800c068:	4770      	bx	lr

0800c06a <_ZN8touchgfx6SliderD1Ev>:
 800c06a:	4770      	bx	lr

0800c06c <_ZN8touchgfx6SliderD0Ev>:
 800c06c:	b510      	push	{r4, lr}
 800c06e:	21fc      	movs	r1, #252	; 0xfc
 800c070:	4604      	mov	r4, r0
 800c072:	f014 fb1d 	bl	80206b0 <_ZdlPvj>
 800c076:	4620      	mov	r0, r4
 800c078:	bd10      	pop	{r4, pc}

0800c07a <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE>:
 800c07a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c07e:	790b      	ldrb	r3, [r1, #4]
 800c080:	4604      	mov	r4, r0
 800c082:	460d      	mov	r5, r1
 800c084:	b323      	cbz	r3, 800c0d0 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x56>
 800c086:	2b01      	cmp	r3, #1
 800c088:	d135      	bne.n	800c0f6 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 800c08a:	6823      	ldr	r3, [r4, #0]
 800c08c:	f894 202c 	ldrb.w	r2, [r4, #44]	; 0x2c
 800c090:	f8d3 70ac 	ldr.w	r7, [r3, #172]	; 0xac
 800c094:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800c098:	2a00      	cmp	r2, #0
 800c09a:	d12a      	bne.n	800c0f2 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x78>
 800c09c:	88ee      	ldrh	r6, [r5, #6]
 800c09e:	4620      	mov	r0, r4
 800c0a0:	4798      	blx	r3
 800c0a2:	1a31      	subs	r1, r6, r0
 800c0a4:	b209      	sxth	r1, r1
 800c0a6:	4620      	mov	r0, r4
 800c0a8:	47b8      	blx	r7
 800c0aa:	792b      	ldrb	r3, [r5, #4]
 800c0ac:	2b01      	cmp	r3, #1
 800c0ae:	d122      	bne.n	800c0f6 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 800c0b0:	f8d4 00f4 	ldr.w	r0, [r4, #244]	; 0xf4
 800c0b4:	b1f8      	cbz	r0, 800c0f6 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 800c0b6:	6803      	ldr	r3, [r0, #0]
 800c0b8:	68db      	ldr	r3, [r3, #12]
 800c0ba:	4798      	blx	r3
 800c0bc:	b1d8      	cbz	r0, 800c0f6 <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x7c>
 800c0be:	f8d4 00f4 	ldr.w	r0, [r4, #244]	; 0xf4
 800c0c2:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c0c4:	6803      	ldr	r3, [r0, #0]
 800c0c6:	4621      	mov	r1, r4
 800c0c8:	689b      	ldr	r3, [r3, #8]
 800c0ca:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c0ce:	4718      	bx	r3
 800c0d0:	f8d0 00f0 	ldr.w	r0, [r0, #240]	; 0xf0
 800c0d4:	2800      	cmp	r0, #0
 800c0d6:	d0d8      	beq.n	800c08a <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 800c0d8:	6803      	ldr	r3, [r0, #0]
 800c0da:	68db      	ldr	r3, [r3, #12]
 800c0dc:	4798      	blx	r3
 800c0de:	2800      	cmp	r0, #0
 800c0e0:	d0d3      	beq.n	800c08a <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 800c0e2:	f8d4 00f0 	ldr.w	r0, [r4, #240]	; 0xf0
 800c0e6:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c0e8:	6803      	ldr	r3, [r0, #0]
 800c0ea:	4621      	mov	r1, r4
 800c0ec:	689b      	ldr	r3, [r3, #8]
 800c0ee:	4798      	blx	r3
 800c0f0:	e7cb      	b.n	800c08a <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x10>
 800c0f2:	892e      	ldrh	r6, [r5, #8]
 800c0f4:	e7d3      	b.n	800c09e <_ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE+0x24>
 800c0f6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800c0fa <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE>:
 800c0fa:	b570      	push	{r4, r5, r6, lr}
 800c0fc:	6803      	ldr	r3, [r0, #0]
 800c0fe:	f890 202c 	ldrb.w	r2, [r0, #44]	; 0x2c
 800c102:	f8d3 60ac 	ldr.w	r6, [r3, #172]	; 0xac
 800c106:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800c10a:	4604      	mov	r4, r0
 800c10c:	b942      	cbnz	r2, 800c120 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x26>
 800c10e:	894d      	ldrh	r5, [r1, #10]
 800c110:	4798      	blx	r3
 800c112:	1a29      	subs	r1, r5, r0
 800c114:	4633      	mov	r3, r6
 800c116:	4620      	mov	r0, r4
 800c118:	b209      	sxth	r1, r1
 800c11a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c11e:	4718      	bx	r3
 800c120:	898d      	ldrh	r5, [r1, #12]
 800c122:	e7f5      	b.n	800c110 <_ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE+0x16>

0800c124 <_ZN8touchgfx8DrawableC1Ev>:
 800c124:	4a0a      	ldr	r2, [pc, #40]	; (800c150 <_ZN8touchgfx8DrawableC1Ev+0x2c>)
 800c126:	6002      	str	r2, [r0, #0]
 800c128:	2200      	movs	r2, #0
 800c12a:	8082      	strh	r2, [r0, #4]
 800c12c:	80c2      	strh	r2, [r0, #6]
 800c12e:	8102      	strh	r2, [r0, #8]
 800c130:	8142      	strh	r2, [r0, #10]
 800c132:	8182      	strh	r2, [r0, #12]
 800c134:	81c2      	strh	r2, [r0, #14]
 800c136:	8202      	strh	r2, [r0, #16]
 800c138:	8242      	strh	r2, [r0, #18]
 800c13a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800c13e:	61c2      	str	r2, [r0, #28]
 800c140:	8402      	strh	r2, [r0, #32]
 800c142:	8442      	strh	r2, [r0, #34]	; 0x22
 800c144:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800c148:	2201      	movs	r2, #1
 800c14a:	f880 2025 	strb.w	r2, [r0, #37]	; 0x25
 800c14e:	4770      	bx	lr
 800c150:	08023e0c 	.word	0x08023e0c

0800c154 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
 800c154:	b570      	push	{r4, r5, r6, lr}
 800c156:	6803      	ldr	r3, [r0, #0]
 800c158:	4604      	mov	r4, r0
 800c15a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c15c:	4615      	mov	r5, r2
 800c15e:	4798      	blx	r3
 800c160:	6823      	ldr	r3, [r4, #0]
 800c162:	4629      	mov	r1, r5
 800c164:	4620      	mov	r0, r4
 800c166:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800c168:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800c16c:	4718      	bx	r3

0800c16e <_ZN8touchgfx6Slider21setupHorizontalSliderEttttt>:
 800c16e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c172:	461d      	mov	r5, r3
 800c174:	f04f 0a00 	mov.w	sl, #0
 800c178:	b213      	sxth	r3, r2
 800c17a:	fa0f fb81 	sxth.w	fp, r1
 800c17e:	4604      	mov	r4, r0
 800c180:	f880 a02c 	strb.w	sl, [r0, #44]	; 0x2c
 800c184:	4689      	mov	r9, r1
 800c186:	4690      	mov	r8, r2
 800c188:	4659      	mov	r1, fp
 800c18a:	461a      	mov	r2, r3
 800c18c:	303c      	adds	r0, #60	; 0x3c
 800c18e:	f8bd 6034 	ldrh.w	r6, [sp, #52]	; 0x34
 800c192:	f8bd 7030 	ldrh.w	r7, [sp, #48]	; 0x30
 800c196:	9301      	str	r3, [sp, #4]
 800c198:	f7f7 fce7 	bl	8003b6a <_ZN8touchgfx8Drawable5setXYEss>
 800c19c:	9b01      	ldr	r3, [sp, #4]
 800c19e:	4659      	mov	r1, fp
 800c1a0:	461a      	mov	r2, r3
 800c1a2:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 800c1a6:	f7f7 fce0 	bl	8003b6a <_ZN8touchgfx8Drawable5setXYEss>
 800c1aa:	4652      	mov	r2, sl
 800c1ac:	4651      	mov	r1, sl
 800c1ae:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800c1b2:	f7f7 fcda 	bl	8003b6a <_ZN8touchgfx8Drawable5setXYEss>
 800c1b6:	f8b4 1044 	ldrh.w	r1, [r4, #68]	; 0x44
 800c1ba:	f8b4 2046 	ldrh.w	r2, [r4, #70]	; 0x46
 800c1be:	f8a4 509a 	strh.w	r5, [r4, #154]	; 0x9a
 800c1c2:	4489      	add	r9, r1
 800c1c4:	f8b4 109c 	ldrh.w	r1, [r4, #156]	; 0x9c
 800c1c8:	f8a4 70ec 	strh.w	r7, [r4, #236]	; 0xec
 800c1cc:	4490      	add	r8, r2
 800c1ce:	f8b4 209e 	ldrh.w	r2, [r4, #158]	; 0x9e
 800c1d2:	f8a4 60ee 	strh.w	r6, [r4, #238]	; 0xee
 800c1d6:	4431      	add	r1, r6
 800c1d8:	b289      	uxth	r1, r1
 800c1da:	fa1f f989 	uxth.w	r9, r9
 800c1de:	442a      	add	r2, r5
 800c1e0:	4589      	cmp	r9, r1
 800c1e2:	b292      	uxth	r2, r2
 800c1e4:	fa1f f888 	uxth.w	r8, r8
 800c1e8:	bf8c      	ite	hi
 800c1ea:	fa0f f189 	sxthhi.w	r1, r9
 800c1ee:	b209      	sxthls	r1, r1
 800c1f0:	4590      	cmp	r8, r2
 800c1f2:	4620      	mov	r0, r4
 800c1f4:	bf8c      	ite	hi
 800c1f6:	fa0f f288 	sxthhi.w	r2, r8
 800c1fa:	b212      	sxthls	r2, r2
 800c1fc:	f7ff ffaa 	bl	800c154 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800c200:	6823      	ldr	r3, [r4, #0]
 800c202:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c204:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800c208:	4620      	mov	r0, r4
 800c20a:	b003      	add	sp, #12
 800c20c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c210:	4718      	bx	r3

0800c212 <_ZN8touchgfx6Slider19setupVerticalSliderEttttt>:
 800c212:	e92d 4ff1 	stmdb	sp!, {r0, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c216:	461d      	mov	r5, r3
 800c218:	fa0f fa81 	sxth.w	sl, r1
 800c21c:	2301      	movs	r3, #1
 800c21e:	fa0f fb82 	sxth.w	fp, r2
 800c222:	4604      	mov	r4, r0
 800c224:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 800c228:	4689      	mov	r9, r1
 800c22a:	4690      	mov	r8, r2
 800c22c:	4651      	mov	r1, sl
 800c22e:	465a      	mov	r2, fp
 800c230:	303c      	adds	r0, #60	; 0x3c
 800c232:	f8bd 602c 	ldrh.w	r6, [sp, #44]	; 0x2c
 800c236:	f8bd 7028 	ldrh.w	r7, [sp, #40]	; 0x28
 800c23a:	f7f7 fc96 	bl	8003b6a <_ZN8touchgfx8Drawable5setXYEss>
 800c23e:	465a      	mov	r2, fp
 800c240:	4651      	mov	r1, sl
 800c242:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 800c246:	f7f7 fc90 	bl	8003b6a <_ZN8touchgfx8Drawable5setXYEss>
 800c24a:	f8b4 1044 	ldrh.w	r1, [r4, #68]	; 0x44
 800c24e:	f8b4 2046 	ldrh.w	r2, [r4, #70]	; 0x46
 800c252:	f8a4 5098 	strh.w	r5, [r4, #152]	; 0x98
 800c256:	4489      	add	r9, r1
 800c258:	f8b4 109c 	ldrh.w	r1, [r4, #156]	; 0x9c
 800c25c:	f8a4 70ec 	strh.w	r7, [r4, #236]	; 0xec
 800c260:	4490      	add	r8, r2
 800c262:	f8b4 209e 	ldrh.w	r2, [r4, #158]	; 0x9e
 800c266:	f8a4 60ee 	strh.w	r6, [r4, #238]	; 0xee
 800c26a:	4429      	add	r1, r5
 800c26c:	b289      	uxth	r1, r1
 800c26e:	fa1f f989 	uxth.w	r9, r9
 800c272:	4432      	add	r2, r6
 800c274:	4589      	cmp	r9, r1
 800c276:	b292      	uxth	r2, r2
 800c278:	fa1f f888 	uxth.w	r8, r8
 800c27c:	bf8c      	ite	hi
 800c27e:	fa0f f189 	sxthhi.w	r1, r9
 800c282:	b209      	sxthls	r1, r1
 800c284:	4590      	cmp	r8, r2
 800c286:	4620      	mov	r0, r4
 800c288:	bf8c      	ite	hi
 800c28a:	fa0f f288 	sxthhi.w	r2, r8
 800c28e:	b212      	sxthls	r2, r2
 800c290:	f7ff ff60 	bl	800c154 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800c294:	6823      	ldr	r3, [r4, #0]
 800c296:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c298:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800c29c:	4620      	mov	r0, r4
 800c29e:	b001      	add	sp, #4
 800c2a0:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c2a4:	4718      	bx	r3

0800c2a6 <_ZN8touchgfx6Slider23updateIndicatorPositionEs>:
 800c2a6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c2aa:	f9b0 80ec 	ldrsh.w	r8, [r0, #236]	; 0xec
 800c2ae:	4588      	cmp	r8, r1
 800c2b0:	4604      	mov	r4, r0
 800c2b2:	bfb8      	it	lt
 800c2b4:	4688      	movlt	r8, r1
 800c2b6:	f9b0 10ee 	ldrsh.w	r1, [r0, #238]	; 0xee
 800c2ba:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800c2be:	4588      	cmp	r8, r1
 800c2c0:	bfa8      	it	ge
 800c2c2:	4688      	movge	r8, r1
 800c2c4:	3094      	adds	r0, #148	; 0x94
 800c2c6:	f104 06c0 	add.w	r6, r4, #192	; 0xc0
 800c2ca:	fa1f f788 	uxth.w	r7, r8
 800c2ce:	2b00      	cmp	r3, #0
 800c2d0:	d12f      	bne.n	800c332 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x8c>
 800c2d2:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 800c2d6:	4641      	mov	r1, r8
 800c2d8:	f7f5 fd11 	bl	8001cfe <_ZN8touchgfx8Drawable6moveToEss>
 800c2dc:	4630      	mov	r0, r6
 800c2de:	f006 fb17 	bl	8012910 <_ZNK8touchgfx8Drawable10invalidateEv>
 800c2e2:	6823      	ldr	r3, [r4, #0]
 800c2e4:	f8b4 20c4 	ldrh.w	r2, [r4, #196]	; 0xc4
 800c2e8:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800c2ec:	4620      	mov	r0, r4
 800c2ee:	1abf      	subs	r7, r7, r2
 800c2f0:	4798      	blx	r3
 800c2f2:	b2bf      	uxth	r7, r7
 800c2f4:	4407      	add	r7, r0
 800c2f6:	f8a4 70c8 	strh.w	r7, [r4, #200]	; 0xc8
 800c2fa:	4630      	mov	r0, r6
 800c2fc:	f006 fb08 	bl	8012910 <_ZNK8touchgfx8Drawable10invalidateEv>
 800c300:	6823      	ldr	r3, [r4, #0]
 800c302:	4641      	mov	r1, r8
 800c304:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800c308:	4620      	mov	r0, r4
 800c30a:	4798      	blx	r3
 800c30c:	6320      	str	r0, [r4, #48]	; 0x30
 800c30e:	f8d4 00f8 	ldr.w	r0, [r4, #248]	; 0xf8
 800c312:	2800      	cmp	r0, #0
 800c314:	d03d      	beq.n	800c392 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xec>
 800c316:	6803      	ldr	r3, [r0, #0]
 800c318:	68db      	ldr	r3, [r3, #12]
 800c31a:	4798      	blx	r3
 800c31c:	2800      	cmp	r0, #0
 800c31e:	d038      	beq.n	800c392 <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0xec>
 800c320:	f8d4 00f8 	ldr.w	r0, [r4, #248]	; 0xf8
 800c324:	6b22      	ldr	r2, [r4, #48]	; 0x30
 800c326:	6803      	ldr	r3, [r0, #0]
 800c328:	4621      	mov	r1, r4
 800c32a:	689b      	ldr	r3, [r3, #8]
 800c32c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c330:	4718      	bx	r3
 800c332:	4642      	mov	r2, r8
 800c334:	f9b4 1098 	ldrsh.w	r1, [r4, #152]	; 0x98
 800c338:	f7f5 fce1 	bl	8001cfe <_ZN8touchgfx8Drawable6moveToEss>
 800c33c:	4630      	mov	r0, r6
 800c33e:	f006 fae7 	bl	8012910 <_ZNK8touchgfx8Drawable10invalidateEv>
 800c342:	f8b4 0042 	ldrh.w	r0, [r4, #66]	; 0x42
 800c346:	f8b4 5046 	ldrh.w	r5, [r4, #70]	; 0x46
 800c34a:	6823      	ldr	r3, [r4, #0]
 800c34c:	4405      	add	r5, r0
 800c34e:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800c352:	4620      	mov	r0, r4
 800c354:	4798      	blx	r3
 800c356:	b2ad      	uxth	r5, r5
 800c358:	6823      	ldr	r3, [r4, #0]
 800c35a:	f9b4 a0c4 	ldrsh.w	sl, [r4, #196]	; 0xc4
 800c35e:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 800c362:	1bed      	subs	r5, r5, r7
 800c364:	1a2d      	subs	r5, r5, r0
 800c366:	4620      	mov	r0, r4
 800c368:	4798      	blx	r3
 800c36a:	f9b4 90c8 	ldrsh.w	r9, [r4, #200]	; 0xc8
 800c36e:	4438      	add	r0, r7
 800c370:	b202      	sxth	r2, r0
 800c372:	b2ad      	uxth	r5, r5
 800c374:	4651      	mov	r1, sl
 800c376:	4630      	mov	r0, r6
 800c378:	f7f7 fbf7 	bl	8003b6a <_ZN8touchgfx8Drawable5setXYEss>
 800c37c:	b22a      	sxth	r2, r5
 800c37e:	4630      	mov	r0, r6
 800c380:	4649      	mov	r1, r9
 800c382:	f7ff fee7 	bl	800c154 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800c386:	f8b4 0072 	ldrh.w	r0, [r4, #114]	; 0x72
 800c38a:	1a2d      	subs	r5, r5, r0
 800c38c:	f8a4 506e 	strh.w	r5, [r4, #110]	; 0x6e
 800c390:	e7b3      	b.n	800c2fa <_ZN8touchgfx6Slider23updateIndicatorPositionEs+0x54>
 800c392:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

0800c398 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>:
 800c398:	b538      	push	{r3, r4, r5, lr}
 800c39a:	2226      	movs	r2, #38	; 0x26
 800c39c:	4604      	mov	r4, r0
 800c39e:	460d      	mov	r5, r1
 800c3a0:	2100      	movs	r1, #0
 800c3a2:	f014 fa3f 	bl	8020824 <memset>
 800c3a6:	4620      	mov	r0, r4
 800c3a8:	f7ff febc 	bl	800c124 <_ZN8touchgfx8DrawableC1Ev>
 800c3ac:	4b06      	ldr	r3, [pc, #24]	; (800c3c8 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE+0x30>)
 800c3ae:	6023      	str	r3, [r4, #0]
 800c3b0:	882b      	ldrh	r3, [r5, #0]
 800c3b2:	84e3      	strh	r3, [r4, #38]	; 0x26
 800c3b4:	23ff      	movs	r3, #255	; 0xff
 800c3b6:	4620      	mov	r0, r4
 800c3b8:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 800c3bc:	4629      	mov	r1, r5
 800c3be:	f003 fc3c 	bl	800fc3a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800c3c2:	4620      	mov	r0, r4
 800c3c4:	bd38      	pop	{r3, r4, r5, pc}
 800c3c6:	bf00      	nop
 800c3c8:	08023ce0 	.word	0x08023ce0

0800c3cc <_ZN8touchgfx6SliderC1Ev>:
 800c3cc:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c3d0:	ae02      	add	r6, sp, #8
 800c3d2:	f64f 77ff 	movw	r7, #65535	; 0xffff
 800c3d6:	4604      	mov	r4, r0
 800c3d8:	f7ff fea4 	bl	800c124 <_ZN8touchgfx8DrawableC1Ev>
 800c3dc:	f826 7d04 	strh.w	r7, [r6, #-4]!
 800c3e0:	2500      	movs	r5, #0
 800c3e2:	4b26      	ldr	r3, [pc, #152]	; (800c47c <_ZN8touchgfx6SliderC1Ev+0xb0>)
 800c3e4:	6023      	str	r3, [r4, #0]
 800c3e6:	f04f 0b01 	mov.w	fp, #1
 800c3ea:	f104 093c 	add.w	r9, r4, #60	; 0x3c
 800c3ee:	4631      	mov	r1, r6
 800c3f0:	f104 0a68 	add.w	sl, r4, #104	; 0x68
 800c3f4:	62a5      	str	r5, [r4, #40]	; 0x28
 800c3f6:	f884 502c 	strb.w	r5, [r4, #44]	; 0x2c
 800c3fa:	e9c4 550c 	strd	r5, r5, [r4, #48]	; 0x30
 800c3fe:	f8c4 b038 	str.w	fp, [r4, #56]	; 0x38
 800c402:	4648      	mov	r0, r9
 800c404:	f7ff ffc8 	bl	800c398 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800c408:	f104 0894 	add.w	r8, r4, #148	; 0x94
 800c40c:	4631      	mov	r1, r6
 800c40e:	4650      	mov	r0, sl
 800c410:	f8ad 7004 	strh.w	r7, [sp, #4]
 800c414:	f7ff ffc0 	bl	800c398 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800c418:	4631      	mov	r1, r6
 800c41a:	4640      	mov	r0, r8
 800c41c:	f104 06c0 	add.w	r6, r4, #192	; 0xc0
 800c420:	f8ad 7004 	strh.w	r7, [sp, #4]
 800c424:	f7ff ffb8 	bl	800c398 <_ZN8touchgfx5ImageC1ERKNS_6BitmapE>
 800c428:	4630      	mov	r0, r6
 800c42a:	f7ff fe7b 	bl	800c124 <_ZN8touchgfx8DrawableC1Ev>
 800c42e:	4b14      	ldr	r3, [pc, #80]	; (800c480 <_ZN8touchgfx6SliderC1Ev+0xb4>)
 800c430:	f8c4 30c0 	str.w	r3, [r4, #192]	; 0xc0
 800c434:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800c438:	e9c4 353b 	strd	r3, r5, [r4, #236]	; 0xec
 800c43c:	4651      	mov	r1, sl
 800c43e:	4630      	mov	r0, r6
 800c440:	f8c4 50e8 	str.w	r5, [r4, #232]	; 0xe8
 800c444:	e9c4 553d 	strd	r5, r5, [r4, #244]	; 0xf4
 800c448:	f884 b024 	strb.w	fp, [r4, #36]	; 0x24
 800c44c:	f7ff fae0 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c450:	4649      	mov	r1, r9
 800c452:	4620      	mov	r0, r4
 800c454:	f7ff fadc 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c458:	4631      	mov	r1, r6
 800c45a:	4620      	mov	r0, r4
 800c45c:	f7ff fad8 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c460:	4641      	mov	r1, r8
 800c462:	4620      	mov	r0, r4
 800c464:	f7ff fad4 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800c468:	4620      	mov	r0, r4
 800c46a:	2264      	movs	r2, #100	; 0x64
 800c46c:	4629      	mov	r1, r5
 800c46e:	f7ff fde2 	bl	800c036 <_ZN8touchgfx6Slider13setValueRangeEii>
 800c472:	4620      	mov	r0, r4
 800c474:	b003      	add	sp, #12
 800c476:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c47a:	bf00      	nop
 800c47c:	08023528 	.word	0x08023528
 800c480:	08023498 	.word	0x08023498

0800c484 <_ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_>:
 800c484:	b570      	push	{r4, r5, r6, lr}
 800c486:	4604      	mov	r4, r0
 800c488:	4616      	mov	r6, r2
 800c48a:	303c      	adds	r0, #60	; 0x3c
 800c48c:	461d      	mov	r5, r3
 800c48e:	f003 fbd4 	bl	800fc3a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800c492:	4631      	mov	r1, r6
 800c494:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800c498:	f003 fbcf 	bl	800fc3a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800c49c:	4629      	mov	r1, r5
 800c49e:	f104 0094 	add.w	r0, r4, #148	; 0x94
 800c4a2:	f003 fbca 	bl	800fc3a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800c4a6:	f9b4 2072 	ldrsh.w	r2, [r4, #114]	; 0x72
 800c4aa:	f9b4 1070 	ldrsh.w	r1, [r4, #112]	; 0x70
 800c4ae:	f104 00c0 	add.w	r0, r4, #192	; 0xc0
 800c4b2:	f7ff fe4f 	bl	800c154 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800c4b6:	bd70      	pop	{r4, r5, r6, pc}

0800c4b8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 800c4b8:	b513      	push	{r0, r1, r4, lr}
 800c4ba:	6803      	ldr	r3, [r0, #0]
 800c4bc:	f8d3 40a8 	ldr.w	r4, [r3, #168]	; 0xa8
 800c4c0:	2300      	movs	r3, #0
 800c4c2:	e9cd 3300 	strd	r3, r3, [sp]
 800c4c6:	466b      	mov	r3, sp
 800c4c8:	47a0      	blx	r4
 800c4ca:	b002      	add	sp, #8
 800c4cc:	bd10      	pop	{r4, pc}

0800c4ce <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 800c4ce:	2301      	movs	r3, #1
 800c4d0:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800c4d4:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800c4d8:	4770      	bx	lr

0800c4da <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 800c4da:	2301      	movs	r3, #1
 800c4dc:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 800c4e0:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 800c4e4:	4770      	bx	lr

0800c4e6 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 800c4e6:	6843      	ldr	r3, [r0, #4]
 800c4e8:	2201      	movs	r2, #1
 800c4ea:	725a      	strb	r2, [r3, #9]
 800c4ec:	6840      	ldr	r0, [r0, #4]
 800c4ee:	6803      	ldr	r3, [r0, #0]
 800c4f0:	691b      	ldr	r3, [r3, #16]
 800c4f2:	4718      	bx	r3

0800c4f4 <_ZN8touchgfx3HAL8flushDMAEv>:
 800c4f4:	6840      	ldr	r0, [r0, #4]
 800c4f6:	6803      	ldr	r3, [r0, #0]
 800c4f8:	689b      	ldr	r3, [r3, #8]
 800c4fa:	4718      	bx	r3

0800c4fc <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 800c4fc:	b530      	push	{r4, r5, lr}
 800c4fe:	b08b      	sub	sp, #44	; 0x2c
 800c500:	6804      	ldr	r4, [r0, #0]
 800c502:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 800c506:	9509      	str	r5, [sp, #36]	; 0x24
 800c508:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 800c50c:	9508      	str	r5, [sp, #32]
 800c50e:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 800c512:	9507      	str	r5, [sp, #28]
 800c514:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 800c518:	9506      	str	r5, [sp, #24]
 800c51a:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 800c51e:	9505      	str	r5, [sp, #20]
 800c520:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 800c524:	9504      	str	r5, [sp, #16]
 800c526:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 800c52a:	9503      	str	r5, [sp, #12]
 800c52c:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800c530:	9502      	str	r5, [sp, #8]
 800c532:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 800c536:	e9cd 3500 	strd	r3, r5, [sp]
 800c53a:	4613      	mov	r3, r2
 800c53c:	6be4      	ldr	r4, [r4, #60]	; 0x3c
 800c53e:	2200      	movs	r2, #0
 800c540:	47a0      	blx	r4
 800c542:	b00b      	add	sp, #44	; 0x2c
 800c544:	bd30      	pop	{r4, r5, pc}
	...

0800c548 <_ZN8touchgfx3HAL10beginFrameEv>:
 800c548:	4b04      	ldr	r3, [pc, #16]	; (800c55c <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 800c54a:	781b      	ldrb	r3, [r3, #0]
 800c54c:	b123      	cbz	r3, 800c558 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 800c54e:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 800c552:	f080 0001 	eor.w	r0, r0, #1
 800c556:	4770      	bx	lr
 800c558:	2001      	movs	r0, #1
 800c55a:	4770      	bx	lr
 800c55c:	20011e3e 	.word	0x20011e3e

0800c560 <_ZN8touchgfx3HAL8endFrameEv>:
 800c560:	b510      	push	{r4, lr}
 800c562:	4604      	mov	r4, r0
 800c564:	6840      	ldr	r0, [r0, #4]
 800c566:	6803      	ldr	r3, [r0, #0]
 800c568:	689b      	ldr	r3, [r3, #8]
 800c56a:	4798      	blx	r3
 800c56c:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 800c570:	b113      	cbz	r3, 800c578 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 800c572:	2301      	movs	r3, #1
 800c574:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800c578:	bd10      	pop	{r4, pc}

0800c57a <_ZN8touchgfx3HAL10initializeEv>:
 800c57a:	b510      	push	{r4, lr}
 800c57c:	4604      	mov	r4, r0
 800c57e:	f7f5 f843 	bl	8001608 <_ZN8touchgfx10OSWrappers10initializeEv>
 800c582:	f7f4 fdfb 	bl	800117c <_ZN8touchgfx4GPIO4initEv>
 800c586:	6860      	ldr	r0, [r4, #4]
 800c588:	6803      	ldr	r3, [r0, #0]
 800c58a:	68db      	ldr	r3, [r3, #12]
 800c58c:	4798      	blx	r3
 800c58e:	68e0      	ldr	r0, [r4, #12]
 800c590:	6803      	ldr	r3, [r0, #0]
 800c592:	689b      	ldr	r3, [r3, #8]
 800c594:	4798      	blx	r3
 800c596:	6823      	ldr	r3, [r4, #0]
 800c598:	4620      	mov	r0, r4
 800c59a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800c59c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800c5a0:	4718      	bx	r3
	...

0800c5a4 <_ZN8touchgfx3HAL4tickEv>:
 800c5a4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800c5a6:	6803      	ldr	r3, [r0, #0]
 800c5a8:	4d5b      	ldr	r5, [pc, #364]	; (800c718 <_ZN8touchgfx3HAL4tickEv+0x174>)
 800c5aa:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 800c5ae:	4604      	mov	r4, r0
 800c5b0:	4798      	blx	r3
 800c5b2:	2800      	cmp	r0, #0
 800c5b4:	f000 8095 	beq.w	800c6e2 <_ZN8touchgfx3HAL4tickEv+0x13e>
 800c5b8:	2001      	movs	r0, #1
 800c5ba:	f7f4 fd4d 	bl	8001058 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800c5be:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 800c5c2:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800c5c6:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 800c5ca:	2600      	movs	r6, #0
 800c5cc:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 800c5d0:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 800c5d4:	b133      	cbz	r3, 800c5e4 <_ZN8touchgfx3HAL4tickEv+0x40>
 800c5d6:	6823      	ldr	r3, [r4, #0]
 800c5d8:	4620      	mov	r0, r4
 800c5da:	f8d3 30c4 	ldr.w	r3, [r3, #196]	; 0xc4
 800c5de:	4798      	blx	r3
 800c5e0:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 800c5e4:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 800c5e8:	6862      	ldr	r2, [r4, #4]
 800c5ea:	f083 0301 	eor.w	r3, r3, #1
 800c5ee:	7253      	strb	r3, [r2, #9]
 800c5f0:	2601      	movs	r6, #1
 800c5f2:	702e      	strb	r6, [r5, #0]
 800c5f4:	f005 f920 	bl	8011838 <_ZN8touchgfx11Application11getInstanceEv>
 800c5f8:	6803      	ldr	r3, [r0, #0]
 800c5fa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800c5fc:	4798      	blx	r3
 800c5fe:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800c602:	b90b      	cbnz	r3, 800c608 <_ZN8touchgfx3HAL4tickEv+0x64>
 800c604:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 800c608:	f005 f916 	bl	8011838 <_ZN8touchgfx11Application11getInstanceEv>
 800c60c:	6803      	ldr	r3, [r0, #0]
 800c60e:	695b      	ldr	r3, [r3, #20]
 800c610:	4798      	blx	r3
 800c612:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c614:	6803      	ldr	r3, [r0, #0]
 800c616:	691b      	ldr	r3, [r3, #16]
 800c618:	4798      	blx	r3
 800c61a:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 800c61e:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 800c622:	3b01      	subs	r3, #1
 800c624:	b2db      	uxtb	r3, r3
 800c626:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 800c62a:	b10a      	cbz	r2, 800c630 <_ZN8touchgfx3HAL4tickEv+0x8c>
 800c62c:	2b00      	cmp	r3, #0
 800c62e:	d1eb      	bne.n	800c608 <_ZN8touchgfx3HAL4tickEv+0x64>
 800c630:	4a3a      	ldr	r2, [pc, #232]	; (800c71c <_ZN8touchgfx3HAL4tickEv+0x178>)
 800c632:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 800c636:	7813      	ldrb	r3, [r2, #0]
 800c638:	3301      	adds	r3, #1
 800c63a:	b25b      	sxtb	r3, r3
 800c63c:	4299      	cmp	r1, r3
 800c63e:	7013      	strb	r3, [r2, #0]
 800c640:	dc10      	bgt.n	800c664 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800c642:	68e0      	ldr	r0, [r4, #12]
 800c644:	2300      	movs	r3, #0
 800c646:	7013      	strb	r3, [r2, #0]
 800c648:	6803      	ldr	r3, [r0, #0]
 800c64a:	aa03      	add	r2, sp, #12
 800c64c:	68db      	ldr	r3, [r3, #12]
 800c64e:	a902      	add	r1, sp, #8
 800c650:	4798      	blx	r3
 800c652:	6823      	ldr	r3, [r4, #0]
 800c654:	2800      	cmp	r0, #0
 800c656:	d050      	beq.n	800c6fa <_ZN8touchgfx3HAL4tickEv+0x156>
 800c658:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800c65c:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800c660:	4620      	mov	r0, r4
 800c662:	4798      	blx	r3
 800c664:	6960      	ldr	r0, [r4, #20]
 800c666:	2300      	movs	r3, #0
 800c668:	f88d 3007 	strb.w	r3, [sp, #7]
 800c66c:	b158      	cbz	r0, 800c686 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800c66e:	6803      	ldr	r3, [r0, #0]
 800c670:	f10d 0107 	add.w	r1, sp, #7
 800c674:	68db      	ldr	r3, [r3, #12]
 800c676:	4798      	blx	r3
 800c678:	b128      	cbz	r0, 800c686 <_ZN8touchgfx3HAL4tickEv+0xe2>
 800c67a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c67c:	f89d 1007 	ldrb.w	r1, [sp, #7]
 800c680:	6803      	ldr	r3, [r0, #0]
 800c682:	68db      	ldr	r3, [r3, #12]
 800c684:	4798      	blx	r3
 800c686:	f104 001c 	add.w	r0, r4, #28
 800c68a:	f013 ff3d 	bl	8020508 <_ZN8touchgfx8Gestures4tickEv>
 800c68e:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 800c692:	b30b      	cbz	r3, 800c6d8 <_ZN8touchgfx3HAL4tickEv+0x134>
 800c694:	6920      	ldr	r0, [r4, #16]
 800c696:	6803      	ldr	r3, [r0, #0]
 800c698:	691b      	ldr	r3, [r3, #16]
 800c69a:	4798      	blx	r3
 800c69c:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c69e:	4606      	mov	r6, r0
 800c6a0:	b903      	cbnz	r3, 800c6a4 <_ZN8touchgfx3HAL4tickEv+0x100>
 800c6a2:	6720      	str	r0, [r4, #112]	; 0x70
 800c6a4:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c6a6:	4a1e      	ldr	r2, [pc, #120]	; (800c720 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 800c6a8:	1af3      	subs	r3, r6, r3
 800c6aa:	4293      	cmp	r3, r2
 800c6ac:	d914      	bls.n	800c6d8 <_ZN8touchgfx3HAL4tickEv+0x134>
 800c6ae:	6920      	ldr	r0, [r4, #16]
 800c6b0:	6803      	ldr	r3, [r0, #0]
 800c6b2:	699b      	ldr	r3, [r3, #24]
 800c6b4:	4798      	blx	r3
 800c6b6:	6f23      	ldr	r3, [r4, #112]	; 0x70
 800c6b8:	2264      	movs	r2, #100	; 0x64
 800c6ba:	1af3      	subs	r3, r6, r3
 800c6bc:	fbb3 f3f2 	udiv	r3, r3, r2
 800c6c0:	fbb0 f0f3 	udiv	r0, r0, r3
 800c6c4:	2800      	cmp	r0, #0
 800c6c6:	dc1d      	bgt.n	800c704 <_ZN8touchgfx3HAL4tickEv+0x160>
 800c6c8:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 800c6cc:	6920      	ldr	r0, [r4, #16]
 800c6ce:	6803      	ldr	r3, [r0, #0]
 800c6d0:	2100      	movs	r1, #0
 800c6d2:	69db      	ldr	r3, [r3, #28]
 800c6d4:	4798      	blx	r3
 800c6d6:	6726      	str	r6, [r4, #112]	; 0x70
 800c6d8:	f005 f8ae 	bl	8011838 <_ZN8touchgfx11Application11getInstanceEv>
 800c6dc:	6803      	ldr	r3, [r0, #0]
 800c6de:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c6e0:	4798      	blx	r3
 800c6e2:	6823      	ldr	r3, [r4, #0]
 800c6e4:	4620      	mov	r0, r4
 800c6e6:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 800c6ea:	4798      	blx	r3
 800c6ec:	2001      	movs	r0, #1
 800c6ee:	f7f4 fce1 	bl	80010b4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800c6f2:	2300      	movs	r3, #0
 800c6f4:	702b      	strb	r3, [r5, #0]
 800c6f6:	b004      	add	sp, #16
 800c6f8:	bd70      	pop	{r4, r5, r6, pc}
 800c6fa:	f8d3 30c0 	ldr.w	r3, [r3, #192]	; 0xc0
 800c6fe:	4620      	mov	r0, r4
 800c700:	4798      	blx	r3
 800c702:	e7af      	b.n	800c664 <_ZN8touchgfx3HAL4tickEv+0xc0>
 800c704:	2863      	cmp	r0, #99	; 0x63
 800c706:	bfcb      	itete	gt
 800c708:	2300      	movgt	r3, #0
 800c70a:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 800c70e:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 800c712:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 800c716:	e7d9      	b.n	800c6cc <_ZN8touchgfx3HAL4tickEv+0x128>
 800c718:	20011e44 	.word	0x20011e44
 800c71c:	20011e45 	.word	0x20011e45
 800c720:	05f5e100 	.word	0x05f5e100

0800c724 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 800c724:	f7f4 bfa0 	b.w	8001668 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800c728 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 800c728:	6581      	str	r1, [r0, #88]	; 0x58
 800c72a:	301c      	adds	r0, #28
 800c72c:	f013 beea 	b.w	8020504 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

0800c730 <_ZN8touchgfx3HAL5touchEll>:
 800c730:	b530      	push	{r4, r5, lr}
 800c732:	b087      	sub	sp, #28
 800c734:	4604      	mov	r4, r0
 800c736:	a804      	add	r0, sp, #16
 800c738:	e9cd 1204 	strd	r1, r2, [sp, #16]
 800c73c:	f004 fea6 	bl	801148c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 800c740:	9b04      	ldr	r3, [sp, #16]
 800c742:	f8ad 300c 	strh.w	r3, [sp, #12]
 800c746:	a906      	add	r1, sp, #24
 800c748:	9b05      	ldr	r3, [sp, #20]
 800c74a:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800c74e:	a803      	add	r0, sp, #12
 800c750:	f004 feee 	bl	8011530 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 800c754:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 800c758:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800c75c:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800c760:	f104 001c 	add.w	r0, r4, #28
 800c764:	b189      	cbz	r1, 800c78a <_ZN8touchgfx3HAL5touchEll+0x5a>
 800c766:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 800c76a:	9300      	str	r3, [sp, #0]
 800c76c:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800c770:	4613      	mov	r3, r2
 800c772:	462a      	mov	r2, r5
 800c774:	f013 fed6 	bl	8020524 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 800c778:	b128      	cbz	r0, 800c786 <_ZN8touchgfx3HAL5touchEll+0x56>
 800c77a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800c77e:	65e3      	str	r3, [r4, #92]	; 0x5c
 800c780:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c784:	6623      	str	r3, [r4, #96]	; 0x60
 800c786:	b007      	add	sp, #28
 800c788:	bd30      	pop	{r4, r5, pc}
 800c78a:	f013 ff0b 	bl	80205a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800c78e:	2301      	movs	r3, #1
 800c790:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800c794:	e7f1      	b.n	800c77a <_ZN8touchgfx3HAL5touchEll+0x4a>

0800c796 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 800c796:	b510      	push	{r4, lr}
 800c798:	2b00      	cmp	r3, #0
 800c79a:	d046      	beq.n	800c82a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800c79c:	ea81 0002 	eor.w	r0, r1, r2
 800c7a0:	07c4      	lsls	r4, r0, #31
 800c7a2:	d508      	bpl.n	800c7b6 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 800c7a4:	440b      	add	r3, r1
 800c7a6:	3a01      	subs	r2, #1
 800c7a8:	428b      	cmp	r3, r1
 800c7aa:	d93e      	bls.n	800c82a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800c7ac:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800c7b0:	f801 0b01 	strb.w	r0, [r1], #1
 800c7b4:	e7f8      	b.n	800c7a8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 800c7b6:	07d0      	lsls	r0, r2, #31
 800c7b8:	bf42      	ittt	mi
 800c7ba:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800c7be:	f801 0b01 	strbmi.w	r0, [r1], #1
 800c7c2:	f103 33ff 	addmi.w	r3, r3, #4294967295
 800c7c6:	2b01      	cmp	r3, #1
 800c7c8:	d911      	bls.n	800c7ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800c7ca:	ea81 0402 	eor.w	r4, r1, r2
 800c7ce:	07a4      	lsls	r4, r4, #30
 800c7d0:	4610      	mov	r0, r2
 800c7d2:	d022      	beq.n	800c81a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 800c7d4:	f023 0401 	bic.w	r4, r3, #1
 800c7d8:	440c      	add	r4, r1
 800c7da:	428c      	cmp	r4, r1
 800c7dc:	4602      	mov	r2, r0
 800c7de:	d904      	bls.n	800c7ea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 800c7e0:	8812      	ldrh	r2, [r2, #0]
 800c7e2:	f821 2b02 	strh.w	r2, [r1], #2
 800c7e6:	3002      	adds	r0, #2
 800c7e8:	e7f7      	b.n	800c7da <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 800c7ea:	f003 0301 	and.w	r3, r3, #1
 800c7ee:	f023 0003 	bic.w	r0, r3, #3
 800c7f2:	4408      	add	r0, r1
 800c7f4:	4288      	cmp	r0, r1
 800c7f6:	4614      	mov	r4, r2
 800c7f8:	d904      	bls.n	800c804 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 800c7fa:	6824      	ldr	r4, [r4, #0]
 800c7fc:	f841 4b04 	str.w	r4, [r1], #4
 800c800:	3204      	adds	r2, #4
 800c802:	e7f7      	b.n	800c7f4 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 800c804:	f003 0303 	and.w	r3, r3, #3
 800c808:	440b      	add	r3, r1
 800c80a:	3a01      	subs	r2, #1
 800c80c:	428b      	cmp	r3, r1
 800c80e:	d90c      	bls.n	800c82a <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 800c810:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800c814:	f801 0b01 	strb.w	r0, [r1], #1
 800c818:	e7f8      	b.n	800c80c <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 800c81a:	0790      	lsls	r0, r2, #30
 800c81c:	d0e7      	beq.n	800c7ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800c81e:	f832 0b02 	ldrh.w	r0, [r2], #2
 800c822:	f821 0b02 	strh.w	r0, [r1], #2
 800c826:	3b02      	subs	r3, #2
 800c828:	e7e1      	b.n	800c7ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 800c82a:	2001      	movs	r0, #1
 800c82c:	bd10      	pop	{r4, pc}

0800c82e <_ZN8touchgfx3HAL7noTouchEv>:
 800c82e:	b510      	push	{r4, lr}
 800c830:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 800c834:	4604      	mov	r4, r0
 800c836:	b153      	cbz	r3, 800c84e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 800c838:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800c83c:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 800c840:	2101      	movs	r1, #1
 800c842:	301c      	adds	r0, #28
 800c844:	f013 feae 	bl	80205a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800c848:	2300      	movs	r3, #0
 800c84a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800c84e:	bd10      	pop	{r4, pc}

0800c850 <_ZN8touchgfx3HAL3lcdEv>:
 800c850:	4b04      	ldr	r3, [pc, #16]	; (800c864 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800c852:	681b      	ldr	r3, [r3, #0]
 800c854:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800c858:	b10a      	cbz	r2, 800c85e <_ZN8touchgfx3HAL3lcdEv+0xe>
 800c85a:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800c85c:	b900      	cbnz	r0, 800c860 <_ZN8touchgfx3HAL3lcdEv+0x10>
 800c85e:	6898      	ldr	r0, [r3, #8]
 800c860:	4770      	bx	lr
 800c862:	bf00      	nop
 800c864:	20011e40 	.word	0x20011e40

0800c868 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 800c868:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c86c:	b085      	sub	sp, #20
 800c86e:	ad04      	add	r5, sp, #16
 800c870:	4604      	mov	r4, r0
 800c872:	2000      	movs	r0, #0
 800c874:	f845 0d04 	str.w	r0, [r5, #-4]!
 800c878:	69a0      	ldr	r0, [r4, #24]
 800c87a:	6806      	ldr	r6, [r0, #0]
 800c87c:	9501      	str	r5, [sp, #4]
 800c87e:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 800c882:	9500      	str	r5, [sp, #0]
 800c884:	6835      	ldr	r5, [r6, #0]
 800c886:	4699      	mov	r9, r3
 800c888:	460f      	mov	r7, r1
 800c88a:	4690      	mov	r8, r2
 800c88c:	47a8      	blx	r5
 800c88e:	4d10      	ldr	r5, [pc, #64]	; (800c8d0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 800c890:	4606      	mov	r6, r0
 800c892:	f8a5 9000 	strh.w	r9, [r5]
 800c896:	f7ff ffdb 	bl	800c850 <_ZN8touchgfx3HAL3lcdEv>
 800c89a:	6803      	ldr	r3, [r0, #0]
 800c89c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c89e:	4798      	blx	r3
 800c8a0:	b128      	cbz	r0, 800c8ae <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 800c8a2:	2801      	cmp	r0, #1
 800c8a4:	d00b      	beq.n	800c8be <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 800c8a6:	4630      	mov	r0, r6
 800c8a8:	b005      	add	sp, #20
 800c8aa:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c8ae:	882b      	ldrh	r3, [r5, #0]
 800c8b0:	fb08 7203 	mla	r2, r8, r3, r7
 800c8b4:	9b03      	ldr	r3, [sp, #12]
 800c8b6:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 800c8ba:	63e3      	str	r3, [r4, #60]	; 0x3c
 800c8bc:	e7f3      	b.n	800c8a6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800c8be:	882a      	ldrh	r2, [r5, #0]
 800c8c0:	9b03      	ldr	r3, [sp, #12]
 800c8c2:	fb08 7202 	mla	r2, r8, r2, r7
 800c8c6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 800c8ca:	1a9a      	subs	r2, r3, r2
 800c8cc:	63e2      	str	r2, [r4, #60]	; 0x3c
 800c8ce:	e7ea      	b.n	800c8a6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 800c8d0:	20011e3a 	.word	0x20011e3a

0800c8d4 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 800c8d4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c8d6:	b08b      	sub	sp, #44	; 0x2c
 800c8d8:	4617      	mov	r7, r2
 800c8da:	4604      	mov	r4, r0
 800c8dc:	460e      	mov	r6, r1
 800c8de:	461d      	mov	r5, r3
 800c8e0:	f7ff ffb6 	bl	800c850 <_ZN8touchgfx3HAL3lcdEv>
 800c8e4:	6803      	ldr	r3, [r0, #0]
 800c8e6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c8e8:	4798      	blx	r3
 800c8ea:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800c8ee:	9007      	str	r0, [sp, #28]
 800c8f0:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800c8f4:	4b0d      	ldr	r3, [pc, #52]	; (800c92c <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 800c8f6:	6822      	ldr	r2, [r4, #0]
 800c8f8:	881b      	ldrh	r3, [r3, #0]
 800c8fa:	9306      	str	r3, [sp, #24]
 800c8fc:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800c900:	9305      	str	r3, [sp, #20]
 800c902:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 800c906:	9304      	str	r3, [sp, #16]
 800c908:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c90c:	9303      	str	r3, [sp, #12]
 800c90e:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800c912:	9302      	str	r3, [sp, #8]
 800c914:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800c918:	e9cd 5300 	strd	r5, r3, [sp]
 800c91c:	4631      	mov	r1, r6
 800c91e:	6bd5      	ldr	r5, [r2, #60]	; 0x3c
 800c920:	463b      	mov	r3, r7
 800c922:	2200      	movs	r2, #0
 800c924:	4620      	mov	r0, r4
 800c926:	47a8      	blx	r5
 800c928:	b00b      	add	sp, #44	; 0x2c
 800c92a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c92c:	20011e3a 	.word	0x20011e3a

0800c930 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 800c930:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c934:	4698      	mov	r8, r3
 800c936:	6803      	ldr	r3, [r0, #0]
 800c938:	6bdd      	ldr	r5, [r3, #60]	; 0x3c
 800c93a:	4b15      	ldr	r3, [pc, #84]	; (800c990 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 800c93c:	b08b      	sub	sp, #44	; 0x2c
 800c93e:	4617      	mov	r7, r2
 800c940:	f8b3 9000 	ldrh.w	r9, [r3]
 800c944:	460e      	mov	r6, r1
 800c946:	4604      	mov	r4, r0
 800c948:	f7ff ff82 	bl	800c850 <_ZN8touchgfx3HAL3lcdEv>
 800c94c:	6803      	ldr	r3, [r0, #0]
 800c94e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c950:	4798      	blx	r3
 800c952:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800c956:	e9cd 0308 	strd	r0, r3, [sp, #32]
 800c95a:	2302      	movs	r3, #2
 800c95c:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800c960:	2301      	movs	r3, #1
 800c962:	9305      	str	r3, [sp, #20]
 800c964:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 800c968:	9304      	str	r3, [sp, #16]
 800c96a:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800c96e:	9303      	str	r3, [sp, #12]
 800c970:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800c974:	9302      	str	r3, [sp, #8]
 800c976:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800c97a:	2200      	movs	r2, #0
 800c97c:	e9cd 8300 	strd	r8, r3, [sp]
 800c980:	4631      	mov	r1, r6
 800c982:	463b      	mov	r3, r7
 800c984:	4620      	mov	r0, r4
 800c986:	47a8      	blx	r5
 800c988:	b00b      	add	sp, #44	; 0x2c
 800c98a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c98e:	bf00      	nop
 800c990:	20011e3a 	.word	0x20011e3a

0800c994 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 800c994:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c998:	4698      	mov	r8, r3
 800c99a:	6803      	ldr	r3, [r0, #0]
 800c99c:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 800c99e:	4b11      	ldr	r3, [pc, #68]	; (800c9e4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 800c9a0:	b087      	sub	sp, #28
 800c9a2:	f8b3 9000 	ldrh.w	r9, [r3]
 800c9a6:	460e      	mov	r6, r1
 800c9a8:	4617      	mov	r7, r2
 800c9aa:	4604      	mov	r4, r0
 800c9ac:	f7ff ff50 	bl	800c850 <_ZN8touchgfx3HAL3lcdEv>
 800c9b0:	6803      	ldr	r3, [r0, #0]
 800c9b2:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800c9b4:	4798      	blx	r3
 800c9b6:	f89d 3044 	ldrb.w	r3, [sp, #68]	; 0x44
 800c9ba:	f8cd 900c 	str.w	r9, [sp, #12]
 800c9be:	e9cd 0304 	strd	r0, r3, [sp, #16]
 800c9c2:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 800c9c6:	9302      	str	r3, [sp, #8]
 800c9c8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 800c9cc:	9301      	str	r3, [sp, #4]
 800c9ce:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800c9d2:	9300      	str	r3, [sp, #0]
 800c9d4:	463a      	mov	r2, r7
 800c9d6:	4643      	mov	r3, r8
 800c9d8:	4631      	mov	r1, r6
 800c9da:	4620      	mov	r0, r4
 800c9dc:	47a8      	blx	r5
 800c9de:	b007      	add	sp, #28
 800c9e0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c9e4:	20011e3a 	.word	0x20011e3a

0800c9e8 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 800c9e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c9ec:	4604      	mov	r4, r0
 800c9ee:	b08f      	sub	sp, #60	; 0x3c
 800c9f0:	4610      	mov	r0, r2
 800c9f2:	460d      	mov	r5, r1
 800c9f4:	4691      	mov	r9, r2
 800c9f6:	461e      	mov	r6, r3
 800c9f8:	f007 ffce 	bl	8014998 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800c9fc:	2800      	cmp	r0, #0
 800c9fe:	f000 809d 	beq.w	800cb3c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 800ca02:	6823      	ldr	r3, [r4, #0]
 800ca04:	f8df b198 	ldr.w	fp, [pc, #408]	; 800cba0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 800ca08:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ca0a:	f8df a198 	ldr.w	sl, [pc, #408]	; 800cba4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 800ca0e:	4f61      	ldr	r7, [pc, #388]	; (800cb94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800ca10:	4620      	mov	r0, r4
 800ca12:	4798      	blx	r3
 800ca14:	6823      	ldr	r3, [r4, #0]
 800ca16:	4620      	mov	r0, r4
 800ca18:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ca1a:	4798      	blx	r3
 800ca1c:	f8bb 3000 	ldrh.w	r3, [fp]
 800ca20:	9301      	str	r3, [sp, #4]
 800ca22:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800ca26:	f8ba 3000 	ldrh.w	r3, [sl]
 800ca2a:	9302      	str	r3, [sp, #8]
 800ca2c:	883b      	ldrh	r3, [r7, #0]
 800ca2e:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 800ca32:	9303      	str	r3, [sp, #12]
 800ca34:	4b58      	ldr	r3, [pc, #352]	; (800cb98 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800ca36:	9305      	str	r3, [sp, #20]
 800ca38:	881a      	ldrh	r2, [r3, #0]
 800ca3a:	9204      	str	r2, [sp, #16]
 800ca3c:	4640      	mov	r0, r8
 800ca3e:	f008 f83f 	bl	8014ac0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ca42:	8038      	strh	r0, [r7, #0]
 800ca44:	4640      	mov	r0, r8
 800ca46:	f008 f86f 	bl	8014b28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ca4a:	9b05      	ldr	r3, [sp, #20]
 800ca4c:	b280      	uxth	r0, r0
 800ca4e:	8018      	strh	r0, [r3, #0]
 800ca50:	4b52      	ldr	r3, [pc, #328]	; (800cb9c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800ca52:	781b      	ldrb	r3, [r3, #0]
 800ca54:	2b00      	cmp	r3, #0
 800ca56:	d174      	bne.n	800cb42 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 800ca58:	883b      	ldrh	r3, [r7, #0]
 800ca5a:	f8ab 3000 	strh.w	r3, [fp]
 800ca5e:	f8aa 0000 	strh.w	r0, [sl]
 800ca62:	4648      	mov	r0, r9
 800ca64:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	; 0x3c
 800ca68:	f007 ff96 	bl	8014998 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 800ca6c:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 800ca70:	2200      	movs	r2, #0
 800ca72:	4611      	mov	r1, r2
 800ca74:	4628      	mov	r0, r5
 800ca76:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 800ca7a:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 800ca7e:	f7f7 f874 	bl	8003b6a <_ZN8touchgfx8Drawable5setXYEss>
 800ca82:	2301      	movs	r3, #1
 800ca84:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800ca88:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 800ca8c:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 800ca90:	2b00      	cmp	r3, #0
 800ca92:	dd5c      	ble.n	800cb4e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ca94:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800ca98:	2b00      	cmp	r3, #0
 800ca9a:	dd58      	ble.n	800cb4e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 800ca9c:	462a      	mov	r2, r5
 800ca9e:	ab0a      	add	r3, sp, #40	; 0x28
 800caa0:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800caa4:	6851      	ldr	r1, [r2, #4]
 800caa6:	c303      	stmia	r3!, {r0, r1}
 800caa8:	4631      	mov	r1, r6
 800caaa:	a80a      	add	r0, sp, #40	; 0x28
 800caac:	f7ff f936 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 800cab0:	4b38      	ldr	r3, [pc, #224]	; (800cb94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800cab2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800cab6:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 800caba:	2100      	movs	r1, #0
 800cabc:	aa0a      	add	r2, sp, #40	; 0x28
 800cabe:	4b36      	ldr	r3, [pc, #216]	; (800cb98 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800cac0:	910c      	str	r1, [sp, #48]	; 0x30
 800cac2:	e892 0003 	ldmia.w	r2, {r0, r1}
 800cac6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800caca:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800cace:	ab08      	add	r3, sp, #32
 800cad0:	e883 0003 	stmia.w	r3, {r0, r1}
 800cad4:	4618      	mov	r0, r3
 800cad6:	a90c      	add	r1, sp, #48	; 0x30
 800cad8:	f7ff f920 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 800cadc:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
 800cade:	2b00      	cmp	r3, #0
 800cae0:	d13c      	bne.n	800cb5c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 800cae2:	2000      	movs	r0, #0
 800cae4:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 800cae8:	2600      	movs	r6, #0
 800caea:	682a      	ldr	r2, [r5, #0]
 800caec:	696b      	ldr	r3, [r5, #20]
 800caee:	616e      	str	r6, [r5, #20]
 800caf0:	9305      	str	r3, [sp, #20]
 800caf2:	6892      	ldr	r2, [r2, #8]
 800caf4:	a908      	add	r1, sp, #32
 800caf6:	4628      	mov	r0, r5
 800caf8:	4790      	blx	r2
 800cafa:	9b05      	ldr	r3, [sp, #20]
 800cafc:	616b      	str	r3, [r5, #20]
 800cafe:	4652      	mov	r2, sl
 800cb00:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 800cb04:	4649      	mov	r1, r9
 800cb06:	4628      	mov	r0, r5
 800cb08:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800cb0c:	f7f7 f82d 	bl	8003b6a <_ZN8touchgfx8Drawable5setXYEss>
 800cb10:	4b23      	ldr	r3, [pc, #140]	; (800cba0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 800cb12:	9a01      	ldr	r2, [sp, #4]
 800cb14:	801a      	strh	r2, [r3, #0]
 800cb16:	4b23      	ldr	r3, [pc, #140]	; (800cba4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 800cb18:	9a02      	ldr	r2, [sp, #8]
 800cb1a:	801a      	strh	r2, [r3, #0]
 800cb1c:	4b1d      	ldr	r3, [pc, #116]	; (800cb94 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 800cb1e:	9a03      	ldr	r2, [sp, #12]
 800cb20:	801a      	strh	r2, [r3, #0]
 800cb22:	4b1d      	ldr	r3, [pc, #116]	; (800cb98 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 800cb24:	9a04      	ldr	r2, [sp, #16]
 800cb26:	801a      	strh	r2, [r3, #0]
 800cb28:	e9c4 870f 	strd	r8, r7, [r4, #60]	; 0x3c
 800cb2c:	6823      	ldr	r3, [r4, #0]
 800cb2e:	4620      	mov	r0, r4
 800cb30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800cb32:	4798      	blx	r3
 800cb34:	6823      	ldr	r3, [r4, #0]
 800cb36:	4620      	mov	r0, r4
 800cb38:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cb3a:	4798      	blx	r3
 800cb3c:	b00f      	add	sp, #60	; 0x3c
 800cb3e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cb42:	883b      	ldrh	r3, [r7, #0]
 800cb44:	f8ab 0000 	strh.w	r0, [fp]
 800cb48:	f8aa 3000 	strh.w	r3, [sl]
 800cb4c:	e789      	b.n	800ca62 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800cb4e:	462a      	mov	r2, r5
 800cb50:	ab0a      	add	r3, sp, #40	; 0x28
 800cb52:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800cb56:	6851      	ldr	r1, [r2, #4]
 800cb58:	c303      	stmia	r3!, {r0, r1}
 800cb5a:	e7a9      	b.n	800cab0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 800cb5c:	a807      	add	r0, sp, #28
 800cb5e:	f008 f91f 	bl	8014da0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800cb62:	4606      	mov	r6, r0
 800cb64:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 800cb66:	6803      	ldr	r3, [r0, #0]
 800cb68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cb6a:	4798      	blx	r3
 800cb6c:	4286      	cmp	r6, r0
 800cb6e:	d1b8      	bne.n	800cae2 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 800cb70:	f7ff fe6e 	bl	800c850 <_ZN8touchgfx3HAL3lcdEv>
 800cb74:	6803      	ldr	r3, [r0, #0]
 800cb76:	4606      	mov	r6, r0
 800cb78:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800cb7a:	9305      	str	r3, [sp, #20]
 800cb7c:	a807      	add	r0, sp, #28
 800cb7e:	f008 f90f 	bl	8014da0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 800cb82:	9b05      	ldr	r3, [sp, #20]
 800cb84:	4601      	mov	r1, r0
 800cb86:	4630      	mov	r0, r6
 800cb88:	4798      	blx	r3
 800cb8a:	f080 0001 	eor.w	r0, r0, #1
 800cb8e:	b2c0      	uxtb	r0, r0
 800cb90:	e7a8      	b.n	800cae4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 800cb92:	bf00      	nop
 800cb94:	20011e34 	.word	0x20011e34
 800cb98:	20011e36 	.word	0x20011e36
 800cb9c:	20011e38 	.word	0x20011e38
 800cba0:	20011e3a 	.word	0x20011e3a
 800cba4:	20011e3c 	.word	0x20011e3c

0800cba8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 800cba8:	b510      	push	{r4, lr}
 800cbaa:	4b07      	ldr	r3, [pc, #28]	; (800cbc8 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 800cbac:	781b      	ldrb	r3, [r3, #0]
 800cbae:	4604      	mov	r4, r0
 800cbb0:	b13b      	cbz	r3, 800cbc2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800cbb2:	6803      	ldr	r3, [r0, #0]
 800cbb4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cbb6:	4798      	blx	r3
 800cbb8:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800cbba:	4283      	cmp	r3, r0
 800cbbc:	d101      	bne.n	800cbc2 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 800cbbe:	6c20      	ldr	r0, [r4, #64]	; 0x40
 800cbc0:	bd10      	pop	{r4, pc}
 800cbc2:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 800cbc4:	e7fc      	b.n	800cbc0 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 800cbc6:	bf00      	nop
 800cbc8:	20011e3e 	.word	0x20011e3e

0800cbcc <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 800cbcc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cbd0:	b08a      	sub	sp, #40	; 0x28
 800cbd2:	461d      	mov	r5, r3
 800cbd4:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800cbd8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800cbdc:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800cbe0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cbe4:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800cbe8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800cbec:	2400      	movs	r4, #0
 800cbee:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800cbf2:	f8bd 604c 	ldrh.w	r6, [sp, #76]	; 0x4c
 800cbf6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cbfa:	4690      	mov	r8, r2
 800cbfc:	4607      	mov	r7, r0
 800cbfe:	9404      	str	r4, [sp, #16]
 800cc00:	f88d 4020 	strb.w	r4, [sp, #32]
 800cc04:	f7ff ffd0 	bl	800cba8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cc08:	fb06 8505 	mla	r5, r6, r5, r8
 800cc0c:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800cc10:	6878      	ldr	r0, [r7, #4]
 800cc12:	9505      	str	r5, [sp, #20]
 800cc14:	f8ad 601e 	strh.w	r6, [sp, #30]
 800cc18:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800cc1c:	f88d 4021 	strb.w	r4, [sp, #33]	; 0x21
 800cc20:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800cc24:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800cc28:	6803      	ldr	r3, [r0, #0]
 800cc2a:	a901      	add	r1, sp, #4
 800cc2c:	685b      	ldr	r3, [r3, #4]
 800cc2e:	4798      	blx	r3
 800cc30:	b00a      	add	sp, #40	; 0x28
 800cc32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800cc36 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 800cc36:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800cc3a:	b08b      	sub	sp, #44	; 0x2c
 800cc3c:	2400      	movs	r4, #0
 800cc3e:	461d      	mov	r5, r3
 800cc40:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800cc44:	4688      	mov	r8, r1
 800cc46:	4691      	mov	r9, r2
 800cc48:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 800cc4c:	9404      	str	r4, [sp, #16]
 800cc4e:	4607      	mov	r7, r0
 800cc50:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800cc54:	f7ff ffa8 	bl	800cba8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cc58:	fb06 9505 	mla	r5, r6, r5, r9
 800cc5c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800cc60:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cc64:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800cc68:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800cc6c:	6878      	ldr	r0, [r7, #4]
 800cc6e:	9505      	str	r5, [sp, #20]
 800cc70:	f8ad 301a 	strh.w	r3, [sp, #26]
 800cc74:	f8ad 401c 	strh.w	r4, [sp, #28]
 800cc78:	f8ad 601e 	strh.w	r6, [sp, #30]
 800cc7c:	f8cd 8010 	str.w	r8, [sp, #16]
 800cc80:	f8ad 4020 	strh.w	r4, [sp, #32]
 800cc84:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800cc88:	f88d 4023 	strb.w	r4, [sp, #35]	; 0x23
 800cc8c:	f88d 4024 	strb.w	r4, [sp, #36]	; 0x24
 800cc90:	6803      	ldr	r3, [r0, #0]
 800cc92:	a901      	add	r1, sp, #4
 800cc94:	685b      	ldr	r3, [r3, #4]
 800cc96:	4798      	blx	r3
 800cc98:	b00b      	add	sp, #44	; 0x2c
 800cc9a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0800cca0 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 800cca0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cca4:	b08a      	sub	sp, #40	; 0x28
 800cca6:	4698      	mov	r8, r3
 800cca8:	f89d 505c 	ldrb.w	r5, [sp, #92]	; 0x5c
 800ccac:	f89d c054 	ldrb.w	ip, [sp, #84]	; 0x54
 800ccb0:	f8bd 7058 	ldrh.w	r7, [sp, #88]	; 0x58
 800ccb4:	f89d 4060 	ldrb.w	r4, [sp, #96]	; 0x60
 800ccb8:	2300      	movs	r3, #0
 800ccba:	2d0b      	cmp	r5, #11
 800ccbc:	4606      	mov	r6, r0
 800ccbe:	9304      	str	r3, [sp, #16]
 800ccc0:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 800ccc4:	d138      	bne.n	800cd38 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 800ccc6:	2380      	movs	r3, #128	; 0x80
 800ccc8:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800cccc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800ccd0:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ccd4:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ccd8:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ccdc:	f88d 0020 	strb.w	r0, [sp, #32]
 800cce0:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 800cce4:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cce8:	4630      	mov	r0, r6
 800ccea:	9203      	str	r2, [sp, #12]
 800ccec:	f7ff ff5c 	bl	800cba8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ccf0:	2c0b      	cmp	r4, #11
 800ccf2:	bf98      	it	ls
 800ccf4:	4b1b      	ldrls	r3, [pc, #108]	; (800cd64 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 800ccf6:	f8bd 2040 	ldrh.w	r2, [sp, #64]	; 0x40
 800ccfa:	bf98      	it	ls
 800ccfc:	5d19      	ldrbls	r1, [r3, r4]
 800ccfe:	f8ad 701e 	strh.w	r7, [sp, #30]
 800cd02:	bf88      	it	hi
 800cd04:	2100      	movhi	r1, #0
 800cd06:	fb02 8307 	mla	r3, r2, r7, r8
 800cd0a:	10c9      	asrs	r1, r1, #3
 800cd0c:	fb01 0003 	mla	r0, r1, r3, r0
 800cd10:	f89d 3064 	ldrb.w	r3, [sp, #100]	; 0x64
 800cd14:	9005      	str	r0, [sp, #20]
 800cd16:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800cd1a:	6870      	ldr	r0, [r6, #4]
 800cd1c:	f88d 5021 	strb.w	r5, [sp, #33]	; 0x21
 800cd20:	2300      	movs	r3, #0
 800cd22:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800cd26:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800cd2a:	6803      	ldr	r3, [r0, #0]
 800cd2c:	a901      	add	r1, sp, #4
 800cd2e:	685b      	ldr	r3, [r3, #4]
 800cd30:	4798      	blx	r3
 800cd32:	b00a      	add	sp, #40	; 0x28
 800cd34:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cd38:	2d02      	cmp	r5, #2
 800cd3a:	d109      	bne.n	800cd50 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 800cd3c:	28ff      	cmp	r0, #255	; 0xff
 800cd3e:	d105      	bne.n	800cd4c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 800cd40:	f1bc 0f00 	cmp.w	ip, #0
 800cd44:	bf14      	ite	ne
 800cd46:	2340      	movne	r3, #64	; 0x40
 800cd48:	2320      	moveq	r3, #32
 800cd4a:	e7bd      	b.n	800ccc8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800cd4c:	2340      	movs	r3, #64	; 0x40
 800cd4e:	e7bb      	b.n	800ccc8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800cd50:	28ff      	cmp	r0, #255	; 0xff
 800cd52:	d105      	bne.n	800cd60 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 800cd54:	f1bc 0f00 	cmp.w	ip, #0
 800cd58:	bf14      	ite	ne
 800cd5a:	2304      	movne	r3, #4
 800cd5c:	2301      	moveq	r3, #1
 800cd5e:	e7b3      	b.n	800ccc8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800cd60:	2304      	movs	r3, #4
 800cd62:	e7b1      	b.n	800ccc8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 800cd64:	080235ec 	.word	0x080235ec

0800cd68 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 800cd68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cd6c:	b08b      	sub	sp, #44	; 0x2c
 800cd6e:	461d      	mov	r5, r3
 800cd70:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800cd74:	f89d 6060 	ldrb.w	r6, [sp, #96]	; 0x60
 800cd78:	f8bd a05c 	ldrh.w	sl, [sp, #92]	; 0x5c
 800cd7c:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 800cd80:	bf14      	ite	ne
 800cd82:	2308      	movne	r3, #8
 800cd84:	2302      	moveq	r3, #2
 800cd86:	2400      	movs	r4, #0
 800cd88:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800cd8c:	4688      	mov	r8, r1
 800cd8e:	4693      	mov	fp, r2
 800cd90:	9404      	str	r4, [sp, #16]
 800cd92:	4607      	mov	r7, r0
 800cd94:	f7ff ff08 	bl	800cba8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cd98:	2e0b      	cmp	r6, #11
 800cd9a:	bf98      	it	ls
 800cd9c:	4b15      	ldrls	r3, [pc, #84]	; (800cdf4 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 800cd9e:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800cda2:	bf98      	it	ls
 800cda4:	5d9c      	ldrbls	r4, [r3, r6]
 800cda6:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800cdaa:	f8ad 3018 	strh.w	r3, [sp, #24]
 800cdae:	fb05 b50a 	mla	r5, r5, sl, fp
 800cdb2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800cdb6:	f8ad 301a 	strh.w	r3, [sp, #26]
 800cdba:	10e4      	asrs	r4, r4, #3
 800cdbc:	fb04 0405 	mla	r4, r4, r5, r0
 800cdc0:	2300      	movs	r3, #0
 800cdc2:	6878      	ldr	r0, [r7, #4]
 800cdc4:	9405      	str	r4, [sp, #20]
 800cdc6:	f8ad 301c 	strh.w	r3, [sp, #28]
 800cdca:	f8ad a01e 	strh.w	sl, [sp, #30]
 800cdce:	f8cd 8010 	str.w	r8, [sp, #16]
 800cdd2:	f88d 9020 	strb.w	r9, [sp, #32]
 800cdd6:	f88d 2023 	strb.w	r2, [sp, #35]	; 0x23
 800cdda:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800cdde:	f88d 6021 	strb.w	r6, [sp, #33]	; 0x21
 800cde2:	f88d 6022 	strb.w	r6, [sp, #34]	; 0x22
 800cde6:	6803      	ldr	r3, [r0, #0]
 800cde8:	a901      	add	r1, sp, #4
 800cdea:	685b      	ldr	r3, [r3, #4]
 800cdec:	4798      	blx	r3
 800cdee:	b00b      	add	sp, #44	; 0x2c
 800cdf0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800cdf4:	080235ec 	.word	0x080235ec

0800cdf8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800cdf8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cdfc:	461e      	mov	r6, r3
 800cdfe:	4b0a      	ldr	r3, [pc, #40]	; (800ce28 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 800ce00:	460f      	mov	r7, r1
 800ce02:	881d      	ldrh	r5, [r3, #0]
 800ce04:	4690      	mov	r8, r2
 800ce06:	f7ff fd23 	bl	800c850 <_ZN8touchgfx3HAL3lcdEv>
 800ce0a:	6803      	ldr	r3, [r0, #0]
 800ce0c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ce0e:	4798      	blx	r3
 800ce10:	280b      	cmp	r0, #11
 800ce12:	bf9a      	itte	ls
 800ce14:	4b05      	ldrls	r3, [pc, #20]	; (800ce2c <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 800ce16:	5c1c      	ldrbls	r4, [r3, r0]
 800ce18:	2400      	movhi	r4, #0
 800ce1a:	fb08 7005 	mla	r0, r8, r5, r7
 800ce1e:	10e4      	asrs	r4, r4, #3
 800ce20:	fb04 6000 	mla	r0, r4, r0, r6
 800ce24:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ce28:	20011e3a 	.word	0x20011e3a
 800ce2c:	080235ec 	.word	0x080235ec

0800ce30 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 800ce30:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ce32:	b08b      	sub	sp, #44	; 0x2c
 800ce34:	461f      	mov	r7, r3
 800ce36:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 800ce3a:	e9cd 3101 	strd	r3, r1, [sp, #4]
 800ce3e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800ce42:	f8ad 3018 	strh.w	r3, [sp, #24]
 800ce46:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 800ce4a:	f8ad 301a 	strh.w	r3, [sp, #26]
 800ce4e:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800ce52:	f8ad 301c 	strh.w	r3, [sp, #28]
 800ce56:	2500      	movs	r5, #0
 800ce58:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 800ce5c:	f88d 3020 	strb.w	r3, [sp, #32]
 800ce60:	4604      	mov	r4, r0
 800ce62:	4616      	mov	r6, r2
 800ce64:	9504      	str	r5, [sp, #16]
 800ce66:	f7ff fe9f 	bl	800cba8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800ce6a:	463a      	mov	r2, r7
 800ce6c:	4631      	mov	r1, r6
 800ce6e:	4603      	mov	r3, r0
 800ce70:	4620      	mov	r0, r4
 800ce72:	f7ff ffc1 	bl	800cdf8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800ce76:	4b0e      	ldr	r3, [pc, #56]	; (800ceb0 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 800ce78:	9005      	str	r0, [sp, #20]
 800ce7a:	881b      	ldrh	r3, [r3, #0]
 800ce7c:	f8ad 301e 	strh.w	r3, [sp, #30]
 800ce80:	f7ff fce6 	bl	800c850 <_ZN8touchgfx3HAL3lcdEv>
 800ce84:	6803      	ldr	r3, [r0, #0]
 800ce86:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ce88:	4798      	blx	r3
 800ce8a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800ce8c:	f88d 0022 	strb.w	r0, [sp, #34]	; 0x22
 800ce90:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800ce94:	9304      	str	r3, [sp, #16]
 800ce96:	6860      	ldr	r0, [r4, #4]
 800ce98:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 800ce9c:	f88d 3023 	strb.w	r3, [sp, #35]	; 0x23
 800cea0:	f88d 5024 	strb.w	r5, [sp, #36]	; 0x24
 800cea4:	6803      	ldr	r3, [r0, #0]
 800cea6:	a901      	add	r1, sp, #4
 800cea8:	685b      	ldr	r3, [r3, #4]
 800ceaa:	4798      	blx	r3
 800ceac:	b00b      	add	sp, #44	; 0x2c
 800ceae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800ceb0:	20011e3a 	.word	0x20011e3a

0800ceb4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800ceb4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800ceb6:	b08d      	sub	sp, #52	; 0x34
 800ceb8:	466b      	mov	r3, sp
 800ceba:	e883 0006 	stmia.w	r3, {r1, r2}
 800cebe:	2300      	movs	r3, #0
 800cec0:	9306      	str	r3, [sp, #24]
 800cec2:	6803      	ldr	r3, [r0, #0]
 800cec4:	f8bd 6000 	ldrh.w	r6, [sp]
 800cec8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800ceca:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 800cece:	2501      	movs	r5, #1
 800ced0:	9503      	str	r5, [sp, #12]
 800ced2:	4604      	mov	r4, r0
 800ced4:	4798      	blx	r3
 800ced6:	463a      	mov	r2, r7
 800ced8:	4631      	mov	r1, r6
 800ceda:	4603      	mov	r3, r0
 800cedc:	4620      	mov	r0, r4
 800cede:	f7ff ff8b 	bl	800cdf8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800cee2:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800cee4:	9307      	str	r3, [sp, #28]
 800cee6:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800ceea:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ceee:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800cef2:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800cef6:	4b0f      	ldr	r3, [pc, #60]	; (800cf34 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 800cef8:	9004      	str	r0, [sp, #16]
 800cefa:	881b      	ldrh	r3, [r3, #0]
 800cefc:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800cf00:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800cf04:	f7ff fca4 	bl	800c850 <_ZN8touchgfx3HAL3lcdEv>
 800cf08:	6803      	ldr	r3, [r0, #0]
 800cf0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cf0c:	4798      	blx	r3
 800cf0e:	23ff      	movs	r3, #255	; 0xff
 800cf10:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800cf14:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800cf18:	6860      	ldr	r0, [r4, #4]
 800cf1a:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800cf1e:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800cf22:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800cf26:	6803      	ldr	r3, [r0, #0]
 800cf28:	a903      	add	r1, sp, #12
 800cf2a:	685b      	ldr	r3, [r3, #4]
 800cf2c:	4798      	blx	r3
 800cf2e:	6c60      	ldr	r0, [r4, #68]	; 0x44
 800cf30:	b00d      	add	sp, #52	; 0x34
 800cf32:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800cf34:	20011e3a 	.word	0x20011e3a

0800cf38 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 800cf38:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cf3c:	b08c      	sub	sp, #48	; 0x30
 800cf3e:	461e      	mov	r6, r3
 800cf40:	466d      	mov	r5, sp
 800cf42:	2300      	movs	r3, #0
 800cf44:	e885 0006 	stmia.w	r5, {r1, r2}
 800cf48:	9306      	str	r3, [sp, #24]
 800cf4a:	6803      	ldr	r3, [r0, #0]
 800cf4c:	f8bd 7000 	ldrh.w	r7, [sp]
 800cf50:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800cf52:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 800cf56:	2501      	movs	r5, #1
 800cf58:	9503      	str	r5, [sp, #12]
 800cf5a:	4604      	mov	r4, r0
 800cf5c:	4798      	blx	r3
 800cf5e:	4642      	mov	r2, r8
 800cf60:	4639      	mov	r1, r7
 800cf62:	4603      	mov	r3, r0
 800cf64:	4620      	mov	r0, r4
 800cf66:	f7ff ff47 	bl	800cdf8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800cf6a:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800cf6e:	f8ad 3020 	strh.w	r3, [sp, #32]
 800cf72:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800cf76:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800cf7a:	4b11      	ldr	r3, [pc, #68]	; (800cfc0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 800cf7c:	9004      	str	r0, [sp, #16]
 800cf7e:	881b      	ldrh	r3, [r3, #0]
 800cf80:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800cf84:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800cf86:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800cf8a:	9607      	str	r6, [sp, #28]
 800cf8c:	f7ff fc60 	bl	800c850 <_ZN8touchgfx3HAL3lcdEv>
 800cf90:	6803      	ldr	r3, [r0, #0]
 800cf92:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800cf94:	4798      	blx	r3
 800cf96:	23ff      	movs	r3, #255	; 0xff
 800cf98:	f88d 0029 	strb.w	r0, [sp, #41]	; 0x29
 800cf9c:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800cfa0:	6860      	ldr	r0, [r4, #4]
 800cfa2:	f88d 3028 	strb.w	r3, [sp, #40]	; 0x28
 800cfa6:	f88d 502b 	strb.w	r5, [sp, #43]	; 0x2b
 800cfaa:	f88d 502c 	strb.w	r5, [sp, #44]	; 0x2c
 800cfae:	6803      	ldr	r3, [r0, #0]
 800cfb0:	a903      	add	r1, sp, #12
 800cfb2:	685b      	ldr	r3, [r3, #4]
 800cfb4:	4798      	blx	r3
 800cfb6:	4630      	mov	r0, r6
 800cfb8:	b00c      	add	sp, #48	; 0x30
 800cfba:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cfbe:	bf00      	nop
 800cfc0:	20011e3a 	.word	0x20011e3a

0800cfc4 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 800cfc4:	b5f0      	push	{r4, r5, r6, r7, lr}
 800cfc6:	b085      	sub	sp, #20
 800cfc8:	ac02      	add	r4, sp, #8
 800cfca:	e884 0006 	stmia.w	r4, {r1, r2}
 800cfce:	4605      	mov	r5, r0
 800cfd0:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 800cfd4:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 800cfd8:	f7ff fde6 	bl	800cba8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800cfdc:	463a      	mov	r2, r7
 800cfde:	4603      	mov	r3, r0
 800cfe0:	4631      	mov	r1, r6
 800cfe2:	4628      	mov	r0, r5
 800cfe4:	f7ff ff08 	bl	800cdf8 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800cfe8:	4a05      	ldr	r2, [pc, #20]	; (800d000 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 800cfea:	682b      	ldr	r3, [r5, #0]
 800cfec:	8812      	ldrh	r2, [r2, #0]
 800cfee:	9200      	str	r2, [sp, #0]
 800cff0:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 800cff2:	e894 0006 	ldmia.w	r4, {r1, r2}
 800cff6:	4603      	mov	r3, r0
 800cff8:	4628      	mov	r0, r5
 800cffa:	47b0      	blx	r6
 800cffc:	b005      	add	sp, #20
 800cffe:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800d000:	20011e3a 	.word	0x20011e3a

0800d004 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 800d004:	b570      	push	{r4, r5, r6, lr}
 800d006:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 800d00a:	4604      	mov	r4, r0
 800d00c:	b19b      	cbz	r3, 800d036 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 800d00e:	2002      	movs	r0, #2
 800d010:	f7f4 f87e 	bl	8001110 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 800d014:	2300      	movs	r3, #0
 800d016:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 800d01a:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 800d01e:	6823      	ldr	r3, [r4, #0]
 800d020:	4620      	mov	r0, r4
 800d022:	f8d3 50b8 	ldr.w	r5, [r3, #184]	; 0xb8
 800d026:	f7ff fdbf 	bl	800cba8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d02a:	462b      	mov	r3, r5
 800d02c:	4601      	mov	r1, r0
 800d02e:	4620      	mov	r0, r4
 800d030:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d034:	4718      	bx	r3
 800d036:	bd70      	pop	{r4, r5, r6, pc}

0800d038 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 800d038:	b570      	push	{r4, r5, r6, lr}
 800d03a:	4605      	mov	r5, r0
 800d03c:	460c      	mov	r4, r1
 800d03e:	2003      	movs	r0, #3
 800d040:	b149      	cbz	r1, 800d056 <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 800d042:	f7f4 f809 	bl	8001058 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 800d046:	6928      	ldr	r0, [r5, #16]
 800d048:	b168      	cbz	r0, 800d066 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800d04a:	6803      	ldr	r3, [r0, #0]
 800d04c:	695b      	ldr	r3, [r3, #20]
 800d04e:	2101      	movs	r1, #1
 800d050:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d054:	4718      	bx	r3
 800d056:	f7f4 f82d 	bl	80010b4 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 800d05a:	6928      	ldr	r0, [r5, #16]
 800d05c:	b118      	cbz	r0, 800d066 <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 800d05e:	6803      	ldr	r3, [r0, #0]
 800d060:	4621      	mov	r1, r4
 800d062:	695b      	ldr	r3, [r3, #20]
 800d064:	e7f4      	b.n	800d050 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 800d066:	bd70      	pop	{r4, r5, r6, pc}

0800d068 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 800d068:	b538      	push	{r3, r4, r5, lr}
 800d06a:	f890 3078 	ldrb.w	r3, [r0, #120]	; 0x78
 800d06e:	428b      	cmp	r3, r1
 800d070:	4604      	mov	r4, r0
 800d072:	460d      	mov	r5, r1
 800d074:	d006      	beq.n	800d084 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 800d076:	6803      	ldr	r3, [r0, #0]
 800d078:	b929      	cbnz	r1, 800d086 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 800d07a:	f8d3 30c8 	ldr.w	r3, [r3, #200]	; 0xc8
 800d07e:	4798      	blx	r3
 800d080:	f884 5078 	strb.w	r5, [r4, #120]	; 0x78
 800d084:	bd38      	pop	{r3, r4, r5, pc}
 800d086:	f8d3 30cc 	ldr.w	r3, [r3, #204]	; 0xcc
 800d08a:	e7f8      	b.n	800d07e <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

0800d08c <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 800d08c:	b510      	push	{r4, lr}
 800d08e:	4b0d      	ldr	r3, [pc, #52]	; (800d0c4 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 800d090:	781b      	ldrb	r3, [r3, #0]
 800d092:	4604      	mov	r4, r0
 800d094:	b95b      	cbnz	r3, 800d0ae <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800d096:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 800d09a:	2b02      	cmp	r3, #2
 800d09c:	d007      	beq.n	800d0ae <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800d09e:	6840      	ldr	r0, [r0, #4]
 800d0a0:	f000 f912 	bl	800d2c8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 800d0a4:	b118      	cbz	r0, 800d0ae <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800d0a6:	6862      	ldr	r2, [r4, #4]
 800d0a8:	7a53      	ldrb	r3, [r2, #9]
 800d0aa:	2b00      	cmp	r3, #0
 800d0ac:	d0fc      	beq.n	800d0a8 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800d0ae:	f7f4 fad3 	bl	8001658 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800d0b2:	4620      	mov	r0, r4
 800d0b4:	2100      	movs	r1, #0
 800d0b6:	f7ff ffd7 	bl	800d068 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800d0ba:	4620      	mov	r0, r4
 800d0bc:	f7ff fd74 	bl	800cba8 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 800d0c0:	bd10      	pop	{r4, pc}
 800d0c2:	bf00      	nop
 800d0c4:	20011e3e 	.word	0x20011e3e

0800d0c8 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 800d0c8:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 800d0cc:	1a13      	subs	r3, r2, r0
 800d0ce:	4258      	negs	r0, r3
 800d0d0:	4158      	adcs	r0, r3
 800d0d2:	4770      	bx	lr

0800d0d4 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 800d0d4:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 800d0d8:	1a9b      	subs	r3, r3, r2
 800d0da:	2b00      	cmp	r3, #0
 800d0dc:	bfdc      	itt	le
 800d0de:	6882      	ldrle	r2, [r0, #8]
 800d0e0:	189b      	addle	r3, r3, r2
 800d0e2:	2b01      	cmp	r3, #1
 800d0e4:	bfcc      	ite	gt
 800d0e6:	2000      	movgt	r0, #0
 800d0e8:	2001      	movle	r0, #1
 800d0ea:	4770      	bx	lr

0800d0ec <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 800d0ec:	6902      	ldr	r2, [r0, #16]
 800d0ee:	6843      	ldr	r3, [r0, #4]
 800d0f0:	2024      	movs	r0, #36	; 0x24
 800d0f2:	fb00 3002 	mla	r0, r0, r2, r3
 800d0f6:	4770      	bx	lr

0800d0f8 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 800d0f8:	6803      	ldr	r3, [r0, #0]
 800d0fa:	691b      	ldr	r3, [r3, #16]
 800d0fc:	4718      	bx	r3

0800d0fe <_ZN8touchgfx13DMA_Interface7executeEv>:
 800d0fe:	b570      	push	{r4, r5, r6, lr}
 800d100:	2301      	movs	r3, #1
 800d102:	7203      	strb	r3, [r0, #8]
 800d104:	4604      	mov	r4, r0
 800d106:	6840      	ldr	r0, [r0, #4]
 800d108:	6803      	ldr	r3, [r0, #0]
 800d10a:	699b      	ldr	r3, [r3, #24]
 800d10c:	4798      	blx	r3
 800d10e:	6803      	ldr	r3, [r0, #0]
 800d110:	2b40      	cmp	r3, #64	; 0x40
 800d112:	4605      	mov	r5, r0
 800d114:	d00c      	beq.n	800d130 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d116:	d810      	bhi.n	800d13a <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 800d118:	2b04      	cmp	r3, #4
 800d11a:	d01d      	beq.n	800d158 <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 800d11c:	d804      	bhi.n	800d128 <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 800d11e:	2b01      	cmp	r3, #1
 800d120:	d006      	beq.n	800d130 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d122:	2b02      	cmp	r3, #2
 800d124:	d02c      	beq.n	800d180 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 800d126:	bd70      	pop	{r4, r5, r6, pc}
 800d128:	2b08      	cmp	r3, #8
 800d12a:	d01d      	beq.n	800d168 <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 800d12c:	2b20      	cmp	r3, #32
 800d12e:	d1fa      	bne.n	800d126 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 800d130:	6823      	ldr	r3, [r4, #0]
 800d132:	4620      	mov	r0, r4
 800d134:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d136:	4798      	blx	r3
 800d138:	e013      	b.n	800d162 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 800d13a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800d13e:	d0f7      	beq.n	800d130 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d140:	d804      	bhi.n	800d14c <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 800d142:	2b80      	cmp	r3, #128	; 0x80
 800d144:	d0f4      	beq.n	800d130 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d146:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800d14a:	e7f0      	b.n	800d12e <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 800d14c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800d150:	d0ee      	beq.n	800d130 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 800d152:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800d156:	e7e5      	b.n	800d124 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 800d158:	6823      	ldr	r3, [r4, #0]
 800d15a:	7f01      	ldrb	r1, [r0, #28]
 800d15c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d15e:	4620      	mov	r0, r4
 800d160:	4798      	blx	r3
 800d162:	6823      	ldr	r3, [r4, #0]
 800d164:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800d166:	e006      	b.n	800d176 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 800d168:	6823      	ldr	r3, [r4, #0]
 800d16a:	7f01      	ldrb	r1, [r0, #28]
 800d16c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d16e:	4620      	mov	r0, r4
 800d170:	4798      	blx	r3
 800d172:	6823      	ldr	r3, [r4, #0]
 800d174:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800d176:	4629      	mov	r1, r5
 800d178:	4620      	mov	r0, r4
 800d17a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d17e:	4718      	bx	r3
 800d180:	6823      	ldr	r3, [r4, #0]
 800d182:	4620      	mov	r0, r4
 800d184:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800d186:	4798      	blx	r3
 800d188:	e7f3      	b.n	800d172 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

0800d18a <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 800d18a:	4770      	bx	lr

0800d18c <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 800d18c:	4770      	bx	lr

0800d18e <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800d18e:	4770      	bx	lr

0800d190 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 800d190:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 800d194:	1ad2      	subs	r2, r2, r3
 800d196:	2a00      	cmp	r2, #0
 800d198:	b510      	push	{r4, lr}
 800d19a:	bfdc      	itt	le
 800d19c:	6884      	ldrle	r4, [r0, #8]
 800d19e:	1912      	addle	r2, r2, r4
 800d1a0:	2a01      	cmp	r2, #1
 800d1a2:	dd16      	ble.n	800d1d2 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 800d1a4:	6842      	ldr	r2, [r0, #4]
 800d1a6:	2424      	movs	r4, #36	; 0x24
 800d1a8:	fb04 2303 	mla	r3, r4, r3, r2
 800d1ac:	f101 0220 	add.w	r2, r1, #32
 800d1b0:	f851 4b04 	ldr.w	r4, [r1], #4
 800d1b4:	f843 4b04 	str.w	r4, [r3], #4
 800d1b8:	4291      	cmp	r1, r2
 800d1ba:	d1f9      	bne.n	800d1b0 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 800d1bc:	780a      	ldrb	r2, [r1, #0]
 800d1be:	701a      	strb	r2, [r3, #0]
 800d1c0:	68c3      	ldr	r3, [r0, #12]
 800d1c2:	6882      	ldr	r2, [r0, #8]
 800d1c4:	f3bf 8f5b 	dmb	ish
 800d1c8:	3301      	adds	r3, #1
 800d1ca:	429a      	cmp	r2, r3
 800d1cc:	bfd8      	it	le
 800d1ce:	1a9b      	suble	r3, r3, r2
 800d1d0:	60c3      	str	r3, [r0, #12]
 800d1d2:	bd10      	pop	{r4, pc}

0800d1d4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 800d1d4:	6903      	ldr	r3, [r0, #16]
 800d1d6:	6882      	ldr	r2, [r0, #8]
 800d1d8:	f3bf 8f5b 	dmb	ish
 800d1dc:	3301      	adds	r3, #1
 800d1de:	429a      	cmp	r2, r3
 800d1e0:	bfd8      	it	le
 800d1e2:	1a9b      	suble	r3, r3, r2
 800d1e4:	6103      	str	r3, [r0, #16]
 800d1e6:	4770      	bx	lr

0800d1e8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 800d1e8:	b570      	push	{r4, r5, r6, lr}
 800d1ea:	4604      	mov	r4, r0
 800d1ec:	460e      	mov	r6, r1
 800d1ee:	6860      	ldr	r0, [r4, #4]
 800d1f0:	6803      	ldr	r3, [r0, #0]
 800d1f2:	685b      	ldr	r3, [r3, #4]
 800d1f4:	4798      	blx	r3
 800d1f6:	2800      	cmp	r0, #0
 800d1f8:	d1f9      	bne.n	800d1ee <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 800d1fa:	4d0d      	ldr	r5, [pc, #52]	; (800d230 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 800d1fc:	6828      	ldr	r0, [r5, #0]
 800d1fe:	6803      	ldr	r3, [r0, #0]
 800d200:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800d202:	4798      	blx	r3
 800d204:	f7f4 fa36 	bl	8001674 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 800d208:	6828      	ldr	r0, [r5, #0]
 800d20a:	2101      	movs	r1, #1
 800d20c:	f7ff ff2c 	bl	800d068 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 800d210:	6860      	ldr	r0, [r4, #4]
 800d212:	6803      	ldr	r3, [r0, #0]
 800d214:	4631      	mov	r1, r6
 800d216:	689b      	ldr	r3, [r3, #8]
 800d218:	4798      	blx	r3
 800d21a:	6823      	ldr	r3, [r4, #0]
 800d21c:	4620      	mov	r0, r4
 800d21e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800d220:	4798      	blx	r3
 800d222:	6828      	ldr	r0, [r5, #0]
 800d224:	6803      	ldr	r3, [r0, #0]
 800d226:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d22a:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800d22c:	4718      	bx	r3
 800d22e:	bf00      	nop
 800d230:	20011e40 	.word	0x20011e40

0800d234 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 800d234:	b508      	push	{r3, lr}
 800d236:	f7f4 fa0f 	bl	8001658 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800d23a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 800d23e:	f7f4 ba13 	b.w	8001668 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

0800d242 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800d242:	b510      	push	{r4, lr}
 800d244:	2114      	movs	r1, #20
 800d246:	4604      	mov	r4, r0
 800d248:	f013 fa32 	bl	80206b0 <_ZdlPvj>
 800d24c:	4620      	mov	r0, r4
 800d24e:	bd10      	pop	{r4, pc}

0800d250 <_ZN8touchgfx13DMA_Interface5startEv>:
 800d250:	b510      	push	{r4, lr}
 800d252:	4604      	mov	r4, r0
 800d254:	6840      	ldr	r0, [r0, #4]
 800d256:	6803      	ldr	r3, [r0, #0]
 800d258:	681b      	ldr	r3, [r3, #0]
 800d25a:	4798      	blx	r3
 800d25c:	b948      	cbnz	r0, 800d272 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d25e:	7a63      	ldrb	r3, [r4, #9]
 800d260:	b13b      	cbz	r3, 800d272 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d262:	7a23      	ldrb	r3, [r4, #8]
 800d264:	b92b      	cbnz	r3, 800d272 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 800d266:	6823      	ldr	r3, [r4, #0]
 800d268:	4620      	mov	r0, r4
 800d26a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d26c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d270:	4718      	bx	r3
 800d272:	bd10      	pop	{r4, pc}

0800d274 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 800d274:	b570      	push	{r4, r5, r6, lr}
 800d276:	4604      	mov	r4, r0
 800d278:	6840      	ldr	r0, [r0, #4]
 800d27a:	6803      	ldr	r3, [r0, #0]
 800d27c:	681b      	ldr	r3, [r3, #0]
 800d27e:	4798      	blx	r3
 800d280:	4605      	mov	r5, r0
 800d282:	b930      	cbnz	r0, 800d292 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800d284:	7a23      	ldrb	r3, [r4, #8]
 800d286:	b123      	cbz	r3, 800d292 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 800d288:	6860      	ldr	r0, [r4, #4]
 800d28a:	6803      	ldr	r3, [r0, #0]
 800d28c:	695b      	ldr	r3, [r3, #20]
 800d28e:	4798      	blx	r3
 800d290:	7225      	strb	r5, [r4, #8]
 800d292:	6860      	ldr	r0, [r4, #4]
 800d294:	6803      	ldr	r3, [r0, #0]
 800d296:	681b      	ldr	r3, [r3, #0]
 800d298:	4798      	blx	r3
 800d29a:	b928      	cbnz	r0, 800d2a8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 800d29c:	6823      	ldr	r3, [r4, #0]
 800d29e:	4620      	mov	r0, r4
 800d2a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d2a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d2a6:	4718      	bx	r3
 800d2a8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800d2ac:	f7f4 b9ea 	b.w	8001684 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

0800d2b0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 800d2b0:	b510      	push	{r4, lr}
 800d2b2:	4c04      	ldr	r4, [pc, #16]	; (800d2c4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 800d2b4:	6082      	str	r2, [r0, #8]
 800d2b6:	2200      	movs	r2, #0
 800d2b8:	e9c0 4100 	strd	r4, r1, [r0]
 800d2bc:	e9c0 2203 	strd	r2, r2, [r0, #12]
 800d2c0:	bd10      	pop	{r4, pc}
 800d2c2:	bf00      	nop
 800d2c4:	08023600 	.word	0x08023600

0800d2c8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 800d2c8:	6840      	ldr	r0, [r0, #4]
 800d2ca:	6803      	ldr	r3, [r0, #0]
 800d2cc:	681b      	ldr	r3, [r3, #0]
 800d2ce:	4718      	bx	r3

0800d2d0 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE>:
 800d2d0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800d2d2:	6803      	ldr	r3, [r0, #0]
 800d2d4:	460d      	mov	r5, r1
 800d2d6:	4604      	mov	r4, r0
 800d2d8:	4601      	mov	r1, r0
 800d2da:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800d2dc:	a802      	add	r0, sp, #8
 800d2de:	4798      	blx	r3
 800d2e0:	6828      	ldr	r0, [r5, #0]
 800d2e2:	6869      	ldr	r1, [r5, #4]
 800d2e4:	466b      	mov	r3, sp
 800d2e6:	c303      	stmia	r3!, {r0, r1}
 800d2e8:	4668      	mov	r0, sp
 800d2ea:	4619      	mov	r1, r3
 800d2ec:	f7fe fd16 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 800d2f0:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d2f2:	b1a8      	cbz	r0, 800d320 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800d2f4:	6803      	ldr	r3, [r0, #0]
 800d2f6:	1d21      	adds	r1, r4, #4
 800d2f8:	68db      	ldr	r3, [r3, #12]
 800d2fa:	4798      	blx	r3
 800d2fc:	b180      	cbz	r0, 800d320 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800d2fe:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800d302:	2b00      	cmp	r3, #0
 800d304:	dd0c      	ble.n	800d320 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800d306:	f9bd 5006 	ldrsh.w	r5, [sp, #6]
 800d30a:	2d00      	cmp	r5, #0
 800d30c:	dd08      	ble.n	800d320 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x50>
 800d30e:	4a2d      	ldr	r2, [pc, #180]	; (800d3c4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xf4>)
 800d310:	7812      	ldrb	r2, [r2, #0]
 800d312:	b13a      	cbz	r2, 800d324 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x54>
 800d314:	2a01      	cmp	r2, #1
 800d316:	d02d      	beq.n	800d374 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xa4>
 800d318:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800d31a:	6803      	ldr	r3, [r0, #0]
 800d31c:	691b      	ldr	r3, [r3, #16]
 800d31e:	4798      	blx	r3
 800d320:	b004      	add	sp, #16
 800d322:	bd70      	pop	{r4, r5, r6, pc}
 800d324:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d328:	441d      	add	r5, r3
 800d32a:	b2ad      	uxth	r5, r5
 800d32c:	b22e      	sxth	r6, r5
 800d32e:	f9bd 3002 	ldrsh.w	r3, [sp, #2]
 800d332:	42b3      	cmp	r3, r6
 800d334:	daf0      	bge.n	800d318 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d336:	6823      	ldr	r3, [r4, #0]
 800d338:	4669      	mov	r1, sp
 800d33a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d33c:	4620      	mov	r0, r4
 800d33e:	4798      	blx	r3
 800d340:	b940      	cbnz	r0, 800d354 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800d342:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800d346:	2b01      	cmp	r3, #1
 800d348:	d004      	beq.n	800d354 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x84>
 800d34a:	3301      	adds	r3, #1
 800d34c:	105b      	asrs	r3, r3, #1
 800d34e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d352:	e7f0      	b.n	800d336 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x66>
 800d354:	f8bd 2006 	ldrh.w	r2, [sp, #6]
 800d358:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800d35c:	4413      	add	r3, r2
 800d35e:	b29b      	uxth	r3, r3
 800d360:	441a      	add	r2, r3
 800d362:	b212      	sxth	r2, r2
 800d364:	4296      	cmp	r6, r2
 800d366:	f8ad 3002 	strh.w	r3, [sp, #2]
 800d36a:	dae0      	bge.n	800d32e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800d36c:	1aeb      	subs	r3, r5, r3
 800d36e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800d372:	e7dc      	b.n	800d32e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x5e>
 800d374:	f8bd 5000 	ldrh.w	r5, [sp]
 800d378:	441d      	add	r5, r3
 800d37a:	b2ad      	uxth	r5, r5
 800d37c:	b22e      	sxth	r6, r5
 800d37e:	f9bd 3000 	ldrsh.w	r3, [sp]
 800d382:	42b3      	cmp	r3, r6
 800d384:	dac8      	bge.n	800d318 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0x48>
 800d386:	6823      	ldr	r3, [r4, #0]
 800d388:	4669      	mov	r1, sp
 800d38a:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800d38c:	4620      	mov	r0, r4
 800d38e:	4798      	blx	r3
 800d390:	b940      	cbnz	r0, 800d3a4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800d392:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 800d396:	2b01      	cmp	r3, #1
 800d398:	d004      	beq.n	800d3a4 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xd4>
 800d39a:	3301      	adds	r3, #1
 800d39c:	105b      	asrs	r3, r3, #1
 800d39e:	f8ad 3004 	strh.w	r3, [sp, #4]
 800d3a2:	e7f0      	b.n	800d386 <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xb6>
 800d3a4:	f8bd 2004 	ldrh.w	r2, [sp, #4]
 800d3a8:	f8bd 3000 	ldrh.w	r3, [sp]
 800d3ac:	4413      	add	r3, r2
 800d3ae:	b29b      	uxth	r3, r3
 800d3b0:	441a      	add	r2, r3
 800d3b2:	b212      	sxth	r2, r2
 800d3b4:	4296      	cmp	r6, r2
 800d3b6:	f8ad 3000 	strh.w	r3, [sp]
 800d3ba:	dae0      	bge.n	800d37e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800d3bc:	1aeb      	subs	r3, r5, r3
 800d3be:	f8ad 3004 	strh.w	r3, [sp, #4]
 800d3c2:	e7dc      	b.n	800d37e <_ZNK8touchgfx12CanvasWidget4drawERKNS_4RectE+0xae>
 800d3c4:	20011e38 	.word	0x20011e38

0800d3c8 <_ZNK8touchgfx12CanvasWidget10invalidateEv>:
 800d3c8:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800d3ca:	6803      	ldr	r3, [r0, #0]
 800d3cc:	4604      	mov	r4, r0
 800d3ce:	4601      	mov	r1, r0
 800d3d0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800d3d2:	4668      	mov	r0, sp
 800d3d4:	4798      	blx	r3
 800d3d6:	2100      	movs	r1, #0
 800d3d8:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800d3dc:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800d3e0:	9102      	str	r1, [sp, #8]
 800d3e2:	4668      	mov	r0, sp
 800d3e4:	a902      	add	r1, sp, #8
 800d3e6:	f8ad 200c 	strh.w	r2, [sp, #12]
 800d3ea:	f8ad 300e 	strh.w	r3, [sp, #14]
 800d3ee:	f7fe fc95 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 800d3f2:	6823      	ldr	r3, [r4, #0]
 800d3f4:	4669      	mov	r1, sp
 800d3f6:	691b      	ldr	r3, [r3, #16]
 800d3f8:	4620      	mov	r0, r4
 800d3fa:	4798      	blx	r3
 800d3fc:	b004      	add	sp, #16
 800d3fe:	bd10      	pop	{r4, pc}

0800d400 <_ZN8touchgfx12CanvasWidgetC1Ev>:
 800d400:	2101      	movs	r1, #1
 800d402:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800d406:	490b      	ldr	r1, [pc, #44]	; (800d434 <_ZN8touchgfx12CanvasWidgetC1Ev+0x34>)
 800d408:	6001      	str	r1, [r0, #0]
 800d40a:	2200      	movs	r2, #0
 800d40c:	21ff      	movs	r1, #255	; 0xff
 800d40e:	8082      	strh	r2, [r0, #4]
 800d410:	80c2      	strh	r2, [r0, #6]
 800d412:	8102      	strh	r2, [r0, #8]
 800d414:	8142      	strh	r2, [r0, #10]
 800d416:	8182      	strh	r2, [r0, #12]
 800d418:	81c2      	strh	r2, [r0, #14]
 800d41a:	8202      	strh	r2, [r0, #16]
 800d41c:	8242      	strh	r2, [r0, #18]
 800d41e:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800d422:	61c2      	str	r2, [r0, #28]
 800d424:	8402      	strh	r2, [r0, #32]
 800d426:	8442      	strh	r2, [r0, #34]	; 0x22
 800d428:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800d42c:	f880 1026 	strb.w	r1, [r0, #38]	; 0x26
 800d430:	6282      	str	r2, [r0, #40]	; 0x28
 800d432:	4770      	bx	lr
 800d434:	08023624 	.word	0x08023624

0800d438 <_ZN8touchgfx17AbstractDataGraph9setScaleXEib>:
 800d438:	6301      	str	r1, [r0, #48]	; 0x30
 800d43a:	4770      	bx	lr

0800d43c <_ZN8touchgfx17AbstractDataGraph9setScaleYEib>:
 800d43c:	6341      	str	r1, [r0, #52]	; 0x34
 800d43e:	4770      	bx	lr

0800d440 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE>:
 800d440:	b530      	push	{r4, r5, lr}
 800d442:	460d      	mov	r5, r1
 800d444:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d446:	8949      	ldrh	r1, [r1, #10]
 800d448:	1ac9      	subs	r1, r1, r3
 800d44a:	6803      	ldr	r3, [r0, #0]
 800d44c:	b085      	sub	sp, #20
 800d44e:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800d452:	f10d 0206 	add.w	r2, sp, #6
 800d456:	b209      	sxth	r1, r1
 800d458:	4604      	mov	r4, r0
 800d45a:	4798      	blx	r3
 800d45c:	b1a0      	cbz	r0, 800d488 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800d45e:	792b      	ldrb	r3, [r5, #4]
 800d460:	b993      	cbnz	r3, 800d488 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800d462:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800d466:	b178      	cbz	r0, 800d488 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800d468:	6803      	ldr	r3, [r0, #0]
 800d46a:	68db      	ldr	r3, [r3, #12]
 800d46c:	4798      	blx	r3
 800d46e:	b158      	cbz	r0, 800d488 <_ZN8touchgfx17AbstractDataGraph15handleDragEventERKNS_9DragEventE+0x48>
 800d470:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800d474:	f8d4 0128 	ldr.w	r0, [r4, #296]	; 0x128
 800d478:	f8ad 3008 	strh.w	r3, [sp, #8]
 800d47c:	9503      	str	r5, [sp, #12]
 800d47e:	6803      	ldr	r3, [r0, #0]
 800d480:	aa02      	add	r2, sp, #8
 800d482:	689b      	ldr	r3, [r3, #8]
 800d484:	4621      	mov	r1, r4
 800d486:	4798      	blx	r3
 800d488:	b005      	add	sp, #20
 800d48a:	bd30      	pop	{r4, r5, pc}

0800d48c <_ZN8touchgfx15StaticDataGraph24setGraphRangeXAutoScaledEbi>:
 800d48c:	b430      	push	{r4, r5}
 800d48e:	f9b0 511e 	ldrsh.w	r5, [r0, #286]	; 0x11e
 800d492:	b1cd      	cbz	r5, 800d4c8 <_ZN8touchgfx15StaticDataGraph24setGraphRangeXAutoScaledEbi+0x3c>
 800d494:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 800d498:	f8d0 413c 	ldr.w	r4, [r0, #316]	; 0x13c
 800d49c:	3d01      	subs	r5, #1
 800d49e:	6823      	ldr	r3, [r4, #0]
 800d4a0:	f854 4025 	ldr.w	r4, [r4, r5, lsl #2]
 800d4a4:	b139      	cbz	r1, 800d4b6 <_ZN8touchgfx15StaticDataGraph24setGraphRangeXAutoScaledEbi+0x2a>
 800d4a6:	4293      	cmp	r3, r2
 800d4a8:	f1c2 0100 	rsb	r1, r2, #0
 800d4ac:	bfa8      	it	ge
 800d4ae:	4613      	movge	r3, r2
 800d4b0:	428c      	cmp	r4, r1
 800d4b2:	bfb8      	it	lt
 800d4b4:	460c      	movlt	r4, r1
 800d4b6:	1a99      	subs	r1, r3, r2
 800d4b8:	4422      	add	r2, r4
 800d4ba:	4291      	cmp	r1, r2
 800d4bc:	d004      	beq.n	800d4c8 <_ZN8touchgfx15StaticDataGraph24setGraphRangeXAutoScaledEbi+0x3c>
 800d4be:	6803      	ldr	r3, [r0, #0]
 800d4c0:	bc30      	pop	{r4, r5}
 800d4c2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800d4c6:	4718      	bx	r3
 800d4c8:	bc30      	pop	{r4, r5}
 800d4ca:	4770      	bx	lr

0800d4cc <_ZN8touchgfx15StaticDataGraph11deleteValueEi>:
 800d4cc:	b410      	push	{r4}
 800d4ce:	f9b0 211e 	ldrsh.w	r2, [r0, #286]	; 0x11e
 800d4d2:	2300      	movs	r3, #0
 800d4d4:	429a      	cmp	r2, r3
 800d4d6:	dd0e      	ble.n	800d4f6 <_ZN8touchgfx15StaticDataGraph11deleteValueEi+0x2a>
 800d4d8:	f8d0 413c 	ldr.w	r4, [r0, #316]	; 0x13c
 800d4dc:	f854 4023 	ldr.w	r4, [r4, r3, lsl #2]
 800d4e0:	428c      	cmp	r4, r1
 800d4e2:	d106      	bne.n	800d4f2 <_ZN8touchgfx15StaticDataGraph11deleteValueEi+0x26>
 800d4e4:	6802      	ldr	r2, [r0, #0]
 800d4e6:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d4ea:	f8d2 2130 	ldr.w	r2, [r2, #304]	; 0x130
 800d4ee:	4619      	mov	r1, r3
 800d4f0:	4710      	bx	r2
 800d4f2:	3301      	adds	r3, #1
 800d4f4:	e7ee      	b.n	800d4d4 <_ZN8touchgfx15StaticDataGraph11deleteValueEi+0x8>
 800d4f6:	f04f 30ff 	mov.w	r0, #4294967295
 800d4fa:	f85d 4b04 	ldr.w	r4, [sp], #4
 800d4fe:	4770      	bx	lr

0800d500 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii>:
 800d500:	b510      	push	{r4, lr}
 800d502:	428a      	cmp	r2, r1
 800d504:	bfbe      	ittt	lt
 800d506:	460b      	movlt	r3, r1
 800d508:	4611      	movlt	r1, r2
 800d50a:	461a      	movlt	r2, r3
 800d50c:	f8d0 312c 	ldr.w	r3, [r0, #300]	; 0x12c
 800d510:	428b      	cmp	r3, r1
 800d512:	4604      	mov	r4, r0
 800d514:	d103      	bne.n	800d51e <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x1e>
 800d516:	f8d0 3130 	ldr.w	r3, [r0, #304]	; 0x130
 800d51a:	4293      	cmp	r3, r2
 800d51c:	d011      	beq.n	800d542 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeXScaledEii+0x42>
 800d51e:	f8c4 112c 	str.w	r1, [r4, #300]	; 0x12c
 800d522:	f8c4 2130 	str.w	r2, [r4, #304]	; 0x130
 800d526:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800d52a:	f005 f9f1 	bl	8012910 <_ZNK8touchgfx8Drawable10invalidateEv>
 800d52e:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800d532:	f005 f9ed 	bl	8012910 <_ZNK8touchgfx8Drawable10invalidateEv>
 800d536:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800d53a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d53e:	f005 b9e7 	b.w	8012910 <_ZNK8touchgfx8Drawable10invalidateEv>
 800d542:	bd10      	pop	{r4, pc}

0800d544 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii>:
 800d544:	b510      	push	{r4, lr}
 800d546:	428a      	cmp	r2, r1
 800d548:	bfbe      	ittt	lt
 800d54a:	460b      	movlt	r3, r1
 800d54c:	4611      	movlt	r1, r2
 800d54e:	461a      	movlt	r2, r3
 800d550:	f8d0 3134 	ldr.w	r3, [r0, #308]	; 0x134
 800d554:	428b      	cmp	r3, r1
 800d556:	4604      	mov	r4, r0
 800d558:	d103      	bne.n	800d562 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x1e>
 800d55a:	f8d0 3138 	ldr.w	r3, [r0, #312]	; 0x138
 800d55e:	4293      	cmp	r3, r2
 800d560:	d011      	beq.n	800d586 <_ZN8touchgfx17AbstractDataGraph20setGraphRangeYScaledEii+0x42>
 800d562:	f8c4 1134 	str.w	r1, [r4, #308]	; 0x134
 800d566:	f8c4 2138 	str.w	r2, [r4, #312]	; 0x138
 800d56a:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800d56e:	f005 f9cf 	bl	8012910 <_ZNK8touchgfx8Drawable10invalidateEv>
 800d572:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800d576:	f005 f9cb 	bl	8012910 <_ZNK8touchgfx8Drawable10invalidateEv>
 800d57a:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800d57e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d582:	f005 b9c5 	b.w	8012910 <_ZNK8touchgfx8Drawable10invalidateEv>
 800d586:	bd10      	pop	{r4, pc}

0800d588 <_ZN8touchgfx17AbstractDataGraph5clearEv>:
 800d588:	2300      	movs	r3, #0
 800d58a:	f8a0 311e 	strh.w	r3, [r0, #286]	; 0x11e
 800d58e:	3038      	adds	r0, #56	; 0x38
 800d590:	f005 b9be 	b.w	8012910 <_ZNK8touchgfx8Drawable10invalidateEv>

0800d594 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi>:
 800d594:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d598:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800d59c:	4604      	mov	r4, r0
 800d59e:	4688      	mov	r8, r1
 800d5a0:	4616      	mov	r6, r2
 800d5a2:	2b00      	cmp	r3, #0
 800d5a4:	d04e      	beq.n	800d644 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0xb0>
 800d5a6:	6803      	ldr	r3, [r0, #0]
 800d5a8:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800d5ac:	4798      	blx	r3
 800d5ae:	6823      	ldr	r3, [r4, #0]
 800d5b0:	4605      	mov	r5, r0
 800d5b2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800d5b6:	4620      	mov	r0, r4
 800d5b8:	4798      	blx	r3
 800d5ba:	4285      	cmp	r5, r0
 800d5bc:	bfc8      	it	gt
 800d5be:	b22b      	sxthgt	r3, r5
 800d5c0:	f8d4 e13c 	ldr.w	lr, [r4, #316]	; 0x13c
 800d5c4:	bfc4      	itt	gt
 800d5c6:	4605      	movgt	r5, r0
 800d5c8:	4618      	movgt	r0, r3
 800d5ca:	2300      	movs	r3, #0
 800d5cc:	f85e 2023 	ldr.w	r2, [lr, r3, lsl #2]
 800d5d0:	42aa      	cmp	r2, r5
 800d5d2:	ea4f 0183 	mov.w	r1, r3, lsl #2
 800d5d6:	da05      	bge.n	800d5e4 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0x50>
 800d5d8:	f9b4 711e 	ldrsh.w	r7, [r4, #286]	; 0x11e
 800d5dc:	42bb      	cmp	r3, r7
 800d5de:	da01      	bge.n	800d5e4 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0x50>
 800d5e0:	3301      	adds	r3, #1
 800d5e2:	e7f3      	b.n	800d5cc <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0x38>
 800d5e4:	4282      	cmp	r2, r0
 800d5e6:	dc2d      	bgt.n	800d644 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0xb0>
 800d5e8:	f8d4 c140 	ldr.w	ip, [r4, #320]	; 0x140
 800d5ec:	f85c 5001 	ldr.w	r5, [ip, r1]
 800d5f0:	3301      	adds	r3, #1
 800d5f2:	462a      	mov	r2, r5
 800d5f4:	f85e 1023 	ldr.w	r1, [lr, r3, lsl #2]
 800d5f8:	4288      	cmp	r0, r1
 800d5fa:	dd0d      	ble.n	800d618 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0x84>
 800d5fc:	f9b4 111e 	ldrsh.w	r1, [r4, #286]	; 0x11e
 800d600:	428b      	cmp	r3, r1
 800d602:	da09      	bge.n	800d618 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0x84>
 800d604:	f85c 7023 	ldr.w	r7, [ip, r3, lsl #2]
 800d608:	42bd      	cmp	r5, r7
 800d60a:	bfa8      	it	ge
 800d60c:	463d      	movge	r5, r7
 800d60e:	42ba      	cmp	r2, r7
 800d610:	bfb8      	it	lt
 800d612:	463a      	movlt	r2, r7
 800d614:	3301      	adds	r3, #1
 800d616:	e7ed      	b.n	800d5f4 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0x60>
 800d618:	f1b8 0f00 	cmp.w	r8, #0
 800d61c:	d007      	beq.n	800d62e <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0x9a>
 800d61e:	42b5      	cmp	r5, r6
 800d620:	f1c6 0300 	rsb	r3, r6, #0
 800d624:	bfa8      	it	ge
 800d626:	4635      	movge	r5, r6
 800d628:	429a      	cmp	r2, r3
 800d62a:	bfb8      	it	lt
 800d62c:	461a      	movlt	r2, r3
 800d62e:	1ba9      	subs	r1, r5, r6
 800d630:	4432      	add	r2, r6
 800d632:	4291      	cmp	r1, r2
 800d634:	d006      	beq.n	800d644 <_ZN8touchgfx15StaticDataGraph24setGraphRangeYAutoScaledEbi+0xb0>
 800d636:	6823      	ldr	r3, [r4, #0]
 800d638:	4620      	mov	r0, r4
 800d63a:	f8d3 30bc 	ldr.w	r3, [r3, #188]	; 0xbc
 800d63e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800d642:	4718      	bx	r3
 800d644:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d648 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE>:
 800d648:	b530      	push	{r4, r5, lr}
 800d64a:	790b      	ldrb	r3, [r1, #4]
 800d64c:	2b02      	cmp	r3, #2
 800d64e:	b085      	sub	sp, #20
 800d650:	4604      	mov	r4, r0
 800d652:	460d      	mov	r5, r1
 800d654:	d020      	beq.n	800d698 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800d656:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800d658:	88c9      	ldrh	r1, [r1, #6]
 800d65a:	1ac9      	subs	r1, r1, r3
 800d65c:	6803      	ldr	r3, [r0, #0]
 800d65e:	f10d 0206 	add.w	r2, sp, #6
 800d662:	f8d3 3104 	ldr.w	r3, [r3, #260]	; 0x104
 800d666:	b209      	sxth	r1, r1
 800d668:	4798      	blx	r3
 800d66a:	b1a8      	cbz	r0, 800d698 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800d66c:	792b      	ldrb	r3, [r5, #4]
 800d66e:	2b01      	cmp	r3, #1
 800d670:	d812      	bhi.n	800d698 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800d672:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800d676:	b178      	cbz	r0, 800d698 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800d678:	6803      	ldr	r3, [r0, #0]
 800d67a:	68db      	ldr	r3, [r3, #12]
 800d67c:	4798      	blx	r3
 800d67e:	b158      	cbz	r0, 800d698 <_ZN8touchgfx17AbstractDataGraph16handleClickEventERKNS_10ClickEventE+0x50>
 800d680:	f9bd 3006 	ldrsh.w	r3, [sp, #6]
 800d684:	f8d4 0124 	ldr.w	r0, [r4, #292]	; 0x124
 800d688:	f8ad 3008 	strh.w	r3, [sp, #8]
 800d68c:	9503      	str	r5, [sp, #12]
 800d68e:	6803      	ldr	r3, [r0, #0]
 800d690:	aa02      	add	r2, sp, #8
 800d692:	689b      	ldr	r3, [r3, #8]
 800d694:	4621      	mov	r1, r4
 800d696:	4798      	blx	r3
 800d698:	b005      	add	sp, #20
 800d69a:	bd30      	pop	{r4, r5, pc}

0800d69c <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_>:
 800d69c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d6a0:	4604      	mov	r4, r0
 800d6a2:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800d6a6:	9f06      	ldr	r7, [sp, #24]
 800d6a8:	4690      	mov	r8, r2
 800d6aa:	461e      	mov	r6, r3
 800d6ac:	b928      	cbnz	r0, 800d6ba <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1e>
 800d6ae:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d6b2:	803b      	strh	r3, [r7, #0]
 800d6b4:	8033      	strh	r3, [r6, #0]
 800d6b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d6ba:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800d6be:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 800d6c2:	1883      	adds	r3, r0, r2
 800d6c4:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800d6c8:	1ad2      	subs	r2, r2, r3
 800d6ca:	b212      	sxth	r2, r2
 800d6cc:	2a01      	cmp	r2, #1
 800d6ce:	dc07      	bgt.n	800d6e0 <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x44>
 800d6d0:	2300      	movs	r3, #0
 800d6d2:	8033      	strh	r3, [r6, #0]
 800d6d4:	f8b4 311e 	ldrh.w	r3, [r4, #286]	; 0x11e
 800d6d8:	3b01      	subs	r3, #1
 800d6da:	803b      	strh	r3, [r7, #0]
 800d6dc:	2001      	movs	r0, #1
 800d6de:	e7ea      	b.n	800d6b6 <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800d6e0:	f8d4 5130 	ldr.w	r5, [r4, #304]	; 0x130
 800d6e4:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800d6e8:	1a08      	subs	r0, r1, r0
 800d6ea:	3a01      	subs	r2, #1
 800d6ec:	1ae9      	subs	r1, r5, r3
 800d6ee:	0140      	lsls	r0, r0, #5
 800d6f0:	f005 faf8 	bl	8012ce4 <_ZN8touchgfx6muldivElll>
 800d6f4:	f8d4 112c 	ldr.w	r1, [r4, #300]	; 0x12c
 800d6f8:	f8b4 2118 	ldrh.w	r2, [r4, #280]	; 0x118
 800d6fc:	eb00 1541 	add.w	r5, r0, r1, lsl #5
 800d700:	f9b4 0116 	ldrsh.w	r0, [r4, #278]	; 0x116
 800d704:	1883      	adds	r3, r0, r2
 800d706:	f8b4 2040 	ldrh.w	r2, [r4, #64]	; 0x40
 800d70a:	1ad2      	subs	r2, r2, r3
 800d70c:	f8d4 3130 	ldr.w	r3, [r4, #304]	; 0x130
 800d710:	b212      	sxth	r2, r2
 800d712:	eba8 0000 	sub.w	r0, r8, r0
 800d716:	1a59      	subs	r1, r3, r1
 800d718:	3a01      	subs	r2, #1
 800d71a:	0140      	lsls	r0, r0, #5
 800d71c:	f005 fae2 	bl	8012ce4 <_ZN8touchgfx6muldivElll>
 800d720:	f8d4 312c 	ldr.w	r3, [r4, #300]	; 0x12c
 800d724:	eb00 1043 	add.w	r0, r0, r3, lsl #5
 800d728:	4285      	cmp	r5, r0
 800d72a:	bfde      	ittt	le
 800d72c:	4603      	movle	r3, r0
 800d72e:	4628      	movle	r0, r5
 800d730:	461d      	movle	r5, r3
 800d732:	2d00      	cmp	r5, #0
 800d734:	bfa8      	it	ge
 800d736:	351f      	addge	r5, #31
 800d738:	f04f 0320 	mov.w	r3, #32
 800d73c:	bfa8      	it	ge
 800d73e:	116d      	asrge	r5, r5, #5
 800d740:	fb90 f0f3 	sdiv	r0, r0, r3
 800d744:	bfb8      	it	lt
 800d746:	fb95 f5f3 	sdivlt	r5, r5, r3
 800d74a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800d74e:	8033      	strh	r3, [r6, #0]
 800d750:	f9b4 211e 	ldrsh.w	r2, [r4, #286]	; 0x11e
 800d754:	f9b6 3000 	ldrsh.w	r3, [r6]
 800d758:	1e51      	subs	r1, r2, #1
 800d75a:	428b      	cmp	r3, r1
 800d75c:	da06      	bge.n	800d76c <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd0>
 800d75e:	3301      	adds	r3, #1
 800d760:	f8d4 113c 	ldr.w	r1, [r4, #316]	; 0x13c
 800d764:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 800d768:	4288      	cmp	r0, r1
 800d76a:	daf0      	bge.n	800d74e <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xb2>
 800d76c:	803a      	strh	r2, [r7, #0]
 800d76e:	f06f 4040 	mvn.w	r0, #3221225472	; 0xc0000000
 800d772:	f9b7 3000 	ldrsh.w	r3, [r7]
 800d776:	2b00      	cmp	r3, #0
 800d778:	dd23      	ble.n	800d7c2 <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x126>
 800d77a:	181a      	adds	r2, r3, r0
 800d77c:	f8d4 113c 	ldr.w	r1, [r4, #316]	; 0x13c
 800d780:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 800d784:	42aa      	cmp	r2, r5
 800d786:	db10      	blt.n	800d7aa <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x10e>
 800d788:	3b01      	subs	r3, #1
 800d78a:	803b      	strh	r3, [r7, #0]
 800d78c:	e7f1      	b.n	800d772 <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xd6>
 800d78e:	ea22 72e2 	bic.w	r2, r2, r2, asr #31
 800d792:	8032      	strh	r2, [r6, #0]
 800d794:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800d798:	f9b7 2000 	ldrsh.w	r2, [r7]
 800d79c:	4293      	cmp	r3, r2
 800d79e:	bfdc      	itt	le
 800d7a0:	f103 33ff 	addle.w	r3, r3, #4294967295
 800d7a4:	b21a      	sxthle	r2, r3
 800d7a6:	803a      	strh	r2, [r7, #0]
 800d7a8:	e798      	b.n	800d6dc <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x40>
 800d7aa:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800d7ae:	f9b6 2000 	ldrsh.w	r2, [r6]
 800d7b2:	3b01      	subs	r3, #1
 800d7b4:	429a      	cmp	r2, r3
 800d7b6:	dbea      	blt.n	800d78e <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0xf2>
 800d7b8:	b21b      	sxth	r3, r3
 800d7ba:	803b      	strh	r3, [r7, #0]
 800d7bc:	2000      	movs	r0, #0
 800d7be:	8033      	strh	r3, [r6, #0]
 800d7c0:	e779      	b.n	800d6b6 <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
 800d7c2:	2000      	movs	r0, #0
 800d7c4:	8038      	strh	r0, [r7, #0]
 800d7c6:	8030      	strh	r0, [r6, #0]
 800d7c8:	e775      	b.n	800d6b6 <_ZNK8touchgfx15StaticDataGraph24xScreenRangeToIndexRangeEssRsS1_+0x1a>
	...

0800d7cc <_ZN8touchgfx9ContainerC1Ev>:
 800d7cc:	2101      	movs	r1, #1
 800d7ce:	2200      	movs	r2, #0
 800d7d0:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800d7d4:	4909      	ldr	r1, [pc, #36]	; (800d7fc <_ZN8touchgfx9ContainerC1Ev+0x30>)
 800d7d6:	8082      	strh	r2, [r0, #4]
 800d7d8:	80c2      	strh	r2, [r0, #6]
 800d7da:	8102      	strh	r2, [r0, #8]
 800d7dc:	8142      	strh	r2, [r0, #10]
 800d7de:	8182      	strh	r2, [r0, #12]
 800d7e0:	81c2      	strh	r2, [r0, #14]
 800d7e2:	8202      	strh	r2, [r0, #16]
 800d7e4:	8242      	strh	r2, [r0, #18]
 800d7e6:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800d7ea:	61c2      	str	r2, [r0, #28]
 800d7ec:	8402      	strh	r2, [r0, #32]
 800d7ee:	8442      	strh	r2, [r0, #34]	; 0x22
 800d7f0:	f880 2024 	strb.w	r2, [r0, #36]	; 0x24
 800d7f4:	6001      	str	r1, [r0, #0]
 800d7f6:	6282      	str	r2, [r0, #40]	; 0x28
 800d7f8:	4770      	bx	lr
 800d7fa:	bf00      	nop
 800d7fc:	08023498 	.word	0x08023498

0800d800 <_ZNK8touchgfx7CWRUtil2Q55roundEv>:
 800d800:	6800      	ldr	r0, [r0, #0]
 800d802:	2800      	cmp	r0, #0
 800d804:	bfbd      	ittte	lt
 800d806:	380f      	sublt	r0, #15
 800d808:	2320      	movlt	r3, #32
 800d80a:	fb90 f0f3 	sdivlt	r0, r0, r3
 800d80e:	3010      	addge	r0, #16
 800d810:	bfa8      	it	ge
 800d812:	1140      	asrge	r0, r0, #5
 800d814:	4770      	bx	lr

0800d816 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs>:
 800d816:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d81a:	4605      	mov	r5, r0
 800d81c:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800d820:	4688      	mov	r8, r1
 800d822:	4691      	mov	r9, r2
 800d824:	469a      	mov	sl, r3
 800d826:	b360      	cbz	r0, 800d882 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6c>
 800d828:	2700      	movs	r7, #0
 800d82a:	f04f 3bff 	mov.w	fp, #4294967295
 800d82e:	f9b5 311e 	ldrsh.w	r3, [r5, #286]	; 0x11e
 800d832:	b23e      	sxth	r6, r7
 800d834:	42b3      	cmp	r3, r6
 800d836:	dd23      	ble.n	800d880 <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x6a>
 800d838:	682b      	ldr	r3, [r5, #0]
 800d83a:	4631      	mov	r1, r6
 800d83c:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800d840:	4628      	mov	r0, r5
 800d842:	4798      	blx	r3
 800d844:	9001      	str	r0, [sp, #4]
 800d846:	a801      	add	r0, sp, #4
 800d848:	f7ff ffda 	bl	800d800 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d84c:	682b      	ldr	r3, [r5, #0]
 800d84e:	eba0 0008 	sub.w	r0, r0, r8
 800d852:	b204      	sxth	r4, r0
 800d854:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800d858:	4631      	mov	r1, r6
 800d85a:	4628      	mov	r0, r5
 800d85c:	4798      	blx	r3
 800d85e:	9001      	str	r0, [sp, #4]
 800d860:	a801      	add	r0, sp, #4
 800d862:	f7ff ffcd 	bl	800d800 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d866:	eba0 0009 	sub.w	r0, r0, r9
 800d86a:	fb10 f000 	smulbb	r0, r0, r0
 800d86e:	fb04 0404 	mla	r4, r4, r4, r0
 800d872:	455c      	cmp	r4, fp
 800d874:	bf3c      	itt	cc
 800d876:	f8aa 6000 	strhcc.w	r6, [sl]
 800d87a:	46a3      	movcc	fp, r4
 800d87c:	3701      	adds	r7, #1
 800d87e:	e7d6      	b.n	800d82e <_ZN8touchgfx17AbstractDataGraph26getNearestIndexForScreenXYEssRs+0x18>
 800d880:	2001      	movs	r0, #1
 800d882:	b003      	add	sp, #12
 800d884:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800d888 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs>:
 800d888:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800d88c:	4604      	mov	r4, r0
 800d88e:	f9b0 011e 	ldrsh.w	r0, [r0, #286]	; 0x11e
 800d892:	4688      	mov	r8, r1
 800d894:	4691      	mov	r9, r2
 800d896:	b1f8      	cbz	r0, 800d8d8 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x50>
 800d898:	2500      	movs	r5, #0
 800d89a:	f04f 37ff 	mov.w	r7, #4294967295
 800d89e:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800d8a2:	b22e      	sxth	r6, r5
 800d8a4:	42b3      	cmp	r3, r6
 800d8a6:	dd16      	ble.n	800d8d6 <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x4e>
 800d8a8:	6823      	ldr	r3, [r4, #0]
 800d8aa:	4631      	mov	r1, r6
 800d8ac:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800d8b0:	4620      	mov	r0, r4
 800d8b2:	4798      	blx	r3
 800d8b4:	9001      	str	r0, [sp, #4]
 800d8b6:	a801      	add	r0, sp, #4
 800d8b8:	f7ff ffa2 	bl	800d800 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800d8bc:	b200      	sxth	r0, r0
 800d8be:	eba0 0008 	sub.w	r0, r0, r8
 800d8c2:	2800      	cmp	r0, #0
 800d8c4:	bfb8      	it	lt
 800d8c6:	4240      	neglt	r0, r0
 800d8c8:	42b8      	cmp	r0, r7
 800d8ca:	bf3c      	itt	cc
 800d8cc:	f8a9 6000 	strhcc.w	r6, [r9]
 800d8d0:	4607      	movcc	r7, r0
 800d8d2:	3501      	adds	r5, #1
 800d8d4:	e7e3      	b.n	800d89e <_ZNK8touchgfx17AbstractDataGraph25getNearestIndexForScreenXEsRs+0x16>
 800d8d6:	2001      	movs	r0, #1
 800d8d8:	b003      	add	sp, #12
 800d8da:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

0800d8de <_ZN8touchgfx17AbstractDataGraph19setGraphAreaPaddingEssss>:
 800d8de:	f8a0 3118 	strh.w	r3, [r0, #280]	; 0x118
 800d8e2:	f9bd 3000 	ldrsh.w	r3, [sp]
 800d8e6:	f8a0 1114 	strh.w	r1, [r0, #276]	; 0x114
 800d8ea:	f8a0 2116 	strh.w	r2, [r0, #278]	; 0x116
 800d8ee:	f8a0 311a 	strh.w	r3, [r0, #282]	; 0x11a
 800d8f2:	4770      	bx	lr

0800d8f4 <_ZN8touchgfx17AbstractDataGraph15addGraphElementERNS_20AbstractGraphElementE>:
 800d8f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d8f6:	4604      	mov	r4, r0
 800d8f8:	3038      	adds	r0, #56	; 0x38
 800d8fa:	460d      	mov	r5, r1
 800d8fc:	f7fe f888 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800d900:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800d904:	9200      	str	r2, [sp, #0]
 800d906:	2200      	movs	r2, #0
 800d908:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800d90c:	4611      	mov	r1, r2
 800d90e:	4628      	mov	r0, r5
 800d910:	f7f6 f938 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
 800d914:	b003      	add	sp, #12
 800d916:	bd30      	pop	{r4, r5, pc}

0800d918 <_ZN8touchgfx17AbstractDataGraph14addLeftElementERNS_23AbstractGraphDecorationE>:
 800d918:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d91a:	4604      	mov	r4, r0
 800d91c:	3064      	adds	r0, #100	; 0x64
 800d91e:	460d      	mov	r5, r1
 800d920:	f7fe f876 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800d924:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800d928:	9200      	str	r2, [sp, #0]
 800d92a:	2200      	movs	r2, #0
 800d92c:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800d930:	4611      	mov	r1, r2
 800d932:	4628      	mov	r0, r5
 800d934:	f7f6 f926 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
 800d938:	b003      	add	sp, #12
 800d93a:	bd30      	pop	{r4, r5, pc}

0800d93c <_ZN8touchgfx17AbstractDataGraph16addBottomElementERNS_23AbstractGraphDecorationE>:
 800d93c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d93e:	4604      	mov	r4, r0
 800d940:	30e8      	adds	r0, #232	; 0xe8
 800d942:	460d      	mov	r5, r1
 800d944:	f7fe f864 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800d948:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800d94c:	9200      	str	r2, [sp, #0]
 800d94e:	2200      	movs	r2, #0
 800d950:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800d954:	4611      	mov	r1, r2
 800d956:	4628      	mov	r0, r5
 800d958:	f7f6 f914 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
 800d95c:	b003      	add	sp, #12
 800d95e:	bd30      	pop	{r4, r5, pc}

0800d960 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>:
 800d960:	b538      	push	{r3, r4, r5, lr}
 800d962:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800d966:	428b      	cmp	r3, r1
 800d968:	460d      	mov	r5, r1
 800d96a:	dd08      	ble.n	800d97e <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800d96c:	6e04      	ldr	r4, [r0, #96]	; 0x60
 800d96e:	b134      	cbz	r4, 800d97e <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0x1e>
 800d970:	6823      	ldr	r3, [r4, #0]
 800d972:	4620      	mov	r0, r4
 800d974:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800d976:	4629      	mov	r1, r5
 800d978:	4798      	blx	r3
 800d97a:	69a4      	ldr	r4, [r4, #24]
 800d97c:	e7f7      	b.n	800d96e <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs+0xe>
 800d97e:	bd38      	pop	{r3, r4, r5, pc}

0800d980 <_ZN8touchgfx15StaticDataGraph11deleteIndexEi>:
 800d980:	b570      	push	{r4, r5, r6, lr}
 800d982:	4605      	mov	r5, r0
 800d984:	b20e      	sxth	r6, r1
 800d986:	460c      	mov	r4, r1
 800d988:	4631      	mov	r1, r6
 800d98a:	f7ff ffe9 	bl	800d960 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800d98e:	f8b5 311e 	ldrh.w	r3, [r5, #286]	; 0x11e
 800d992:	3b01      	subs	r3, #1
 800d994:	f8a5 311e 	strh.w	r3, [r5, #286]	; 0x11e
 800d998:	00a3      	lsls	r3, r4, #2
 800d99a:	f9b5 111e 	ldrsh.w	r1, [r5, #286]	; 0x11e
 800d99e:	42a1      	cmp	r1, r4
 800d9a0:	f103 0204 	add.w	r2, r3, #4
 800d9a4:	dd0a      	ble.n	800d9bc <_ZN8touchgfx15StaticDataGraph11deleteIndexEi+0x3c>
 800d9a6:	f8d5 113c 	ldr.w	r1, [r5, #316]	; 0x13c
 800d9aa:	5888      	ldr	r0, [r1, r2]
 800d9ac:	50c8      	str	r0, [r1, r3]
 800d9ae:	f8d5 1140 	ldr.w	r1, [r5, #320]	; 0x140
 800d9b2:	5888      	ldr	r0, [r1, r2]
 800d9b4:	50c8      	str	r0, [r1, r3]
 800d9b6:	3401      	adds	r4, #1
 800d9b8:	4613      	mov	r3, r2
 800d9ba:	e7ee      	b.n	800d99a <_ZN8touchgfx15StaticDataGraph11deleteIndexEi+0x1a>
 800d9bc:	4630      	mov	r0, r6
 800d9be:	bd70      	pop	{r4, r5, r6, pc}

0800d9c0 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>:
 800d9c0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800d9c2:	6e05      	ldr	r5, [r0, #96]	; 0x60
 800d9c4:	4604      	mov	r4, r0
 800d9c6:	b15d      	cbz	r5, 800d9e0 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x20>
 800d9c8:	f9b4 2042 	ldrsh.w	r2, [r4, #66]	; 0x42
 800d9cc:	9200      	str	r2, [sp, #0]
 800d9ce:	2200      	movs	r2, #0
 800d9d0:	4628      	mov	r0, r5
 800d9d2:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800d9d6:	4611      	mov	r1, r2
 800d9d8:	f7f6 f8d4 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
 800d9dc:	69ad      	ldr	r5, [r5, #24]
 800d9de:	e7f2      	b.n	800d9c6 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x6>
 800d9e0:	f8d4 50e4 	ldr.w	r5, [r4, #228]	; 0xe4
 800d9e4:	b15d      	cbz	r5, 800d9fe <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x3e>
 800d9e6:	f9b4 20c6 	ldrsh.w	r2, [r4, #198]	; 0xc6
 800d9ea:	9200      	str	r2, [sp, #0]
 800d9ec:	2200      	movs	r2, #0
 800d9ee:	4628      	mov	r0, r5
 800d9f0:	f9b4 30c4 	ldrsh.w	r3, [r4, #196]	; 0xc4
 800d9f4:	4611      	mov	r1, r2
 800d9f6:	f7f6 f8c5 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
 800d9fa:	69ad      	ldr	r5, [r5, #24]
 800d9fc:	e7f2      	b.n	800d9e4 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x24>
 800d9fe:	f8d4 508c 	ldr.w	r5, [r4, #140]	; 0x8c
 800da02:	b15d      	cbz	r5, 800da1c <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x5c>
 800da04:	f9b4 206e 	ldrsh.w	r2, [r4, #110]	; 0x6e
 800da08:	9200      	str	r2, [sp, #0]
 800da0a:	2200      	movs	r2, #0
 800da0c:	4628      	mov	r0, r5
 800da0e:	f9b4 306c 	ldrsh.w	r3, [r4, #108]	; 0x6c
 800da12:	4611      	mov	r1, r2
 800da14:	f7f6 f8b6 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
 800da18:	69ad      	ldr	r5, [r5, #24]
 800da1a:	e7f2      	b.n	800da02 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x42>
 800da1c:	f8d4 50b8 	ldr.w	r5, [r4, #184]	; 0xb8
 800da20:	b15d      	cbz	r5, 800da3a <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7a>
 800da22:	f9b4 209a 	ldrsh.w	r2, [r4, #154]	; 0x9a
 800da26:	9200      	str	r2, [sp, #0]
 800da28:	2200      	movs	r2, #0
 800da2a:	4628      	mov	r0, r5
 800da2c:	f9b4 3098 	ldrsh.w	r3, [r4, #152]	; 0x98
 800da30:	4611      	mov	r1, r2
 800da32:	f7f6 f8a7 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
 800da36:	69ad      	ldr	r5, [r5, #24]
 800da38:	e7f2      	b.n	800da20 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x60>
 800da3a:	f8d4 5110 	ldr.w	r5, [r4, #272]	; 0x110
 800da3e:	b15d      	cbz	r5, 800da58 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x98>
 800da40:	f9b4 20f2 	ldrsh.w	r2, [r4, #242]	; 0xf2
 800da44:	9200      	str	r2, [sp, #0]
 800da46:	2200      	movs	r2, #0
 800da48:	4628      	mov	r0, r5
 800da4a:	f9b4 30f0 	ldrsh.w	r3, [r4, #240]	; 0xf0
 800da4e:	4611      	mov	r1, r2
 800da50:	f7f6 f898 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
 800da54:	69ad      	ldr	r5, [r5, #24]
 800da56:	e7f2      	b.n	800da3e <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv+0x7e>
 800da58:	6823      	ldr	r3, [r4, #0]
 800da5a:	695b      	ldr	r3, [r3, #20]
 800da5c:	4620      	mov	r0, r4
 800da5e:	b003      	add	sp, #12
 800da60:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800da64:	4718      	bx	r3

0800da66 <_ZN8touchgfx17AbstractDataGraph8setWidthEs>:
 800da66:	b430      	push	{r4, r5}
 800da68:	f8b0 4098 	ldrh.w	r4, [r0, #152]	; 0x98
 800da6c:	f8a0 10c4 	strh.w	r1, [r0, #196]	; 0xc4
 800da70:	b28a      	uxth	r2, r1
 800da72:	1b15      	subs	r5, r2, r4
 800da74:	f8a0 5094 	strh.w	r5, [r0, #148]	; 0x94
 800da78:	f8b0 506c 	ldrh.w	r5, [r0, #108]	; 0x6c
 800da7c:	f8a0 10f0 	strh.w	r1, [r0, #240]	; 0xf0
 800da80:	442c      	add	r4, r5
 800da82:	1b12      	subs	r2, r2, r4
 800da84:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800da88:	8101      	strh	r1, [r0, #8]
 800da8a:	bc30      	pop	{r4, r5}
 800da8c:	f7ff bf98 	b.w	800d9c0 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800da90 <_ZN8touchgfx17AbstractDataGraph9setHeightEs>:
 800da90:	b430      	push	{r4, r5}
 800da92:	f8b0 40f2 	ldrh.w	r4, [r0, #242]	; 0xf2
 800da96:	f8a0 106e 	strh.w	r1, [r0, #110]	; 0x6e
 800da9a:	b28a      	uxth	r2, r1
 800da9c:	1b15      	subs	r5, r2, r4
 800da9e:	f8a0 50ee 	strh.w	r5, [r0, #238]	; 0xee
 800daa2:	f8b0 50c6 	ldrh.w	r5, [r0, #198]	; 0xc6
 800daa6:	f8a0 109a 	strh.w	r1, [r0, #154]	; 0x9a
 800daaa:	442c      	add	r4, r5
 800daac:	1b12      	subs	r2, r2, r4
 800daae:	f8a0 2042 	strh.w	r2, [r0, #66]	; 0x42
 800dab2:	8141      	strh	r1, [r0, #10]
 800dab4:	bc30      	pop	{r4, r5}
 800dab6:	f7ff bf83 	b.w	800d9c0 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>

0800daba <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>:
 800daba:	e92d 47f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, r9, sl, lr}
 800dabe:	f9bd 7028 	ldrsh.w	r7, [sp, #40]	; 0x28
 800dac2:	fa1f fa83 	uxth.w	sl, r3
 800dac6:	4699      	mov	r9, r3
 800dac8:	8903      	ldrh	r3, [r0, #8]
 800daca:	4604      	mov	r4, r0
 800dacc:	4615      	mov	r5, r2
 800dace:	fa1f f887 	uxth.w	r8, r7
 800dad2:	4452      	add	r2, sl
 800dad4:	8940      	ldrh	r0, [r0, #10]
 800dad6:	1a9b      	subs	r3, r3, r2
 800dad8:	eb08 0201 	add.w	r2, r8, r1
 800dadc:	1a80      	subs	r0, r0, r2
 800dade:	b200      	sxth	r0, r0
 800dae0:	460e      	mov	r6, r1
 800dae2:	9000      	str	r0, [sp, #0]
 800dae4:	460a      	mov	r2, r1
 800dae6:	f104 0038 	add.w	r0, r4, #56	; 0x38
 800daea:	4629      	mov	r1, r5
 800daec:	b21b      	sxth	r3, r3
 800daee:	f7f6 f849 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
 800daf2:	2200      	movs	r2, #0
 800daf4:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800daf8:	9600      	str	r6, [sp, #0]
 800dafa:	4611      	mov	r1, r2
 800dafc:	f104 00bc 	add.w	r0, r4, #188	; 0xbc
 800db00:	f7f6 f840 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
 800db04:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800db08:	9300      	str	r3, [sp, #0]
 800db0a:	2200      	movs	r2, #0
 800db0c:	462b      	mov	r3, r5
 800db0e:	4611      	mov	r1, r2
 800db10:	f104 0064 	add.w	r0, r4, #100	; 0x64
 800db14:	f7f6 f836 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
 800db18:	8921      	ldrh	r1, [r4, #8]
 800db1a:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800db1e:	9300      	str	r3, [sp, #0]
 800db20:	eba1 010a 	sub.w	r1, r1, sl
 800db24:	464b      	mov	r3, r9
 800db26:	f104 0090 	add.w	r0, r4, #144	; 0x90
 800db2a:	2200      	movs	r2, #0
 800db2c:	b209      	sxth	r1, r1
 800db2e:	f7f6 f829 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
 800db32:	8962      	ldrh	r2, [r4, #10]
 800db34:	f9b4 3008 	ldrsh.w	r3, [r4, #8]
 800db38:	9700      	str	r7, [sp, #0]
 800db3a:	eba2 0208 	sub.w	r2, r2, r8
 800db3e:	f104 00e8 	add.w	r0, r4, #232	; 0xe8
 800db42:	b212      	sxth	r2, r2
 800db44:	2100      	movs	r1, #0
 800db46:	f7f6 f81d 	bl	8003b84 <_ZN8touchgfx8Drawable11setPositionEssss>
 800db4a:	4620      	mov	r0, r4
 800db4c:	b002      	add	sp, #8
 800db4e:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800db52:	f7ff bf35 	b.w	800d9c0 <_ZN8touchgfx17AbstractDataGraph19updateAreasPositionEv>
	...

0800db58 <_ZN8touchgfx17AbstractDataGraphC1Es>:
 800db58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db5c:	b085      	sub	sp, #20
 800db5e:	4604      	mov	r4, r0
 800db60:	9103      	str	r1, [sp, #12]
 800db62:	f7ff fe33 	bl	800d7cc <_ZN8touchgfx9ContainerC1Ev>
 800db66:	4b2d      	ldr	r3, [pc, #180]	; (800dc1c <_ZN8touchgfx17AbstractDataGraphC1Es+0xc4>)
 800db68:	6023      	str	r3, [r4, #0]
 800db6a:	2601      	movs	r6, #1
 800db6c:	23ff      	movs	r3, #255	; 0xff
 800db6e:	f104 0b38 	add.w	fp, r4, #56	; 0x38
 800db72:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
 800db76:	f104 0964 	add.w	r9, r4, #100	; 0x64
 800db7a:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800db7e:	4658      	mov	r0, fp
 800db80:	f7ff fe24 	bl	800d7cc <_ZN8touchgfx9ContainerC1Ev>
 800db84:	f104 0890 	add.w	r8, r4, #144	; 0x90
 800db88:	4648      	mov	r0, r9
 800db8a:	f7ff fe1f 	bl	800d7cc <_ZN8touchgfx9ContainerC1Ev>
 800db8e:	f104 0abc 	add.w	sl, r4, #188	; 0xbc
 800db92:	4640      	mov	r0, r8
 800db94:	f7ff fe1a 	bl	800d7cc <_ZN8touchgfx9ContainerC1Ev>
 800db98:	f104 07e8 	add.w	r7, r4, #232	; 0xe8
 800db9c:	4650      	mov	r0, sl
 800db9e:	f7ff fe15 	bl	800d7cc <_ZN8touchgfx9ContainerC1Ev>
 800dba2:	4638      	mov	r0, r7
 800dba4:	f7ff fe12 	bl	800d7cc <_ZN8touchgfx9ContainerC1Ev>
 800dba8:	2500      	movs	r5, #0
 800dbaa:	9903      	ldr	r1, [sp, #12]
 800dbac:	f8a4 111c 	strh.w	r1, [r4, #284]	; 0x11c
 800dbb0:	4620      	mov	r0, r4
 800dbb2:	4659      	mov	r1, fp
 800dbb4:	f8c4 5114 	str.w	r5, [r4, #276]	; 0x114
 800dbb8:	f8c4 5118 	str.w	r5, [r4, #280]	; 0x118
 800dbbc:	f8a4 511e 	strh.w	r5, [r4, #286]	; 0x11e
 800dbc0:	f8a4 5120 	strh.w	r5, [r4, #288]	; 0x120
 800dbc4:	f8c4 5124 	str.w	r5, [r4, #292]	; 0x124
 800dbc8:	f8c4 5128 	str.w	r5, [r4, #296]	; 0x128
 800dbcc:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800dbd0:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800dbd4:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 800dbd8:	f8c4 5138 	str.w	r5, [r4, #312]	; 0x138
 800dbdc:	f7fd ff18 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800dbe0:	4651      	mov	r1, sl
 800dbe2:	4620      	mov	r0, r4
 800dbe4:	f7fd ff14 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800dbe8:	4649      	mov	r1, r9
 800dbea:	4620      	mov	r0, r4
 800dbec:	f7fd ff10 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800dbf0:	4641      	mov	r1, r8
 800dbf2:	4620      	mov	r0, r4
 800dbf4:	f7fd ff0c 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800dbf8:	4639      	mov	r1, r7
 800dbfa:	4620      	mov	r0, r4
 800dbfc:	f7fd ff08 	bl	800ba10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
 800dc00:	4620      	mov	r0, r4
 800dc02:	9500      	str	r5, [sp, #0]
 800dc04:	462b      	mov	r3, r5
 800dc06:	462a      	mov	r2, r5
 800dc08:	4629      	mov	r1, r5
 800dc0a:	f7ff ff56 	bl	800daba <_ZN8touchgfx17AbstractDataGraph18setGraphAreaMarginEssss>
 800dc0e:	4620      	mov	r0, r4
 800dc10:	f884 6024 	strb.w	r6, [r4, #36]	; 0x24
 800dc14:	b005      	add	sp, #20
 800dc16:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800dc1a:	bf00      	nop
 800dc1c:	080237d8 	.word	0x080237d8

0800dc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>:
 800dc20:	4291      	cmp	r1, r2
 800dc22:	4613      	mov	r3, r2
 800dc24:	d003      	beq.n	800dc2e <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii+0xe>
 800dc26:	460a      	mov	r2, r1
 800dc28:	4619      	mov	r1, r3
 800dc2a:	f005 b85b 	b.w	8012ce4 <_ZN8touchgfx6muldivElll>
 800dc2e:	4770      	bx	lr

0800dc30 <_ZN8touchgfx15StaticDataGraph9setScaleXEib>:
 800dc30:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dc34:	4604      	mov	r4, r0
 800dc36:	460f      	mov	r7, r1
 800dc38:	b1ba      	cbz	r2, 800dc6a <_ZN8touchgfx15StaticDataGraph9setScaleXEib+0x3a>
 800dc3a:	6803      	ldr	r3, [r0, #0]
 800dc3c:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800dc40:	4798      	blx	r3
 800dc42:	2600      	movs	r6, #0
 800dc44:	4681      	mov	r9, r0
 800dc46:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800dc4a:	b235      	sxth	r5, r6
 800dc4c:	42ab      	cmp	r3, r5
 800dc4e:	f106 0601 	add.w	r6, r6, #1
 800dc52:	dd0a      	ble.n	800dc6a <_ZN8touchgfx15StaticDataGraph9setScaleXEib+0x3a>
 800dc54:	f8d4 813c 	ldr.w	r8, [r4, #316]	; 0x13c
 800dc58:	463a      	mov	r2, r7
 800dc5a:	4649      	mov	r1, r9
 800dc5c:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 800dc60:	f7ff ffde 	bl	800dc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800dc64:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 800dc68:	e7ed      	b.n	800dc46 <_ZN8touchgfx15StaticDataGraph9setScaleXEib+0x16>
 800dc6a:	6327      	str	r7, [r4, #48]	; 0x30
 800dc6c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800dc70 <_ZN8touchgfx15StaticDataGraph9setScaleYEib>:
 800dc70:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800dc74:	4604      	mov	r4, r0
 800dc76:	460f      	mov	r7, r1
 800dc78:	b1ba      	cbz	r2, 800dcaa <_ZN8touchgfx15StaticDataGraph9setScaleYEib+0x3a>
 800dc7a:	6803      	ldr	r3, [r0, #0]
 800dc7c:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800dc80:	4798      	blx	r3
 800dc82:	2600      	movs	r6, #0
 800dc84:	4681      	mov	r9, r0
 800dc86:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800dc8a:	b235      	sxth	r5, r6
 800dc8c:	42ab      	cmp	r3, r5
 800dc8e:	f106 0601 	add.w	r6, r6, #1
 800dc92:	dd0a      	ble.n	800dcaa <_ZN8touchgfx15StaticDataGraph9setScaleYEib+0x3a>
 800dc94:	f8d4 8140 	ldr.w	r8, [r4, #320]	; 0x140
 800dc98:	463a      	mov	r2, r7
 800dc9a:	4649      	mov	r1, r9
 800dc9c:	f858 0025 	ldr.w	r0, [r8, r5, lsl #2]
 800dca0:	f7ff ffbe 	bl	800dc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800dca4:	f848 0025 	str.w	r0, [r8, r5, lsl #2]
 800dca8:	e7ed      	b.n	800dc86 <_ZN8touchgfx15StaticDataGraph9setScaleYEib+0x16>
 800dcaa:	6367      	str	r7, [r4, #52]	; 0x34
 800dcac:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

0800dcb0 <_ZN8touchgfx9GraphData8addValueEii>:
 800dcb0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800dcb4:	f9b0 311e 	ldrsh.w	r3, [r0, #286]	; 0x11e
 800dcb8:	4605      	mov	r5, r0
 800dcba:	4617      	mov	r7, r2
 800dcbc:	2b00      	cmp	r3, #0
 800dcbe:	d03e      	beq.n	800dd3e <_ZN8touchgfx9GraphData8addValueEii+0x8e>
 800dcc0:	f8d0 213c 	ldr.w	r2, [r0, #316]	; 0x13c
 800dcc4:	f103 4080 	add.w	r0, r3, #1073741824	; 0x40000000
 800dcc8:	3801      	subs	r0, #1
 800dcca:	f852 0020 	ldr.w	r0, [r2, r0, lsl #2]
 800dcce:	4288      	cmp	r0, r1
 800dcd0:	db35      	blt.n	800dd3e <_ZN8touchgfx9GraphData8addValueEii+0x8e>
 800dcd2:	2000      	movs	r0, #0
 800dcd4:	b204      	sxth	r4, r0
 800dcd6:	42a3      	cmp	r3, r4
 800dcd8:	dd16      	ble.n	800dd08 <_ZN8touchgfx9GraphData8addValueEii+0x58>
 800dcda:	ea4f 0880 	mov.w	r8, r0, lsl #2
 800dcde:	3001      	adds	r0, #1
 800dce0:	f852 6008 	ldr.w	r6, [r2, r8]
 800dce4:	428e      	cmp	r6, r1
 800dce6:	dbf5      	blt.n	800dcd4 <_ZN8touchgfx9GraphData8addValueEii+0x24>
 800dce8:	d10f      	bne.n	800dd0a <_ZN8touchgfx9GraphData8addValueEii+0x5a>
 800dcea:	4621      	mov	r1, r4
 800dcec:	4628      	mov	r0, r5
 800dcee:	f7ff fe37 	bl	800d960 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800dcf2:	f8d5 3140 	ldr.w	r3, [r5, #320]	; 0x140
 800dcf6:	f843 7008 	str.w	r7, [r3, r8]
 800dcfa:	4621      	mov	r1, r4
 800dcfc:	4628      	mov	r0, r5
 800dcfe:	f7ff fe2f 	bl	800d960 <_ZN8touchgfx17AbstractDataGraph22invalidateGraphPointAtEs>
 800dd02:	4620      	mov	r0, r4
 800dd04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800dd08:	d01a      	beq.n	800dd40 <_ZN8touchgfx9GraphData8addValueEii+0x90>
 800dd0a:	f852 2024 	ldr.w	r2, [r2, r4, lsl #2]
 800dd0e:	428a      	cmp	r2, r1
 800dd10:	dc16      	bgt.n	800dd40 <_ZN8touchgfx9GraphData8addValueEii+0x90>
 800dd12:	f103 4080 	add.w	r0, r3, #1073741824	; 0x40000000
 800dd16:	3801      	subs	r0, #1
 800dd18:	0080      	lsls	r0, r0, #2
 800dd1a:	42a3      	cmp	r3, r4
 800dd1c:	f8d5 613c 	ldr.w	r6, [r5, #316]	; 0x13c
 800dd20:	dd15      	ble.n	800dd4e <_ZN8touchgfx9GraphData8addValueEii+0x9e>
 800dd22:	f100 0c04 	add.w	ip, r0, #4
 800dd26:	5832      	ldr	r2, [r6, r0]
 800dd28:	f846 200c 	str.w	r2, [r6, ip]
 800dd2c:	f8d5 6140 	ldr.w	r6, [r5, #320]	; 0x140
 800dd30:	3b01      	subs	r3, #1
 800dd32:	5832      	ldr	r2, [r6, r0]
 800dd34:	f846 200c 	str.w	r2, [r6, ip]
 800dd38:	b21b      	sxth	r3, r3
 800dd3a:	3804      	subs	r0, #4
 800dd3c:	e7ed      	b.n	800dd1a <_ZN8touchgfx9GraphData8addValueEii+0x6a>
 800dd3e:	461c      	mov	r4, r3
 800dd40:	f9b5 211c 	ldrsh.w	r2, [r5, #284]	; 0x11c
 800dd44:	429a      	cmp	r2, r3
 800dd46:	d1e4      	bne.n	800dd12 <_ZN8touchgfx9GraphData8addValueEii+0x62>
 800dd48:	f04f 34ff 	mov.w	r4, #4294967295
 800dd4c:	e7d9      	b.n	800dd02 <_ZN8touchgfx9GraphData8addValueEii+0x52>
 800dd4e:	f8b5 311e 	ldrh.w	r3, [r5, #286]	; 0x11e
 800dd52:	3301      	adds	r3, #1
 800dd54:	f8a5 311e 	strh.w	r3, [r5, #286]	; 0x11e
 800dd58:	f846 1024 	str.w	r1, [r6, r4, lsl #2]
 800dd5c:	f8d5 3140 	ldr.w	r3, [r5, #320]	; 0x140
 800dd60:	f843 7024 	str.w	r7, [r3, r4, lsl #2]
 800dd64:	e7c9      	b.n	800dcfa <_ZN8touchgfx9GraphData8addValueEii+0x4a>

0800dd66 <_ZN8touchgfx21GraphElementHistogramD1Ev>:
 800dd66:	4770      	bx	lr

0800dd68 <_ZN8touchgfx21GraphElementHistogramD0Ev>:
 800dd68:	b510      	push	{r4, lr}
 800dd6a:	213c      	movs	r1, #60	; 0x3c
 800dd6c:	4604      	mov	r4, r0
 800dd6e:	f012 fc9f 	bl	80206b0 <_ZdlPvj>
 800dd72:	4620      	mov	r0, r4
 800dd74:	bd10      	pop	{r4, pc}

0800dd76 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800dd76:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800dd78:	4604      	mov	r4, r0
 800dd7a:	4608      	mov	r0, r1
 800dd7c:	460d      	mov	r5, r1
 800dd7e:	f7fe f810 	bl	800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dd82:	b978      	cbnz	r0, 800dda4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800dd84:	4620      	mov	r0, r4
 800dd86:	f7fe f80c 	bl	800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800dd8a:	f9b5 6000 	ldrsh.w	r6, [r5]
 800dd8e:	b150      	cbz	r0, 800dda6 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800dd90:	8026      	strh	r6, [r4, #0]
 800dd92:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800dd96:	8063      	strh	r3, [r4, #2]
 800dd98:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800dd9c:	80a3      	strh	r3, [r4, #4]
 800dd9e:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800dda2:	80e3      	strh	r3, [r4, #6]
 800dda4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800dda6:	f9b4 1000 	ldrsh.w	r1, [r4]
 800ddaa:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800ddae:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800ddb2:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800ddb6:	88ed      	ldrh	r5, [r5, #6]
 800ddb8:	42b1      	cmp	r1, r6
 800ddba:	460f      	mov	r7, r1
 800ddbc:	bfa8      	it	ge
 800ddbe:	4637      	movge	r7, r6
 800ddc0:	4293      	cmp	r3, r2
 800ddc2:	4618      	mov	r0, r3
 800ddc4:	4466      	add	r6, ip
 800ddc6:	bfa8      	it	ge
 800ddc8:	4610      	movge	r0, r2
 800ddca:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800ddce:	8027      	strh	r7, [r4, #0]
 800ddd0:	442a      	add	r2, r5
 800ddd2:	88e5      	ldrh	r5, [r4, #6]
 800ddd4:	8060      	strh	r0, [r4, #2]
 800ddd6:	4461      	add	r1, ip
 800ddd8:	442b      	add	r3, r5
 800ddda:	b236      	sxth	r6, r6
 800dddc:	b209      	sxth	r1, r1
 800ddde:	b212      	sxth	r2, r2
 800dde0:	b21b      	sxth	r3, r3
 800dde2:	428e      	cmp	r6, r1
 800dde4:	bfac      	ite	ge
 800dde6:	ebc7 0106 	rsbge	r1, r7, r6
 800ddea:	ebc7 0101 	rsblt	r1, r7, r1
 800ddee:	429a      	cmp	r2, r3
 800ddf0:	bfac      	ite	ge
 800ddf2:	ebc0 0202 	rsbge	r2, r0, r2
 800ddf6:	ebc0 0203 	rsblt	r2, r0, r3
 800ddfa:	80a1      	strh	r1, [r4, #4]
 800ddfc:	80e2      	strh	r2, [r4, #6]
 800ddfe:	e7d1      	b.n	800dda4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>

0800de00 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>:
 800de00:	6800      	ldr	r0, [r0, #0]
 800de02:	2800      	cmp	r0, #0
 800de04:	bfb9      	ittee	lt
 800de06:	2320      	movlt	r3, #32
 800de08:	fb90 f0f3 	sdivlt	r0, r0, r3
 800de0c:	301f      	addge	r0, #31
 800de0e:	1140      	asrge	r0, r0, #5
 800de10:	4770      	bx	lr

0800de12 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE>:
 800de12:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de16:	6803      	ldr	r3, [r0, #0]
 800de18:	6945      	ldr	r5, [r0, #20]
 800de1a:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800de1c:	b093      	sub	sp, #76	; 0x4c
 800de1e:	4604      	mov	r4, r0
 800de20:	460f      	mov	r7, r1
 800de22:	2d00      	cmp	r5, #0
 800de24:	f000 81ad 	beq.w	800e182 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x370>
 800de28:	696d      	ldr	r5, [r5, #20]
 800de2a:	4798      	blx	r3
 800de2c:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800de30:	2b00      	cmp	r3, #0
 800de32:	d077      	beq.n	800df24 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800de34:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800de38:	fb13 f000 	smulbb	r0, r3, r0
 800de3c:	b283      	uxth	r3, r0
 800de3e:	1c58      	adds	r0, r3, #1
 800de40:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 800de44:	1200      	asrs	r0, r0, #8
 800de46:	d06d      	beq.n	800df24 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800de48:	b2c3      	uxtb	r3, r0
 800de4a:	9308      	str	r3, [sp, #32]
 800de4c:	6823      	ldr	r3, [r4, #0]
 800de4e:	f10d 0840 	add.w	r8, sp, #64	; 0x40
 800de52:	462a      	mov	r2, r5
 800de54:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800de58:	4621      	mov	r1, r4
 800de5a:	4640      	mov	r0, r8
 800de5c:	4798      	blx	r3
 800de5e:	e898 0003 	ldmia.w	r8, {r0, r1}
 800de62:	ae0e      	add	r6, sp, #56	; 0x38
 800de64:	e886 0003 	stmia.w	r6, {r0, r1}
 800de68:	4639      	mov	r1, r7
 800de6a:	4630      	mov	r0, r6
 800de6c:	f7fd ff56 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 800de70:	6823      	ldr	r3, [r4, #0]
 800de72:	4629      	mov	r1, r5
 800de74:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800de78:	4620      	mov	r0, r4
 800de7a:	4798      	blx	r3
 800de7c:	6823      	ldr	r3, [r4, #0]
 800de7e:	4607      	mov	r7, r0
 800de80:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800de84:	4629      	mov	r1, r5
 800de86:	4620      	mov	r0, r4
 800de88:	4798      	blx	r3
 800de8a:	4681      	mov	r9, r0
 800de8c:	f894 0038 	ldrb.w	r0, [r4, #56]	; 0x38
 800de90:	0103      	lsls	r3, r0, #4
 800de92:	9309      	str	r3, [sp, #36]	; 0x24
 800de94:	6823      	ldr	r3, [r4, #0]
 800de96:	4629      	mov	r1, r5
 800de98:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800de9c:	4620      	mov	r0, r4
 800de9e:	4798      	blx	r3
 800dea0:	b203      	sxth	r3, r0
 800dea2:	9306      	str	r3, [sp, #24]
 800dea4:	6823      	ldr	r3, [r4, #0]
 800dea6:	4629      	mov	r1, r5
 800dea8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
 800deac:	4620      	mov	r0, r4
 800deae:	4798      	blx	r3
 800deb0:	2f00      	cmp	r7, #0
 800deb2:	b203      	sxth	r3, r0
 800deb4:	9307      	str	r3, [sp, #28]
 800deb6:	d138      	bne.n	800df2a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x118>
 800deb8:	f1b9 0f00 	cmp.w	r9, #0
 800debc:	d132      	bne.n	800df24 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800debe:	6823      	ldr	r3, [r4, #0]
 800dec0:	464a      	mov	r2, r9
 800dec2:	4629      	mov	r1, r5
 800dec4:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800dec8:	4620      	mov	r0, r4
 800deca:	4798      	blx	r3
 800decc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dece:	1ac0      	subs	r0, r0, r3
 800ded0:	9010      	str	r0, [sp, #64]	; 0x40
 800ded2:	4640      	mov	r0, r8
 800ded4:	f7ff fc94 	bl	800d800 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ded8:	6823      	ldr	r3, [r4, #0]
 800deda:	4607      	mov	r7, r0
 800dedc:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800dee0:	4629      	mov	r1, r5
 800dee2:	4620      	mov	r0, r4
 800dee4:	4798      	blx	r3
 800dee6:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800deea:	1a38      	subs	r0, r7, r0
 800deec:	fa0f f880 	sxth.w	r8, r0
 800def0:	eb13 0f08 	cmn.w	r3, r8
 800def4:	d416      	bmi.n	800df24 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800def6:	6823      	ldr	r3, [r4, #0]
 800def8:	4629      	mov	r1, r5
 800defa:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 800defe:	4620      	mov	r0, r4
 800df00:	4798      	blx	r3
 800df02:	4580      	cmp	r8, r0
 800df04:	da0e      	bge.n	800df24 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800df06:	9a08      	ldr	r2, [sp, #32]
 800df08:	6823      	ldr	r3, [r4, #0]
 800df0a:	9202      	str	r2, [sp, #8]
 800df0c:	b23f      	sxth	r7, r7
 800df0e:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800df12:	9201      	str	r2, [sp, #4]
 800df14:	9700      	str	r7, [sp, #0]
 800df16:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800df1a:	4631      	mov	r1, r6
 800df1c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800df20:	4620      	mov	r0, r4
 800df22:	47a8      	blx	r5
 800df24:	b013      	add	sp, #76	; 0x4c
 800df26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800df2a:	ddfb      	ble.n	800df24 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800df2c:	6823      	ldr	r3, [r4, #0]
 800df2e:	4629      	mov	r1, r5
 800df30:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800df34:	4620      	mov	r0, r4
 800df36:	4798      	blx	r3
 800df38:	6823      	ldr	r3, [r4, #0]
 800df3a:	4683      	mov	fp, r0
 800df3c:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800df40:	4629      	mov	r1, r5
 800df42:	4620      	mov	r0, r4
 800df44:	4798      	blx	r3
 800df46:	eba0 030b 	sub.w	r3, r0, fp
 800df4a:	2b00      	cmp	r3, #0
 800df4c:	bfb8      	it	lt
 800df4e:	425b      	neglt	r3, r3
 800df50:	fb93 f3f7 	sdiv	r3, r3, r7
 800df54:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 800df58:	4680      	mov	r8, r0
 800df5a:	dce3      	bgt.n	800df24 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800df5c:	6823      	ldr	r3, [r4, #0]
 800df5e:	465a      	mov	r2, fp
 800df60:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800df64:	4629      	mov	r1, r5
 800df66:	4620      	mov	r0, r4
 800df68:	4798      	blx	r3
 800df6a:	6823      	ldr	r3, [r4, #0]
 800df6c:	4606      	mov	r6, r0
 800df6e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800df72:	4642      	mov	r2, r8
 800df74:	4629      	mov	r1, r5
 800df76:	4620      	mov	r0, r4
 800df78:	4798      	blx	r3
 800df7a:	42b0      	cmp	r0, r6
 800df7c:	bfa2      	ittt	ge
 800df7e:	4643      	movge	r3, r8
 800df80:	46d8      	movge	r8, fp
 800df82:	469b      	movge	fp, r3
 800df84:	45d8      	cmp	r8, fp
 800df86:	bfac      	ite	ge
 800df88:	f04f 33ff 	movge.w	r3, #4294967295
 800df8c:	2301      	movlt	r3, #1
 800df8e:	fb98 f6f7 	sdiv	r6, r8, r7
 800df92:	fb9b f2f7 	sdiv	r2, fp, r7
 800df96:	1af6      	subs	r6, r6, r3
 800df98:	441a      	add	r2, r3
 800df9a:	4296      	cmp	r6, r2
 800df9c:	bfac      	ite	ge
 800df9e:	f04f 3aff 	movge.w	sl, #4294967295
 800dfa2:	f04f 0a01 	movlt.w	sl, #1
 800dfa6:	f1b9 0f00 	cmp.w	r9, #0
 800dfaa:	d13e      	bne.n	800e02a <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x218>
 800dfac:	fb07 fb0a 	mul.w	fp, r7, sl
 800dfb0:	eb0a 0802 	add.w	r8, sl, r2
 800dfb4:	4377      	muls	r7, r6
 800dfb6:	45b0      	cmp	r8, r6
 800dfb8:	d0b4      	beq.n	800df24 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800dfba:	6823      	ldr	r3, [r4, #0]
 800dfbc:	463a      	mov	r2, r7
 800dfbe:	4629      	mov	r1, r5
 800dfc0:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800dfc4:	4620      	mov	r0, r4
 800dfc6:	4798      	blx	r3
 800dfc8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800dfca:	1ac0      	subs	r0, r0, r3
 800dfcc:	9010      	str	r0, [sp, #64]	; 0x40
 800dfce:	a810      	add	r0, sp, #64	; 0x40
 800dfd0:	f7ff fc16 	bl	800d800 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800dfd4:	6823      	ldr	r3, [r4, #0]
 800dfd6:	4681      	mov	r9, r0
 800dfd8:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800dfdc:	4629      	mov	r1, r5
 800dfde:	4620      	mov	r0, r4
 800dfe0:	4798      	blx	r3
 800dfe2:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800dfe6:	eba9 0000 	sub.w	r0, r9, r0
 800dfea:	b203      	sxth	r3, r0
 800dfec:	42da      	cmn	r2, r3
 800dfee:	9304      	str	r3, [sp, #16]
 800dff0:	d418      	bmi.n	800e024 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800dff2:	6822      	ldr	r2, [r4, #0]
 800dff4:	4629      	mov	r1, r5
 800dff6:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800dffa:	4620      	mov	r0, r4
 800dffc:	4790      	blx	r2
 800dffe:	9b04      	ldr	r3, [sp, #16]
 800e000:	4283      	cmp	r3, r0
 800e002:	da0f      	bge.n	800e024 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x212>
 800e004:	9b08      	ldr	r3, [sp, #32]
 800e006:	9302      	str	r3, [sp, #8]
 800e008:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e00c:	6822      	ldr	r2, [r4, #0]
 800e00e:	9301      	str	r3, [sp, #4]
 800e010:	fa0f f389 	sxth.w	r3, r9
 800e014:	9300      	str	r3, [sp, #0]
 800e016:	f8d2 9088 	ldr.w	r9, [r2, #136]	; 0x88
 800e01a:	a90e      	add	r1, sp, #56	; 0x38
 800e01c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800e020:	4620      	mov	r0, r4
 800e022:	47c8      	blx	r9
 800e024:	4456      	add	r6, sl
 800e026:	445f      	add	r7, fp
 800e028:	e7c5      	b.n	800dfb6 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x1a4>
 800e02a:	fb98 f8f9 	sdiv	r8, r8, r9
 800e02e:	eba8 0203 	sub.w	r2, r8, r3
 800e032:	fb9b f8f9 	sdiv	r8, fp, r9
 800e036:	4498      	add	r8, r3
 800e038:	4542      	cmp	r2, r8
 800e03a:	bfac      	ite	ge
 800e03c:	f04f 33ff 	movge.w	r3, #4294967295
 800e040:	2301      	movlt	r3, #1
 800e042:	930a      	str	r3, [sp, #40]	; 0x28
 800e044:	6823      	ldr	r3, [r4, #0]
 800e046:	9204      	str	r2, [sp, #16]
 800e048:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800e04c:	fb02 f209 	mul.w	r2, r2, r9
 800e050:	4629      	mov	r1, r5
 800e052:	4620      	mov	r0, r4
 800e054:	4798      	blx	r3
 800e056:	f10d 0b48 	add.w	fp, sp, #72	; 0x48
 800e05a:	f84b 0d08 	str.w	r0, [fp, #-8]!
 800e05e:	4658      	mov	r0, fp
 800e060:	f7ff fbce 	bl	800d800 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e064:	b203      	sxth	r3, r0
 800e066:	9305      	str	r3, [sp, #20]
 800e068:	6823      	ldr	r3, [r4, #0]
 800e06a:	fb06 f207 	mul.w	r2, r6, r7
 800e06e:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800e072:	4629      	mov	r1, r5
 800e074:	4620      	mov	r0, r4
 800e076:	4798      	blx	r3
 800e078:	9010      	str	r0, [sp, #64]	; 0x40
 800e07a:	4658      	mov	r0, fp
 800e07c:	f7ff fbc0 	bl	800d800 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e080:	fb07 f20a 	mul.w	r2, r7, sl
 800e084:	920b      	str	r2, [sp, #44]	; 0x2c
 800e086:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800e088:	4442      	add	r2, r8
 800e08a:	b203      	sxth	r3, r0
 800e08c:	920c      	str	r2, [sp, #48]	; 0x30
 800e08e:	9a05      	ldr	r2, [sp, #20]
 800e090:	429a      	cmp	r2, r3
 800e092:	dc16      	bgt.n	800e0c2 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x2b0>
 800e094:	eb06 080a 	add.w	r8, r6, sl
 800e098:	fb07 f808 	mul.w	r8, r7, r8
 800e09c:	9a05      	ldr	r2, [sp, #20]
 800e09e:	429a      	cmp	r2, r3
 800e0a0:	db54      	blt.n	800e14c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x33a>
 800e0a2:	6823      	ldr	r3, [r4, #0]
 800e0a4:	4642      	mov	r2, r8
 800e0a6:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800e0aa:	4629      	mov	r1, r5
 800e0ac:	4620      	mov	r0, r4
 800e0ae:	4798      	blx	r3
 800e0b0:	9010      	str	r0, [sp, #64]	; 0x40
 800e0b2:	4658      	mov	r0, fp
 800e0b4:	f7ff fba4 	bl	800d800 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e0b8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800e0ba:	4456      	add	r6, sl
 800e0bc:	b203      	sxth	r3, r0
 800e0be:	4490      	add	r8, r2
 800e0c0:	e7ec      	b.n	800e09c <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x28a>
 800e0c2:	6823      	ldr	r3, [r4, #0]
 800e0c4:	fb07 f206 	mul.w	r2, r7, r6
 800e0c8:	4629      	mov	r1, r5
 800e0ca:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800e0ce:	4620      	mov	r0, r4
 800e0d0:	4798      	blx	r3
 800e0d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800e0d4:	1ac0      	subs	r0, r0, r3
 800e0d6:	9010      	str	r0, [sp, #64]	; 0x40
 800e0d8:	4658      	mov	r0, fp
 800e0da:	f7ff fb91 	bl	800d800 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e0de:	6823      	ldr	r3, [r4, #0]
 800e0e0:	4680      	mov	r8, r0
 800e0e2:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 800e0e6:	4629      	mov	r1, r5
 800e0e8:	4620      	mov	r0, r4
 800e0ea:	4798      	blx	r3
 800e0ec:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800e0f0:	eba8 0000 	sub.w	r0, r8, r0
 800e0f4:	b203      	sxth	r3, r0
 800e0f6:	42da      	cmn	r2, r3
 800e0f8:	930d      	str	r3, [sp, #52]	; 0x34
 800e0fa:	d418      	bmi.n	800e12e <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800e0fc:	6822      	ldr	r2, [r4, #0]
 800e0fe:	4629      	mov	r1, r5
 800e100:	f8d2 20a8 	ldr.w	r2, [r2, #168]	; 0xa8
 800e104:	4620      	mov	r0, r4
 800e106:	4790      	blx	r2
 800e108:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e10a:	4283      	cmp	r3, r0
 800e10c:	da0f      	bge.n	800e12e <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x31c>
 800e10e:	9b08      	ldr	r3, [sp, #32]
 800e110:	9302      	str	r3, [sp, #8]
 800e112:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800e116:	6822      	ldr	r2, [r4, #0]
 800e118:	9301      	str	r3, [sp, #4]
 800e11a:	fa0f f388 	sxth.w	r3, r8
 800e11e:	9300      	str	r3, [sp, #0]
 800e120:	f8d2 8088 	ldr.w	r8, [r2, #136]	; 0x88
 800e124:	a90e      	add	r1, sp, #56	; 0x38
 800e126:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800e12a:	4620      	mov	r0, r4
 800e12c:	47c0      	blx	r8
 800e12e:	6823      	ldr	r3, [r4, #0]
 800e130:	4456      	add	r6, sl
 800e132:	f8d3 30ac 	ldr.w	r3, [r3, #172]	; 0xac
 800e136:	fb06 f207 	mul.w	r2, r6, r7
 800e13a:	4629      	mov	r1, r5
 800e13c:	4620      	mov	r0, r4
 800e13e:	4798      	blx	r3
 800e140:	9010      	str	r0, [sp, #64]	; 0x40
 800e142:	4658      	mov	r0, fp
 800e144:	f7ff fb5c 	bl	800d800 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e148:	b203      	sxth	r3, r0
 800e14a:	e7a0      	b.n	800e08e <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800e14c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800e14e:	930d      	str	r3, [sp, #52]	; 0x34
 800e150:	9b04      	ldr	r3, [sp, #16]
 800e152:	4413      	add	r3, r2
 800e154:	9304      	str	r3, [sp, #16]
 800e156:	9a04      	ldr	r2, [sp, #16]
 800e158:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800e15a:	4293      	cmp	r3, r2
 800e15c:	f43f aee2 	beq.w	800df24 <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x112>
 800e160:	9b04      	ldr	r3, [sp, #16]
 800e162:	6822      	ldr	r2, [r4, #0]
 800e164:	4629      	mov	r1, r5
 800e166:	f8d2 80ac 	ldr.w	r8, [r2, #172]	; 0xac
 800e16a:	4620      	mov	r0, r4
 800e16c:	fb03 f209 	mul.w	r2, r3, r9
 800e170:	47c0      	blx	r8
 800e172:	9010      	str	r0, [sp, #64]	; 0x40
 800e174:	4658      	mov	r0, fp
 800e176:	f7ff fb43 	bl	800d800 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e17a:	b203      	sxth	r3, r0
 800e17c:	9305      	str	r3, [sp, #20]
 800e17e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800e180:	e785      	b.n	800e08e <_ZNK8touchgfx20GraphElementGridBase4drawERKNS_4RectE+0x27c>
 800e182:	4798      	blx	r3
 800e184:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800e188:	deff      	udf	#255	; 0xff

0800e18a <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>:
 800e18a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800e18c:	9906      	ldr	r1, [sp, #24]
 800e18e:	4291      	cmp	r1, r2
 800e190:	bfbc      	itt	lt
 800e192:	9206      	strlt	r2, [sp, #24]
 800e194:	460a      	movlt	r2, r1
 800e196:	9907      	ldr	r1, [sp, #28]
 800e198:	428b      	cmp	r3, r1
 800e19a:	4606      	mov	r6, r0
 800e19c:	461c      	mov	r4, r3
 800e19e:	f04f 0020 	mov.w	r0, #32
 800e1a2:	bfc8      	it	gt
 800e1a4:	460c      	movgt	r4, r1
 800e1a6:	fb92 f5f0 	sdiv	r5, r2, r0
 800e1aa:	fb94 f4f0 	sdiv	r4, r4, r0
 800e1ae:	a806      	add	r0, sp, #24
 800e1b0:	bfc8      	it	gt
 800e1b2:	9307      	strgt	r3, [sp, #28]
 800e1b4:	f7ff fe24 	bl	800de00 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800e1b8:	4607      	mov	r7, r0
 800e1ba:	a807      	add	r0, sp, #28
 800e1bc:	f7ff fe20 	bl	800de00 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800e1c0:	1b7a      	subs	r2, r7, r5
 800e1c2:	1b00      	subs	r0, r0, r4
 800e1c4:	80f0      	strh	r0, [r6, #6]
 800e1c6:	8035      	strh	r5, [r6, #0]
 800e1c8:	8074      	strh	r4, [r6, #2]
 800e1ca:	80b2      	strh	r2, [r6, #4]
 800e1cc:	4630      	mov	r0, r6
 800e1ce:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800e1d0 <_ZN8touchgfx21GraphElementHistogram22invalidateGraphPointAtEs>:
 800e1d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e1d4:	6943      	ldr	r3, [r0, #20]
 800e1d6:	b087      	sub	sp, #28
 800e1d8:	4605      	mov	r5, r0
 800e1da:	4689      	mov	r9, r1
 800e1dc:	2b00      	cmp	r3, #0
 800e1de:	d050      	beq.n	800e282 <_ZN8touchgfx21GraphElementHistogram22invalidateGraphPointAtEs+0xb2>
 800e1e0:	695c      	ldr	r4, [r3, #20]
 800e1e2:	6823      	ldr	r3, [r4, #0]
 800e1e4:	4620      	mov	r0, r4
 800e1e6:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800e1ea:	4798      	blx	r3
 800e1ec:	6823      	ldr	r3, [r4, #0]
 800e1ee:	f9b5 803a 	ldrsh.w	r8, [r5, #58]	; 0x3a
 800e1f2:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800e1f6:	8f2e      	ldrh	r6, [r5, #56]	; 0x38
 800e1f8:	4607      	mov	r7, r0
 800e1fa:	4620      	mov	r0, r4
 800e1fc:	e9d5 ba0c 	ldrd	fp, sl, [r5, #48]	; 0x30
 800e200:	4798      	blx	r3
 800e202:	4659      	mov	r1, fp
 800e204:	4602      	mov	r2, r0
 800e206:	4650      	mov	r0, sl
 800e208:	f7ff fd0a 	bl	800dc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800e20c:	6823      	ldr	r3, [r4, #0]
 800e20e:	4682      	mov	sl, r0
 800e210:	4649      	mov	r1, r9
 800e212:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800e216:	4620      	mov	r0, r4
 800e218:	4798      	blx	r3
 800e21a:	6823      	ldr	r3, [r4, #0]
 800e21c:	4681      	mov	r9, r0
 800e21e:	4651      	mov	r1, sl
 800e220:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800e224:	4620      	mov	r0, r4
 800e226:	4798      	blx	r3
 800e228:	eb07 1748 	add.w	r7, r7, r8, lsl #5
 800e22c:	0136      	lsls	r6, r6, #4
 800e22e:	eba7 0806 	sub.w	r8, r7, r6
 800e232:	443e      	add	r6, r7
 800e234:	e9cd 6000 	strd	r6, r0, [sp]
 800e238:	464b      	mov	r3, r9
 800e23a:	4642      	mov	r2, r8
 800e23c:	4629      	mov	r1, r5
 800e23e:	a802      	add	r0, sp, #8
 800e240:	f7ff ffa3 	bl	800e18a <_ZNK8touchgfx20AbstractGraphElement21rectFromQ5CoordinatesENS_7CWRUtil2Q5ES2_S2_S2_>
 800e244:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800e248:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800e24c:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800e250:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e254:	18ca      	adds	r2, r1, r3
 800e256:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800e25a:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e25e:	1a9b      	subs	r3, r3, r2
 800e260:	a904      	add	r1, sp, #16
 800e262:	2200      	movs	r2, #0
 800e264:	a802      	add	r0, sp, #8
 800e266:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e26a:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e26e:	f7fd fd55 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 800e272:	682b      	ldr	r3, [r5, #0]
 800e274:	a902      	add	r1, sp, #8
 800e276:	691b      	ldr	r3, [r3, #16]
 800e278:	4628      	mov	r0, r5
 800e27a:	4798      	blx	r3
 800e27c:	b007      	add	sp, #28
 800e27e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e282:	681b      	ldr	r3, [r3, #0]
 800e284:	deff      	udf	#255	; 0xff

0800e286 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>:
 800e286:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800e28a:	2b00      	cmp	r3, #0
 800e28c:	da05      	bge.n	800e29a <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x14>
 800e28e:	880a      	ldrh	r2, [r1, #0]
 800e290:	b29b      	uxth	r3, r3
 800e292:	441a      	add	r2, r3
 800e294:	425b      	negs	r3, r3
 800e296:	800a      	strh	r2, [r1, #0]
 800e298:	808b      	strh	r3, [r1, #4]
 800e29a:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800e29e:	2b00      	cmp	r3, #0
 800e2a0:	da05      	bge.n	800e2ae <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE+0x28>
 800e2a2:	884a      	ldrh	r2, [r1, #2]
 800e2a4:	b29b      	uxth	r3, r3
 800e2a6:	441a      	add	r2, r3
 800e2a8:	425b      	negs	r3, r3
 800e2aa:	804a      	strh	r2, [r1, #2]
 800e2ac:	80cb      	strh	r3, [r1, #6]
 800e2ae:	4770      	bx	lr

0800e2b0 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh>:
 800e2b0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800e2b2:	4604      	mov	r4, r0
 800e2b4:	460d      	mov	r5, r1
 800e2b6:	6801      	ldr	r1, [r0, #0]
 800e2b8:	f9bd 0024 	ldrsh.w	r0, [sp, #36]	; 0x24
 800e2bc:	9001      	str	r0, [sp, #4]
 800e2be:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 800e2c2:	9000      	str	r0, [sp, #0]
 800e2c4:	f8d1 6090 	ldr.w	r6, [r1, #144]	; 0x90
 800e2c8:	a802      	add	r0, sp, #8
 800e2ca:	4621      	mov	r1, r4
 800e2cc:	47b0      	blx	r6
 800e2ce:	a902      	add	r1, sp, #8
 800e2d0:	4620      	mov	r0, r4
 800e2d2:	f7ff ffd8 	bl	800e286 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800e2d6:	a802      	add	r0, sp, #8
 800e2d8:	4629      	mov	r1, r5
 800e2da:	f7fd fd1f 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 800e2de:	a802      	add	r0, sp, #8
 800e2e0:	f7fd fd5f 	bl	800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e2e4:	b968      	cbnz	r0, 800e302 <_ZNK8touchgfx20GraphElementGridBase8drawLineERKNS_4RectEssssh+0x52>
 800e2e6:	6823      	ldr	r3, [r4, #0]
 800e2e8:	a902      	add	r1, sp, #8
 800e2ea:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e2ec:	4620      	mov	r0, r4
 800e2ee:	4798      	blx	r3
 800e2f0:	f7fe faae 	bl	800c850 <_ZN8touchgfx3HAL3lcdEv>
 800e2f4:	6803      	ldr	r3, [r0, #0]
 800e2f6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 800e2f8:	6a1d      	ldr	r5, [r3, #32]
 800e2fa:	f89d 3028 	ldrb.w	r3, [sp, #40]	; 0x28
 800e2fe:	a902      	add	r1, sp, #8
 800e300:	47a8      	blx	r5
 800e302:	b004      	add	sp, #16
 800e304:	bd70      	pop	{r4, r5, r6, pc}

0800e306 <_ZNK8touchgfx21GraphElementHistogram4drawERKNS_4RectE>:
 800e306:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e30a:	6803      	ldr	r3, [r0, #0]
 800e30c:	6944      	ldr	r4, [r0, #20]
 800e30e:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800e310:	b089      	sub	sp, #36	; 0x24
 800e312:	4605      	mov	r5, r0
 800e314:	4688      	mov	r8, r1
 800e316:	2c00      	cmp	r4, #0
 800e318:	f000 80b5 	beq.w	800e486 <_ZNK8touchgfx21GraphElementHistogram4drawERKNS_4RectE+0x180>
 800e31c:	6964      	ldr	r4, [r4, #20]
 800e31e:	4798      	blx	r3
 800e320:	f9b4 311e 	ldrsh.w	r3, [r4, #286]	; 0x11e
 800e324:	2b00      	cmp	r3, #0
 800e326:	f000 80b2 	beq.w	800e48e <_ZNK8touchgfx21GraphElementHistogram4drawERKNS_4RectE+0x188>
 800e32a:	8f2b      	ldrh	r3, [r5, #56]	; 0x38
 800e32c:	2b00      	cmp	r3, #0
 800e32e:	f000 80ae 	beq.w	800e48e <_ZNK8touchgfx21GraphElementHistogram4drawERKNS_4RectE+0x188>
 800e332:	f894 702c 	ldrb.w	r7, [r4, #44]	; 0x2c
 800e336:	fb17 f000 	smulbb	r0, r7, r0
 800e33a:	b280      	uxth	r0, r0
 800e33c:	1c47      	adds	r7, r0, #1
 800e33e:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 800e342:	123f      	asrs	r7, r7, #8
 800e344:	f000 80a3 	beq.w	800e48e <_ZNK8touchgfx21GraphElementHistogram4drawERKNS_4RectE+0x188>
 800e348:	6823      	ldr	r3, [r4, #0]
 800e34a:	4620      	mov	r0, r4
 800e34c:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800e350:	e9d5 960c 	ldrd	r9, r6, [r5, #48]	; 0x30
 800e354:	4798      	blx	r3
 800e356:	4649      	mov	r1, r9
 800e358:	4602      	mov	r2, r0
 800e35a:	4630      	mov	r0, r6
 800e35c:	f7ff fc60 	bl	800dc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>
 800e360:	8f2b      	ldrh	r3, [r5, #56]	; 0x38
 800e362:	f9b5 903a 	ldrsh.w	r9, [r5, #58]	; 0x3a
 800e366:	4606      	mov	r6, r0
 800e368:	a808      	add	r0, sp, #32
 800e36a:	011b      	lsls	r3, r3, #4
 800e36c:	f840 3d14 	str.w	r3, [r0, #-20]!
 800e370:	f7ff fd46 	bl	800de00 <_ZNK8touchgfx7CWRUtil2Q54ceilEv>
 800e374:	6823      	ldr	r3, [r4, #0]
 800e376:	4631      	mov	r1, r6
 800e378:	4683      	mov	fp, r0
 800e37a:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800e37e:	4620      	mov	r0, r4
 800e380:	4798      	blx	r3
 800e382:	ae08      	add	r6, sp, #32
 800e384:	f846 0d08 	str.w	r0, [r6, #-8]!
 800e388:	4630      	mov	r0, r6
 800e38a:	f7ff fa39 	bl	800d800 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e38e:	f8b8 3000 	ldrh.w	r3, [r8]
 800e392:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800e396:	4682      	mov	sl, r0
 800e398:	8f68      	ldrh	r0, [r5, #58]	; 0x3a
 800e39a:	441a      	add	r2, r3
 800e39c:	fa1f f18b 	uxth.w	r1, fp
 800e3a0:	4403      	add	r3, r0
 800e3a2:	4402      	add	r2, r0
 800e3a4:	440a      	add	r2, r1
 800e3a6:	f10d 000a 	add.w	r0, sp, #10
 800e3aa:	1a59      	subs	r1, r3, r1
 800e3ac:	6823      	ldr	r3, [r4, #0]
 800e3ae:	9000      	str	r0, [sp, #0]
 800e3b0:	f8d3 b124 	ldr.w	fp, [r3, #292]	; 0x124
 800e3b4:	b212      	sxth	r2, r2
 800e3b6:	ab02      	add	r3, sp, #8
 800e3b8:	b209      	sxth	r1, r1
 800e3ba:	4620      	mov	r0, r4
 800e3bc:	47d8      	blx	fp
 800e3be:	2800      	cmp	r0, #0
 800e3c0:	d065      	beq.n	800e48e <_ZNK8touchgfx21GraphElementHistogram4drawERKNS_4RectE+0x188>
 800e3c2:	f9b4 1114 	ldrsh.w	r1, [r4, #276]	; 0x114
 800e3c6:	f8b4 311a 	ldrh.w	r3, [r4, #282]	; 0x11a
 800e3ca:	f9b4 0040 	ldrsh.w	r0, [r4, #64]	; 0x40
 800e3ce:	f8ad 1012 	strh.w	r1, [sp, #18]
 800e3d2:	18ca      	adds	r2, r1, r3
 800e3d4:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800e3d8:	f8ad 0014 	strh.w	r0, [sp, #20]
 800e3dc:	1a9b      	subs	r3, r3, r2
 800e3de:	4641      	mov	r1, r8
 800e3e0:	2200      	movs	r2, #0
 800e3e2:	a804      	add	r0, sp, #16
 800e3e4:	f8ad 2010 	strh.w	r2, [sp, #16]
 800e3e8:	f8ad 3016 	strh.w	r3, [sp, #22]
 800e3ec:	f7fd fc96 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 800e3f0:	f9bd 8008 	ldrsh.w	r8, [sp, #8]
 800e3f4:	b2ff      	uxtb	r7, r7
 800e3f6:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 800e3fa:	4543      	cmp	r3, r8
 800e3fc:	db47      	blt.n	800e48e <_ZNK8touchgfx21GraphElementHistogram4drawERKNS_4RectE+0x188>
 800e3fe:	6823      	ldr	r3, [r4, #0]
 800e400:	4641      	mov	r1, r8
 800e402:	f8d3 311c 	ldr.w	r3, [r3, #284]	; 0x11c
 800e406:	4620      	mov	r0, r4
 800e408:	4798      	blx	r3
 800e40a:	9b03      	ldr	r3, [sp, #12]
 800e40c:	eb00 1049 	add.w	r0, r0, r9, lsl #5
 800e410:	1ac0      	subs	r0, r0, r3
 800e412:	9006      	str	r0, [sp, #24]
 800e414:	4630      	mov	r0, r6
 800e416:	f7ff f9f3 	bl	800d800 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e41a:	6823      	ldr	r3, [r4, #0]
 800e41c:	4641      	mov	r1, r8
 800e41e:	f8d3 3120 	ldr.w	r3, [r3, #288]	; 0x120
 800e422:	4683      	mov	fp, r0
 800e424:	4620      	mov	r0, r4
 800e426:	4798      	blx	r3
 800e428:	9006      	str	r0, [sp, #24]
 800e42a:	4630      	mov	r0, r6
 800e42c:	f7ff f9e8 	bl	800d800 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e430:	f8ad 001a 	strh.w	r0, [sp, #26]
 800e434:	ebaa 0000 	sub.w	r0, sl, r0
 800e438:	f9b5 3038 	ldrsh.w	r3, [r5, #56]	; 0x38
 800e43c:	f8ad 001e 	strh.w	r0, [sp, #30]
 800e440:	4631      	mov	r1, r6
 800e442:	4628      	mov	r0, r5
 800e444:	f8ad 301c 	strh.w	r3, [sp, #28]
 800e448:	f8ad b018 	strh.w	fp, [sp, #24]
 800e44c:	f7ff ff1b 	bl	800e286 <_ZNK8touchgfx25AbstractGraphElementNoCWR13normalizeRectERNS_4RectE>
 800e450:	4630      	mov	r0, r6
 800e452:	a904      	add	r1, sp, #16
 800e454:	f7fd fc62 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 800e458:	4630      	mov	r0, r6
 800e45a:	f7fd fca2 	bl	800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>
 800e45e:	b968      	cbnz	r0, 800e47c <_ZNK8touchgfx21GraphElementHistogram4drawERKNS_4RectE+0x176>
 800e460:	682b      	ldr	r3, [r5, #0]
 800e462:	4631      	mov	r1, r6
 800e464:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800e466:	4628      	mov	r0, r5
 800e468:	4798      	blx	r3
 800e46a:	f7fe f9f1 	bl	800c850 <_ZN8touchgfx3HAL3lcdEv>
 800e46e:	6803      	ldr	r3, [r0, #0]
 800e470:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 800e472:	f8d3 b020 	ldr.w	fp, [r3, #32]
 800e476:	4631      	mov	r1, r6
 800e478:	463b      	mov	r3, r7
 800e47a:	47d8      	blx	fp
 800e47c:	f108 0801 	add.w	r8, r8, #1
 800e480:	fa0f f888 	sxth.w	r8, r8
 800e484:	e7b7      	b.n	800e3f6 <_ZNK8touchgfx21GraphElementHistogram4drawERKNS_4RectE+0xf0>
 800e486:	4798      	blx	r3
 800e488:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800e48c:	deff      	udf	#255	; 0xff
 800e48e:	b009      	add	sp, #36	; 0x24
 800e490:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e494 <_ZN8touchgfx15GraphLabelsBase22invalidateGraphPointAtEs>:
 800e494:	4770      	bx	lr

0800e496 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE>:
 800e496:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800e498:	b118      	cbz	r0, 800e4a2 <_ZNK8touchgfx15GraphLabelsBase31getCorrectlyScaledMajorIntervalEPKNS_17AbstractDataGraphE+0xc>
 800e49a:	6803      	ldr	r3, [r0, #0]
 800e49c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e4a0:	4718      	bx	r3
 800e4a2:	4770      	bx	lr

0800e4a4 <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800e4a4:	680b      	ldr	r3, [r1, #0]
 800e4a6:	4608      	mov	r0, r1
 800e4a8:	f8d3 30d4 	ldr.w	r3, [r3, #212]	; 0xd4
 800e4ac:	4718      	bx	r3

0800e4ae <_ZNK8touchgfx12GraphLabelsX22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800e4ae:	680b      	ldr	r3, [r1, #0]
 800e4b0:	4608      	mov	r0, r1
 800e4b2:	f8d3 30e0 	ldr.w	r3, [r3, #224]	; 0xe0
 800e4b6:	4718      	bx	r3

0800e4b8 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMinScaledEPKNS_17AbstractDataGraphE>:
 800e4b8:	680b      	ldr	r3, [r1, #0]
 800e4ba:	4608      	mov	r0, r1
 800e4bc:	f8d3 30ec 	ldr.w	r3, [r3, #236]	; 0xec
 800e4c0:	4718      	bx	r3

0800e4c2 <_ZNK8touchgfx12GraphLabelsY22getGraphRangeMaxScaledEPKNS_17AbstractDataGraphE>:
 800e4c2:	680b      	ldr	r3, [r1, #0]
 800e4c4:	4608      	mov	r0, r1
 800e4c6:	f8d3 30f8 	ldr.w	r3, [r3, #248]	; 0xf8
 800e4ca:	4718      	bx	r3

0800e4cc <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE>:
 800e4cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e4d0:	4a37      	ldr	r2, [pc, #220]	; (800e5b0 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe4>)
 800e4d2:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800e4d4:	8812      	ldrh	r2, [r2, #0]
 800e4d6:	429a      	cmp	r2, r3
 800e4d8:	b087      	sub	sp, #28
 800e4da:	4604      	mov	r4, r0
 800e4dc:	4689      	mov	r9, r1
 800e4de:	d937      	bls.n	800e550 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800e4e0:	4a34      	ldr	r2, [pc, #208]	; (800e5b4 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xe8>)
 800e4e2:	6812      	ldr	r2, [r2, #0]
 800e4e4:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e4e8:	4b33      	ldr	r3, [pc, #204]	; (800e5b8 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xec>)
 800e4ea:	681b      	ldr	r3, [r3, #0]
 800e4ec:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800e4f0:	f1b8 0f00 	cmp.w	r8, #0
 800e4f4:	d02c      	beq.n	800e550 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800e4f6:	6803      	ldr	r3, [r0, #0]
 800e4f8:	6945      	ldr	r5, [r0, #20]
 800e4fa:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800e4fc:	2d00      	cmp	r5, #0
 800e4fe:	d052      	beq.n	800e5a6 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0xda>
 800e500:	696f      	ldr	r7, [r5, #20]
 800e502:	4798      	blx	r3
 800e504:	f897 502c 	ldrb.w	r5, [r7, #44]	; 0x2c
 800e508:	fb15 f000 	smulbb	r0, r5, r0
 800e50c:	b280      	uxth	r0, r0
 800e50e:	1c45      	adds	r5, r0, #1
 800e510:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800e514:	122d      	asrs	r5, r5, #8
 800e516:	d01b      	beq.n	800e550 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800e518:	6823      	ldr	r3, [r4, #0]
 800e51a:	4639      	mov	r1, r7
 800e51c:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e520:	4620      	mov	r0, r4
 800e522:	4798      	blx	r3
 800e524:	6823      	ldr	r3, [r4, #0]
 800e526:	4606      	mov	r6, r0
 800e528:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800e52c:	4639      	mov	r1, r7
 800e52e:	4620      	mov	r0, r4
 800e530:	4798      	blx	r3
 800e532:	b2ed      	uxtb	r5, r5
 800e534:	4683      	mov	fp, r0
 800e536:	b970      	cbnz	r0, 800e556 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800e538:	b96e      	cbnz	r6, 800e556 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x8a>
 800e53a:	e9cd 6501 	strd	r6, r5, [sp, #4]
 800e53e:	6823      	ldr	r3, [r4, #0]
 800e540:	9600      	str	r6, [sp, #0]
 800e542:	f8d3 508c 	ldr.w	r5, [r3, #140]	; 0x8c
 800e546:	4642      	mov	r2, r8
 800e548:	463b      	mov	r3, r7
 800e54a:	4649      	mov	r1, r9
 800e54c:	4620      	mov	r0, r4
 800e54e:	47a8      	blx	r5
 800e550:	b007      	add	sp, #28
 800e552:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e556:	2e00      	cmp	r6, #0
 800e558:	ddfa      	ble.n	800e550 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800e55a:	6823      	ldr	r3, [r4, #0]
 800e55c:	4639      	mov	r1, r7
 800e55e:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800e562:	4620      	mov	r0, r4
 800e564:	4798      	blx	r3
 800e566:	6823      	ldr	r3, [r4, #0]
 800e568:	4682      	mov	sl, r0
 800e56a:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800e56e:	4639      	mov	r1, r7
 800e570:	4620      	mov	r0, r4
 800e572:	4798      	blx	r3
 800e574:	4582      	cmp	sl, r0
 800e576:	bfde      	ittt	le
 800e578:	4603      	movle	r3, r0
 800e57a:	4650      	movle	r0, sl
 800e57c:	469a      	movle	sl, r3
 800e57e:	ebaa 0300 	sub.w	r3, sl, r0
 800e582:	fb93 f3f6 	sdiv	r3, r3, r6
 800e586:	2b64      	cmp	r3, #100	; 0x64
 800e588:	dce2      	bgt.n	800e550 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800e58a:	e9cd b503 	strd	fp, r5, [sp, #12]
 800e58e:	e9cd a601 	strd	sl, r6, [sp, #4]
 800e592:	6823      	ldr	r3, [r4, #0]
 800e594:	9000      	str	r0, [sp, #0]
 800e596:	f8d3 5088 	ldr.w	r5, [r3, #136]	; 0x88
 800e59a:	4642      	mov	r2, r8
 800e59c:	463b      	mov	r3, r7
 800e59e:	4649      	mov	r1, r9
 800e5a0:	4620      	mov	r0, r4
 800e5a2:	47a8      	blx	r5
 800e5a4:	e7d4      	b.n	800e550 <_ZNK8touchgfx15GraphLabelsBase4drawERKNS_4RectE+0x84>
 800e5a6:	4798      	blx	r3
 800e5a8:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800e5ac:	deff      	udf	#255	; 0xff
 800e5ae:	bf00      	nop
 800e5b0:	20011e9c 	.word	0x20011e9c
 800e5b4:	20011e98 	.word	0x20011e98
 800e5b8:	20011ea0 	.word	0x20011ea0

0800e5bc <_ZN8touchgfx12GraphLabelsYD1Ev>:
 800e5bc:	4770      	bx	lr

0800e5be <_ZN8touchgfx12GraphLabelsXD1Ev>:
 800e5be:	4770      	bx	lr

0800e5c0 <_ZNK8touchgfx12GraphLabelsX31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800e5c0:	b538      	push	{r3, r4, r5, lr}
 800e5c2:	680a      	ldr	r2, [r1, #0]
 800e5c4:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800e5c8:	f8d2 208c 	ldr.w	r2, [r2, #140]	; 0x8c
 800e5cc:	4608      	mov	r0, r1
 800e5ce:	4790      	blx	r2
 800e5d0:	4629      	mov	r1, r5
 800e5d2:	4602      	mov	r2, r0
 800e5d4:	4620      	mov	r0, r4
 800e5d6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e5da:	f7ff bb21 	b.w	800dc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800e5de <_ZNK8touchgfx12GraphLabelsY31getCorrectlyScaledLabelIntervalEPKNS_17AbstractDataGraphE>:
 800e5de:	b538      	push	{r3, r4, r5, lr}
 800e5e0:	680a      	ldr	r2, [r1, #0]
 800e5e2:	e9d0 540c 	ldrd	r5, r4, [r0, #48]	; 0x30
 800e5e6:	f8d2 2094 	ldr.w	r2, [r2, #148]	; 0x94
 800e5ea:	4608      	mov	r0, r1
 800e5ec:	4790      	blx	r2
 800e5ee:	4629      	mov	r1, r5
 800e5f0:	4602      	mov	r2, r0
 800e5f2:	4620      	mov	r0, r4
 800e5f4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800e5f8:	f7ff bb12 	b.w	800dc20 <_ZN8touchgfx17AbstractDataGraph17convertToNewScaleEiii>

0800e5fc <_ZN8touchgfx12GraphLabelsYD0Ev>:
 800e5fc:	b510      	push	{r4, lr}
 800e5fe:	214c      	movs	r1, #76	; 0x4c
 800e600:	4604      	mov	r4, r0
 800e602:	f012 f855 	bl	80206b0 <_ZdlPvj>
 800e606:	4620      	mov	r0, r4
 800e608:	bd10      	pop	{r4, pc}

0800e60a <_ZN8touchgfx12GraphLabelsXD0Ev>:
 800e60a:	b510      	push	{r4, lr}
 800e60c:	214c      	movs	r1, #76	; 0x4c
 800e60e:	4604      	mov	r4, r0
 800e610:	f012 f84e 	bl	80206b0 <_ZdlPvj>
 800e614:	4620      	mov	r0, r4
 800e616:	bd10      	pop	{r4, pc}

0800e618 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800e618:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e61c:	b08d      	sub	sp, #52	; 0x34
 800e61e:	e9dd 9a18 	ldrd	r9, sl, [sp, #96]	; 0x60
 800e622:	9309      	str	r3, [sp, #36]	; 0x24
 800e624:	f89d 3068 	ldrb.w	r3, [sp, #104]	; 0x68
 800e628:	930a      	str	r3, [sp, #40]	; 0x28
 800e62a:	4606      	mov	r6, r0
 800e62c:	e9cd 1207 	strd	r1, r2, [sp, #28]
 800e630:	e9dd 7816 	ldrd	r7, r8, [sp, #88]	; 0x58
 800e634:	f1b9 0f00 	cmp.w	r9, #0
 800e638:	d117      	bne.n	800e66a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x52>
 800e63a:	2f00      	cmp	r7, #0
 800e63c:	dc7c      	bgt.n	800e738 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x120>
 800e63e:	f1b8 0f00 	cmp.w	r8, #0
 800e642:	da01      	bge.n	800e648 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800e644:	2f00      	cmp	r7, #0
 800e646:	d17a      	bne.n	800e73e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800e648:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e64a:	9318      	str	r3, [sp, #96]	; 0x60
 800e64c:	2300      	movs	r3, #0
 800e64e:	e9cd 3316 	strd	r3, r3, [sp, #88]	; 0x58
 800e652:	6832      	ldr	r2, [r6, #0]
 800e654:	9907      	ldr	r1, [sp, #28]
 800e656:	f8d2 408c 	ldr.w	r4, [r2, #140]	; 0x8c
 800e65a:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800e65e:	4630      	mov	r0, r6
 800e660:	46a4      	mov	ip, r4
 800e662:	b00d      	add	sp, #52	; 0x34
 800e664:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e668:	4760      	bx	ip
 800e66a:	fb97 f4f9 	sdiv	r4, r7, r9
 800e66e:	1e63      	subs	r3, r4, #1
 800e670:	9305      	str	r3, [sp, #20]
 800e672:	f1ba 0f00 	cmp.w	sl, #0
 800e676:	d122      	bne.n	800e6be <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xa6>
 800e678:	fb98 faf9 	sdiv	sl, r8, r9
 800e67c:	fb03 f509 	mul.w	r5, r3, r9
 800e680:	f10a 0a02 	add.w	sl, sl, #2
 800e684:	9b05      	ldr	r3, [sp, #20]
 800e686:	459a      	cmp	sl, r3
 800e688:	d059      	beq.n	800e73e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800e68a:	42af      	cmp	r7, r5
 800e68c:	dc5a      	bgt.n	800e744 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x12c>
 800e68e:	45a8      	cmp	r8, r5
 800e690:	da01      	bge.n	800e696 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>
 800e692:	42af      	cmp	r7, r5
 800e694:	db0e      	blt.n	800e6b4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800e696:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e698:	9302      	str	r3, [sp, #8]
 800e69a:	9905      	ldr	r1, [sp, #20]
 800e69c:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800e69e:	6832      	ldr	r2, [r6, #0]
 800e6a0:	434b      	muls	r3, r1
 800e6a2:	e9cd 5300 	strd	r5, r3, [sp]
 800e6a6:	9907      	ldr	r1, [sp, #28]
 800e6a8:	f8d2 b08c 	ldr.w	fp, [r2, #140]	; 0x8c
 800e6ac:	4630      	mov	r0, r6
 800e6ae:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800e6b2:	47d8      	blx	fp
 800e6b4:	9b05      	ldr	r3, [sp, #20]
 800e6b6:	3301      	adds	r3, #1
 800e6b8:	9305      	str	r3, [sp, #20]
 800e6ba:	444d      	add	r5, r9
 800e6bc:	e7e2      	b.n	800e684 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x6c>
 800e6be:	fb97 f3fa 	sdiv	r3, r7, sl
 800e6c2:	3b01      	subs	r3, #1
 800e6c4:	9306      	str	r3, [sp, #24]
 800e6c6:	9a06      	ldr	r2, [sp, #24]
 800e6c8:	fb98 f3fa 	sdiv	r3, r8, sl
 800e6cc:	fb02 fb0a 	mul.w	fp, r2, sl
 800e6d0:	9a05      	ldr	r2, [sp, #20]
 800e6d2:	3302      	adds	r3, #2
 800e6d4:	fb02 f509 	mul.w	r5, r2, r9
 800e6d8:	930b      	str	r3, [sp, #44]	; 0x2c
 800e6da:	45ab      	cmp	fp, r5
 800e6dc:	dd1d      	ble.n	800e71a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800e6de:	42af      	cmp	r7, r5
 800e6e0:	dc08      	bgt.n	800e6f4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xdc>
 800e6e2:	45a8      	cmp	r8, r5
 800e6e4:	da08      	bge.n	800e6f8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800e6e6:	42af      	cmp	r7, r5
 800e6e8:	da06      	bge.n	800e6f8 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xe0>
 800e6ea:	9b05      	ldr	r3, [sp, #20]
 800e6ec:	3301      	adds	r3, #1
 800e6ee:	9305      	str	r3, [sp, #20]
 800e6f0:	444d      	add	r5, r9
 800e6f2:	e7f2      	b.n	800e6da <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800e6f4:	45a8      	cmp	r8, r5
 800e6f6:	dcf8      	bgt.n	800e6ea <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800e6f8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800e6fa:	9302      	str	r3, [sp, #8]
 800e6fc:	9905      	ldr	r1, [sp, #20]
 800e6fe:	6b73      	ldr	r3, [r6, #52]	; 0x34
 800e700:	6832      	ldr	r2, [r6, #0]
 800e702:	434b      	muls	r3, r1
 800e704:	e9cd 5300 	strd	r5, r3, [sp]
 800e708:	f8d2 308c 	ldr.w	r3, [r2, #140]	; 0x8c
 800e70c:	9907      	ldr	r1, [sp, #28]
 800e70e:	461c      	mov	r4, r3
 800e710:	4630      	mov	r0, r6
 800e712:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 800e716:	47a0      	blx	r4
 800e718:	e7e7      	b.n	800e6ea <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xd2>
 800e71a:	45ab      	cmp	fp, r5
 800e71c:	db04      	blt.n	800e728 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x110>
 800e71e:	9b05      	ldr	r3, [sp, #20]
 800e720:	3301      	adds	r3, #1
 800e722:	9305      	str	r3, [sp, #20]
 800e724:	444d      	add	r5, r9
 800e726:	e7f8      	b.n	800e71a <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x102>
 800e728:	9b06      	ldr	r3, [sp, #24]
 800e72a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800e72c:	3301      	adds	r3, #1
 800e72e:	4293      	cmp	r3, r2
 800e730:	9306      	str	r3, [sp, #24]
 800e732:	d004      	beq.n	800e73e <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x126>
 800e734:	44d3      	add	fp, sl
 800e736:	e7d0      	b.n	800e6da <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0xc2>
 800e738:	f1b8 0f00 	cmp.w	r8, #0
 800e73c:	dd84      	ble.n	800e648 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x30>
 800e73e:	b00d      	add	sp, #52	; 0x34
 800e740:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e744:	45a8      	cmp	r8, r5
 800e746:	dcb5      	bgt.n	800e6b4 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x9c>
 800e748:	e7a5      	b.n	800e696 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x7e>

0800e74a <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>:
 800e74a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e74e:	f9b3 4120 	ldrsh.w	r4, [r3, #288]	; 0x120
 800e752:	b089      	sub	sp, #36	; 0x24
 800e754:	2c00      	cmp	r4, #0
 800e756:	9007      	str	r0, [sp, #28]
 800e758:	468a      	mov	sl, r1
 800e75a:	4693      	mov	fp, r2
 800e75c:	461d      	mov	r5, r3
 800e75e:	e9dd c612 	ldrd	ip, r6, [sp, #72]	; 0x48
 800e762:	e9dd 7814 	ldrd	r7, r8, [sp, #80]	; 0x50
 800e766:	f89d 9058 	ldrb.w	r9, [sp, #88]	; 0x58
 800e76a:	dd03      	ble.n	800e774 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800e76c:	4564      	cmp	r4, ip
 800e76e:	dd01      	ble.n	800e774 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x2a>
 800e770:	42b4      	cmp	r4, r6
 800e772:	dd0e      	ble.n	800e792 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x48>
 800e774:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800e778:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800e77c:	f8cd c048 	str.w	ip, [sp, #72]	; 0x48
 800e780:	9807      	ldr	r0, [sp, #28]
 800e782:	462b      	mov	r3, r5
 800e784:	465a      	mov	r2, fp
 800e786:	4651      	mov	r1, sl
 800e788:	b009      	add	sp, #36	; 0x24
 800e78a:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e78e:	f7ff bf43 	b.w	800e618 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800e792:	f104 3eff 	add.w	lr, r4, #4294967295
 800e796:	e9cd 8903 	strd	r8, r9, [sp, #12]
 800e79a:	9702      	str	r7, [sp, #8]
 800e79c:	e9cd ce00 	strd	ip, lr, [sp]
 800e7a0:	f7ff ff3a 	bl	800e618 <_ZNK8touchgfx15GraphLabelsBase14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih>
 800e7a4:	e9cd 8915 	strd	r8, r9, [sp, #84]	; 0x54
 800e7a8:	e9cd 6713 	strd	r6, r7, [sp, #76]	; 0x4c
 800e7ac:	9412      	str	r4, [sp, #72]	; 0x48
 800e7ae:	e7e7      	b.n	800e780 <_ZNK8touchgfx12GraphLabelsX14drawIndexRangeERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiiiih+0x36>

0800e7b0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>:
 800e7b0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e7b4:	f1b3 0900 	subs.w	r9, r3, #0
 800e7b8:	460d      	mov	r5, r1
 800e7ba:	4690      	mov	r8, r2
 800e7bc:	9f08      	ldr	r7, [sp, #32]
 800e7be:	f8bd a024 	ldrh.w	sl, [sp, #36]	; 0x24
 800e7c2:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 800e7c4:	da18      	bge.n	800e7f8 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800e7c6:	2a01      	cmp	r2, #1
 800e7c8:	dd16      	ble.n	800e7f8 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x48>
 800e7ca:	232d      	movs	r3, #45	; 0x2d
 800e7cc:	800b      	strh	r3, [r1, #0]
 800e7ce:	f1c9 0900 	rsb	r9, r9, #0
 800e7d2:	2001      	movs	r0, #1
 800e7d4:	2f00      	cmp	r7, #0
 800e7d6:	d111      	bne.n	800e7fc <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x4c>
 800e7d8:	eba8 0100 	sub.w	r1, r8, r0
 800e7dc:	2302      	movs	r3, #2
 800e7de:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800e7e2:	fb96 f3f3 	sdiv	r3, r6, r3
 800e7e6:	4a24      	ldr	r2, [pc, #144]	; (800e878 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800e7e8:	444b      	add	r3, r9
 800e7ea:	b289      	uxth	r1, r1
 800e7ec:	fb93 f3f6 	sdiv	r3, r3, r6
 800e7f0:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800e7f4:	f006 b8aa 	b.w	801494c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800e7f8:	2000      	movs	r0, #0
 800e7fa:	e7eb      	b.n	800e7d4 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x24>
 800e7fc:	dd39      	ble.n	800e872 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800e7fe:	fb99 f4f6 	sdiv	r4, r9, r6
 800e802:	eba8 0100 	sub.w	r1, r8, r0
 800e806:	4623      	mov	r3, r4
 800e808:	4a1b      	ldr	r2, [pc, #108]	; (800e878 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc8>)
 800e80a:	b289      	uxth	r1, r1
 800e80c:	eb05 0040 	add.w	r0, r5, r0, lsl #1
 800e810:	f006 f89c 	bl	801494c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
 800e814:	4628      	mov	r0, r5
 800e816:	f005 fd25 	bl	8014264 <_ZN8touchgfx7Unicode6strlenEPKt>
 800e81a:	f108 38ff 	add.w	r8, r8, #4294967295
 800e81e:	4580      	cmp	r8, r0
 800e820:	dd27      	ble.n	800e872 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xc2>
 800e822:	f825 a010 	strh.w	sl, [r5, r0, lsl #1]
 800e826:	fb06 9314 	mls	r3, r6, r4, r9
 800e82a:	3001      	adds	r0, #1
 800e82c:	2200      	movs	r2, #0
 800e82e:	f04f 090a 	mov.w	r9, #10
 800e832:	f107 3aff 	add.w	sl, r7, #4294967295
 800e836:	f04f 0e02 	mov.w	lr, #2
 800e83a:	fb96 fefe 	sdiv	lr, r6, lr
 800e83e:	4580      	cmp	r8, r0
 800e840:	4684      	mov	ip, r0
 800e842:	dd13      	ble.n	800e86c <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0xbc>
 800e844:	fb09 f303 	mul.w	r3, r9, r3
 800e848:	4592      	cmp	sl, r2
 800e84a:	f102 0201 	add.w	r2, r2, #1
 800e84e:	bf08      	it	eq
 800e850:	4473      	addeq	r3, lr
 800e852:	f100 0c01 	add.w	ip, r0, #1
 800e856:	fb93 f4f6 	sdiv	r4, r3, r6
 800e85a:	4297      	cmp	r7, r2
 800e85c:	f104 0130 	add.w	r1, r4, #48	; 0x30
 800e860:	f825 1010 	strh.w	r1, [r5, r0, lsl #1]
 800e864:	fb06 3314 	mls	r3, r6, r4, r3
 800e868:	4660      	mov	r0, ip
 800e86a:	d1e8      	bne.n	800e83e <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti+0x8e>
 800e86c:	2300      	movs	r3, #0
 800e86e:	f825 301c 	strh.w	r3, [r5, ip, lsl #1]
 800e872:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800e876:	bf00      	nop
 800e878:	08023988 	.word	0x08023988

0800e87c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs>:
 800e87c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800e880:	4a69      	ldr	r2, [pc, #420]	; (800ea28 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1ac>)
 800e882:	8f83      	ldrh	r3, [r0, #60]	; 0x3c
 800e884:	8812      	ldrh	r2, [r2, #0]
 800e886:	429a      	cmp	r2, r3
 800e888:	b093      	sub	sp, #76	; 0x4c
 800e88a:	4604      	mov	r4, r0
 800e88c:	460e      	mov	r6, r1
 800e88e:	d93a      	bls.n	800e906 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800e890:	4a66      	ldr	r2, [pc, #408]	; (800ea2c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b0>)
 800e892:	6812      	ldr	r2, [r2, #0]
 800e894:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800e898:	4b65      	ldr	r3, [pc, #404]	; (800ea30 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b4>)
 800e89a:	681b      	ldr	r3, [r3, #0]
 800e89c:	f853 8022 	ldr.w	r8, [r3, r2, lsl #2]
 800e8a0:	f1b8 0f00 	cmp.w	r8, #0
 800e8a4:	d02f      	beq.n	800e906 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800e8a6:	6803      	ldr	r3, [r0, #0]
 800e8a8:	6945      	ldr	r5, [r0, #20]
 800e8aa:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800e8ac:	2d00      	cmp	r5, #0
 800e8ae:	f000 80b7 	beq.w	800ea20 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1a4>
 800e8b2:	696f      	ldr	r7, [r5, #20]
 800e8b4:	4798      	blx	r3
 800e8b6:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 800e8ba:	fb13 f000 	smulbb	r0, r3, r0
 800e8be:	b280      	uxth	r0, r0
 800e8c0:	1c43      	adds	r3, r0, #1
 800e8c2:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 800e8c6:	0a03      	lsrs	r3, r0, #8
 800e8c8:	d01d      	beq.n	800e906 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800e8ca:	6b39      	ldr	r1, [r7, #48]	; 0x30
 800e8cc:	6823      	ldr	r3, [r4, #0]
 800e8ce:	434e      	muls	r6, r1
 800e8d0:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800e8d4:	4639      	mov	r1, r7
 800e8d6:	4620      	mov	r0, r4
 800e8d8:	4798      	blx	r3
 800e8da:	6823      	ldr	r3, [r4, #0]
 800e8dc:	4605      	mov	r5, r0
 800e8de:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800e8e2:	4639      	mov	r1, r7
 800e8e4:	4620      	mov	r0, r4
 800e8e6:	4798      	blx	r3
 800e8e8:	2d00      	cmp	r5, #0
 800e8ea:	dd0f      	ble.n	800e90c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x90>
 800e8ec:	fb96 f3f5 	sdiv	r3, r6, r5
 800e8f0:	436b      	muls	r3, r5
 800e8f2:	1b9a      	subs	r2, r3, r6
 800e8f4:	4253      	negs	r3, r2
 800e8f6:	4153      	adcs	r3, r2
 800e8f8:	2800      	cmp	r0, #0
 800e8fa:	dd09      	ble.n	800e910 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x94>
 800e8fc:	fb96 f2f0 	sdiv	r2, r6, r0
 800e900:	4350      	muls	r0, r2
 800e902:	42b0      	cmp	r0, r6
 800e904:	d10e      	bne.n	800e924 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800e906:	b013      	add	sp, #76	; 0x4c
 800e908:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800e90c:	2300      	movs	r3, #0
 800e90e:	e7f3      	b.n	800e8f8 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x7c>
 800e910:	d108      	bne.n	800e924 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa8>
 800e912:	2d00      	cmp	r5, #0
 800e914:	f040 8081 	bne.w	800ea1a <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x19e>
 800e918:	2e00      	cmp	r6, #0
 800e91a:	d064      	beq.n	800e9e6 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x16a>
 800e91c:	2b00      	cmp	r3, #0
 800e91e:	d0f2      	beq.n	800e906 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800e920:	462a      	mov	r2, r5
 800e922:	e007      	b.n	800e934 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800e924:	2b00      	cmp	r3, #0
 800e926:	d0ee      	beq.n	800e906 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800e928:	2d00      	cmp	r5, #0
 800e92a:	d0f9      	beq.n	800e920 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xa4>
 800e92c:	fb96 f2f5 	sdiv	r2, r6, r5
 800e930:	6b65      	ldr	r5, [r4, #52]	; 0x34
 800e932:	436a      	muls	r2, r5
 800e934:	683b      	ldr	r3, [r7, #0]
 800e936:	4631      	mov	r1, r6
 800e938:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800e93c:	4638      	mov	r0, r7
 800e93e:	4798      	blx	r3
 800e940:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800e942:	9302      	str	r3, [sp, #8]
 800e944:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800e948:	9301      	str	r3, [sp, #4]
 800e94a:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800e94e:	9300      	str	r3, [sp, #0]
 800e950:	2214      	movs	r2, #20
 800e952:	4603      	mov	r3, r0
 800e954:	a908      	add	r1, sp, #32
 800e956:	4620      	mov	r0, r4
 800e958:	f7ff ff2a 	bl	800e7b0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800e95c:	4b35      	ldr	r3, [pc, #212]	; (800ea34 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x1b8>)
 800e95e:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800e960:	6818      	ldr	r0, [r3, #0]
 800e962:	f7f6 fa39 	bl	8004dd8 <_ZNK8touchgfx5Texts7getTextEt>
 800e966:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800e96a:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800e96e:	4681      	mov	r9, r0
 800e970:	f8d8 3000 	ldr.w	r3, [r8]
 800e974:	d139      	bne.n	800e9ea <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x16e>
 800e976:	4601      	mov	r1, r0
 800e978:	699b      	ldr	r3, [r3, #24]
 800e97a:	aa08      	add	r2, sp, #32
 800e97c:	4640      	mov	r0, r8
 800e97e:	4798      	blx	r3
 800e980:	b205      	sxth	r5, r0
 800e982:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800e986:	f8b7 906c 	ldrh.w	r9, [r7, #108]	; 0x6c
 800e98a:	2b01      	cmp	r3, #1
 800e98c:	683b      	ldr	r3, [r7, #0]
 800e98e:	bf88      	it	hi
 800e990:	f105 0801 	addhi.w	r8, r5, #1
 800e994:	4631      	mov	r1, r6
 800e996:	f04f 0002 	mov.w	r0, #2
 800e99a:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800e99e:	bf8c      	ite	hi
 800e9a0:	fb98 f8f0 	sdivhi	r8, r8, r0
 800e9a4:	fb95 f8f0 	sdivls	r8, r5, r0
 800e9a8:	4638      	mov	r0, r7
 800e9aa:	bf88      	it	hi
 800e9ac:	fa0f f888 	sxthhi.w	r8, r8
 800e9b0:	4798      	blx	r3
 800e9b2:	ab12      	add	r3, sp, #72	; 0x48
 800e9b4:	f843 0d34 	str.w	r0, [r3, #-52]!
 800e9b8:	4618      	mov	r0, r3
 800e9ba:	f7fe ff21 	bl	800d800 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800e9be:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800e9c2:	f8ad 301e 	strh.w	r3, [sp, #30]
 800e9c6:	4448      	add	r0, r9
 800e9c8:	6823      	ldr	r3, [r4, #0]
 800e9ca:	f8ad 501c 	strh.w	r5, [sp, #28]
 800e9ce:	eba0 0808 	sub.w	r8, r0, r8
 800e9d2:	2200      	movs	r2, #0
 800e9d4:	f8ad 8018 	strh.w	r8, [sp, #24]
 800e9d8:	f8ad 201a 	strh.w	r2, [sp, #26]
 800e9dc:	691b      	ldr	r3, [r3, #16]
 800e9de:	a906      	add	r1, sp, #24
 800e9e0:	4620      	mov	r0, r4
 800e9e2:	4798      	blx	r3
 800e9e4:	e78f      	b.n	800e906 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800e9e6:	4632      	mov	r2, r6
 800e9e8:	e7a4      	b.n	800e934 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb8>
 800e9ea:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e9ec:	4640      	mov	r0, r8
 800e9ee:	4798      	blx	r3
 800e9f0:	f8d8 3000 	ldr.w	r3, [r8]
 800e9f4:	4605      	mov	r5, r0
 800e9f6:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800e9f8:	aa08      	add	r2, sp, #32
 800e9fa:	4649      	mov	r1, r9
 800e9fc:	4640      	mov	r0, r8
 800e9fe:	4798      	blx	r3
 800ea00:	f8d8 3000 	ldr.w	r3, [r8]
 800ea04:	fb15 f500 	smulbb	r5, r5, r0
 800ea08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ea0a:	aa08      	add	r2, sp, #32
 800ea0c:	4649      	mov	r1, r9
 800ea0e:	4640      	mov	r0, r8
 800ea10:	4798      	blx	r3
 800ea12:	b2ad      	uxth	r5, r5
 800ea14:	4405      	add	r5, r0
 800ea16:	b22d      	sxth	r5, r5
 800ea18:	e7b3      	b.n	800e982 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x106>
 800ea1a:	2b00      	cmp	r3, #0
 800ea1c:	d186      	bne.n	800e92c <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0xb0>
 800ea1e:	e772      	b.n	800e906 <_ZN8touchgfx12GraphLabelsX22invalidateGraphPointAtEs+0x8a>
 800ea20:	4798      	blx	r3
 800ea22:	f895 302c 	ldrb.w	r3, [r5, #44]	; 0x2c
 800ea26:	deff      	udf	#255	; 0xff
 800ea28:	20011e9c 	.word	0x20011e9c
 800ea2c:	20011e98 	.word	0x20011e98
 800ea30:	20011ea0 	.word	0x20011ea0
 800ea34:	20011ea4 	.word	0x20011ea4

0800ea38 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800ea38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ea3c:	461e      	mov	r6, r3
 800ea3e:	b09b      	sub	sp, #108	; 0x6c
 800ea40:	681b      	ldr	r3, [r3, #0]
 800ea42:	9104      	str	r1, [sp, #16]
 800ea44:	f8d3 3114 	ldr.w	r3, [r3, #276]	; 0x114
 800ea48:	9924      	ldr	r1, [sp, #144]	; 0x90
 800ea4a:	4604      	mov	r4, r0
 800ea4c:	4630      	mov	r0, r6
 800ea4e:	4690      	mov	r8, r2
 800ea50:	4798      	blx	r3
 800ea52:	af1a      	add	r7, sp, #104	; 0x68
 800ea54:	f847 0d28 	str.w	r0, [r7, #-40]!
 800ea58:	4638      	mov	r0, r7
 800ea5a:	f7fe fed1 	bl	800d800 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ea5e:	f8b6 3116 	ldrh.w	r3, [r6, #278]	; 0x116
 800ea62:	1ac0      	subs	r0, r0, r3
 800ea64:	b200      	sxth	r0, r0
 800ea66:	2800      	cmp	r0, #0
 800ea68:	f2c0 80b9 	blt.w	800ebde <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a6>
 800ea6c:	f8b6 2118 	ldrh.w	r2, [r6, #280]	; 0x118
 800ea70:	441a      	add	r2, r3
 800ea72:	f8b6 3040 	ldrh.w	r3, [r6, #64]	; 0x40
 800ea76:	1a9b      	subs	r3, r3, r2
 800ea78:	b21b      	sxth	r3, r3
 800ea7a:	4298      	cmp	r0, r3
 800ea7c:	f280 80af 	bge.w	800ebde <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a6>
 800ea80:	6833      	ldr	r3, [r6, #0]
 800ea82:	e9dd 1224 	ldrd	r1, r2, [sp, #144]	; 0x90
 800ea86:	f8d3 3110 	ldr.w	r3, [r3, #272]	; 0x110
 800ea8a:	4630      	mov	r0, r6
 800ea8c:	4798      	blx	r3
 800ea8e:	6833      	ldr	r3, [r6, #0]
 800ea90:	f8b4 9042 	ldrh.w	r9, [r4, #66]	; 0x42
 800ea94:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800ea98:	f8b4 b044 	ldrh.w	fp, [r4, #68]	; 0x44
 800ea9c:	4605      	mov	r5, r0
 800ea9e:	4630      	mov	r0, r6
 800eaa0:	4798      	blx	r3
 800eaa2:	f8cd 9000 	str.w	r9, [sp]
 800eaa6:	e9cd b001 	strd	fp, r0, [sp, #4]
 800eaaa:	462b      	mov	r3, r5
 800eaac:	2214      	movs	r2, #20
 800eaae:	4639      	mov	r1, r7
 800eab0:	4620      	mov	r0, r4
 800eab2:	f7ff fe7d 	bl	800e7b0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800eab6:	4b57      	ldr	r3, [pc, #348]	; (800ec14 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1dc>)
 800eab8:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800eaba:	6818      	ldr	r0, [r3, #0]
 800eabc:	f7f6 f98c 	bl	8004dd8 <_ZNK8touchgfx5Texts7getTextEt>
 800eac0:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800eac4:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800eac8:	4681      	mov	r9, r0
 800eaca:	f8d8 3000 	ldr.w	r3, [r8]
 800eace:	f040 8089 	bne.w	800ebe4 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1ac>
 800ead2:	4601      	mov	r1, r0
 800ead4:	699b      	ldr	r3, [r3, #24]
 800ead6:	463a      	mov	r2, r7
 800ead8:	4640      	mov	r0, r8
 800eada:	4798      	blx	r3
 800eadc:	b205      	sxth	r5, r0
 800eade:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800eae2:	6832      	ldr	r2, [r6, #0]
 800eae4:	9924      	ldr	r1, [sp, #144]	; 0x90
 800eae6:	f8d2 2114 	ldr.w	r2, [r2, #276]	; 0x114
 800eaea:	2b01      	cmp	r3, #1
 800eaec:	f8b6 306c 	ldrh.w	r3, [r6, #108]	; 0x6c
 800eaf0:	9305      	str	r3, [sp, #20]
 800eaf2:	bf88      	it	hi
 800eaf4:	f105 0b01 	addhi.w	fp, r5, #1
 800eaf8:	f04f 0002 	mov.w	r0, #2
 800eafc:	bf94      	ite	ls
 800eafe:	fb95 fbf0 	sdivls	fp, r5, r0
 800eb02:	fb9b fbf0 	sdivhi	fp, fp, r0
 800eb06:	4630      	mov	r0, r6
 800eb08:	bf88      	it	hi
 800eb0a:	fa0f fb8b 	sxthhi.w	fp, fp
 800eb0e:	4790      	blx	r2
 800eb10:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
 800eb14:	2600      	movs	r6, #0
 800eb16:	f84a 0d3c 	str.w	r0, [sl, #-60]!
 800eb1a:	4650      	mov	r0, sl
 800eb1c:	f7fe fe70 	bl	800d800 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800eb20:	9b05      	ldr	r3, [sp, #20]
 800eb22:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800eb26:	f8ad 5020 	strh.w	r5, [sp, #32]
 800eb2a:	4418      	add	r0, r3
 800eb2c:	eba0 0b0b 	sub.w	fp, r0, fp
 800eb30:	f8ad b01c 	strh.w	fp, [sp, #28]
 800eb34:	f8ad 601e 	strh.w	r6, [sp, #30]
 800eb38:	f8ad 1022 	strh.w	r1, [sp, #34]	; 0x22
 800eb3c:	ad07      	add	r5, sp, #28
 800eb3e:	e895 0003 	ldmia.w	r5, {r0, r1}
 800eb42:	f10d 0b24 	add.w	fp, sp, #36	; 0x24
 800eb46:	e88b 0003 	stmia.w	fp, {r0, r1}
 800eb4a:	9904      	ldr	r1, [sp, #16]
 800eb4c:	4658      	mov	r0, fp
 800eb4e:	f7fd f8e5 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 800eb52:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 800eb56:	42b3      	cmp	r3, r6
 800eb58:	dd41      	ble.n	800ebde <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a6>
 800eb5a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 800eb5e:	42b3      	cmp	r3, r6
 800eb60:	dd3d      	ble.n	800ebde <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1a6>
 800eb62:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800eb66:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800eb6a:	1a5b      	subs	r3, r3, r1
 800eb6c:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800eb70:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 800eb74:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800eb78:	1a5b      	subs	r3, r3, r1
 800eb7a:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800eb7e:	6823      	ldr	r3, [r4, #0]
 800eb80:	4629      	mov	r1, r5
 800eb82:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eb84:	4620      	mov	r0, r4
 800eb86:	4798      	blx	r3
 800eb88:	4b23      	ldr	r3, [pc, #140]	; (800ec18 <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1e0>)
 800eb8a:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800eb8c:	681b      	ldr	r3, [r3, #0]
 800eb8e:	f894 0040 	ldrb.w	r0, [r4, #64]	; 0x40
 800eb92:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800eb96:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800eb98:	785b      	ldrb	r3, [r3, #1]
 800eb9a:	910d      	str	r1, [sp, #52]	; 0x34
 800eb9c:	f3c3 0c01 	ubfx	ip, r3, #0, #2
 800eba0:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800eba4:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 800eba8:	f89d 3098 	ldrb.w	r3, [sp, #152]	; 0x98
 800ebac:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800ebb0:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 800ebb4:	f88d c030 	strb.w	ip, [sp, #48]	; 0x30
 800ebb8:	f88d 0032 	strb.w	r0, [sp, #50]	; 0x32
 800ebbc:	f8ad 6038 	strh.w	r6, [sp, #56]	; 0x38
 800ebc0:	f88d 603b 	strb.w	r6, [sp, #59]	; 0x3b
 800ebc4:	f88d 603c 	strb.w	r6, [sp, #60]	; 0x3c
 800ebc8:	f7fd fe42 	bl	800c850 <_ZN8touchgfx3HAL3lcdEv>
 800ebcc:	e9cd 7602 	strd	r7, r6, [sp, #8]
 800ebd0:	e9cd a900 	strd	sl, r9, [sp]
 800ebd4:	465b      	mov	r3, fp
 800ebd6:	e895 0006 	ldmia.w	r5, {r1, r2}
 800ebda:	f7f6 f8af 	bl	8004d3c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800ebde:	b01b      	add	sp, #108	; 0x6c
 800ebe0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800ebe4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ebe6:	4640      	mov	r0, r8
 800ebe8:	4798      	blx	r3
 800ebea:	f8d8 3000 	ldr.w	r3, [r8]
 800ebee:	4605      	mov	r5, r0
 800ebf0:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800ebf2:	463a      	mov	r2, r7
 800ebf4:	4649      	mov	r1, r9
 800ebf6:	4640      	mov	r0, r8
 800ebf8:	4798      	blx	r3
 800ebfa:	f8d8 3000 	ldr.w	r3, [r8]
 800ebfe:	fb15 f500 	smulbb	r5, r5, r0
 800ec02:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ec04:	463a      	mov	r2, r7
 800ec06:	4649      	mov	r1, r9
 800ec08:	4640      	mov	r0, r8
 800ec0a:	4798      	blx	r3
 800ec0c:	b2ad      	uxth	r5, r5
 800ec0e:	4405      	add	r5, r0
 800ec10:	b22d      	sxth	r5, r5
 800ec12:	e764      	b.n	800eade <_ZNK8touchgfx12GraphLabelsX10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa6>
 800ec14:	20011ea4 	.word	0x20011ea4
 800ec18:	20011e98 	.word	0x20011e98

0800ec1c <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih>:
 800ec1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ec20:	4698      	mov	r8, r3
 800ec22:	b09b      	sub	sp, #108	; 0x6c
 800ec24:	681b      	ldr	r3, [r3, #0]
 800ec26:	9104      	str	r1, [sp, #16]
 800ec28:	f8d3 3118 	ldr.w	r3, [r3, #280]	; 0x118
 800ec2c:	9924      	ldr	r1, [sp, #144]	; 0x90
 800ec2e:	4604      	mov	r4, r0
 800ec30:	4640      	mov	r0, r8
 800ec32:	4617      	mov	r7, r2
 800ec34:	4798      	blx	r3
 800ec36:	ae1a      	add	r6, sp, #104	; 0x68
 800ec38:	f846 0d28 	str.w	r0, [r6, #-40]!
 800ec3c:	4630      	mov	r0, r6
 800ec3e:	f7fe fddf 	bl	800d800 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ec42:	f8b8 3114 	ldrh.w	r3, [r8, #276]	; 0x114
 800ec46:	1ac0      	subs	r0, r0, r3
 800ec48:	b200      	sxth	r0, r0
 800ec4a:	2800      	cmp	r0, #0
 800ec4c:	f2c0 80bb 	blt.w	800edc6 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1aa>
 800ec50:	f8b8 211a 	ldrh.w	r2, [r8, #282]	; 0x11a
 800ec54:	441a      	add	r2, r3
 800ec56:	f8b8 3042 	ldrh.w	r3, [r8, #66]	; 0x42
 800ec5a:	1a9b      	subs	r3, r3, r2
 800ec5c:	b21b      	sxth	r3, r3
 800ec5e:	4298      	cmp	r0, r3
 800ec60:	f280 80b1 	bge.w	800edc6 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1aa>
 800ec64:	6b23      	ldr	r3, [r4, #48]	; 0x30
 800ec66:	9302      	str	r3, [sp, #8]
 800ec68:	f8b4 3044 	ldrh.w	r3, [r4, #68]	; 0x44
 800ec6c:	9301      	str	r3, [sp, #4]
 800ec6e:	f8b4 3042 	ldrh.w	r3, [r4, #66]	; 0x42
 800ec72:	9300      	str	r3, [sp, #0]
 800ec74:	2214      	movs	r2, #20
 800ec76:	9b25      	ldr	r3, [sp, #148]	; 0x94
 800ec78:	4631      	mov	r1, r6
 800ec7a:	4620      	mov	r0, r4
 800ec7c:	f7ff fd98 	bl	800e7b0 <_ZNK8touchgfx15GraphLabelsBase11formatLabelEPtsiiti>
 800ec80:	4b56      	ldr	r3, [pc, #344]	; (800eddc <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1c0>)
 800ec82:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800ec84:	6818      	ldr	r0, [r3, #0]
 800ec86:	f7f6 f8a7 	bl	8004dd8 <_ZNK8touchgfx5Texts7getTextEt>
 800ec8a:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800ec8e:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800ec92:	4681      	mov	r9, r0
 800ec94:	683b      	ldr	r3, [r7, #0]
 800ec96:	f040 8099 	bne.w	800edcc <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1b0>
 800ec9a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800ec9c:	4638      	mov	r0, r7
 800ec9e:	4798      	blx	r3
 800eca0:	683b      	ldr	r3, [r7, #0]
 800eca2:	4605      	mov	r5, r0
 800eca4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800eca6:	4632      	mov	r2, r6
 800eca8:	4649      	mov	r1, r9
 800ecaa:	4638      	mov	r0, r7
 800ecac:	4798      	blx	r3
 800ecae:	683b      	ldr	r3, [r7, #0]
 800ecb0:	fb15 f500 	smulbb	r5, r5, r0
 800ecb4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ecb6:	4632      	mov	r2, r6
 800ecb8:	4649      	mov	r1, r9
 800ecba:	4638      	mov	r0, r7
 800ecbc:	4798      	blx	r3
 800ecbe:	b2ad      	uxth	r5, r5
 800ecc0:	4405      	add	r5, r0
 800ecc2:	b22d      	sxth	r5, r5
 800ecc4:	f894 3040 	ldrb.w	r3, [r4, #64]	; 0x40
 800ecc8:	f8d8 2000 	ldr.w	r2, [r8]
 800eccc:	9924      	ldr	r1, [sp, #144]	; 0x90
 800ecce:	f8d2 2118 	ldr.w	r2, [r2, #280]	; 0x118
 800ecd2:	2b01      	cmp	r3, #1
 800ecd4:	f8b8 30c6 	ldrh.w	r3, [r8, #198]	; 0xc6
 800ecd8:	9305      	str	r3, [sp, #20]
 800ecda:	bf88      	it	hi
 800ecdc:	f105 0b01 	addhi.w	fp, r5, #1
 800ece0:	f04f 0002 	mov.w	r0, #2
 800ece4:	bf94      	ite	ls
 800ece6:	fb95 fbf0 	sdivls	fp, r5, r0
 800ecea:	fb9b fbf0 	sdivhi	fp, fp, r0
 800ecee:	4640      	mov	r0, r8
 800ecf0:	bf88      	it	hi
 800ecf2:	fa0f fb8b 	sxthhi.w	fp, fp
 800ecf6:	4790      	blx	r2
 800ecf8:	f10d 0a68 	add.w	sl, sp, #104	; 0x68
 800ecfc:	f04f 0800 	mov.w	r8, #0
 800ed00:	f84a 0d3c 	str.w	r0, [sl, #-60]!
 800ed04:	4650      	mov	r0, sl
 800ed06:	f7fe fd7b 	bl	800d800 <_ZNK8touchgfx7CWRUtil2Q55roundEv>
 800ed0a:	9b05      	ldr	r3, [sp, #20]
 800ed0c:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800ed10:	f8ad 5022 	strh.w	r5, [sp, #34]	; 0x22
 800ed14:	4418      	add	r0, r3
 800ed16:	eba0 0b0b 	sub.w	fp, r0, fp
 800ed1a:	f8ad b01e 	strh.w	fp, [sp, #30]
 800ed1e:	f8ad 801c 	strh.w	r8, [sp, #28]
 800ed22:	f8ad 1020 	strh.w	r1, [sp, #32]
 800ed26:	ad07      	add	r5, sp, #28
 800ed28:	e895 0003 	ldmia.w	r5, {r0, r1}
 800ed2c:	f10d 0b24 	add.w	fp, sp, #36	; 0x24
 800ed30:	e88b 0003 	stmia.w	fp, {r0, r1}
 800ed34:	9904      	ldr	r1, [sp, #16]
 800ed36:	4658      	mov	r0, fp
 800ed38:	f7fc fff0 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 800ed3c:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 800ed40:	4543      	cmp	r3, r8
 800ed42:	dd40      	ble.n	800edc6 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1aa>
 800ed44:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 800ed48:	4543      	cmp	r3, r8
 800ed4a:	dd3c      	ble.n	800edc6 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1aa>
 800ed4c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800ed50:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800ed54:	1a5b      	subs	r3, r3, r1
 800ed56:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800ed5a:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 800ed5e:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800ed62:	1a5b      	subs	r3, r3, r1
 800ed64:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800ed68:	6823      	ldr	r3, [r4, #0]
 800ed6a:	4629      	mov	r1, r5
 800ed6c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ed6e:	4620      	mov	r0, r4
 800ed70:	4798      	blx	r3
 800ed72:	4b1b      	ldr	r3, [pc, #108]	; (800ede0 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0x1c4>)
 800ed74:	8fa1      	ldrh	r1, [r4, #60]	; 0x3c
 800ed76:	681b      	ldr	r3, [r3, #0]
 800ed78:	f894 0040 	ldrb.w	r0, [r4, #64]	; 0x40
 800ed7c:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800ed80:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 800ed82:	785b      	ldrb	r3, [r3, #1]
 800ed84:	910d      	str	r1, [sp, #52]	; 0x34
 800ed86:	f3c3 0c01 	ubfx	ip, r3, #0, #2
 800ed8a:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800ed8e:	f88d 3031 	strb.w	r3, [sp, #49]	; 0x31
 800ed92:	f89d 3098 	ldrb.w	r3, [sp, #152]	; 0x98
 800ed96:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800ed9a:	970b      	str	r7, [sp, #44]	; 0x2c
 800ed9c:	f88d c030 	strb.w	ip, [sp, #48]	; 0x30
 800eda0:	f88d 0032 	strb.w	r0, [sp, #50]	; 0x32
 800eda4:	f8ad 8038 	strh.w	r8, [sp, #56]	; 0x38
 800eda8:	f88d 803b 	strb.w	r8, [sp, #59]	; 0x3b
 800edac:	f88d 803c 	strb.w	r8, [sp, #60]	; 0x3c
 800edb0:	f7fd fd4e 	bl	800c850 <_ZN8touchgfx3HAL3lcdEv>
 800edb4:	e9cd 6802 	strd	r6, r8, [sp, #8]
 800edb8:	e9cd a900 	strd	sl, r9, [sp]
 800edbc:	465b      	mov	r3, fp
 800edbe:	e895 0006 	ldmia.w	r5, {r1, r2}
 800edc2:	f7f5 ffbb 	bl	8004d3c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800edc6:	b01b      	add	sp, #108	; 0x6c
 800edc8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800edcc:	4601      	mov	r1, r0
 800edce:	699b      	ldr	r3, [r3, #24]
 800edd0:	4632      	mov	r2, r6
 800edd2:	4638      	mov	r0, r7
 800edd4:	4798      	blx	r3
 800edd6:	b205      	sxth	r5, r0
 800edd8:	e774      	b.n	800ecc4 <_ZNK8touchgfx12GraphLabelsY10drawStringERKNS_4RectEPKNS_4FontEPKNS_17AbstractDataGraphEiih+0xa8>
 800edda:	bf00      	nop
 800eddc:	20011ea4 	.word	0x20011ea4
 800ede0:	20011e98 	.word	0x20011e98

0800ede4 <_ZNK8touchgfx5Image17invalidateContentEv>:
 800ede4:	b508      	push	{r3, lr}
 800ede6:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800edea:	b10b      	cbz	r3, 800edf0 <_ZNK8touchgfx5Image17invalidateContentEv+0xc>
 800edec:	f7f2 ffe9 	bl	8001dc2 <_ZNK8touchgfx8Drawable17invalidateContentEv>
 800edf0:	bd08      	pop	{r3, pc}

0800edf2 <_ZN8touchgfx13ScalableImage19setScalingAlgorithmENS0_16ScalingAlgorithmE>:
 800edf2:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800edf6:	4770      	bx	lr

0800edf8 <_ZN8touchgfx13ScalableImage19getScalingAlgorithmEv>:
 800edf8:	f890 0029 	ldrb.w	r0, [r0, #41]	; 0x29
 800edfc:	4770      	bx	lr

0800edfe <_ZN8touchgfx13ScalableImageD1Ev>:
 800edfe:	4770      	bx	lr

0800ee00 <_ZN8touchgfx13ScalableImageD0Ev>:
 800ee00:	b510      	push	{r4, lr}
 800ee02:	212c      	movs	r1, #44	; 0x2c
 800ee04:	4604      	mov	r4, r0
 800ee06:	f011 fc53 	bl	80206b0 <_ZdlPvj>
 800ee0a:	4620      	mov	r0, r4
 800ee0c:	bd10      	pop	{r4, pc}

0800ee0e <_ZNK8touchgfx13ScalableImage12getSolidRectEv>:
 800ee0e:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 800ee10:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800ee14:	2bff      	cmp	r3, #255	; 0xff
 800ee16:	4605      	mov	r5, r0
 800ee18:	d11e      	bne.n	800ee58 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x4a>
 800ee1a:	f101 0426 	add.w	r4, r1, #38	; 0x26
 800ee1e:	4621      	mov	r1, r4
 800ee20:	4668      	mov	r0, sp
 800ee22:	f005 feb5 	bl	8014b90 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800ee26:	4620      	mov	r0, r4
 800ee28:	f9bd 6004 	ldrsh.w	r6, [sp, #4]
 800ee2c:	f005 fe48 	bl	8014ac0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800ee30:	4286      	cmp	r6, r0
 800ee32:	d111      	bne.n	800ee58 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x4a>
 800ee34:	4621      	mov	r1, r4
 800ee36:	a802      	add	r0, sp, #8
 800ee38:	f005 feaa 	bl	8014b90 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800ee3c:	4620      	mov	r0, r4
 800ee3e:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 800ee42:	f005 fe71 	bl	8014b28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800ee46:	4286      	cmp	r6, r0
 800ee48:	d106      	bne.n	800ee58 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x4a>
 800ee4a:	4621      	mov	r1, r4
 800ee4c:	4628      	mov	r0, r5
 800ee4e:	f005 fe9f 	bl	8014b90 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800ee52:	4628      	mov	r0, r5
 800ee54:	b004      	add	sp, #16
 800ee56:	bd70      	pop	{r4, r5, r6, pc}
 800ee58:	2300      	movs	r3, #0
 800ee5a:	802b      	strh	r3, [r5, #0]
 800ee5c:	806b      	strh	r3, [r5, #2]
 800ee5e:	80ab      	strh	r3, [r5, #4]
 800ee60:	80eb      	strh	r3, [r5, #6]
 800ee62:	e7f6      	b.n	800ee52 <_ZNK8touchgfx13ScalableImage12getSolidRectEv+0x44>

0800ee64 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE>:
 800ee64:	b538      	push	{r3, r4, r5, lr}
 800ee66:	2300      	movs	r3, #0
 800ee68:	e9c0 3305 	strd	r3, r3, [r0, #20]
 800ee6c:	8083      	strh	r3, [r0, #4]
 800ee6e:	80c3      	strh	r3, [r0, #6]
 800ee70:	8103      	strh	r3, [r0, #8]
 800ee72:	8143      	strh	r3, [r0, #10]
 800ee74:	8183      	strh	r3, [r0, #12]
 800ee76:	81c3      	strh	r3, [r0, #14]
 800ee78:	8203      	strh	r3, [r0, #16]
 800ee7a:	8243      	strh	r3, [r0, #18]
 800ee7c:	61c3      	str	r3, [r0, #28]
 800ee7e:	8403      	strh	r3, [r0, #32]
 800ee80:	8443      	strh	r3, [r0, #34]	; 0x22
 800ee82:	f880 3024 	strb.w	r3, [r0, #36]	; 0x24
 800ee86:	2501      	movs	r5, #1
 800ee88:	4b08      	ldr	r3, [pc, #32]	; (800eeac <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x48>)
 800ee8a:	f880 5025 	strb.w	r5, [r0, #37]	; 0x25
 800ee8e:	6003      	str	r3, [r0, #0]
 800ee90:	880b      	ldrh	r3, [r1, #0]
 800ee92:	84c3      	strh	r3, [r0, #38]	; 0x26
 800ee94:	23ff      	movs	r3, #255	; 0xff
 800ee96:	4604      	mov	r4, r0
 800ee98:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800ee9c:	f000 fecd 	bl	800fc3a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>
 800eea0:	4b03      	ldr	r3, [pc, #12]	; (800eeb0 <_ZN8touchgfx13ScalableImageC1ERKNS_6BitmapE+0x4c>)
 800eea2:	6023      	str	r3, [r4, #0]
 800eea4:	f884 5029 	strb.w	r5, [r4, #41]	; 0x29
 800eea8:	4620      	mov	r0, r4
 800eeaa:	bd38      	pop	{r3, r4, r5, pc}
 800eeac:	08023ce0 	.word	0x08023ce0
 800eeb0:	08023b74 	.word	0x08023b74

0800eeb4 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>:
 800eeb4:	4603      	mov	r3, r0
 800eeb6:	3026      	adds	r0, #38	; 0x26
 800eeb8:	f893 3029 	ldrb.w	r3, [r3, #41]	; 0x29
 800eebc:	b90b      	cbnz	r3, 800eec2 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv+0xe>
 800eebe:	f003 be67 	b.w	8012b90 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>
 800eec2:	f003 be75 	b.w	8012bb0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>
	...

0800eec8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>:
 800eec8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800eecc:	4604      	mov	r4, r0
 800eece:	469b      	mov	fp, r3
 800eed0:	f9b0 c008 	ldrsh.w	ip, [r0, #8]
 800eed4:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800eed8:	f9b1 6000 	ldrsh.w	r6, [r1]
 800eedc:	8888      	ldrh	r0, [r1, #4]
 800eede:	b0b3      	sub	sp, #204	; 0xcc
 800eee0:	4430      	add	r0, r6
 800eee2:	b280      	uxth	r0, r0
 800eee4:	9206      	str	r2, [sp, #24]
 800eee6:	fa0f fe80 	sxth.w	lr, r0
 800eeea:	2200      	movs	r2, #0
 800eeec:	4596      	cmp	lr, r2
 800eeee:	e9dd a93c 	ldrd	sl, r9, [sp, #240]	; 0xf0
 800eef2:	e9dd 873e 	ldrd	r8, r7, [sp, #248]	; 0xf8
 800eef6:	9211      	str	r2, [sp, #68]	; 0x44
 800eef8:	f340 811a 	ble.w	800f130 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 800eefc:	45b4      	cmp	ip, r6
 800eefe:	f340 8117 	ble.w	800f130 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 800ef02:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 800ef06:	88ca      	ldrh	r2, [r1, #6]
 800ef08:	442a      	add	r2, r5
 800ef0a:	b292      	uxth	r2, r2
 800ef0c:	b211      	sxth	r1, r2
 800ef0e:	2900      	cmp	r1, #0
 800ef10:	f340 810e 	ble.w	800f130 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 800ef14:	42ab      	cmp	r3, r5
 800ef16:	f340 810b 	ble.w	800f130 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x268>
 800ef1a:	45f4      	cmp	ip, lr
 800ef1c:	bfb8      	it	lt
 800ef1e:	fa1f f08c 	uxthlt.w	r0, ip
 800ef22:	428b      	cmp	r3, r1
 800ef24:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800ef28:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800ef2c:	bfb8      	it	lt
 800ef2e:	b29a      	uxthlt	r2, r3
 800ef30:	1b80      	subs	r0, r0, r6
 800ef32:	1b52      	subs	r2, r2, r5
 800ef34:	f8ad 0048 	strh.w	r0, [sp, #72]	; 0x48
 800ef38:	f8ad 204a 	strh.w	r2, [sp, #74]	; 0x4a
 800ef3c:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 800ef40:	f8ad 5046 	strh.w	r5, [sp, #70]	; 0x46
 800ef44:	ab11      	add	r3, sp, #68	; 0x44
 800ef46:	e893 0003 	ldmia.w	r3, {r0, r1}
 800ef4a:	6822      	ldr	r2, [r4, #0]
 800ef4c:	9307      	str	r3, [sp, #28]
 800ef4e:	ad13      	add	r5, sp, #76	; 0x4c
 800ef50:	6ad2      	ldr	r2, [r2, #44]	; 0x2c
 800ef52:	e885 0003 	stmia.w	r5, {r0, r1}
 800ef56:	4629      	mov	r1, r5
 800ef58:	4620      	mov	r0, r4
 800ef5a:	4790      	blx	r2
 800ef5c:	4621      	mov	r1, r4
 800ef5e:	a815      	add	r0, sp, #84	; 0x54
 800ef60:	f003 fd72 	bl	8012a48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800ef64:	a815      	add	r0, sp, #84	; 0x54
 800ef66:	f002 fb11 	bl	801158c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800ef6a:	9b07      	ldr	r3, [sp, #28]
 800ef6c:	1d26      	adds	r6, r4, #4
 800ef6e:	4618      	mov	r0, r3
 800ef70:	4631      	mov	r1, r6
 800ef72:	f002 fb4f 	bl	8011614 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800ef76:	4628      	mov	r0, r5
 800ef78:	f104 0526 	add.w	r5, r4, #38	; 0x26
 800ef7c:	f002 fb06 	bl	801158c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800ef80:	4628      	mov	r0, r5
 800ef82:	f005 fe89 	bl	8014c98 <_ZNK8touchgfx6Bitmap7getDataEv>
 800ef86:	9007      	str	r0, [sp, #28]
 800ef88:	2800      	cmp	r0, #0
 800ef8a:	f000 80ce 	beq.w	800f12a <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x262>
 800ef8e:	f8db 2000 	ldr.w	r2, [fp]
 800ef92:	9209      	str	r2, [sp, #36]	; 0x24
 800ef94:	f8db 2004 	ldr.w	r2, [fp, #4]
 800ef98:	920a      	str	r2, [sp, #40]	; 0x28
 800ef9a:	f8db 2008 	ldr.w	r2, [fp, #8]
 800ef9e:	920b      	str	r2, [sp, #44]	; 0x2c
 800efa0:	f8db 200c 	ldr.w	r2, [fp, #12]
 800efa4:	920c      	str	r2, [sp, #48]	; 0x30
 800efa6:	f8da 2000 	ldr.w	r2, [sl]
 800efaa:	920d      	str	r2, [sp, #52]	; 0x34
 800efac:	f8da 2004 	ldr.w	r2, [sl, #4]
 800efb0:	920e      	str	r2, [sp, #56]	; 0x38
 800efb2:	f8da 2008 	ldr.w	r2, [sl, #8]
 800efb6:	920f      	str	r2, [sp, #60]	; 0x3c
 800efb8:	f8da 200c 	ldr.w	r2, [sl, #12]
 800efbc:	9210      	str	r2, [sp, #64]	; 0x40
 800efbe:	a90d      	add	r1, sp, #52	; 0x34
 800efc0:	4632      	mov	r2, r6
 800efc2:	a809      	add	r0, sp, #36	; 0x24
 800efc4:	f002 fb0a 	bl	80115dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800efc8:	4632      	mov	r2, r6
 800efca:	a90e      	add	r1, sp, #56	; 0x38
 800efcc:	a80a      	add	r0, sp, #40	; 0x28
 800efce:	f002 fb05 	bl	80115dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800efd2:	4632      	mov	r2, r6
 800efd4:	a90f      	add	r1, sp, #60	; 0x3c
 800efd6:	a80b      	add	r0, sp, #44	; 0x2c
 800efd8:	f002 fb00 	bl	80115dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800efdc:	4632      	mov	r2, r6
 800efde:	a910      	add	r1, sp, #64	; 0x40
 800efe0:	a80c      	add	r0, sp, #48	; 0x30
 800efe2:	f002 fafb 	bl	80115dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>
 800efe6:	eddd 7a0d 	vldr	s15, [sp, #52]	; 0x34
 800efea:	edd7 3a00 	vldr	s7, [r7]
 800efee:	ed97 5a01 	vldr	s10, [r7, #4]
 800eff2:	edd9 2a00 	vldr	s5, [r9]
 800eff6:	ed98 3a00 	vldr	s6, [r8]
 800effa:	ed99 4a01 	vldr	s8, [r9, #4]
 800effe:	edd8 4a01 	vldr	s9, [r8, #4]
 800f002:	edd9 5a02 	vldr	s11, [r9, #8]
 800f006:	f8d9 e00c 	ldr.w	lr, [r9, #12]
 800f00a:	f8d8 c00c 	ldr.w	ip, [r8, #12]
 800f00e:	edcd 2a20 	vstr	s5, [sp, #128]	; 0x80
 800f012:	eef0 6a67 	vmov.f32	s13, s15
 800f016:	eddd 7a0a 	vldr	s15, [sp, #40]	; 0x28
 800f01a:	ed8d 3a21 	vstr	s6, [sp, #132]	; 0x84
 800f01e:	eeb0 7a67 	vmov.f32	s14, s15
 800f022:	eddd 7a0e 	vldr	s15, [sp, #56]	; 0x38
 800f026:	edcd 3a22 	vstr	s7, [sp, #136]	; 0x88
 800f02a:	eeb0 6a67 	vmov.f32	s12, s15
 800f02e:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800f032:	eddd 7a0b 	vldr	s15, [sp, #44]	; 0x2c
 800f036:	ed8d 4a25 	vstr	s8, [sp, #148]	; 0x94
 800f03a:	ee16 6a10 	vmov	r6, s12
 800f03e:	eeb0 6a67 	vmov.f32	s12, s15
 800f042:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800f046:	eddd 7a0f 	vldr	s15, [sp, #60]	; 0x3c
 800f04a:	edcd 4a26 	vstr	s9, [sp, #152]	; 0x98
 800f04e:	ee16 0a10 	vmov	r0, s12
 800f052:	eeb0 6a67 	vmov.f32	s12, s15
 800f056:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800f05a:	eddd 7a0c 	vldr	s15, [sp, #48]	; 0x30
 800f05e:	ed8d 5a27 	vstr	s10, [sp, #156]	; 0x9c
 800f062:	ee16 1a10 	vmov	r1, s12
 800f066:	eeb0 6a67 	vmov.f32	s12, s15
 800f06a:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800f06e:	eefe 6ace 	vcvt.s32.f32	s13, s13, #4
 800f072:	ee16 2a10 	vmov	r2, s12
 800f076:	ed9d 6a09 	vldr	s12, [sp, #36]	; 0x24
 800f07a:	eddd 7a10 	vldr	s15, [sp, #64]	; 0x40
 800f07e:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 800f082:	eebe 7ace 	vcvt.s32.f32	s14, s14, #4
 800f086:	eebe 6ace 	vcvt.s32.f32	s12, s12, #4
 800f08a:	e9cd 0128 	strd	r0, r1, [sp, #160]	; 0xa0
 800f08e:	ed8d 6a1e 	vstr	s12, [sp, #120]	; 0x78
 800f092:	ed8d 7a23 	vstr	s14, [sp, #140]	; 0x8c
 800f096:	f8d7 a008 	ldr.w	sl, [r7, #8]
 800f09a:	f8d8 b008 	ldr.w	fp, [r8, #8]
 800f09e:	68ff      	ldr	r7, [r7, #12]
 800f0a0:	9624      	str	r6, [sp, #144]	; 0x90
 800f0a2:	edcd 5a2a 	vstr	s11, [sp, #168]	; 0xa8
 800f0a6:	922d      	str	r2, [sp, #180]	; 0xb4
 800f0a8:	4a23      	ldr	r2, [pc, #140]	; (800f138 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x270>)
 800f0aa:	9b06      	ldr	r3, [sp, #24]
 800f0ac:	8812      	ldrh	r2, [r2, #0]
 800f0ae:	9317      	str	r3, [sp, #92]	; 0x5c
 800f0b0:	eefe 7ace 	vcvt.s32.f32	s15, s15, #4
 800f0b4:	9b07      	ldr	r3, [sp, #28]
 800f0b6:	9218      	str	r2, [sp, #96]	; 0x60
 800f0b8:	4628      	mov	r0, r5
 800f0ba:	9319      	str	r3, [sp, #100]	; 0x64
 800f0bc:	edcd 7a2e 	vstr	s15, [sp, #184]	; 0xb8
 800f0c0:	f8cd e0bc 	str.w	lr, [sp, #188]	; 0xbc
 800f0c4:	f8cd c0c0 	str.w	ip, [sp, #192]	; 0xc0
 800f0c8:	f8cd b0ac 	str.w	fp, [sp, #172]	; 0xac
 800f0cc:	f8cd a0b0 	str.w	sl, [sp, #176]	; 0xb0
 800f0d0:	9731      	str	r7, [sp, #196]	; 0xc4
 800f0d2:	f005 fe11 	bl	8014cf8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 800f0d6:	901a      	str	r0, [sp, #104]	; 0x68
 800f0d8:	4628      	mov	r0, r5
 800f0da:	f005 fcf1 	bl	8014ac0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800f0de:	901b      	str	r0, [sp, #108]	; 0x6c
 800f0e0:	4628      	mov	r0, r5
 800f0e2:	f005 fd21 	bl	8014b28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800f0e6:	901c      	str	r0, [sp, #112]	; 0x70
 800f0e8:	4628      	mov	r0, r5
 800f0ea:	f005 fce9 	bl	8014ac0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800f0ee:	4b13      	ldr	r3, [pc, #76]	; (800f13c <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x274>)
 800f0f0:	901d      	str	r0, [sp, #116]	; 0x74
 800f0f2:	681b      	ldr	r3, [r3, #0]
 800f0f4:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800f0f8:	b10a      	cbz	r2, 800f0fe <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x236>
 800f0fa:	6cdd      	ldr	r5, [r3, #76]	; 0x4c
 800f0fc:	b905      	cbnz	r5, 800f100 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x238>
 800f0fe:	689d      	ldr	r5, [r3, #8]
 800f100:	682b      	ldr	r3, [r5, #0]
 800f102:	4620      	mov	r0, r4
 800f104:	6c1e      	ldr	r6, [r3, #64]	; 0x40
 800f106:	f7ff fed5 	bl	800eeb4 <_ZNK8touchgfx13ScalableImage19lookupRenderVariantEv>
 800f10a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800f10e:	9304      	str	r3, [sp, #16]
 800f110:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800f114:	e9cd 0302 	strd	r0, r3, [sp, #8]
 800f118:	ab13      	add	r3, sp, #76	; 0x4c
 800f11a:	9301      	str	r3, [sp, #4]
 800f11c:	ab15      	add	r3, sp, #84	; 0x54
 800f11e:	9300      	str	r3, [sp, #0]
 800f120:	aa1e      	add	r2, sp, #120	; 0x78
 800f122:	ab19      	add	r3, sp, #100	; 0x64
 800f124:	a917      	add	r1, sp, #92	; 0x5c
 800f126:	4628      	mov	r0, r5
 800f128:	47b0      	blx	r6
 800f12a:	b033      	add	sp, #204	; 0xcc
 800f12c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f130:	2300      	movs	r3, #0
 800f132:	9312      	str	r3, [sp, #72]	; 0x48
 800f134:	e706      	b.n	800ef44 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_+0x7c>
 800f136:	bf00      	nop
 800f138:	20011e3a 	.word	0x20011e3a
 800f13c:	20011e40 	.word	0x20011e40

0800f140 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE>:
 800f140:	b570      	push	{r4, r5, r6, lr}
 800f142:	ed2d 8b04 	vpush	{d8-d9}
 800f146:	f890 3028 	ldrb.w	r3, [r0, #40]	; 0x28
 800f14a:	b098      	sub	sp, #96	; 0x60
 800f14c:	4604      	mov	r4, r0
 800f14e:	460e      	mov	r6, r1
 800f150:	2b00      	cmp	r3, #0
 800f152:	d065      	beq.n	800f220 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe0>
 800f154:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800f158:	ed9f 8a38 	vldr	s16, [pc, #224]	; 800f23c <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xfc>
 800f15c:	ee09 3a10 	vmov	s18, r3
 800f160:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800f164:	f100 0526 	add.w	r5, r0, #38	; 0x26
 800f168:	ee08 3a90 	vmov	s17, r3
 800f16c:	4628      	mov	r0, r5
 800f16e:	4b34      	ldr	r3, [pc, #208]	; (800f240 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x100>)
 800f170:	930c      	str	r3, [sp, #48]	; 0x30
 800f172:	930d      	str	r3, [sp, #52]	; 0x34
 800f174:	930e      	str	r3, [sp, #56]	; 0x38
 800f176:	930f      	str	r3, [sp, #60]	; 0x3c
 800f178:	f005 fca2 	bl	8014ac0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800f17c:	ee07 0a90 	vmov	s15, r0
 800f180:	4628      	mov	r0, r5
 800f182:	eef8 9ae7 	vcvt.f32.s32	s19, s15
 800f186:	f005 fccf 	bl	8014b28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800f18a:	4b2e      	ldr	r3, [pc, #184]	; (800f244 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x104>)
 800f18c:	781b      	ldrb	r3, [r3, #0]
 800f18e:	ee07 0a90 	vmov	s15, r0
 800f192:	eeb8 9ac9 	vcvt.f32.s32	s18, s18
 800f196:	eef8 8ae8 	vcvt.f32.s32	s17, s17
 800f19a:	2b01      	cmp	r3, #1
 800f19c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800f1a0:	ee39 9a08 	vadd.f32	s18, s18, s16
 800f1a4:	ee78 8a88 	vadd.f32	s17, s17, s16
 800f1a8:	eef0 7a48 	vmov.f32	s15, s16
 800f1ac:	d13c      	bne.n	800f228 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0xe8>
 800f1ae:	eef0 6a69 	vmov.f32	s13, s19
 800f1b2:	eeb0 6a47 	vmov.f32	s12, s14
 800f1b6:	eef0 5a47 	vmov.f32	s11, s14
 800f1ba:	ee19 3a90 	vmov	r3, s19
 800f1be:	eeb0 7a48 	vmov.f32	s14, s16
 800f1c2:	eef0 9a48 	vmov.f32	s19, s16
 800f1c6:	9314      	str	r3, [sp, #80]	; 0x50
 800f1c8:	ab14      	add	r3, sp, #80	; 0x50
 800f1ca:	9303      	str	r3, [sp, #12]
 800f1cc:	ab10      	add	r3, sp, #64	; 0x40
 800f1ce:	9302      	str	r3, [sp, #8]
 800f1d0:	ab0c      	add	r3, sp, #48	; 0x30
 800f1d2:	9301      	str	r3, [sp, #4]
 800f1d4:	ab08      	add	r3, sp, #32
 800f1d6:	9300      	str	r3, [sp, #0]
 800f1d8:	2200      	movs	r2, #0
 800f1da:	ab04      	add	r3, sp, #16
 800f1dc:	4631      	mov	r1, r6
 800f1de:	4620      	mov	r0, r4
 800f1e0:	edcd 7a04 	vstr	s15, [sp, #16]
 800f1e4:	ed8d 9a05 	vstr	s18, [sp, #20]
 800f1e8:	ed8d 9a06 	vstr	s18, [sp, #24]
 800f1ec:	edcd 7a07 	vstr	s15, [sp, #28]
 800f1f0:	edcd 7a08 	vstr	s15, [sp, #32]
 800f1f4:	edcd 7a09 	vstr	s15, [sp, #36]	; 0x24
 800f1f8:	edcd 8a0a 	vstr	s17, [sp, #40]	; 0x28
 800f1fc:	edcd 8a0b 	vstr	s17, [sp, #44]	; 0x2c
 800f200:	edcd 7a10 	vstr	s15, [sp, #64]	; 0x40
 800f204:	edcd 9a11 	vstr	s19, [sp, #68]	; 0x44
 800f208:	edcd 5a12 	vstr	s11, [sp, #72]	; 0x48
 800f20c:	ed8d 6a13 	vstr	s12, [sp, #76]	; 0x4c
 800f210:	edcd 7a15 	vstr	s15, [sp, #84]	; 0x54
 800f214:	ed8d 7a16 	vstr	s14, [sp, #88]	; 0x58
 800f218:	edcd 6a17 	vstr	s13, [sp, #92]	; 0x5c
 800f21c:	f7ff fe54 	bl	800eec8 <_ZNK8touchgfx13ScalableImage8drawQuadERKNS_4RectEPtPKfS6_S6_S6_S6_>
 800f220:	b018      	add	sp, #96	; 0x60
 800f222:	ecbd 8b04 	vpop	{d8-d9}
 800f226:	bd70      	pop	{r4, r5, r6, pc}
 800f228:	eef0 6a47 	vmov.f32	s13, s14
 800f22c:	eef0 5a69 	vmov.f32	s11, s19
 800f230:	eeb0 6a48 	vmov.f32	s12, s16
 800f234:	ee18 3a10 	vmov	r3, s16
 800f238:	e7c5      	b.n	800f1c6 <_ZNK8touchgfx13ScalableImage4drawERKNS_4RectE+0x86>
 800f23a:	bf00      	nop
 800f23c:	00000000 	.word	0x00000000
 800f240:	42c80000 	.word	0x42c80000
 800f244:	20011e38 	.word	0x20011e38

0800f248 <_ZN8touchgfx8TextArea8setWidthEs>:
 800f248:	b530      	push	{r4, r5, lr}
 800f24a:	b085      	sub	sp, #20
 800f24c:	6803      	ldr	r3, [r0, #0]
 800f24e:	8101      	strh	r1, [r0, #8]
 800f250:	466d      	mov	r5, sp
 800f252:	4601      	mov	r1, r0
 800f254:	4604      	mov	r4, r0
 800f256:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800f25a:	4628      	mov	r0, r5
 800f25c:	4798      	blx	r3
 800f25e:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800f262:	343c      	adds	r4, #60	; 0x3c
 800f264:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800f268:	b005      	add	sp, #20
 800f26a:	bd30      	pop	{r4, r5, pc}

0800f26c <_ZN8touchgfx8TextArea9setHeightEs>:
 800f26c:	b530      	push	{r4, r5, lr}
 800f26e:	b085      	sub	sp, #20
 800f270:	6803      	ldr	r3, [r0, #0]
 800f272:	8141      	strh	r1, [r0, #10]
 800f274:	466d      	mov	r5, sp
 800f276:	4601      	mov	r1, r0
 800f278:	4604      	mov	r4, r0
 800f27a:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800f27e:	4628      	mov	r0, r5
 800f280:	4798      	blx	r3
 800f282:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800f286:	343c      	adds	r4, #60	; 0x3c
 800f288:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800f28c:	b005      	add	sp, #20
 800f28e:	bd30      	pop	{r4, r5, pc}

0800f290 <_ZNK8touchgfx8TextArea12getSolidRectEv>:
 800f290:	2200      	movs	r2, #0
 800f292:	8002      	strh	r2, [r0, #0]
 800f294:	8042      	strh	r2, [r0, #2]
 800f296:	8082      	strh	r2, [r0, #4]
 800f298:	80c2      	strh	r2, [r0, #6]
 800f29a:	4770      	bx	lr

0800f29c <_ZN8touchgfx8TextArea8setAlphaEh>:
 800f29c:	f880 1036 	strb.w	r1, [r0, #54]	; 0x36
 800f2a0:	4770      	bx	lr
	...

0800f2a4 <_ZN8touchgfx8TextArea12setBaselineYEs>:
 800f2a4:	b570      	push	{r4, r5, r6, lr}
 800f2a6:	6803      	ldr	r3, [r0, #0]
 800f2a8:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800f2aa:	6b5e      	ldr	r6, [r3, #52]	; 0x34
 800f2ac:	4b09      	ldr	r3, [pc, #36]	; (800f2d4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x30>)
 800f2ae:	681b      	ldr	r3, [r3, #0]
 800f2b0:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800f2b4:	4b08      	ldr	r3, [pc, #32]	; (800f2d8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x34>)
 800f2b6:	681b      	ldr	r3, [r3, #0]
 800f2b8:	4604      	mov	r4, r0
 800f2ba:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 800f2be:	6803      	ldr	r3, [r0, #0]
 800f2c0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f2c2:	460d      	mov	r5, r1
 800f2c4:	4798      	blx	r3
 800f2c6:	1a29      	subs	r1, r5, r0
 800f2c8:	4633      	mov	r3, r6
 800f2ca:	4620      	mov	r0, r4
 800f2cc:	b209      	sxth	r1, r1
 800f2ce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f2d2:	4718      	bx	r3
 800f2d4:	20011e98 	.word	0x20011e98
 800f2d8:	20011ea0 	.word	0x20011ea0

0800f2dc <_ZN8touchgfx8TextArea13setXBaselineYEss>:
 800f2dc:	b570      	push	{r4, r5, r6, lr}
 800f2de:	6803      	ldr	r3, [r0, #0]
 800f2e0:	4604      	mov	r4, r0
 800f2e2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f2e4:	4615      	mov	r5, r2
 800f2e6:	4798      	blx	r3
 800f2e8:	6823      	ldr	r3, [r4, #0]
 800f2ea:	4629      	mov	r1, r5
 800f2ec:	4620      	mov	r0, r4
 800f2ee:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800f2f0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800f2f4:	4718      	bx	r3

0800f2f6 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 800f2f6:	2000      	movs	r0, #0
 800f2f8:	4770      	bx	lr

0800f2fa <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
 800f2fa:	2000      	movs	r0, #0
 800f2fc:	4770      	bx	lr
	...

0800f300 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 800f300:	4b07      	ldr	r3, [pc, #28]	; (800f320 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 800f302:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800f304:	881b      	ldrh	r3, [r3, #0]
 800f306:	4293      	cmp	r3, r2
 800f308:	bf81      	itttt	hi
 800f30a:	4b06      	ldrhi	r3, [pc, #24]	; (800f324 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 800f30c:	681b      	ldrhi	r3, [r3, #0]
 800f30e:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 800f312:	7858      	ldrbhi	r0, [r3, #1]
 800f314:	bf8c      	ite	hi
 800f316:	f000 0003 	andhi.w	r0, r0, #3
 800f31a:	2000      	movls	r0, #0
 800f31c:	4770      	bx	lr
 800f31e:	bf00      	nop
 800f320:	20011e9c 	.word	0x20011e9c
 800f324:	20011e98 	.word	0x20011e98

0800f328 <_ZN8touchgfx8TextAreaD1Ev>:
 800f328:	4770      	bx	lr
	...

0800f32c <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 800f32c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f330:	4b10      	ldr	r3, [pc, #64]	; (800f374 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 800f332:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800f334:	881b      	ldrh	r3, [r3, #0]
 800f336:	428b      	cmp	r3, r1
 800f338:	4604      	mov	r4, r0
 800f33a:	d918      	bls.n	800f36e <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 800f33c:	6803      	ldr	r3, [r0, #0]
 800f33e:	6f9d      	ldr	r5, [r3, #120]	; 0x78
 800f340:	4b0d      	ldr	r3, [pc, #52]	; (800f378 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 800f342:	6818      	ldr	r0, [r3, #0]
 800f344:	f7f5 fd48 	bl	8004dd8 <_ZNK8touchgfx5Texts7getTextEt>
 800f348:	6823      	ldr	r3, [r4, #0]
 800f34a:	4606      	mov	r6, r0
 800f34c:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800f34e:	4620      	mov	r0, r4
 800f350:	4798      	blx	r3
 800f352:	6823      	ldr	r3, [r4, #0]
 800f354:	4607      	mov	r7, r0
 800f356:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f35a:	4620      	mov	r0, r4
 800f35c:	4798      	blx	r3
 800f35e:	463a      	mov	r2, r7
 800f360:	4603      	mov	r3, r0
 800f362:	4631      	mov	r1, r6
 800f364:	4620      	mov	r0, r4
 800f366:	46ac      	mov	ip, r5
 800f368:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800f36c:	4760      	bx	ip
 800f36e:	2000      	movs	r0, #0
 800f370:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f374:	20011e9c 	.word	0x20011e9c
 800f378:	20011ea4 	.word	0x20011ea4

0800f37c <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 800f37c:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800f380:	4b17      	ldr	r3, [pc, #92]	; (800f3e0 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 800f382:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800f384:	881b      	ldrh	r3, [r3, #0]
 800f386:	428b      	cmp	r3, r1
 800f388:	4604      	mov	r4, r0
 800f38a:	d926      	bls.n	800f3da <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 800f38c:	4b15      	ldr	r3, [pc, #84]	; (800f3e4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 800f38e:	681b      	ldr	r3, [r3, #0]
 800f390:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 800f394:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 800f398:	4b13      	ldr	r3, [pc, #76]	; (800f3e8 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 800f39a:	7855      	ldrb	r5, [r2, #1]
 800f39c:	681b      	ldr	r3, [r3, #0]
 800f39e:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 800f3a2:	6833      	ldr	r3, [r6, #0]
 800f3a4:	69df      	ldr	r7, [r3, #28]
 800f3a6:	4b11      	ldr	r3, [pc, #68]	; (800f3ec <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 800f3a8:	6818      	ldr	r0, [r3, #0]
 800f3aa:	f7f5 fd15 	bl	8004dd8 <_ZNK8touchgfx5Texts7getTextEt>
 800f3ae:	6823      	ldr	r3, [r4, #0]
 800f3b0:	4680      	mov	r8, r0
 800f3b2:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800f3b4:	4620      	mov	r0, r4
 800f3b6:	4798      	blx	r3
 800f3b8:	6823      	ldr	r3, [r4, #0]
 800f3ba:	4681      	mov	r9, r0
 800f3bc:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f3c0:	4620      	mov	r0, r4
 800f3c2:	4798      	blx	r3
 800f3c4:	f3c5 0581 	ubfx	r5, r5, #2, #2
 800f3c8:	9000      	str	r0, [sp, #0]
 800f3ca:	464b      	mov	r3, r9
 800f3cc:	4642      	mov	r2, r8
 800f3ce:	4629      	mov	r1, r5
 800f3d0:	4630      	mov	r0, r6
 800f3d2:	47b8      	blx	r7
 800f3d4:	b003      	add	sp, #12
 800f3d6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800f3da:	2000      	movs	r0, #0
 800f3dc:	e7fa      	b.n	800f3d4 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 800f3de:	bf00      	nop
 800f3e0:	20011e9c 	.word	0x20011e9c
 800f3e4:	20011e98 	.word	0x20011e98
 800f3e8:	20011ea0 	.word	0x20011ea0
 800f3ec:	20011ea4 	.word	0x20011ea4

0800f3f0 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 800f3f0:	b40e      	push	{r1, r2, r3}
 800f3f2:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f3f6:	4b2f      	ldr	r3, [pc, #188]	; (800f4b4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 800f3f8:	881a      	ldrh	r2, [r3, #0]
 800f3fa:	8d83      	ldrh	r3, [r0, #44]	; 0x2c
 800f3fc:	429a      	cmp	r2, r3
 800f3fe:	b09d      	sub	sp, #116	; 0x74
 800f400:	4604      	mov	r4, r0
 800f402:	d954      	bls.n	800f4ae <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 800f404:	f8df 90b0 	ldr.w	r9, [pc, #176]	; 800f4b8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 800f408:	f8df 80b0 	ldr.w	r8, [pc, #176]	; 800f4bc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 800f40c:	aa26      	add	r2, sp, #152	; 0x98
 800f40e:	9202      	str	r2, [sp, #8]
 800f410:	f8d9 2000 	ldr.w	r2, [r9]
 800f414:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800f418:	f8d8 3000 	ldr.w	r3, [r8]
 800f41c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800f420:	682b      	ldr	r3, [r5, #0]
 800f422:	4628      	mov	r0, r5
 800f424:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f426:	4798      	blx	r3
 800f428:	b207      	sxth	r7, r0
 800f42a:	4606      	mov	r6, r0
 800f42c:	a803      	add	r0, sp, #12
 800f42e:	f003 ffb5 	bl	801339c <_ZN8touchgfx12TextProviderC1Ev>
 800f432:	682b      	ldr	r3, [r5, #0]
 800f434:	4628      	mov	r0, r5
 800f436:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f438:	4798      	blx	r3
 800f43a:	682b      	ldr	r3, [r5, #0]
 800f43c:	4682      	mov	sl, r0
 800f43e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800f440:	4628      	mov	r0, r5
 800f442:	4798      	blx	r3
 800f444:	4653      	mov	r3, sl
 800f446:	9000      	str	r0, [sp, #0]
 800f448:	9a02      	ldr	r2, [sp, #8]
 800f44a:	9925      	ldr	r1, [sp, #148]	; 0x94
 800f44c:	a803      	add	r0, sp, #12
 800f44e:	f004 f800 	bl	8013452 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800f452:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800f454:	f8d9 3000 	ldr.w	r3, [r9]
 800f458:	f894 c037 	ldrb.w	ip, [r4, #55]	; 0x37
 800f45c:	8925      	ldrh	r5, [r4, #8]
 800f45e:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 800f462:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 800f466:	eba5 050c 	sub.w	r5, r5, ip
 800f46a:	784a      	ldrb	r2, [r1, #1]
 800f46c:	f8d8 3000 	ldr.w	r3, [r8]
 800f470:	f894 1039 	ldrb.w	r1, [r4, #57]	; 0x39
 800f474:	b22d      	sxth	r5, r5
 800f476:	9500      	str	r5, [sp, #0]
 800f478:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 800f47c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 800f480:	a803      	add	r0, sp, #12
 800f482:	f001 fd91 	bl	8010fa8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 800f486:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	; 0x34
 800f48a:	18b9      	adds	r1, r7, r2
 800f48c:	2900      	cmp	r1, #0
 800f48e:	b203      	sxth	r3, r0
 800f490:	dd0b      	ble.n	800f4aa <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 800f492:	3b01      	subs	r3, #1
 800f494:	fb13 f302 	smulbb	r3, r3, r2
 800f498:	fb16 3300 	smlabb	r3, r6, r0, r3
 800f49c:	b21f      	sxth	r7, r3
 800f49e:	4638      	mov	r0, r7
 800f4a0:	b01d      	add	sp, #116	; 0x74
 800f4a2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800f4a6:	b003      	add	sp, #12
 800f4a8:	4770      	bx	lr
 800f4aa:	2b00      	cmp	r3, #0
 800f4ac:	dcf7      	bgt.n	800f49e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800f4ae:	2700      	movs	r7, #0
 800f4b0:	e7f5      	b.n	800f49e <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 800f4b2:	bf00      	nop
 800f4b4:	20011e9c 	.word	0x20011e9c
 800f4b8:	20011e98 	.word	0x20011e98
 800f4bc:	20011ea0 	.word	0x20011ea0

0800f4c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 800f4c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f4c4:	4bbc      	ldr	r3, [pc, #752]	; (800f7b8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 800f4c6:	460c      	mov	r4, r1
 800f4c8:	881b      	ldrh	r3, [r3, #0]
 800f4ca:	8d89      	ldrh	r1, [r1, #44]	; 0x2c
 800f4cc:	428b      	cmp	r3, r1
 800f4ce:	b0a9      	sub	sp, #164	; 0xa4
 800f4d0:	4680      	mov	r8, r0
 800f4d2:	d809      	bhi.n	800f4e8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 800f4d4:	2300      	movs	r3, #0
 800f4d6:	f04f 32ff 	mov.w	r2, #4294967295
 800f4da:	e9c0 3200 	strd	r3, r2, [r0]
 800f4de:	6083      	str	r3, [r0, #8]
 800f4e0:	4640      	mov	r0, r8
 800f4e2:	b029      	add	sp, #164	; 0xa4
 800f4e4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f4e8:	4eb4      	ldr	r6, [pc, #720]	; (800f7bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 800f4ea:	6833      	ldr	r3, [r6, #0]
 800f4ec:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 800f4f0:	4bb3      	ldr	r3, [pc, #716]	; (800f7c0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 800f4f2:	681b      	ldr	r3, [r3, #0]
 800f4f4:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 800f4f8:	4bb2      	ldr	r3, [pc, #712]	; (800f7c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800f4fa:	6818      	ldr	r0, [r3, #0]
 800f4fc:	f7f5 fc6c 	bl	8004dd8 <_ZNK8touchgfx5Texts7getTextEt>
 800f500:	682b      	ldr	r3, [r5, #0]
 800f502:	4681      	mov	r9, r0
 800f504:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800f506:	4628      	mov	r0, r5
 800f508:	4798      	blx	r3
 800f50a:	8ea7      	ldrh	r7, [r4, #52]	; 0x34
 800f50c:	b203      	sxth	r3, r0
 800f50e:	4407      	add	r7, r0
 800f510:	9304      	str	r3, [sp, #16]
 800f512:	b2bb      	uxth	r3, r7
 800f514:	9303      	str	r3, [sp, #12]
 800f516:	f894 3039 	ldrb.w	r3, [r4, #57]	; 0x39
 800f51a:	4682      	mov	sl, r0
 800f51c:	a80f      	add	r0, sp, #60	; 0x3c
 800f51e:	2b00      	cmp	r3, #0
 800f520:	f040 80a6 	bne.w	800f670 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 800f524:	f003 ff3a 	bl	801339c <_ZN8touchgfx12TextProviderC1Ev>
 800f528:	682b      	ldr	r3, [r5, #0]
 800f52a:	4628      	mov	r0, r5
 800f52c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f52e:	4798      	blx	r3
 800f530:	682b      	ldr	r3, [r5, #0]
 800f532:	4606      	mov	r6, r0
 800f534:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800f536:	4628      	mov	r0, r5
 800f538:	4798      	blx	r3
 800f53a:	6823      	ldr	r3, [r4, #0]
 800f53c:	4607      	mov	r7, r0
 800f53e:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800f540:	4620      	mov	r0, r4
 800f542:	4798      	blx	r3
 800f544:	6823      	ldr	r3, [r4, #0]
 800f546:	4683      	mov	fp, r0
 800f548:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f54c:	4620      	mov	r0, r4
 800f54e:	4798      	blx	r3
 800f550:	463b      	mov	r3, r7
 800f552:	e9cd b000 	strd	fp, r0, [sp]
 800f556:	4649      	mov	r1, r9
 800f558:	4632      	mov	r2, r6
 800f55a:	a80f      	add	r0, sp, #60	; 0x3c
 800f55c:	f003 ff8e 	bl	801347c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800f560:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f564:	f8df b254 	ldr.w	fp, [pc, #596]	; 800f7bc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 800f568:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800f56c:	f04f 0600 	mov.w	r6, #0
 800f570:	bf0c      	ite	eq
 800f572:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 800f576:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 800f57a:	4637      	mov	r7, r6
 800f57c:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800f57e:	f8db 3000 	ldr.w	r3, [fp]
 800f582:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800f586:	4629      	mov	r1, r5
 800f588:	785b      	ldrb	r3, [r3, #1]
 800f58a:	f647 72ff 	movw	r2, #32767	; 0x7fff
 800f58e:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800f592:	a80f      	add	r0, sp, #60	; 0x3c
 800f594:	f001 fa23 	bl	80109de <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 800f598:	9b03      	ldr	r3, [sp, #12]
 800f59a:	4286      	cmp	r6, r0
 800f59c:	bfb8      	it	lt
 800f59e:	4606      	movlt	r6, r0
 800f5a0:	3701      	adds	r7, #1
 800f5a2:	eba9 0903 	sub.w	r9, r9, r3
 800f5a6:	a80f      	add	r0, sp, #60	; 0x3c
 800f5a8:	b236      	sxth	r6, r6
 800f5aa:	b2bf      	uxth	r7, r7
 800f5ac:	fa0f f989 	sxth.w	r9, r9
 800f5b0:	f003 ff1b 	bl	80133ea <_ZN8touchgfx12TextProvider11endOfStringEv>
 800f5b4:	b918      	cbnz	r0, 800f5be <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800f5b6:	7a2b      	ldrb	r3, [r5, #8]
 800f5b8:	444b      	add	r3, r9
 800f5ba:	2b00      	cmp	r3, #0
 800f5bc:	dcde      	bgt.n	800f57c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 800f5be:	9b03      	ldr	r3, [sp, #12]
 800f5c0:	9a04      	ldr	r2, [sp, #16]
 800f5c2:	f895 9009 	ldrb.w	r9, [r5, #9]
 800f5c6:	fb13 f707 	smulbb	r7, r3, r7
 800f5ca:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800f5cc:	1aff      	subs	r7, r7, r3
 800f5ce:	b2bf      	uxth	r7, r7
 800f5d0:	b23b      	sxth	r3, r7
 800f5d2:	429a      	cmp	r2, r3
 800f5d4:	bfa8      	it	ge
 800f5d6:	4657      	movge	r7, sl
 800f5d8:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f5dc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800f5e0:	6823      	ldr	r3, [r4, #0]
 800f5e2:	bf08      	it	eq
 800f5e4:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 800f5e8:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800f5ea:	bf18      	it	ne
 800f5ec:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 800f5f0:	4620      	mov	r0, r4
 800f5f2:	4798      	blx	r3
 800f5f4:	444f      	add	r7, r9
 800f5f6:	fa1f f987 	uxth.w	r9, r7
 800f5fa:	2801      	cmp	r0, #1
 800f5fc:	fa0f f789 	sxth.w	r7, r9
 800f600:	b2b3      	uxth	r3, r6
 800f602:	f000 80e1 	beq.w	800f7c8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 800f606:	2802      	cmp	r0, #2
 800f608:	f894 6037 	ldrb.w	r6, [r4, #55]	; 0x37
 800f60c:	f000 80e2 	beq.w	800f7d4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 800f610:	7aea      	ldrb	r2, [r5, #11]
 800f612:	7b2d      	ldrb	r5, [r5, #12]
 800f614:	b236      	sxth	r6, r6
 800f616:	1ab6      	subs	r6, r6, r2
 800f618:	442a      	add	r2, r5
 800f61a:	4413      	add	r3, r2
 800f61c:	f894 2038 	ldrb.w	r2, [r4, #56]	; 0x38
 800f620:	fa1f fa86 	uxth.w	sl, r6
 800f624:	b29b      	uxth	r3, r3
 800f626:	2a02      	cmp	r2, #2
 800f628:	fa0f fb8a 	sxth.w	fp, sl
 800f62c:	b21e      	sxth	r6, r3
 800f62e:	f000 80d5 	beq.w	800f7dc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 800f632:	2a03      	cmp	r2, #3
 800f634:	f000 80dd 	beq.w	800f7f2 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 800f638:	2a01      	cmp	r2, #1
 800f63a:	f040 80e5 	bne.w	800f808 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 800f63e:	8925      	ldrh	r5, [r4, #8]
 800f640:	4633      	mov	r3, r6
 800f642:	eba5 0909 	sub.w	r9, r5, r9
 800f646:	463e      	mov	r6, r7
 800f648:	465d      	mov	r5, fp
 800f64a:	461f      	mov	r7, r3
 800f64c:	fa0f fb89 	sxth.w	fp, r9
 800f650:	4b5c      	ldr	r3, [pc, #368]	; (800f7c4 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 800f652:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800f654:	6818      	ldr	r0, [r3, #0]
 800f656:	f7f5 fbbf 	bl	8004dd8 <_ZNK8touchgfx5Texts7getTextEt>
 800f65a:	f8a8 b000 	strh.w	fp, [r8]
 800f65e:	f8a8 5002 	strh.w	r5, [r8, #2]
 800f662:	f8a8 6004 	strh.w	r6, [r8, #4]
 800f666:	f8a8 7006 	strh.w	r7, [r8, #6]
 800f66a:	f8c8 0008 	str.w	r0, [r8, #8]
 800f66e:	e737      	b.n	800f4e0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 800f670:	f003 fe94 	bl	801339c <_ZN8touchgfx12TextProviderC1Ev>
 800f674:	682b      	ldr	r3, [r5, #0]
 800f676:	4628      	mov	r0, r5
 800f678:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f67a:	4798      	blx	r3
 800f67c:	682b      	ldr	r3, [r5, #0]
 800f67e:	4607      	mov	r7, r0
 800f680:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800f682:	4628      	mov	r0, r5
 800f684:	4798      	blx	r3
 800f686:	6823      	ldr	r3, [r4, #0]
 800f688:	4683      	mov	fp, r0
 800f68a:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800f68c:	4620      	mov	r0, r4
 800f68e:	4798      	blx	r3
 800f690:	6822      	ldr	r2, [r4, #0]
 800f692:	9005      	str	r0, [sp, #20]
 800f694:	f8d2 2080 	ldr.w	r2, [r2, #128]	; 0x80
 800f698:	4620      	mov	r0, r4
 800f69a:	4790      	blx	r2
 800f69c:	9b05      	ldr	r3, [sp, #20]
 800f69e:	9001      	str	r0, [sp, #4]
 800f6a0:	463a      	mov	r2, r7
 800f6a2:	4649      	mov	r1, r9
 800f6a4:	9300      	str	r3, [sp, #0]
 800f6a6:	a80f      	add	r0, sp, #60	; 0x3c
 800f6a8:	465b      	mov	r3, fp
 800f6aa:	f003 fee7 	bl	801347c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 800f6ae:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f6b2:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 800f6b6:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800f6b8:	f894 0039 	ldrb.w	r0, [r4, #57]	; 0x39
 800f6bc:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800f6c0:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 800f6c4:	bf0a      	itet	eq
 800f6c6:	464a      	moveq	r2, r9
 800f6c8:	461a      	movne	r2, r3
 800f6ca:	4699      	moveq	r9, r3
 800f6cc:	f894 3037 	ldrb.w	r3, [r4, #55]	; 0x37
 800f6d0:	1ad2      	subs	r2, r2, r3
 800f6d2:	6833      	ldr	r3, [r6, #0]
 800f6d4:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	; 0x34
 800f6d8:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800f6dc:	af0f      	add	r7, sp, #60	; 0x3c
 800f6de:	7859      	ldrb	r1, [r3, #1]
 800f6e0:	9707      	str	r7, [sp, #28]
 800f6e2:	2300      	movs	r3, #0
 800f6e4:	f3c1 0181 	ubfx	r1, r1, #2, #2
 800f6e8:	f8ad 3018 	strh.w	r3, [sp, #24]
 800f6ec:	f88d 1020 	strb.w	r1, [sp, #32]
 800f6f0:	f88d 0021 	strb.w	r0, [sp, #33]	; 0x21
 800f6f4:	9509      	str	r5, [sp, #36]	; 0x24
 800f6f6:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 800f6fa:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 800f6fe:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 800f702:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800f706:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 800f70a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 800f70e:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 800f712:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 800f716:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800f71a:	f88d 303a 	strb.w	r3, [sp, #58]	; 0x3a
 800f71e:	b350      	cbz	r0, 800f776 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800f720:	682b      	ldr	r3, [r5, #0]
 800f722:	4628      	mov	r0, r5
 800f724:	695b      	ldr	r3, [r3, #20]
 800f726:	4798      	blx	r3
 800f728:	4607      	mov	r7, r0
 800f72a:	b320      	cbz	r0, 800f776 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800f72c:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f72e:	6803      	ldr	r3, [r0, #0]
 800f730:	4639      	mov	r1, r7
 800f732:	68db      	ldr	r3, [r3, #12]
 800f734:	4798      	blx	r3
 800f736:	4606      	mov	r6, r0
 800f738:	b1e8      	cbz	r0, 800f776 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800f73a:	7b43      	ldrb	r3, [r0, #13]
 800f73c:	7a82      	ldrb	r2, [r0, #10]
 800f73e:	005b      	lsls	r3, r3, #1
 800f740:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800f744:	4313      	orrs	r3, r2
 800f746:	f8ad 3038 	strh.w	r3, [sp, #56]	; 0x38
 800f74a:	f89d 3021 	ldrb.w	r3, [sp, #33]	; 0x21
 800f74e:	2b06      	cmp	r3, #6
 800f750:	d111      	bne.n	800f776 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 800f752:	9809      	ldr	r0, [sp, #36]	; 0x24
 800f754:	6803      	ldr	r3, [r0, #0]
 800f756:	4632      	mov	r2, r6
 800f758:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800f75a:	4639      	mov	r1, r7
 800f75c:	4798      	blx	r3
 800f75e:	7b73      	ldrb	r3, [r6, #13]
 800f760:	005b      	lsls	r3, r3, #1
 800f762:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800f766:	7ab3      	ldrb	r3, [r6, #10]
 800f768:	4313      	orrs	r3, r2
 800f76a:	4418      	add	r0, r3
 800f76c:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 800f770:	4418      	add	r0, r3
 800f772:	f8ad 0038 	strh.w	r0, [sp, #56]	; 0x38
 800f776:	2600      	movs	r6, #0
 800f778:	4637      	mov	r7, r6
 800f77a:	a806      	add	r0, sp, #24
 800f77c:	f001 fb10 	bl	8010da0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 800f780:	f8bd 0036 	ldrh.w	r0, [sp, #54]	; 0x36
 800f784:	9b03      	ldr	r3, [sp, #12]
 800f786:	4286      	cmp	r6, r0
 800f788:	eba9 0903 	sub.w	r9, r9, r3
 800f78c:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 800f790:	bfb8      	it	lt
 800f792:	4606      	movlt	r6, r0
 800f794:	3701      	adds	r7, #1
 800f796:	b236      	sxth	r6, r6
 800f798:	b2bf      	uxth	r7, r7
 800f79a:	fa0f f989 	sxth.w	r9, r9
 800f79e:	2b00      	cmp	r3, #0
 800f7a0:	f43f af0d 	beq.w	800f5be <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800f7a4:	f89d 303a 	ldrb.w	r3, [sp, #58]	; 0x3a
 800f7a8:	2b00      	cmp	r3, #0
 800f7aa:	f47f af08 	bne.w	800f5be <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800f7ae:	7a2b      	ldrb	r3, [r5, #8]
 800f7b0:	444b      	add	r3, r9
 800f7b2:	2b00      	cmp	r3, #0
 800f7b4:	dce1      	bgt.n	800f77a <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 800f7b6:	e702      	b.n	800f5be <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 800f7b8:	20011e9c 	.word	0x20011e9c
 800f7bc:	20011e98 	.word	0x20011e98
 800f7c0:	20011ea0 	.word	0x20011ea0
 800f7c4:	20011ea4 	.word	0x20011ea4
 800f7c8:	ebaa 0606 	sub.w	r6, sl, r6
 800f7cc:	2002      	movs	r0, #2
 800f7ce:	fb96 f6f0 	sdiv	r6, r6, r0
 800f7d2:	e71d      	b.n	800f610 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800f7d4:	441e      	add	r6, r3
 800f7d6:	ebaa 0606 	sub.w	r6, sl, r6
 800f7da:	e719      	b.n	800f610 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 800f7dc:	8925      	ldrh	r5, [r4, #8]
 800f7de:	1aed      	subs	r5, r5, r3
 800f7e0:	eba5 050a 	sub.w	r5, r5, sl
 800f7e4:	fa0f fb85 	sxth.w	fp, r5
 800f7e8:	8965      	ldrh	r5, [r4, #10]
 800f7ea:	eba5 0509 	sub.w	r5, r5, r9
 800f7ee:	b22d      	sxth	r5, r5
 800f7f0:	e72e      	b.n	800f650 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800f7f2:	8965      	ldrh	r5, [r4, #10]
 800f7f4:	1aed      	subs	r5, r5, r3
 800f7f6:	eba5 050a 	sub.w	r5, r5, sl
 800f7fa:	4633      	mov	r3, r6
 800f7fc:	b22d      	sxth	r5, r5
 800f7fe:	463e      	mov	r6, r7
 800f800:	f04f 0b00 	mov.w	fp, #0
 800f804:	461f      	mov	r7, r3
 800f806:	e723      	b.n	800f650 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 800f808:	2500      	movs	r5, #0
 800f80a:	e721      	b.n	800f650 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

0800f80c <_ZN8touchgfx8TextAreaD0Ev>:
 800f80c:	b510      	push	{r4, lr}
 800f80e:	2148      	movs	r1, #72	; 0x48
 800f810:	4604      	mov	r4, r0
 800f812:	f010 ff4d 	bl	80206b0 <_ZdlPvj>
 800f816:	4620      	mov	r0, r4
 800f818:	bd10      	pop	{r4, pc}
	...

0800f81c <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 800f81c:	b513      	push	{r0, r1, r4, lr}
 800f81e:	f890 3036 	ldrb.w	r3, [r0, #54]	; 0x36
 800f822:	4604      	mov	r4, r0
 800f824:	b1fb      	cbz	r3, 800f866 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800f826:	4b16      	ldr	r3, [pc, #88]	; (800f880 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 800f828:	8d81      	ldrh	r1, [r0, #44]	; 0x2c
 800f82a:	881b      	ldrh	r3, [r3, #0]
 800f82c:	428b      	cmp	r3, r1
 800f82e:	d91a      	bls.n	800f866 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800f830:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800f834:	2b00      	cmp	r3, #0
 800f836:	dd16      	ble.n	800f866 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800f838:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800f83c:	2b00      	cmp	r3, #0
 800f83e:	dd12      	ble.n	800f866 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800f840:	4b10      	ldr	r3, [pc, #64]	; (800f884 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 800f842:	6818      	ldr	r0, [r3, #0]
 800f844:	f7f5 fac8 	bl	8004dd8 <_ZNK8touchgfx5Texts7getTextEt>
 800f848:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800f84c:	6822      	ldr	r2, [r4, #0]
 800f84e:	2b00      	cmp	r3, #0
 800f850:	db06      	blt.n	800f860 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800f852:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800f856:	2b00      	cmp	r3, #0
 800f858:	db02      	blt.n	800f860 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 800f85a:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800f85c:	4298      	cmp	r0, r3
 800f85e:	d004      	beq.n	800f86a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 800f860:	6953      	ldr	r3, [r2, #20]
 800f862:	4620      	mov	r0, r4
 800f864:	4798      	blx	r3
 800f866:	b002      	add	sp, #8
 800f868:	bd10      	pop	{r4, pc}
 800f86a:	f104 013c 	add.w	r1, r4, #60	; 0x3c
 800f86e:	c903      	ldmia	r1, {r0, r1}
 800f870:	466b      	mov	r3, sp
 800f872:	e883 0003 	stmia.w	r3, {r0, r1}
 800f876:	6912      	ldr	r2, [r2, #16]
 800f878:	4619      	mov	r1, r3
 800f87a:	4620      	mov	r0, r4
 800f87c:	4790      	blx	r2
 800f87e:	e7f2      	b.n	800f866 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 800f880:	20011e9c 	.word	0x20011e9c
 800f884:	20011ea4 	.word	0x20011ea4

0800f888 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 800f888:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800f88c:	4b44      	ldr	r3, [pc, #272]	; (800f9a0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 800f88e:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800f890:	881b      	ldrh	r3, [r3, #0]
 800f892:	4293      	cmp	r3, r2
 800f894:	b08e      	sub	sp, #56	; 0x38
 800f896:	4604      	mov	r4, r0
 800f898:	d97e      	bls.n	800f998 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800f89a:	6808      	ldr	r0, [r1, #0]
 800f89c:	4d41      	ldr	r5, [pc, #260]	; (800f9a4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 800f89e:	6849      	ldr	r1, [r1, #4]
 800f8a0:	ab05      	add	r3, sp, #20
 800f8a2:	c303      	stmia	r3!, {r0, r1}
 800f8a4:	4611      	mov	r1, r2
 800f8a6:	6828      	ldr	r0, [r5, #0]
 800f8a8:	f7f5 fa96 	bl	8004dd8 <_ZNK8touchgfx5Texts7getTextEt>
 800f8ac:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	; 0x42
 800f8b0:	2b00      	cmp	r3, #0
 800f8b2:	db11      	blt.n	800f8d8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800f8b4:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	; 0x40
 800f8b8:	2b00      	cmp	r3, #0
 800f8ba:	db0d      	blt.n	800f8d8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800f8bc:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800f8be:	4298      	cmp	r0, r3
 800f8c0:	d10a      	bne.n	800f8d8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 800f8c2:	f104 023c 	add.w	r2, r4, #60	; 0x3c
 800f8c6:	e892 0003 	ldmia.w	r2, {r0, r1}
 800f8ca:	ab09      	add	r3, sp, #36	; 0x24
 800f8cc:	e883 0003 	stmia.w	r3, {r0, r1}
 800f8d0:	4619      	mov	r1, r3
 800f8d2:	a805      	add	r0, sp, #20
 800f8d4:	f7fc fa22 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 800f8d8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800f8dc:	2b00      	cmp	r3, #0
 800f8de:	dd5b      	ble.n	800f998 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800f8e0:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800f8e4:	2b00      	cmp	r3, #0
 800f8e6:	dd57      	ble.n	800f998 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800f8e8:	4f2f      	ldr	r7, [pc, #188]	; (800f9a8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 800f8ea:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800f8ec:	683b      	ldr	r3, [r7, #0]
 800f8ee:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 800f8f2:	4b2e      	ldr	r3, [pc, #184]	; (800f9ac <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 800f8f4:	681b      	ldr	r3, [r3, #0]
 800f8f6:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800f8fa:	2e00      	cmp	r6, #0
 800f8fc:	d04c      	beq.n	800f998 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 800f8fe:	6823      	ldr	r3, [r4, #0]
 800f900:	f894 8036 	ldrb.w	r8, [r4, #54]	; 0x36
 800f904:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 800f906:	4620      	mov	r0, r4
 800f908:	4798      	blx	r3
 800f90a:	8da2      	ldrh	r2, [r4, #44]	; 0x2c
 800f90c:	683b      	ldr	r3, [r7, #0]
 800f90e:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	; 0x34
 800f912:	f894 e038 	ldrb.w	lr, [r4, #56]	; 0x38
 800f916:	f894 7037 	ldrb.w	r7, [r4, #55]	; 0x37
 800f91a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800f91c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 800f920:	f894 2039 	ldrb.w	r2, [r4, #57]	; 0x39
 800f924:	785b      	ldrb	r3, [r3, #1]
 800f926:	9609      	str	r6, [sp, #36]	; 0x24
 800f928:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800f92c:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800f930:	4b1f      	ldr	r3, [pc, #124]	; (800f9b0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 800f932:	f88d 0028 	strb.w	r0, [sp, #40]	; 0x28
 800f936:	681b      	ldr	r3, [r3, #0]
 800f938:	f88d e02a 	strb.w	lr, [sp, #42]	; 0x2a
 800f93c:	910b      	str	r1, [sp, #44]	; 0x2c
 800f93e:	f8ad c030 	strh.w	ip, [sp, #48]	; 0x30
 800f942:	f88d 8032 	strb.w	r8, [sp, #50]	; 0x32
 800f946:	f88d 7033 	strb.w	r7, [sp, #51]	; 0x33
 800f94a:	f88d 2034 	strb.w	r2, [sp, #52]	; 0x34
 800f94e:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800f952:	b10a      	cbz	r2, 800f958 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 800f954:	6cde      	ldr	r6, [r3, #76]	; 0x4c
 800f956:	b906      	cbnz	r6, 800f95a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 800f958:	689e      	ldr	r6, [r3, #8]
 800f95a:	af07      	add	r7, sp, #28
 800f95c:	4621      	mov	r1, r4
 800f95e:	4638      	mov	r0, r7
 800f960:	f003 f872 	bl	8012a48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800f964:	8da1      	ldrh	r1, [r4, #44]	; 0x2c
 800f966:	6828      	ldr	r0, [r5, #0]
 800f968:	f7f5 fa36 	bl	8004dd8 <_ZNK8touchgfx5Texts7getTextEt>
 800f96c:	6823      	ldr	r3, [r4, #0]
 800f96e:	4605      	mov	r5, r0
 800f970:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800f972:	4620      	mov	r0, r4
 800f974:	4798      	blx	r3
 800f976:	6823      	ldr	r3, [r4, #0]
 800f978:	4680      	mov	r8, r0
 800f97a:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800f97e:	4620      	mov	r0, r4
 800f980:	4798      	blx	r3
 800f982:	e9cd 8002 	strd	r8, r0, [sp, #8]
 800f986:	ab09      	add	r3, sp, #36	; 0x24
 800f988:	9300      	str	r3, [sp, #0]
 800f98a:	9501      	str	r5, [sp, #4]
 800f98c:	ab05      	add	r3, sp, #20
 800f98e:	e897 0006 	ldmia.w	r7, {r1, r2}
 800f992:	4630      	mov	r0, r6
 800f994:	f7f5 f9d2 	bl	8004d3c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800f998:	b00e      	add	sp, #56	; 0x38
 800f99a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800f99e:	bf00      	nop
 800f9a0:	20011e9c 	.word	0x20011e9c
 800f9a4:	20011ea4 	.word	0x20011ea4
 800f9a8:	20011e98 	.word	0x20011e98
 800f9ac:	20011ea0 	.word	0x20011ea0
 800f9b0:	20011e40 	.word	0x20011e40

0800f9b4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 800f9b4:	b538      	push	{r3, r4, r5, lr}
 800f9b6:	4b0e      	ldr	r3, [pc, #56]	; (800f9f0 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 800f9b8:	8d82      	ldrh	r2, [r0, #44]	; 0x2c
 800f9ba:	881b      	ldrh	r3, [r3, #0]
 800f9bc:	429a      	cmp	r2, r3
 800f9be:	4604      	mov	r4, r0
 800f9c0:	d214      	bcs.n	800f9ec <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 800f9c2:	6803      	ldr	r3, [r0, #0]
 800f9c4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800f9c6:	4798      	blx	r3
 800f9c8:	6823      	ldr	r3, [r4, #0]
 800f9ca:	4605      	mov	r5, r0
 800f9cc:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800f9ce:	4620      	mov	r0, r4
 800f9d0:	4798      	blx	r3
 800f9d2:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800f9d6:	b22d      	sxth	r5, r5
 800f9d8:	f013 0ffd 	tst.w	r3, #253	; 0xfd
 800f9dc:	4601      	mov	r1, r0
 800f9de:	bf06      	itte	eq
 800f9e0:	4602      	moveq	r2, r0
 800f9e2:	4629      	moveq	r1, r5
 800f9e4:	462a      	movne	r2, r5
 800f9e6:	4620      	mov	r0, r4
 800f9e8:	f7fc fbb4 	bl	800c154 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 800f9ec:	bd38      	pop	{r3, r4, r5, pc}
 800f9ee:	bf00      	nop
 800f9f0:	20011e9c 	.word	0x20011e9c

0800f9f4 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 800f9f4:	b530      	push	{r4, r5, lr}
 800f9f6:	888b      	ldrh	r3, [r1, #4]
 800f9f8:	8583      	strh	r3, [r0, #44]	; 0x2c
 800f9fa:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 800f9fe:	b085      	sub	sp, #20
 800fa00:	4604      	mov	r4, r0
 800fa02:	b923      	cbnz	r3, 800fa0e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800fa04:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 800fa08:	b90b      	cbnz	r3, 800fa0e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 800fa0a:	f7ff ffd3 	bl	800f9b4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 800fa0e:	6823      	ldr	r3, [r4, #0]
 800fa10:	466d      	mov	r5, sp
 800fa12:	4621      	mov	r1, r4
 800fa14:	4628      	mov	r0, r5
 800fa16:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800fa1a:	4798      	blx	r3
 800fa1c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 800fa20:	343c      	adds	r4, #60	; 0x3c
 800fa22:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 800fa26:	b005      	add	sp, #20
 800fa28:	bd30      	pop	{r4, r5, pc}

0800fa2a <_ZNK8touchgfx3Box12getSolidRectEv>:
 800fa2a:	2300      	movs	r3, #0
 800fa2c:	8083      	strh	r3, [r0, #4]
 800fa2e:	80c3      	strh	r3, [r0, #6]
 800fa30:	8003      	strh	r3, [r0, #0]
 800fa32:	8043      	strh	r3, [r0, #2]
 800fa34:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 800fa38:	2bff      	cmp	r3, #255	; 0xff
 800fa3a:	bf01      	itttt	eq
 800fa3c:	890b      	ldrheq	r3, [r1, #8]
 800fa3e:	8083      	strheq	r3, [r0, #4]
 800fa40:	894b      	ldrheq	r3, [r1, #10]
 800fa42:	80c3      	strheq	r3, [r0, #6]
 800fa44:	4770      	bx	lr
	...

0800fa48 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 800fa48:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800fa4a:	4604      	mov	r4, r0
 800fa4c:	6808      	ldr	r0, [r1, #0]
 800fa4e:	6849      	ldr	r1, [r1, #4]
 800fa50:	466b      	mov	r3, sp
 800fa52:	c303      	stmia	r3!, {r0, r1}
 800fa54:	6823      	ldr	r3, [r4, #0]
 800fa56:	4669      	mov	r1, sp
 800fa58:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fa5a:	4620      	mov	r0, r4
 800fa5c:	4798      	blx	r3
 800fa5e:	4b08      	ldr	r3, [pc, #32]	; (800fa80 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 800fa60:	681b      	ldr	r3, [r3, #0]
 800fa62:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800fa66:	b10a      	cbz	r2, 800fa6c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 800fa68:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800fa6a:	b900      	cbnz	r0, 800fa6e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 800fa6c:	6898      	ldr	r0, [r3, #8]
 800fa6e:	6803      	ldr	r3, [r0, #0]
 800fa70:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800fa72:	6a1d      	ldr	r5, [r3, #32]
 800fa74:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 800fa78:	4669      	mov	r1, sp
 800fa7a:	47a8      	blx	r5
 800fa7c:	b003      	add	sp, #12
 800fa7e:	bd30      	pop	{r4, r5, pc}
 800fa80:	20011e40 	.word	0x20011e40

0800fa84 <_ZN8touchgfx3BoxD1Ev>:
 800fa84:	4770      	bx	lr

0800fa86 <_ZN8touchgfx3BoxD0Ev>:
 800fa86:	b510      	push	{r4, lr}
 800fa88:	212c      	movs	r1, #44	; 0x2c
 800fa8a:	4604      	mov	r4, r0
 800fa8c:	f010 fe10 	bl	80206b0 <_ZdlPvj>
 800fa90:	4620      	mov	r0, r4
 800fa92:	bd10      	pop	{r4, pc}

0800fa94 <_ZNK8touchgfx3Box17invalidateContentEv>:
 800fa94:	f890 2026 	ldrb.w	r2, [r0, #38]	; 0x26
 800fa98:	b12a      	cbz	r2, 800faa6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800fa9a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800fa9e:	b112      	cbz	r2, 800faa6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 800faa0:	6803      	ldr	r3, [r0, #0]
 800faa2:	695b      	ldr	r3, [r3, #20]
 800faa4:	4718      	bx	r3
 800faa6:	4770      	bx	lr

0800faa8 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 800faa8:	f890 002c 	ldrb.w	r0, [r0, #44]	; 0x2c
 800faac:	4770      	bx	lr

0800faae <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 800faae:	b570      	push	{r4, r5, r6, lr}
 800fab0:	880b      	ldrh	r3, [r1, #0]
 800fab2:	85c3      	strh	r3, [r0, #46]	; 0x2e
 800fab4:	4605      	mov	r5, r0
 800fab6:	8813      	ldrh	r3, [r2, #0]
 800fab8:	f825 3f30 	strh.w	r3, [r5, #48]!
 800fabc:	4604      	mov	r4, r0
 800fabe:	4628      	mov	r0, r5
 800fac0:	f004 fffe 	bl	8014ac0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800fac4:	4606      	mov	r6, r0
 800fac6:	4628      	mov	r0, r5
 800fac8:	f005 f82e 	bl	8014b28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800facc:	6823      	ldr	r3, [r4, #0]
 800face:	4605      	mov	r5, r0
 800fad0:	4631      	mov	r1, r6
 800fad2:	4620      	mov	r0, r4
 800fad4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fad6:	4798      	blx	r3
 800fad8:	6823      	ldr	r3, [r4, #0]
 800fada:	4629      	mov	r1, r5
 800fadc:	4620      	mov	r0, r4
 800fade:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fae0:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fae4:	4718      	bx	r3

0800fae6 <_ZN8touchgfx14AbstractButton13executeActionEv>:
 800fae6:	b510      	push	{r4, lr}
 800fae8:	4604      	mov	r4, r0
 800faea:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800faec:	b150      	cbz	r0, 800fb04 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800faee:	6803      	ldr	r3, [r0, #0]
 800faf0:	68db      	ldr	r3, [r3, #12]
 800faf2:	4798      	blx	r3
 800faf4:	b130      	cbz	r0, 800fb04 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 800faf6:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 800faf8:	6803      	ldr	r3, [r0, #0]
 800fafa:	4621      	mov	r1, r4
 800fafc:	689b      	ldr	r3, [r3, #8]
 800fafe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800fb02:	4718      	bx	r3
 800fb04:	bd10      	pop	{r4, pc}

0800fb06 <_ZNK8touchgfx6Button12getSolidRectEv>:
 800fb06:	b510      	push	{r4, lr}
 800fb08:	f891 3032 	ldrb.w	r3, [r1, #50]	; 0x32
 800fb0c:	2bff      	cmp	r3, #255	; 0xff
 800fb0e:	4604      	mov	r4, r0
 800fb10:	d006      	beq.n	800fb20 <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 800fb12:	2300      	movs	r3, #0
 800fb14:	8003      	strh	r3, [r0, #0]
 800fb16:	8043      	strh	r3, [r0, #2]
 800fb18:	8083      	strh	r3, [r0, #4]
 800fb1a:	80c3      	strh	r3, [r0, #6]
 800fb1c:	4620      	mov	r0, r4
 800fb1e:	bd10      	pop	{r4, pc}
 800fb20:	f891 302c 	ldrb.w	r3, [r1, #44]	; 0x2c
 800fb24:	b11b      	cbz	r3, 800fb2e <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 800fb26:	3130      	adds	r1, #48	; 0x30
 800fb28:	f005 f832 	bl	8014b90 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800fb2c:	e7f6      	b.n	800fb1c <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 800fb2e:	312e      	adds	r1, #46	; 0x2e
 800fb30:	e7fa      	b.n	800fb28 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>
	...

0800fb34 <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 800fb34:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fb38:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 800fb3c:	b08a      	sub	sp, #40	; 0x28
 800fb3e:	4604      	mov	r4, r0
 800fb40:	4688      	mov	r8, r1
 800fb42:	2b00      	cmp	r3, #0
 800fb44:	d066      	beq.n	800fc14 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 800fb46:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800fb48:	f8ad 3014 	strh.w	r3, [sp, #20]
 800fb4c:	a805      	add	r0, sp, #20
 800fb4e:	f004 ffb7 	bl	8014ac0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800fb52:	4607      	mov	r7, r0
 800fb54:	a805      	add	r0, sp, #20
 800fb56:	f004 ffe7 	bl	8014b28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800fb5a:	f9b8 6000 	ldrsh.w	r6, [r8]
 800fb5e:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 800fb62:	4432      	add	r2, r6
 800fb64:	b292      	uxth	r2, r2
 800fb66:	2300      	movs	r3, #0
 800fb68:	fa0f fc82 	sxth.w	ip, r2
 800fb6c:	459c      	cmp	ip, r3
 800fb6e:	9306      	str	r3, [sp, #24]
 800fb70:	dd52      	ble.n	800fc18 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800fb72:	42b7      	cmp	r7, r6
 800fb74:	dd50      	ble.n	800fc18 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800fb76:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 800fb7a:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 800fb7e:	442b      	add	r3, r5
 800fb80:	b29b      	uxth	r3, r3
 800fb82:	b219      	sxth	r1, r3
 800fb84:	2900      	cmp	r1, #0
 800fb86:	dd47      	ble.n	800fc18 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800fb88:	42a8      	cmp	r0, r5
 800fb8a:	dd45      	ble.n	800fc18 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 800fb8c:	4567      	cmp	r7, ip
 800fb8e:	bfb8      	it	lt
 800fb90:	b2ba      	uxthlt	r2, r7
 800fb92:	4288      	cmp	r0, r1
 800fb94:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 800fb98:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 800fb9c:	bfb8      	it	lt
 800fb9e:	b283      	uxthlt	r3, r0
 800fba0:	1b92      	subs	r2, r2, r6
 800fba2:	1b5b      	subs	r3, r3, r5
 800fba4:	f8ad 201c 	strh.w	r2, [sp, #28]
 800fba8:	f8ad 301e 	strh.w	r3, [sp, #30]
 800fbac:	f8ad 6018 	strh.w	r6, [sp, #24]
 800fbb0:	f8ad 501a 	strh.w	r5, [sp, #26]
 800fbb4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 800fbb8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800fbbc:	429a      	cmp	r2, r3
 800fbbe:	d026      	beq.n	800fc0e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800fbc0:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800fbc4:	2b00      	cmp	r3, #0
 800fbc6:	dd22      	ble.n	800fc0e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800fbc8:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800fbcc:	2b00      	cmp	r3, #0
 800fbce:	dd1e      	ble.n	800fc0e <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 800fbd0:	2300      	movs	r3, #0
 800fbd2:	e9cd 3308 	strd	r3, r3, [sp, #32]
 800fbd6:	6823      	ldr	r3, [r4, #0]
 800fbd8:	a908      	add	r1, sp, #32
 800fbda:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fbdc:	4620      	mov	r0, r4
 800fbde:	4798      	blx	r3
 800fbe0:	4b0f      	ldr	r3, [pc, #60]	; (800fc20 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 800fbe2:	681b      	ldr	r3, [r3, #0]
 800fbe4:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800fbe8:	b10a      	cbz	r2, 800fbee <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 800fbea:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800fbec:	b900      	cbnz	r0, 800fbf0 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 800fbee:	6898      	ldr	r0, [r3, #8]
 800fbf0:	6801      	ldr	r1, [r0, #0]
 800fbf2:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800fbf6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800fbfa:	2501      	movs	r5, #1
 800fbfc:	9502      	str	r5, [sp, #8]
 800fbfe:	f894 4032 	ldrb.w	r4, [r4, #50]	; 0x32
 800fc02:	9401      	str	r4, [sp, #4]
 800fc04:	ac06      	add	r4, sp, #24
 800fc06:	9400      	str	r4, [sp, #0]
 800fc08:	688c      	ldr	r4, [r1, #8]
 800fc0a:	a905      	add	r1, sp, #20
 800fc0c:	47a0      	blx	r4
 800fc0e:	b00a      	add	sp, #40	; 0x28
 800fc10:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fc14:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800fc16:	e797      	b.n	800fb48 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 800fc18:	2300      	movs	r3, #0
 800fc1a:	9307      	str	r3, [sp, #28]
 800fc1c:	e7ca      	b.n	800fbb4 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 800fc1e:	bf00      	nop
 800fc20:	20011e40 	.word	0x20011e40

0800fc24 <_ZNK8touchgfx6Button17invalidateContentEv>:
 800fc24:	f890 2032 	ldrb.w	r2, [r0, #50]	; 0x32
 800fc28:	b12a      	cbz	r2, 800fc36 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800fc2a:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 800fc2e:	b112      	cbz	r2, 800fc36 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 800fc30:	6803      	ldr	r3, [r0, #0]
 800fc32:	695b      	ldr	r3, [r3, #20]
 800fc34:	4718      	bx	r3
 800fc36:	4770      	bx	lr

0800fc38 <_ZN8touchgfx5ImageD1Ev>:
 800fc38:	4770      	bx	lr

0800fc3a <_ZN8touchgfx5Image9setBitmapERKNS_6BitmapE>:
 800fc3a:	b570      	push	{r4, r5, r6, lr}
 800fc3c:	880b      	ldrh	r3, [r1, #0]
 800fc3e:	84c3      	strh	r3, [r0, #38]	; 0x26
 800fc40:	4604      	mov	r4, r0
 800fc42:	4608      	mov	r0, r1
 800fc44:	460d      	mov	r5, r1
 800fc46:	f004 ff3b 	bl	8014ac0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800fc4a:	4606      	mov	r6, r0
 800fc4c:	4628      	mov	r0, r5
 800fc4e:	f004 ff6b 	bl	8014b28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800fc52:	6823      	ldr	r3, [r4, #0]
 800fc54:	4605      	mov	r5, r0
 800fc56:	4631      	mov	r1, r6
 800fc58:	4620      	mov	r0, r4
 800fc5a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800fc5c:	4798      	blx	r3
 800fc5e:	6823      	ldr	r3, [r4, #0]
 800fc60:	4629      	mov	r1, r5
 800fc62:	4620      	mov	r0, r4
 800fc64:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800fc66:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800fc6a:	4718      	bx	r3

0800fc6c <_ZN8touchgfx5ImageD0Ev>:
 800fc6c:	b510      	push	{r4, lr}
 800fc6e:	212c      	movs	r1, #44	; 0x2c
 800fc70:	4604      	mov	r4, r0
 800fc72:	f010 fd1d 	bl	80206b0 <_ZdlPvj>
 800fc76:	4620      	mov	r0, r4
 800fc78:	bd10      	pop	{r4, pc}

0800fc7a <_ZNK8touchgfx5Image12getSolidRectEv>:
 800fc7a:	b510      	push	{r4, lr}
 800fc7c:	f891 3028 	ldrb.w	r3, [r1, #40]	; 0x28
 800fc80:	2bff      	cmp	r3, #255	; 0xff
 800fc82:	4604      	mov	r4, r0
 800fc84:	d006      	beq.n	800fc94 <_ZNK8touchgfx5Image12getSolidRectEv+0x1a>
 800fc86:	2300      	movs	r3, #0
 800fc88:	8003      	strh	r3, [r0, #0]
 800fc8a:	8043      	strh	r3, [r0, #2]
 800fc8c:	8083      	strh	r3, [r0, #4]
 800fc8e:	80c3      	strh	r3, [r0, #6]
 800fc90:	4620      	mov	r0, r4
 800fc92:	bd10      	pop	{r4, pc}
 800fc94:	3126      	adds	r1, #38	; 0x26
 800fc96:	f004 ff7b 	bl	8014b90 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 800fc9a:	e7f9      	b.n	800fc90 <_ZNK8touchgfx5Image12getSolidRectEv+0x16>

0800fc9c <_ZNK8touchgfx5Image4drawERKNS_4RectE>:
 800fc9c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800fca0:	4604      	mov	r4, r0
 800fca2:	b088      	sub	sp, #32
 800fca4:	f854 3b26 	ldr.w	r3, [r4], #38
 800fca8:	2500      	movs	r5, #0
 800fcaa:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fcac:	460f      	mov	r7, r1
 800fcae:	e9cd 5504 	strd	r5, r5, [sp, #16]
 800fcb2:	a904      	add	r1, sp, #16
 800fcb4:	4606      	mov	r6, r0
 800fcb6:	4798      	blx	r3
 800fcb8:	4620      	mov	r0, r4
 800fcba:	f004 ff01 	bl	8014ac0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 800fcbe:	4680      	mov	r8, r0
 800fcc0:	4620      	mov	r0, r4
 800fcc2:	f004 ff31 	bl	8014b28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800fcc6:	9506      	str	r5, [sp, #24]
 800fcc8:	ad06      	add	r5, sp, #24
 800fcca:	f8ad 001e 	strh.w	r0, [sp, #30]
 800fcce:	4639      	mov	r1, r7
 800fcd0:	4628      	mov	r0, r5
 800fcd2:	f8ad 801c 	strh.w	r8, [sp, #28]
 800fcd6:	f7fc f821 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 800fcda:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 800fcde:	2b00      	cmp	r3, #0
 800fce0:	dd19      	ble.n	800fd16 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800fce2:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 800fce6:	2b00      	cmp	r3, #0
 800fce8:	dd15      	ble.n	800fd16 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x7a>
 800fcea:	4b0c      	ldr	r3, [pc, #48]	; (800fd1c <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x80>)
 800fcec:	681b      	ldr	r3, [r3, #0]
 800fcee:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800fcf2:	b10a      	cbz	r2, 800fcf8 <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5c>
 800fcf4:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 800fcf6:	b900      	cbnz	r0, 800fcfa <_ZNK8touchgfx5Image4drawERKNS_4RectE+0x5e>
 800fcf8:	6898      	ldr	r0, [r3, #8]
 800fcfa:	6801      	ldr	r1, [r0, #0]
 800fcfc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 800fd00:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 800fd04:	2701      	movs	r7, #1
 800fd06:	9702      	str	r7, [sp, #8]
 800fd08:	f896 6028 	ldrb.w	r6, [r6, #40]	; 0x28
 800fd0c:	e9cd 5600 	strd	r5, r6, [sp]
 800fd10:	688d      	ldr	r5, [r1, #8]
 800fd12:	4621      	mov	r1, r4
 800fd14:	47a8      	blx	r5
 800fd16:	b008      	add	sp, #32
 800fd18:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800fd1c:	20011e40 	.word	0x20011e40

0800fd20 <_ZN8touchgfx15ButtonWithLabelD1Ev>:
 800fd20:	4770      	bx	lr

0800fd22 <_ZN8touchgfx15ButtonWithLabelD0Ev>:
 800fd22:	b510      	push	{r4, lr}
 800fd24:	2148      	movs	r1, #72	; 0x48
 800fd26:	4604      	mov	r4, r0
 800fd28:	f010 fcc2 	bl	80206b0 <_ZdlPvj>
 800fd2c:	4620      	mov	r0, r4
 800fd2e:	bd10      	pop	{r4, pc}

0800fd30 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE>:
 800fd30:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800fd34:	b08d      	sub	sp, #52	; 0x34
 800fd36:	4604      	mov	r4, r0
 800fd38:	460f      	mov	r7, r1
 800fd3a:	f7ff fefb 	bl	800fb34 <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 800fd3e:	4a55      	ldr	r2, [pc, #340]	; (800fe94 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x164>)
 800fd40:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 800fd42:	8812      	ldrh	r2, [r2, #0]
 800fd44:	429a      	cmp	r2, r3
 800fd46:	f240 8082 	bls.w	800fe4e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800fd4a:	4d53      	ldr	r5, [pc, #332]	; (800fe98 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x168>)
 800fd4c:	682a      	ldr	r2, [r5, #0]
 800fd4e:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 800fd52:	4b52      	ldr	r3, [pc, #328]	; (800fe9c <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x16c>)
 800fd54:	681b      	ldr	r3, [r3, #0]
 800fd56:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 800fd5a:	f9b4 3046 	ldrsh.w	r3, [r4, #70]	; 0x46
 800fd5e:	2200      	movs	r2, #0
 800fd60:	e9cd 2203 	strd	r2, r2, [sp, #12]
 800fd64:	f894 2044 	ldrb.w	r2, [r4, #68]	; 0x44
 800fd68:	2a03      	cmp	r2, #3
 800fd6a:	d811      	bhi.n	800fd90 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800fd6c:	e8df f002 	tbb	[pc, r2]
 800fd70:	89727902 	.word	0x89727902
 800fd74:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800fd78:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800fd7c:	1ad2      	subs	r2, r2, r3
 800fd7e:	2002      	movs	r0, #2
 800fd80:	f8ad 1010 	strh.w	r1, [sp, #16]
 800fd84:	fb92 f2f0 	sdiv	r2, r2, r0
 800fd88:	f8ad 3012 	strh.w	r3, [sp, #18]
 800fd8c:	f8ad 200e 	strh.w	r2, [sp, #14]
 800fd90:	f10d 080c 	add.w	r8, sp, #12
 800fd94:	e898 0003 	ldmia.w	r8, {r0, r1}
 800fd98:	f10d 0914 	add.w	r9, sp, #20
 800fd9c:	e889 0003 	stmia.w	r9, {r0, r1}
 800fda0:	4639      	mov	r1, r7
 800fda2:	4648      	mov	r0, r9
 800fda4:	f7fb ffba 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 800fda8:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800fdac:	2b00      	cmp	r3, #0
 800fdae:	dd4e      	ble.n	800fe4e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800fdb0:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 800fdb4:	2b00      	cmp	r3, #0
 800fdb6:	dd4a      	ble.n	800fe4e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x11e>
 800fdb8:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 800fdbc:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 800fdc0:	1a9b      	subs	r3, r3, r2
 800fdc2:	f8ad 3014 	strh.w	r3, [sp, #20]
 800fdc6:	f8bd 200e 	ldrh.w	r2, [sp, #14]
 800fdca:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800fdce:	1a9b      	subs	r3, r3, r2
 800fdd0:	f8ad 3016 	strh.w	r3, [sp, #22]
 800fdd4:	6823      	ldr	r3, [r4, #0]
 800fdd6:	4641      	mov	r1, r8
 800fdd8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800fdda:	4620      	mov	r0, r4
 800fddc:	4798      	blx	r3
 800fdde:	f894 302c 	ldrb.w	r3, [r4, #44]	; 0x2c
 800fde2:	2b00      	cmp	r3, #0
 800fde4:	d053      	beq.n	800fe8e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x15e>
 800fde6:	6c22      	ldr	r2, [r4, #64]	; 0x40
 800fde8:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800fdea:	682b      	ldr	r3, [r5, #0]
 800fdec:	f894 0032 	ldrb.w	r0, [r4, #50]	; 0x32
 800fdf0:	f894 4044 	ldrb.w	r4, [r4, #68]	; 0x44
 800fdf4:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 800fdf8:	785b      	ldrb	r3, [r3, #1]
 800fdfa:	9209      	str	r2, [sp, #36]	; 0x24
 800fdfc:	f3c3 0501 	ubfx	r5, r3, #0, #2
 800fe00:	f3c3 0381 	ubfx	r3, r3, #2, #2
 800fe04:	f88d 3021 	strb.w	r3, [sp, #33]	; 0x21
 800fe08:	2300      	movs	r3, #0
 800fe0a:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 800fe0e:	f88d 302b 	strb.w	r3, [sp, #43]	; 0x2b
 800fe12:	f88d 302c 	strb.w	r3, [sp, #44]	; 0x2c
 800fe16:	4b22      	ldr	r3, [pc, #136]	; (800fea0 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x170>)
 800fe18:	9607      	str	r6, [sp, #28]
 800fe1a:	681b      	ldr	r3, [r3, #0]
 800fe1c:	f88d 5020 	strb.w	r5, [sp, #32]
 800fe20:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 800fe24:	f88d 4022 	strb.w	r4, [sp, #34]	; 0x22
 800fe28:	f88d 002a 	strb.w	r0, [sp, #42]	; 0x2a
 800fe2c:	b10a      	cbz	r2, 800fe32 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x102>
 800fe2e:	6cdc      	ldr	r4, [r3, #76]	; 0x4c
 800fe30:	b904      	cbnz	r4, 800fe34 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x104>
 800fe32:	689c      	ldr	r4, [r3, #8]
 800fe34:	4b1b      	ldr	r3, [pc, #108]	; (800fea4 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x174>)
 800fe36:	6818      	ldr	r0, [r3, #0]
 800fe38:	f7f4 ffce 	bl	8004dd8 <_ZNK8touchgfx5Texts7getTextEt>
 800fe3c:	ab07      	add	r3, sp, #28
 800fe3e:	9001      	str	r0, [sp, #4]
 800fe40:	9300      	str	r3, [sp, #0]
 800fe42:	e898 0006 	ldmia.w	r8, {r1, r2}
 800fe46:	464b      	mov	r3, r9
 800fe48:	4620      	mov	r0, r4
 800fe4a:	f7f4 ff77 	bl	8004d3c <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 800fe4e:	b00d      	add	sp, #52	; 0x34
 800fe50:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800fe54:	f9b4 200a 	ldrsh.w	r2, [r4, #10]
 800fe58:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 800fe5c:	1ad2      	subs	r2, r2, r3
 800fe5e:	3201      	adds	r2, #1
 800fe60:	e78d      	b.n	800fd7e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x4e>
 800fe62:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800fe66:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800fe6a:	1ad2      	subs	r2, r2, r3
 800fe6c:	3201      	adds	r2, #1
 800fe6e:	2002      	movs	r0, #2
 800fe70:	f8ad 3010 	strh.w	r3, [sp, #16]
 800fe74:	fb92 f2f0 	sdiv	r2, r2, r0
 800fe78:	f8ad 1012 	strh.w	r1, [sp, #18]
 800fe7c:	f8ad 200c 	strh.w	r2, [sp, #12]
 800fe80:	e786      	b.n	800fd90 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x60>
 800fe82:	f9b4 2008 	ldrsh.w	r2, [r4, #8]
 800fe86:	f9b4 100a 	ldrsh.w	r1, [r4, #10]
 800fe8a:	1ad2      	subs	r2, r2, r3
 800fe8c:	e7ef      	b.n	800fe6e <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0x13e>
 800fe8e:	6be2      	ldr	r2, [r4, #60]	; 0x3c
 800fe90:	e7aa      	b.n	800fde8 <_ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE+0xb8>
 800fe92:	bf00      	nop
 800fe94:	20011e9c 	.word	0x20011e9c
 800fe98:	20011e98 	.word	0x20011e98
 800fe9c:	20011ea0 	.word	0x20011ea0
 800fea0:	20011e40 	.word	0x20011e40
 800fea4:	20011ea4 	.word	0x20011ea4

0800fea8 <_ZN8touchgfx15ButtonWithLabelC1Ev>:
 800fea8:	b510      	push	{r4, lr}
 800feaa:	2101      	movs	r1, #1
 800feac:	4c13      	ldr	r4, [pc, #76]	; (800fefc <_ZN8touchgfx15ButtonWithLabelC1Ev+0x54>)
 800feae:	f880 1025 	strb.w	r1, [r0, #37]	; 0x25
 800feb2:	2200      	movs	r2, #0
 800feb4:	f880 1024 	strb.w	r1, [r0, #36]	; 0x24
 800feb8:	6004      	str	r4, [r0, #0]
 800feba:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800febe:	4c10      	ldr	r4, [pc, #64]	; (800ff00 <_ZN8touchgfx15ButtonWithLabelC1Ev+0x58>)
 800fec0:	8082      	strh	r2, [r0, #4]
 800fec2:	80c2      	strh	r2, [r0, #6]
 800fec4:	8102      	strh	r2, [r0, #8]
 800fec6:	8142      	strh	r2, [r0, #10]
 800fec8:	8182      	strh	r2, [r0, #12]
 800feca:	81c2      	strh	r2, [r0, #14]
 800fecc:	8202      	strh	r2, [r0, #16]
 800fece:	8242      	strh	r2, [r0, #18]
 800fed0:	e9c0 2205 	strd	r2, r2, [r0, #20]
 800fed4:	61c2      	str	r2, [r0, #28]
 800fed6:	8402      	strh	r2, [r0, #32]
 800fed8:	8442      	strh	r2, [r0, #34]	; 0x22
 800feda:	6282      	str	r2, [r0, #40]	; 0x28
 800fedc:	f880 202c 	strb.w	r2, [r0, #44]	; 0x2c
 800fee0:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800fee2:	8601      	strh	r1, [r0, #48]	; 0x30
 800fee4:	f880 1032 	strb.w	r1, [r0, #50]	; 0x32
 800fee8:	6344      	str	r4, [r0, #52]	; 0x34
 800feea:	8701      	strh	r1, [r0, #56]	; 0x38
 800feec:	e9c0 220f 	strd	r2, r2, [r0, #60]	; 0x3c
 800fef0:	f880 2044 	strb.w	r2, [r0, #68]	; 0x44
 800fef4:	f8a0 2046 	strh.w	r2, [r0, #70]	; 0x46
 800fef8:	bd10      	pop	{r4, pc}
 800fefa:	bf00      	nop
 800fefc:	08023d4c 	.word	0x08023d4c
 800ff00:	080221bc 	.word	0x080221bc

0800ff04 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj>:
 800ff04:	4b02      	ldr	r3, [pc, #8]	; (800ff10 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0xc>)
 800ff06:	6018      	str	r0, [r3, #0]
 800ff08:	4b02      	ldr	r3, [pc, #8]	; (800ff14 <_ZN8touchgfx20CanvasWidgetRenderer11setupBufferEPhj+0x10>)
 800ff0a:	6019      	str	r1, [r3, #0]
 800ff0c:	4770      	bx	lr
 800ff0e:	bf00      	nop
 800ff10:	20011e48 	.word	0x20011e48
 800ff14:	20011e4c 	.word	0x20011e4c

0800ff18 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv>:
 800ff18:	4a02      	ldr	r2, [pc, #8]	; (800ff24 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0xc>)
 800ff1a:	2300      	movs	r3, #0
 800ff1c:	6013      	str	r3, [r2, #0]
 800ff1e:	4a02      	ldr	r2, [pc, #8]	; (800ff28 <_ZN8touchgfx20CanvasWidgetRenderer11resetBufferEv+0x10>)
 800ff20:	6013      	str	r3, [r2, #0]
 800ff22:	4770      	bx	lr
 800ff24:	20011e48 	.word	0x20011e48
 800ff28:	20011e4c 	.word	0x20011e4c

0800ff2c <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 800ff2c:	b510      	push	{r4, lr}
 800ff2e:	6803      	ldr	r3, [r0, #0]
 800ff30:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ff32:	460c      	mov	r4, r1
 800ff34:	4798      	blx	r3
 800ff36:	1b03      	subs	r3, r0, r4
 800ff38:	4258      	negs	r0, r3
 800ff3a:	4158      	adcs	r0, r3
 800ff3c:	bd10      	pop	{r4, pc}
	...

0800ff40 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 800ff40:	4b01      	ldr	r3, [pc, #4]	; (800ff48 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 800ff42:	6019      	str	r1, [r3, #0]
 800ff44:	4770      	bx	lr
 800ff46:	bf00      	nop
 800ff48:	20011e50 	.word	0x20011e50

0800ff4c <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 800ff4c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff50:	4696      	mov	lr, r2
 800ff52:	4605      	mov	r5, r0
 800ff54:	4614      	mov	r4, r2
 800ff56:	460e      	mov	r6, r1
 800ff58:	461f      	mov	r7, r3
 800ff5a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ff5e:	b097      	sub	sp, #92	; 0x5c
 800ff60:	f10d 0c1c 	add.w	ip, sp, #28
 800ff64:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ff68:	f8de 3000 	ldr.w	r3, [lr]
 800ff6c:	f8cc 3000 	str.w	r3, [ip]
 800ff70:	f104 0e14 	add.w	lr, r4, #20
 800ff74:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ff78:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800ff7c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ff80:	f8de 3000 	ldr.w	r3, [lr]
 800ff84:	f8cc 3000 	str.w	r3, [ip]
 800ff88:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800ff8c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ff90:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 800ff94:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ff98:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 800ff9c:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 800ffa0:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 800ffa4:	f8de 3000 	ldr.w	r3, [lr]
 800ffa8:	f8cc 3000 	str.w	r3, [ip]
 800ffac:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800ffae:	682b      	ldr	r3, [r5, #0]
 800ffb0:	9201      	str	r2, [sp, #4]
 800ffb2:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 800ffb6:	9a20      	ldr	r2, [sp, #128]	; 0x80
 800ffb8:	9200      	str	r2, [sp, #0]
 800ffba:	f8cd 8008 	str.w	r8, [sp, #8]
 800ffbe:	f8d3 b03c 	ldr.w	fp, [r3, #60]	; 0x3c
 800ffc2:	aa07      	add	r2, sp, #28
 800ffc4:	463b      	mov	r3, r7
 800ffc6:	4631      	mov	r1, r6
 800ffc8:	4628      	mov	r0, r5
 800ffca:	47d8      	blx	fp
 800ffcc:	46a6      	mov	lr, r4
 800ffce:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ffd2:	f10d 0c1c 	add.w	ip, sp, #28
 800ffd6:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800ffda:	f8de 3000 	ldr.w	r3, [lr]
 800ffde:	f8cc 3000 	str.w	r3, [ip]
 800ffe2:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 800ffe6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 800ffea:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 800ffee:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 800fff2:	343c      	adds	r4, #60	; 0x3c
 800fff4:	f8de 3000 	ldr.w	r3, [lr]
 800fff8:	f8cc 3000 	str.w	r3, [ip]
 800fffc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800fffe:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8010002:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8010006:	6823      	ldr	r3, [r4, #0]
 8010008:	f8cc 3000 	str.w	r3, [ip]
 801000c:	682b      	ldr	r3, [r5, #0]
 801000e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8010012:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8010014:	9201      	str	r2, [sp, #4]
 8010016:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8010018:	9200      	str	r2, [sp, #0]
 801001a:	f8cd 8008 	str.w	r8, [sp, #8]
 801001e:	6bdc      	ldr	r4, [r3, #60]	; 0x3c
 8010020:	aa07      	add	r2, sp, #28
 8010022:	463b      	mov	r3, r7
 8010024:	4631      	mov	r1, r6
 8010026:	4628      	mov	r0, r5
 8010028:	47a0      	blx	r4
 801002a:	b017      	add	sp, #92	; 0x5c
 801002c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010030 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8010030:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010034:	b08d      	sub	sp, #52	; 0x34
 8010036:	4688      	mov	r8, r1
 8010038:	9916      	ldr	r1, [sp, #88]	; 0x58
 801003a:	f8d3 c000 	ldr.w	ip, [r3]
 801003e:	680f      	ldr	r7, [r1, #0]
 8010040:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8010044:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8010048:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 801004c:	edd3 6a07 	vldr	s13, [r3, #28]
 8010050:	9918      	ldr	r1, [sp, #96]	; 0x60
 8010052:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8010056:	f9b1 9000 	ldrsh.w	r9, [r1]
 801005a:	f9ba 1000 	ldrsh.w	r1, [sl]
 801005e:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8010062:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8010066:	eba7 070c 	sub.w	r7, r7, ip
 801006a:	42bc      	cmp	r4, r7
 801006c:	bfa8      	it	ge
 801006e:	463c      	movge	r4, r7
 8010070:	ee07 4a90 	vmov	s15, r4
 8010074:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8010078:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 801007c:	ee25 4a04 	vmul.f32	s8, s10, s8
 8010080:	ee65 4a24 	vmul.f32	s9, s10, s9
 8010084:	ee25 5a27 	vmul.f32	s10, s10, s15
 8010088:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 801008c:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8010090:	eb09 0e0c 	add.w	lr, r9, ip
 8010094:	4571      	cmp	r1, lr
 8010096:	ee71 0aa4 	vadd.f32	s1, s3, s9
 801009a:	ee32 1a05 	vadd.f32	s2, s4, s10
 801009e:	ee36 0a84 	vadd.f32	s0, s13, s8
 80100a2:	ee61 1a87 	vmul.f32	s3, s3, s14
 80100a6:	ee22 2a07 	vmul.f32	s4, s4, s14
 80100aa:	f340 808d 	ble.w	80101c8 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 80100ae:	eba1 060e 	sub.w	r6, r1, lr
 80100b2:	fb96 f5f4 	sdiv	r5, r6, r4
 80100b6:	ee07 5a10 	vmov	s14, r5
 80100ba:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80100be:	2d00      	cmp	r5, #0
 80100c0:	fb04 6615 	mls	r6, r4, r5, r6
 80100c4:	eea7 0a04 	vfma.f32	s0, s14, s8
 80100c8:	eee7 0a24 	vfma.f32	s1, s14, s9
 80100cc:	eea7 1a05 	vfma.f32	s2, s14, s10
 80100d0:	dd13      	ble.n	80100fa <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 80100d2:	ee70 6a44 	vsub.f32	s13, s0, s8
 80100d6:	ee70 1ae4 	vsub.f32	s3, s1, s9
 80100da:	eef5 6a40 	vcmp.f32	s13, #0.0
 80100de:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80100e2:	bf18      	it	ne
 80100e4:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 80100e8:	ee31 2a45 	vsub.f32	s4, s2, s10
 80100ec:	bf08      	it	eq
 80100ee:	eeb0 7a67 	vmoveq.f32	s14, s15
 80100f2:	ee61 1a87 	vmul.f32	s3, s3, s14
 80100f6:	ee22 2a07 	vmul.f32	s4, s4, s14
 80100fa:	fb05 f204 	mul.w	r2, r5, r4
 80100fe:	1abf      	subs	r7, r7, r2
 8010100:	4494      	add	ip, r2
 8010102:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8010106:	4411      	add	r1, r2
 8010108:	eb09 020c 	add.w	r2, r9, ip
 801010c:	443a      	add	r2, r7
 801010e:	b209      	sxth	r1, r1
 8010110:	428a      	cmp	r2, r1
 8010112:	bfc4      	itt	gt
 8010114:	eba1 0209 	subgt.w	r2, r1, r9
 8010118:	eba2 070c 	subgt.w	r7, r2, ip
 801011c:	2f00      	cmp	r7, #0
 801011e:	dd50      	ble.n	80101c2 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8010120:	fb97 f1f4 	sdiv	r1, r7, r4
 8010124:	fb04 7211 	mls	r2, r4, r1, r7
 8010128:	b90a      	cbnz	r2, 801012e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 801012a:	3901      	subs	r1, #1
 801012c:	4622      	mov	r2, r4
 801012e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8010132:	6840      	ldr	r0, [r0, #4]
 8010134:	900b      	str	r0, [sp, #44]	; 0x2c
 8010136:	f8d0 a000 	ldr.w	sl, [r0]
 801013a:	9817      	ldr	r0, [sp, #92]	; 0x5c
 801013c:	9008      	str	r0, [sp, #32]
 801013e:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8010142:	9818      	ldr	r0, [sp, #96]	; 0x60
 8010144:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8010148:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 801014c:	695b      	ldr	r3, [r3, #20]
 801014e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8010150:	445b      	add	r3, fp
 8010152:	eef0 6a42 	vmov.f32	s13, s4
 8010156:	ee60 2aa3 	vmul.f32	s5, s1, s7
 801015a:	ee21 3a23 	vmul.f32	s6, s2, s7
 801015e:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8010162:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8010166:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801016a:	9307      	str	r3, [sp, #28]
 801016c:	ee17 7a90 	vmov	r7, s15
 8010170:	ee73 7a42 	vsub.f32	s15, s6, s4
 8010174:	eeb0 7a61 	vmov.f32	s14, s3
 8010178:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 801017c:	ee16 3a90 	vmov	r3, s13
 8010180:	fb97 f7f4 	sdiv	r7, r7, r4
 8010184:	ee17 ca90 	vmov	ip, s15
 8010188:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 801018c:	fb9c fcf4 	sdiv	ip, ip, r4
 8010190:	fb0c 3306 	mla	r3, ip, r6, r3
 8010194:	9302      	str	r3, [sp, #8]
 8010196:	ee17 3a10 	vmov	r3, s14
 801019a:	44b6      	add	lr, r6
 801019c:	fb04 e505 	mla	r5, r4, r5, lr
 80101a0:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 80101a4:	fb07 3706 	mla	r7, r7, r6, r3
 80101a8:	e9cd 8505 	strd	r8, r5, [sp, #20]
 80101ac:	e9cd 4700 	strd	r4, r7, [sp]
 80101b0:	2900      	cmp	r1, #0
 80101b2:	bfcc      	ite	gt
 80101b4:	46a1      	movgt	r9, r4
 80101b6:	4691      	movle	r9, r2
 80101b8:	eba9 0306 	sub.w	r3, r9, r6
 80101bc:	f8da 4008 	ldr.w	r4, [sl, #8]
 80101c0:	47a0      	blx	r4
 80101c2:	b00d      	add	sp, #52	; 0x34
 80101c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80101c8:	2500      	movs	r5, #0
 80101ca:	462e      	mov	r6, r5
 80101cc:	e799      	b.n	8010102 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

080101d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80101d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80101d4:	b0db      	sub	sp, #364	; 0x16c
 80101d6:	461d      	mov	r5, r3
 80101d8:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 80101dc:	930a      	str	r3, [sp, #40]	; 0x28
 80101de:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 80101e2:	930b      	str	r3, [sp, #44]	; 0x2c
 80101e4:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 80101e8:	9310      	str	r3, [sp, #64]	; 0x40
 80101ea:	6803      	ldr	r3, [r0, #0]
 80101ec:	910f      	str	r1, [sp, #60]	; 0x3c
 80101ee:	6c5f      	ldr	r7, [r3, #68]	; 0x44
 80101f0:	9009      	str	r0, [sp, #36]	; 0x24
 80101f2:	4614      	mov	r4, r2
 80101f4:	4629      	mov	r1, r5
 80101f6:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80101fa:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 80101fe:	47b8      	blx	r7
 8010200:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8010202:	6058      	str	r0, [r3, #4]
 8010204:	2800      	cmp	r0, #0
 8010206:	f000 83a1 	beq.w	801094c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801020a:	682b      	ldr	r3, [r5, #0]
 801020c:	9314      	str	r3, [sp, #80]	; 0x50
 801020e:	686b      	ldr	r3, [r5, #4]
 8010210:	9315      	str	r3, [sp, #84]	; 0x54
 8010212:	4bc4      	ldr	r3, [pc, #784]	; (8010524 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8010214:	ed94 7a02 	vldr	s14, [r4, #8]
 8010218:	7819      	ldrb	r1, [r3, #0]
 801021a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 801021e:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 8010222:	2900      	cmp	r1, #0
 8010224:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8010228:	bf16      	itet	ne
 801022a:	4619      	movne	r1, r3
 801022c:	4611      	moveq	r1, r2
 801022e:	4613      	movne	r3, r2
 8010230:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8010234:	9116      	str	r1, [sp, #88]	; 0x58
 8010236:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 801023a:	f240 8387 	bls.w	801094c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801023e:	ed94 7a07 	vldr	s14, [r4, #28]
 8010242:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8010246:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801024a:	f240 837f 	bls.w	801094c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801024e:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 8010252:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8010256:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801025a:	f240 8377 	bls.w	801094c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801025e:	6822      	ldr	r2, [r4, #0]
 8010260:	4bb1      	ldr	r3, [pc, #708]	; (8010528 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8010262:	429a      	cmp	r2, r3
 8010264:	f2c0 8372 	blt.w	801094c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010268:	49b0      	ldr	r1, [pc, #704]	; (801052c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 801026a:	6963      	ldr	r3, [r4, #20]
 801026c:	428a      	cmp	r2, r1
 801026e:	f300 836d 	bgt.w	801094c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010272:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8010276:	48ae      	ldr	r0, [pc, #696]	; (8010530 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8010278:	33ff      	adds	r3, #255	; 0xff
 801027a:	4283      	cmp	r3, r0
 801027c:	f200 8366 	bhi.w	801094c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010280:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8010282:	4dac      	ldr	r5, [pc, #688]	; (8010534 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8010284:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 8010288:	33ff      	adds	r3, #255	; 0xff
 801028a:	42ab      	cmp	r3, r5
 801028c:	f200 835e 	bhi.w	801094c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010290:	6862      	ldr	r2, [r4, #4]
 8010292:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 8010296:	33ff      	adds	r3, #255	; 0xff
 8010298:	4283      	cmp	r3, r0
 801029a:	f200 8357 	bhi.w	801094c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 801029e:	69a1      	ldr	r1, [r4, #24]
 80102a0:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 80102a4:	33ff      	adds	r3, #255	; 0xff
 80102a6:	4283      	cmp	r3, r0
 80102a8:	f200 8350 	bhi.w	801094c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80102ac:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 80102ae:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 80102b2:	30ff      	adds	r0, #255	; 0xff
 80102b4:	42a8      	cmp	r0, r5
 80102b6:	f200 8349 	bhi.w	801094c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80102ba:	428a      	cmp	r2, r1
 80102bc:	f280 8110 	bge.w	80104e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 80102c0:	429a      	cmp	r2, r3
 80102c2:	f300 8119 	bgt.w	80104f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 80102c6:	4299      	cmp	r1, r3
 80102c8:	f280 811d 	bge.w	8010506 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 80102cc:	2502      	movs	r5, #2
 80102ce:	2701      	movs	r7, #1
 80102d0:	46a9      	mov	r9, r5
 80102d2:	46b8      	mov	r8, r7
 80102d4:	f04f 0a00 	mov.w	sl, #0
 80102d8:	4621      	mov	r1, r4
 80102da:	a849      	add	r0, sp, #292	; 0x124
 80102dc:	f003 fda6 	bl	8013e2c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 80102e0:	4622      	mov	r2, r4
 80102e2:	4653      	mov	r3, sl
 80102e4:	a949      	add	r1, sp, #292	; 0x124
 80102e6:	f8cd 9000 	str.w	r9, [sp]
 80102ea:	a819      	add	r0, sp, #100	; 0x64
 80102ec:	f003 fece 	bl	801408c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 80102f0:	4622      	mov	r2, r4
 80102f2:	4653      	mov	r3, sl
 80102f4:	a949      	add	r1, sp, #292	; 0x124
 80102f6:	f8cd 8000 	str.w	r8, [sp]
 80102fa:	a829      	add	r0, sp, #164	; 0xa4
 80102fc:	f003 fec6 	bl	801408c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010300:	4643      	mov	r3, r8
 8010302:	4622      	mov	r2, r4
 8010304:	a949      	add	r1, sp, #292	; 0x124
 8010306:	f8cd 9000 	str.w	r9, [sp]
 801030a:	a839      	add	r0, sp, #228	; 0xe4
 801030c:	f003 febe 	bl	801408c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8010310:	42af      	cmp	r7, r5
 8010312:	bfb5      	itete	lt
 8010314:	2300      	movlt	r3, #0
 8010316:	2301      	movge	r3, #1
 8010318:	930e      	strlt	r3, [sp, #56]	; 0x38
 801031a:	930e      	strge	r3, [sp, #56]	; 0x38
 801031c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801031e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8010322:	af12      	add	r7, sp, #72	; 0x48
 8010324:	bfb9      	ittee	lt
 8010326:	ad29      	addlt	r5, sp, #164	; 0xa4
 8010328:	ac19      	addlt	r4, sp, #100	; 0x64
 801032a:	ad19      	addge	r5, sp, #100	; 0x64
 801032c:	ac29      	addge	r4, sp, #164	; 0xa4
 801032e:	e887 0003 	stmia.w	r7, {r0, r1}
 8010332:	b928      	cbnz	r0, 8010340 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8010334:	4b80      	ldr	r3, [pc, #512]	; (8010538 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8010336:	6818      	ldr	r0, [r3, #0]
 8010338:	6803      	ldr	r3, [r0, #0]
 801033a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801033c:	4798      	blx	r3
 801033e:	6038      	str	r0, [r7, #0]
 8010340:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8010342:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8010346:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801034a:	930c      	str	r3, [sp, #48]	; 0x30
 801034c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801034e:	6963      	ldr	r3, [r4, #20]
 8010350:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 8010352:	440b      	add	r3, r1
 8010354:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8010358:	4408      	add	r0, r1
 801035a:	b200      	sxth	r0, r0
 801035c:	4283      	cmp	r3, r0
 801035e:	900d      	str	r0, [sp, #52]	; 0x34
 8010360:	f280 80dd 	bge.w	801051e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8010364:	428b      	cmp	r3, r1
 8010366:	da08      	bge.n	801037a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8010368:	2a00      	cmp	r2, #0
 801036a:	dd06      	ble.n	801037a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 801036c:	1acb      	subs	r3, r1, r3
 801036e:	429a      	cmp	r2, r3
 8010370:	f2c0 80e4 	blt.w	801053c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8010374:	2b00      	cmp	r3, #0
 8010376:	f300 80e2 	bgt.w	801053e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 801037a:	6967      	ldr	r7, [r4, #20]
 801037c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801037e:	443b      	add	r3, r7
 8010380:	461f      	mov	r7, r3
 8010382:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010384:	1bdf      	subs	r7, r3, r7
 8010386:	4297      	cmp	r7, r2
 8010388:	bfa8      	it	ge
 801038a:	4617      	movge	r7, r2
 801038c:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 8010390:	2f00      	cmp	r7, #0
 8010392:	f340 8166 	ble.w	8010662 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8010396:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8010398:	6829      	ldr	r1, [r5, #0]
 801039a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801039e:	f9bb 3000 	ldrsh.w	r3, [fp]
 80103a2:	6820      	ldr	r0, [r4, #0]
 80103a4:	4411      	add	r1, r2
 80103a6:	4299      	cmp	r1, r3
 80103a8:	dd1a      	ble.n	80103e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80103aa:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80103ae:	440b      	add	r3, r1
 80103b0:	4402      	add	r2, r0
 80103b2:	b21b      	sxth	r3, r3
 80103b4:	429a      	cmp	r2, r3
 80103b6:	dc13      	bgt.n	80103e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 80103b8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80103ba:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80103bc:	681b      	ldr	r3, [r3, #0]
 80103be:	9206      	str	r2, [sp, #24]
 80103c0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80103c2:	9205      	str	r2, [sp, #20]
 80103c4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80103c6:	9500      	str	r5, [sp, #0]
 80103c8:	e9cd b203 	strd	fp, r2, [sp, #12]
 80103cc:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80103ce:	9809      	ldr	r0, [sp, #36]	; 0x24
 80103d0:	e9cd 8201 	strd	r8, r2, [sp, #4]
 80103d4:	a912      	add	r1, sp, #72	; 0x48
 80103d6:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 80103da:	aa49      	add	r2, sp, #292	; 0x124
 80103dc:	4623      	mov	r3, r4
 80103de:	47c8      	blx	r9
 80103e0:	e9d4 2300 	ldrd	r2, r3, [r4]
 80103e4:	441a      	add	r2, r3
 80103e6:	6963      	ldr	r3, [r4, #20]
 80103e8:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 80103ec:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 80103f0:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 80103f4:	68a1      	ldr	r1, [r4, #8]
 80103f6:	ed94 6a08 	vldr	s12, [r4, #32]
 80103fa:	6022      	str	r2, [r4, #0]
 80103fc:	3301      	adds	r3, #1
 80103fe:	6163      	str	r3, [r4, #20]
 8010400:	69a3      	ldr	r3, [r4, #24]
 8010402:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010406:	3b01      	subs	r3, #1
 8010408:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 801040c:	61a3      	str	r3, [r4, #24]
 801040e:	6923      	ldr	r3, [r4, #16]
 8010410:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8010414:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010418:	edd4 6a07 	vldr	s13, [r4, #28]
 801041c:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 8010420:	440b      	add	r3, r1
 8010422:	68e1      	ldr	r1, [r4, #12]
 8010424:	6123      	str	r3, [r4, #16]
 8010426:	ee76 6a86 	vadd.f32	s13, s13, s12
 801042a:	428b      	cmp	r3, r1
 801042c:	edc4 6a07 	vstr	s13, [r4, #28]
 8010430:	db15      	blt.n	801045e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8010432:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8010436:	ee76 6a26 	vadd.f32	s13, s12, s13
 801043a:	3201      	adds	r2, #1
 801043c:	edc4 6a07 	vstr	s13, [r4, #28]
 8010440:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8010444:	6022      	str	r2, [r4, #0]
 8010446:	ee36 7a87 	vadd.f32	s14, s13, s14
 801044a:	1a5b      	subs	r3, r3, r1
 801044c:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8010450:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8010454:	6123      	str	r3, [r4, #16]
 8010456:	ee77 7a27 	vadd.f32	s15, s14, s15
 801045a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801045e:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010462:	441a      	add	r2, r3
 8010464:	696b      	ldr	r3, [r5, #20]
 8010466:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 801046a:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801046e:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 8010472:	68a9      	ldr	r1, [r5, #8]
 8010474:	ed95 6a08 	vldr	s12, [r5, #32]
 8010478:	602a      	str	r2, [r5, #0]
 801047a:	3301      	adds	r3, #1
 801047c:	616b      	str	r3, [r5, #20]
 801047e:	69ab      	ldr	r3, [r5, #24]
 8010480:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010484:	3b01      	subs	r3, #1
 8010486:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 801048a:	61ab      	str	r3, [r5, #24]
 801048c:	692b      	ldr	r3, [r5, #16]
 801048e:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 8010492:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010496:	edd5 6a07 	vldr	s13, [r5, #28]
 801049a:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801049e:	440b      	add	r3, r1
 80104a0:	68e9      	ldr	r1, [r5, #12]
 80104a2:	612b      	str	r3, [r5, #16]
 80104a4:	ee76 6a86 	vadd.f32	s13, s13, s12
 80104a8:	428b      	cmp	r3, r1
 80104aa:	edc5 6a07 	vstr	s13, [r5, #28]
 80104ae:	db15      	blt.n	80104dc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 80104b0:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80104b4:	ee76 6a26 	vadd.f32	s13, s12, s13
 80104b8:	3201      	adds	r2, #1
 80104ba:	edc5 6a07 	vstr	s13, [r5, #28]
 80104be:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80104c2:	602a      	str	r2, [r5, #0]
 80104c4:	ee36 7a87 	vadd.f32	s14, s13, s14
 80104c8:	1a5b      	subs	r3, r3, r1
 80104ca:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80104ce:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 80104d2:	612b      	str	r3, [r5, #16]
 80104d4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80104d8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80104dc:	3f01      	subs	r7, #1
 80104de:	e757      	b.n	8010390 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 80104e0:	4299      	cmp	r1, r3
 80104e2:	dc13      	bgt.n	801050c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 80104e4:	429a      	cmp	r2, r3
 80104e6:	da14      	bge.n	8010512 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 80104e8:	2502      	movs	r5, #2
 80104ea:	2703      	movs	r7, #3
 80104ec:	46a9      	mov	r9, r5
 80104ee:	f04f 0800 	mov.w	r8, #0
 80104f2:	f04f 0a01 	mov.w	sl, #1
 80104f6:	e6ef      	b.n	80102d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 80104f8:	2501      	movs	r5, #1
 80104fa:	2700      	movs	r7, #0
 80104fc:	46a9      	mov	r9, r5
 80104fe:	46b8      	mov	r8, r7
 8010500:	f04f 0a02 	mov.w	sl, #2
 8010504:	e6e8      	b.n	80102d8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8010506:	2501      	movs	r5, #1
 8010508:	2702      	movs	r7, #2
 801050a:	e6e1      	b.n	80102d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 801050c:	2500      	movs	r5, #0
 801050e:	2701      	movs	r7, #1
 8010510:	e7f4      	b.n	80104fc <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8010512:	2702      	movs	r7, #2
 8010514:	2503      	movs	r5, #3
 8010516:	f04f 0900 	mov.w	r9, #0
 801051a:	46b8      	mov	r8, r7
 801051c:	e7e9      	b.n	80104f2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 801051e:	4613      	mov	r3, r2
 8010520:	e728      	b.n	8010374 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8010522:	bf00      	nop
 8010524:	20011e38 	.word	0x20011e38
 8010528:	fffd8f01 	.word	0xfffd8f01
 801052c:	00027100 	.word	0x00027100
 8010530:	0004e1ff 	.word	0x0004e1ff
 8010534:	0004e1fe 	.word	0x0004e1fe
 8010538:	20011e40 	.word	0x20011e40
 801053c:	4613      	mov	r3, r2
 801053e:	992b      	ldr	r1, [sp, #172]	; 0xac
 8010540:	9111      	str	r1, [sp, #68]	; 0x44
 8010542:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 8010546:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 801054a:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 801054c:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 8010550:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 8010554:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 8010558:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 801055c:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 8010560:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 8010564:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 8010568:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 801056c:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 8010570:	469e      	mov	lr, r3
 8010572:	469c      	mov	ip, r3
 8010574:	f04f 0900 	mov.w	r9, #0
 8010578:	f1bc 0f00 	cmp.w	ip, #0
 801057c:	d147      	bne.n	801060e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 801057e:	eb03 0c07 	add.w	ip, r3, r7
 8010582:	1ad7      	subs	r7, r2, r3
 8010584:	f1b9 0f00 	cmp.w	r9, #0
 8010588:	d009      	beq.n	801059e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 801058a:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 801058e:	9029      	str	r0, [sp, #164]	; 0xa4
 8010590:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 8010594:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 8010598:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 801059c:	912d      	str	r1, [sp, #180]	; 0xb4
 801059e:	991b      	ldr	r1, [sp, #108]	; 0x6c
 80105a0:	9111      	str	r1, [sp, #68]	; 0x44
 80105a2:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 80105a6:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 80105aa:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 80105ae:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 80105b2:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 80105b6:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 80105ba:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 80105be:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 80105c2:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80105c6:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80105ca:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80105ce:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80105d2:	f04f 0800 	mov.w	r8, #0
 80105d6:	f1be 0f00 	cmp.w	lr, #0
 80105da:	d031      	beq.n	8010640 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 80105dc:	9e11      	ldr	r6, [sp, #68]	; 0x44
 80105de:	4431      	add	r1, r6
 80105e0:	4549      	cmp	r1, r9
 80105e2:	4450      	add	r0, sl
 80105e4:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80105e8:	ee37 7a04 	vadd.f32	s14, s14, s8
 80105ec:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80105f0:	db08      	blt.n	8010604 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 80105f2:	ee77 7a85 	vadd.f32	s15, s15, s10
 80105f6:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80105fa:	ee37 7a06 	vadd.f32	s14, s14, s12
 80105fe:	3001      	adds	r0, #1
 8010600:	eba1 0109 	sub.w	r1, r1, r9
 8010604:	f10e 3eff 	add.w	lr, lr, #4294967295
 8010608:	f04f 0801 	mov.w	r8, #1
 801060c:	e7e3      	b.n	80105d6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 801060e:	9e11      	ldr	r6, [sp, #68]	; 0x44
 8010610:	4431      	add	r1, r6
 8010612:	4541      	cmp	r1, r8
 8010614:	4450      	add	r0, sl
 8010616:	ee37 7a24 	vadd.f32	s14, s14, s9
 801061a:	ee77 7a84 	vadd.f32	s15, s15, s8
 801061e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8010622:	db08      	blt.n	8010636 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8010624:	ee76 6a85 	vadd.f32	s13, s13, s10
 8010628:	ee37 7a25 	vadd.f32	s14, s14, s11
 801062c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8010630:	3001      	adds	r0, #1
 8010632:	eba1 0108 	sub.w	r1, r1, r8
 8010636:	f10c 3cff 	add.w	ip, ip, #4294967295
 801063a:	f04f 0901 	mov.w	r9, #1
 801063e:	e79b      	b.n	8010578 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8010640:	449c      	add	ip, r3
 8010642:	1aff      	subs	r7, r7, r3
 8010644:	f1b8 0f00 	cmp.w	r8, #0
 8010648:	d009      	beq.n	801065e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 801064a:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 801064e:	9019      	str	r0, [sp, #100]	; 0x64
 8010650:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 8010654:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8010658:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 801065c:	911d      	str	r1, [sp, #116]	; 0x74
 801065e:	1ad2      	subs	r2, r2, r3
 8010660:	e68b      	b.n	801037a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8010662:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010664:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 8010666:	2b00      	cmp	r3, #0
 8010668:	f000 80d1 	beq.w	801080e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 801066c:	ad19      	add	r5, sp, #100	; 0x64
 801066e:	ac39      	add	r4, sp, #228	; 0xe4
 8010670:	9b64      	ldr	r3, [sp, #400]	; 0x190
 8010672:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8010676:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801067a:	930c      	str	r3, [sp, #48]	; 0x30
 801067c:	990c      	ldr	r1, [sp, #48]	; 0x30
 801067e:	6963      	ldr	r3, [r4, #20]
 8010680:	440b      	add	r3, r1
 8010682:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8010686:	4408      	add	r0, r1
 8010688:	b200      	sxth	r0, r0
 801068a:	4283      	cmp	r3, r0
 801068c:	900d      	str	r0, [sp, #52]	; 0x34
 801068e:	f280 80c1 	bge.w	8010814 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8010692:	428b      	cmp	r3, r1
 8010694:	da08      	bge.n	80106a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8010696:	2a00      	cmp	r2, #0
 8010698:	dd06      	ble.n	80106a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801069a:	1acb      	subs	r3, r1, r3
 801069c:	429a      	cmp	r2, r3
 801069e:	f2c0 80bb 	blt.w	8010818 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 80106a2:	2b00      	cmp	r3, #0
 80106a4:	f300 80b9 	bgt.w	801081a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 80106a8:	6967      	ldr	r7, [r4, #20]
 80106aa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80106ac:	443b      	add	r3, r7
 80106ae:	461f      	mov	r7, r3
 80106b0:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80106b2:	1bdf      	subs	r7, r3, r7
 80106b4:	4297      	cmp	r7, r2
 80106b6:	bfa8      	it	ge
 80106b8:	4617      	movge	r7, r2
 80106ba:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 80106be:	2f00      	cmp	r7, #0
 80106c0:	f340 813c 	ble.w	801093c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 80106c4:	9b64      	ldr	r3, [sp, #400]	; 0x190
 80106c6:	6829      	ldr	r1, [r5, #0]
 80106c8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80106cc:	f9bb 3000 	ldrsh.w	r3, [fp]
 80106d0:	6820      	ldr	r0, [r4, #0]
 80106d2:	4411      	add	r1, r2
 80106d4:	4299      	cmp	r1, r3
 80106d6:	dd1a      	ble.n	801070e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80106d8:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 80106dc:	440b      	add	r3, r1
 80106de:	4402      	add	r2, r0
 80106e0:	b21b      	sxth	r3, r3
 80106e2:	429a      	cmp	r2, r3
 80106e4:	dc13      	bgt.n	801070e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 80106e6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80106e8:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80106ea:	681b      	ldr	r3, [r3, #0]
 80106ec:	9206      	str	r2, [sp, #24]
 80106ee:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80106f0:	9205      	str	r2, [sp, #20]
 80106f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80106f4:	9500      	str	r5, [sp, #0]
 80106f6:	e9cd b203 	strd	fp, r2, [sp, #12]
 80106fa:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80106fc:	9809      	ldr	r0, [sp, #36]	; 0x24
 80106fe:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8010702:	a912      	add	r1, sp, #72	; 0x48
 8010704:	f8d3 9048 	ldr.w	r9, [r3, #72]	; 0x48
 8010708:	aa49      	add	r2, sp, #292	; 0x124
 801070a:	4623      	mov	r3, r4
 801070c:	47c8      	blx	r9
 801070e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8010712:	441a      	add	r2, r3
 8010714:	6963      	ldr	r3, [r4, #20]
 8010716:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 801071a:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 801071e:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 8010722:	68a1      	ldr	r1, [r4, #8]
 8010724:	ed94 6a08 	vldr	s12, [r4, #32]
 8010728:	6022      	str	r2, [r4, #0]
 801072a:	3301      	adds	r3, #1
 801072c:	6163      	str	r3, [r4, #20]
 801072e:	69a3      	ldr	r3, [r4, #24]
 8010730:	ee37 7a27 	vadd.f32	s14, s14, s15
 8010734:	3b01      	subs	r3, #1
 8010736:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 801073a:	61a3      	str	r3, [r4, #24]
 801073c:	6923      	ldr	r3, [r4, #16]
 801073e:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 8010742:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8010746:	edd4 6a07 	vldr	s13, [r4, #28]
 801074a:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801074e:	440b      	add	r3, r1
 8010750:	68e1      	ldr	r1, [r4, #12]
 8010752:	6123      	str	r3, [r4, #16]
 8010754:	ee76 6a86 	vadd.f32	s13, s13, s12
 8010758:	428b      	cmp	r3, r1
 801075a:	edc4 6a07 	vstr	s13, [r4, #28]
 801075e:	db15      	blt.n	801078c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 8010760:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 8010764:	ee76 6a26 	vadd.f32	s13, s12, s13
 8010768:	3201      	adds	r2, #1
 801076a:	edc4 6a07 	vstr	s13, [r4, #28]
 801076e:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 8010772:	6022      	str	r2, [r4, #0]
 8010774:	ee36 7a87 	vadd.f32	s14, s13, s14
 8010778:	1a5b      	subs	r3, r3, r1
 801077a:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 801077e:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 8010782:	6123      	str	r3, [r4, #16]
 8010784:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010788:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 801078c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010790:	441a      	add	r2, r3
 8010792:	696b      	ldr	r3, [r5, #20]
 8010794:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 8010798:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 801079c:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 80107a0:	68a9      	ldr	r1, [r5, #8]
 80107a2:	ed95 6a08 	vldr	s12, [r5, #32]
 80107a6:	602a      	str	r2, [r5, #0]
 80107a8:	3301      	adds	r3, #1
 80107aa:	616b      	str	r3, [r5, #20]
 80107ac:	69ab      	ldr	r3, [r5, #24]
 80107ae:	ee37 7a27 	vadd.f32	s14, s14, s15
 80107b2:	3b01      	subs	r3, #1
 80107b4:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 80107b8:	61ab      	str	r3, [r5, #24]
 80107ba:	692b      	ldr	r3, [r5, #16]
 80107bc:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80107c0:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80107c4:	edd5 6a07 	vldr	s13, [r5, #28]
 80107c8:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 80107cc:	440b      	add	r3, r1
 80107ce:	68e9      	ldr	r1, [r5, #12]
 80107d0:	612b      	str	r3, [r5, #16]
 80107d2:	ee76 6a86 	vadd.f32	s13, s13, s12
 80107d6:	428b      	cmp	r3, r1
 80107d8:	edc5 6a07 	vstr	s13, [r5, #28]
 80107dc:	db15      	blt.n	801080a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 80107de:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 80107e2:	ee76 6a26 	vadd.f32	s13, s12, s13
 80107e6:	3201      	adds	r2, #1
 80107e8:	edc5 6a07 	vstr	s13, [r5, #28]
 80107ec:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 80107f0:	602a      	str	r2, [r5, #0]
 80107f2:	ee36 7a87 	vadd.f32	s14, s13, s14
 80107f6:	1a5b      	subs	r3, r3, r1
 80107f8:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 80107fc:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 8010800:	612b      	str	r3, [r5, #16]
 8010802:	ee77 7a27 	vadd.f32	s15, s14, s15
 8010806:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 801080a:	3f01      	subs	r7, #1
 801080c:	e757      	b.n	80106be <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801080e:	ad39      	add	r5, sp, #228	; 0xe4
 8010810:	ac19      	add	r4, sp, #100	; 0x64
 8010812:	e72d      	b.n	8010670 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8010814:	4613      	mov	r3, r2
 8010816:	e744      	b.n	80106a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8010818:	4613      	mov	r3, r2
 801081a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 801081e:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 8010820:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 8010824:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 8010828:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 801082c:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 8010830:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 8010834:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 8010838:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 801083c:	993d      	ldr	r1, [sp, #244]	; 0xf4
 801083e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 8010842:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 8010846:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 801084a:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 801084e:	960e      	str	r6, [sp, #56]	; 0x38
 8010850:	469e      	mov	lr, r3
 8010852:	461f      	mov	r7, r3
 8010854:	f04f 0900 	mov.w	r9, #0
 8010858:	2f00      	cmp	r7, #0
 801085a:	d146      	bne.n	80108ea <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 801085c:	449c      	add	ip, r3
 801085e:	1ad7      	subs	r7, r2, r3
 8010860:	f1b9 0f00 	cmp.w	r9, #0
 8010864:	d009      	beq.n	801087a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 8010866:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 801086a:	9039      	str	r0, [sp, #228]	; 0xe4
 801086c:	913d      	str	r1, [sp, #244]	; 0xf4
 801086e:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 8010872:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 8010876:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 801087a:	991b      	ldr	r1, [sp, #108]	; 0x6c
 801087c:	910e      	str	r1, [sp, #56]	; 0x38
 801087e:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 8010882:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 8010886:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 801088a:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 801088e:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 8010892:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 8010896:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 801089a:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 801089e:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 80108a2:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 80108a6:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 80108aa:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 80108ae:	f04f 0800 	mov.w	r8, #0
 80108b2:	f1be 0f00 	cmp.w	lr, #0
 80108b6:	d030      	beq.n	801091a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 80108b8:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80108ba:	4431      	add	r1, r6
 80108bc:	4549      	cmp	r1, r9
 80108be:	4450      	add	r0, sl
 80108c0:	ee76 6aa4 	vadd.f32	s13, s13, s9
 80108c4:	ee37 7a04 	vadd.f32	s14, s14, s8
 80108c8:	ee77 7aa3 	vadd.f32	s15, s15, s7
 80108cc:	db08      	blt.n	80108e0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 80108ce:	ee77 7a85 	vadd.f32	s15, s15, s10
 80108d2:	ee76 6aa5 	vadd.f32	s13, s13, s11
 80108d6:	ee37 7a06 	vadd.f32	s14, s14, s12
 80108da:	3001      	adds	r0, #1
 80108dc:	eba1 0109 	sub.w	r1, r1, r9
 80108e0:	f10e 3eff 	add.w	lr, lr, #4294967295
 80108e4:	f04f 0801 	mov.w	r8, #1
 80108e8:	e7e3      	b.n	80108b2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 80108ea:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 80108ec:	4431      	add	r1, r6
 80108ee:	4541      	cmp	r1, r8
 80108f0:	4450      	add	r0, sl
 80108f2:	ee37 7a24 	vadd.f32	s14, s14, s9
 80108f6:	ee77 7a84 	vadd.f32	s15, s15, s8
 80108fa:	ee76 6aa3 	vadd.f32	s13, s13, s7
 80108fe:	db08      	blt.n	8010912 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8010900:	ee76 6a85 	vadd.f32	s13, s13, s10
 8010904:	ee37 7a25 	vadd.f32	s14, s14, s11
 8010908:	ee77 7a86 	vadd.f32	s15, s15, s12
 801090c:	3001      	adds	r0, #1
 801090e:	eba1 0108 	sub.w	r1, r1, r8
 8010912:	3f01      	subs	r7, #1
 8010914:	f04f 0901 	mov.w	r9, #1
 8010918:	e79e      	b.n	8010858 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801091a:	449c      	add	ip, r3
 801091c:	1aff      	subs	r7, r7, r3
 801091e:	f1b8 0f00 	cmp.w	r8, #0
 8010922:	d009      	beq.n	8010938 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8010924:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 8010928:	9019      	str	r0, [sp, #100]	; 0x64
 801092a:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 801092e:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 8010932:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 8010936:	911d      	str	r1, [sp, #116]	; 0x74
 8010938:	1ad2      	subs	r2, r2, r3
 801093a:	e6b5      	b.n	80106a8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801093c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801093e:	681b      	ldr	r3, [r3, #0]
 8010940:	b923      	cbnz	r3, 801094c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8010942:	4b04      	ldr	r3, [pc, #16]	; (8010954 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 8010944:	6818      	ldr	r0, [r3, #0]
 8010946:	6803      	ldr	r3, [r0, #0]
 8010948:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801094a:	4798      	blx	r3
 801094c:	b05b      	add	sp, #364	; 0x16c
 801094e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010952:	bf00      	nop
 8010954:	20011e40 	.word	0x20011e40

08010958 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 8010958:	b570      	push	{r4, r5, r6, lr}
 801095a:	4604      	mov	r4, r0
 801095c:	f89d 601c 	ldrb.w	r6, [sp, #28]
 8010960:	9805      	ldr	r0, [sp, #20]
 8010962:	6061      	str	r1, [r4, #4]
 8010964:	2500      	movs	r5, #0
 8010966:	f89d 1010 	ldrb.w	r1, [sp, #16]
 801096a:	8263      	strh	r3, [r4, #18]
 801096c:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8010970:	8025      	strh	r5, [r4, #0]
 8010972:	7221      	strb	r1, [r4, #8]
 8010974:	7266      	strb	r6, [r4, #9]
 8010976:	60e0      	str	r0, [r4, #12]
 8010978:	8222      	strh	r2, [r4, #16]
 801097a:	82a3      	strh	r3, [r4, #20]
 801097c:	82e5      	strh	r5, [r4, #22]
 801097e:	8325      	strh	r5, [r4, #24]
 8010980:	8365      	strh	r5, [r4, #26]
 8010982:	83a5      	strh	r5, [r4, #28]
 8010984:	83e5      	strh	r5, [r4, #30]
 8010986:	8425      	strh	r5, [r4, #32]
 8010988:	f884 5022 	strb.w	r5, [r4, #34]	; 0x22
 801098c:	b32e      	cbz	r6, 80109da <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801098e:	6803      	ldr	r3, [r0, #0]
 8010990:	695b      	ldr	r3, [r3, #20]
 8010992:	4798      	blx	r3
 8010994:	4606      	mov	r6, r0
 8010996:	b300      	cbz	r0, 80109da <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8010998:	68e0      	ldr	r0, [r4, #12]
 801099a:	6803      	ldr	r3, [r0, #0]
 801099c:	4631      	mov	r1, r6
 801099e:	68db      	ldr	r3, [r3, #12]
 80109a0:	4798      	blx	r3
 80109a2:	4605      	mov	r5, r0
 80109a4:	b1c8      	cbz	r0, 80109da <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80109a6:	7b43      	ldrb	r3, [r0, #13]
 80109a8:	7a82      	ldrb	r2, [r0, #10]
 80109aa:	005b      	lsls	r3, r3, #1
 80109ac:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80109b0:	4313      	orrs	r3, r2
 80109b2:	8423      	strh	r3, [r4, #32]
 80109b4:	7a63      	ldrb	r3, [r4, #9]
 80109b6:	2b06      	cmp	r3, #6
 80109b8:	d10f      	bne.n	80109da <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80109ba:	68e0      	ldr	r0, [r4, #12]
 80109bc:	6803      	ldr	r3, [r0, #0]
 80109be:	462a      	mov	r2, r5
 80109c0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80109c2:	4631      	mov	r1, r6
 80109c4:	4798      	blx	r3
 80109c6:	7b6b      	ldrb	r3, [r5, #13]
 80109c8:	005b      	lsls	r3, r3, #1
 80109ca:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80109ce:	7aab      	ldrb	r3, [r5, #10]
 80109d0:	4313      	orrs	r3, r2
 80109d2:	4418      	add	r0, r3
 80109d4:	8c23      	ldrh	r3, [r4, #32]
 80109d6:	4418      	add	r0, r3
 80109d8:	8420      	strh	r0, [r4, #32]
 80109da:	4620      	mov	r0, r4
 80109dc:	bd70      	pop	{r4, r5, r6, pc}

080109de <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 80109de:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80109e2:	2400      	movs	r4, #0
 80109e4:	b085      	sub	sp, #20
 80109e6:	4681      	mov	r9, r0
 80109e8:	4688      	mov	r8, r1
 80109ea:	4692      	mov	sl, r2
 80109ec:	469b      	mov	fp, r3
 80109ee:	4627      	mov	r7, r4
 80109f0:	4625      	mov	r5, r4
 80109f2:	4626      	mov	r6, r4
 80109f4:	4554      	cmp	r4, sl
 80109f6:	da2a      	bge.n	8010a4e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 80109f8:	2300      	movs	r3, #0
 80109fa:	9303      	str	r3, [sp, #12]
 80109fc:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010a00:	429d      	cmp	r5, r3
 8010a02:	d004      	beq.n	8010a0e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8010a04:	f242 030b 	movw	r3, #8203	; 0x200b
 8010a08:	429d      	cmp	r5, r3
 8010a0a:	bf18      	it	ne
 8010a0c:	462f      	movne	r7, r5
 8010a0e:	ab03      	add	r3, sp, #12
 8010a10:	4642      	mov	r2, r8
 8010a12:	4659      	mov	r1, fp
 8010a14:	4648      	mov	r0, r9
 8010a16:	f003 f81f 	bl	8013a58 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010a1a:	4605      	mov	r5, r0
 8010a1c:	b1b8      	cbz	r0, 8010a4e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010a1e:	280a      	cmp	r0, #10
 8010a20:	d015      	beq.n	8010a4e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8010a22:	9a03      	ldr	r2, [sp, #12]
 8010a24:	b18a      	cbz	r2, 8010a4a <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8010a26:	7b50      	ldrb	r0, [r2, #13]
 8010a28:	7a93      	ldrb	r3, [r2, #10]
 8010a2a:	8895      	ldrh	r5, [r2, #4]
 8010a2c:	0040      	lsls	r0, r0, #1
 8010a2e:	f400 7080 	and.w	r0, r0, #256	; 0x100
 8010a32:	4303      	orrs	r3, r0
 8010a34:	9301      	str	r3, [sp, #4]
 8010a36:	f8d8 3000 	ldr.w	r3, [r8]
 8010a3a:	4639      	mov	r1, r7
 8010a3c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010a3e:	4640      	mov	r0, r8
 8010a40:	4798      	blx	r3
 8010a42:	9b01      	ldr	r3, [sp, #4]
 8010a44:	4418      	add	r0, r3
 8010a46:	4406      	add	r6, r0
 8010a48:	b2b6      	uxth	r6, r6
 8010a4a:	3401      	adds	r4, #1
 8010a4c:	e7d2      	b.n	80109f4 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 8010a4e:	4630      	mov	r0, r6
 8010a50:	b005      	add	sp, #20
 8010a52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08010a56 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 8010a56:	2a02      	cmp	r2, #2
 8010a58:	b530      	push	{r4, r5, lr}
 8010a5a:	d011      	beq.n	8010a80 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 8010a5c:	2a03      	cmp	r2, #3
 8010a5e:	d01c      	beq.n	8010a9a <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 8010a60:	2a01      	cmp	r2, #1
 8010a62:	d10c      	bne.n	8010a7e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010a64:	888b      	ldrh	r3, [r1, #4]
 8010a66:	8801      	ldrh	r1, [r0, #0]
 8010a68:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 8010a6c:	8844      	ldrh	r4, [r0, #2]
 8010a6e:	8004      	strh	r4, [r0, #0]
 8010a70:	1a5b      	subs	r3, r3, r1
 8010a72:	1a9b      	subs	r3, r3, r2
 8010a74:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8010a78:	8043      	strh	r3, [r0, #2]
 8010a7a:	8081      	strh	r1, [r0, #4]
 8010a7c:	80c2      	strh	r2, [r0, #6]
 8010a7e:	bd30      	pop	{r4, r5, pc}
 8010a80:	88cb      	ldrh	r3, [r1, #6]
 8010a82:	8842      	ldrh	r2, [r0, #2]
 8010a84:	1a9b      	subs	r3, r3, r2
 8010a86:	88c2      	ldrh	r2, [r0, #6]
 8010a88:	1a9b      	subs	r3, r3, r2
 8010a8a:	888a      	ldrh	r2, [r1, #4]
 8010a8c:	8801      	ldrh	r1, [r0, #0]
 8010a8e:	8043      	strh	r3, [r0, #2]
 8010a90:	1a52      	subs	r2, r2, r1
 8010a92:	8881      	ldrh	r1, [r0, #4]
 8010a94:	1a52      	subs	r2, r2, r1
 8010a96:	8002      	strh	r2, [r0, #0]
 8010a98:	e7f1      	b.n	8010a7e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 8010a9a:	88cb      	ldrh	r3, [r1, #6]
 8010a9c:	8841      	ldrh	r1, [r0, #2]
 8010a9e:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8010aa2:	f9b0 5000 	ldrsh.w	r5, [r0]
 8010aa6:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 8010aaa:	8045      	strh	r5, [r0, #2]
 8010aac:	1a5b      	subs	r3, r3, r1
 8010aae:	1a9b      	subs	r3, r3, r2
 8010ab0:	8003      	strh	r3, [r0, #0]
 8010ab2:	8082      	strh	r2, [r0, #4]
 8010ab4:	80c4      	strh	r4, [r0, #6]
 8010ab6:	e7e2      	b.n	8010a7e <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08010ab8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8010ab8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010abc:	b09f      	sub	sp, #124	; 0x7c
 8010abe:	9116      	str	r1, [sp, #88]	; 0x58
 8010ac0:	9317      	str	r3, [sp, #92]	; 0x5c
 8010ac2:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8010ac4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010ac6:	8809      	ldrh	r1, [r1, #0]
 8010ac8:	889b      	ldrh	r3, [r3, #4]
 8010aca:	f8dd 80a8 	ldr.w	r8, [sp, #168]	; 0xa8
 8010ace:	9212      	str	r2, [sp, #72]	; 0x48
 8010ad0:	440b      	add	r3, r1
 8010ad2:	b21b      	sxth	r3, r3
 8010ad4:	9310      	str	r3, [sp, #64]	; 0x40
 8010ad6:	f8d8 3000 	ldr.w	r3, [r8]
 8010ada:	f89d 20b8 	ldrb.w	r2, [sp, #184]	; 0xb8
 8010ade:	7b19      	ldrb	r1, [r3, #12]
 8010ae0:	7adb      	ldrb	r3, [r3, #11]
 8010ae2:	9011      	str	r0, [sp, #68]	; 0x44
 8010ae4:	f89d b0ac 	ldrb.w	fp, [sp, #172]	; 0xac
 8010ae8:	9114      	str	r1, [sp, #80]	; 0x50
 8010aea:	9315      	str	r3, [sp, #84]	; 0x54
 8010aec:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	; 0xa0
 8010af0:	2a00      	cmp	r2, #0
 8010af2:	d06a      	beq.n	8010bca <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 8010af4:	f898 3010 	ldrb.w	r3, [r8, #16]
 8010af8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8010afa:	2b06      	cmp	r3, #6
 8010afc:	bf14      	ite	ne
 8010afe:	2301      	movne	r3, #1
 8010b00:	2302      	moveq	r3, #2
 8010b02:	4413      	add	r3, r2
 8010b04:	f04f 0900 	mov.w	r9, #0
 8010b08:	930f      	str	r3, [sp, #60]	; 0x3c
 8010b0a:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 8010b0e:	464c      	mov	r4, r9
 8010b10:	f8cd 9034 	str.w	r9, [sp, #52]	; 0x34
 8010b14:	e9dd 320e 	ldrd	r3, r2, [sp, #56]	; 0x38
 8010b18:	4293      	cmp	r3, r2
 8010b1a:	f280 808f 	bge.w	8010c3c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8010b1e:	2300      	movs	r3, #0
 8010b20:	e9cd 331c 	strd	r3, r3, [sp, #112]	; 0x70
 8010b24:	f88d 306f 	strb.w	r3, [sp, #111]	; 0x6f
 8010b28:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010b2c:	429c      	cmp	r4, r3
 8010b2e:	d006      	beq.n	8010b3e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x86>
 8010b30:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010b32:	f242 020b 	movw	r2, #8203	; 0x200b
 8010b36:	4294      	cmp	r4, r2
 8010b38:	bf18      	it	ne
 8010b3a:	4623      	movne	r3, r4
 8010b3c:	930d      	str	r3, [sp, #52]	; 0x34
 8010b3e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010b40:	992d      	ldr	r1, [sp, #180]	; 0xb4
 8010b42:	f8d8 2000 	ldr.w	r2, [r8]
 8010b46:	428b      	cmp	r3, r1
 8010b48:	db41      	blt.n	8010bce <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 8010b4a:	6813      	ldr	r3, [r2, #0]
 8010b4c:	4610      	mov	r0, r2
 8010b4e:	695b      	ldr	r3, [r3, #20]
 8010b50:	4798      	blx	r3
 8010b52:	4604      	mov	r4, r0
 8010b54:	f8d8 0000 	ldr.w	r0, [r8]
 8010b58:	6803      	ldr	r3, [r0, #0]
 8010b5a:	aa1d      	add	r2, sp, #116	; 0x74
 8010b5c:	689d      	ldr	r5, [r3, #8]
 8010b5e:	4621      	mov	r1, r4
 8010b60:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010b64:	47a8      	blx	r5
 8010b66:	901c      	str	r0, [sp, #112]	; 0x70
 8010b68:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010b6c:	429c      	cmp	r4, r3
 8010b6e:	f000 80eb 	beq.w	8010d48 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8010b72:	f242 030b 	movw	r3, #8203	; 0x200b
 8010b76:	429c      	cmp	r4, r3
 8010b78:	f000 80e6 	beq.w	8010d48 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8010b7c:	2c00      	cmp	r4, #0
 8010b7e:	f000 80f8 	beq.w	8010d72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8010b82:	2c0a      	cmp	r4, #10
 8010b84:	d060      	beq.n	8010c48 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010b86:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8010b88:	b36a      	cbz	r2, 8010be6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 8010b8a:	8894      	ldrh	r4, [r2, #4]
 8010b8c:	f1bb 0f00 	cmp.w	fp, #0
 8010b90:	d03b      	beq.n	8010c0a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8010b92:	f892 900d 	ldrb.w	r9, [r2, #13]
 8010b96:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8010b9a:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8010b9e:	f892 900a 	ldrb.w	r9, [r2, #10]
 8010ba2:	f1bb 0f01 	cmp.w	fp, #1
 8010ba6:	ea49 0903 	orr.w	r9, r9, r3
 8010baa:	d134      	bne.n	8010c16 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15e>
 8010bac:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010bae:	eba6 0609 	sub.w	r6, r6, r9
 8010bb2:	2b00      	cmp	r3, #0
 8010bb4:	d14f      	bne.n	8010c56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8010bb6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8010bb8:	eb09 0306 	add.w	r3, r9, r6
 8010bbc:	4413      	add	r3, r2
 8010bbe:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8010bc0:	f9b2 2000 	ldrsh.w	r2, [r2]
 8010bc4:	4293      	cmp	r3, r2
 8010bc6:	da51      	bge.n	8010c6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8010bc8:	e038      	b.n	8010c3c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x184>
 8010bca:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8010bcc:	e79a      	b.n	8010b04 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x4c>
 8010bce:	f10d 036f 	add.w	r3, sp, #111	; 0x6f
 8010bd2:	9301      	str	r3, [sp, #4]
 8010bd4:	ab1d      	add	r3, sp, #116	; 0x74
 8010bd6:	9300      	str	r3, [sp, #0]
 8010bd8:	4659      	mov	r1, fp
 8010bda:	ab1c      	add	r3, sp, #112	; 0x70
 8010bdc:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8010bde:	f002 ff84 	bl	8013aea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8010be2:	4604      	mov	r4, r0
 8010be4:	e7c0      	b.n	8010b68 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8010be6:	f8d8 0000 	ldr.w	r0, [r8]
 8010bea:	6803      	ldr	r3, [r0, #0]
 8010bec:	691b      	ldr	r3, [r3, #16]
 8010bee:	4798      	blx	r3
 8010bf0:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010bf4:	4298      	cmp	r0, r3
 8010bf6:	f000 80a7 	beq.w	8010d48 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8010bfa:	f242 030b 	movw	r3, #8203	; 0x200b
 8010bfe:	4298      	cmp	r0, r3
 8010c00:	f000 80a2 	beq.w	8010d48 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8010c04:	f1bb 0f00 	cmp.w	fp, #0
 8010c08:	d100      	bne.n	8010c0c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x154>
 8010c0a:	444e      	add	r6, r9
 8010c0c:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8010c0e:	2a00      	cmp	r2, #0
 8010c10:	d1bf      	bne.n	8010b92 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8010c12:	4691      	mov	r9, r2
 8010c14:	e098      	b.n	8010d48 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8010c16:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010c18:	2b00      	cmp	r3, #0
 8010c1a:	f000 80ac 	beq.w	8010d76 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2be>
 8010c1e:	f1bb 0f00 	cmp.w	fp, #0
 8010c22:	d118      	bne.n	8010c56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19e>
 8010c24:	f8d8 0000 	ldr.w	r0, [r8]
 8010c28:	990d      	ldr	r1, [sp, #52]	; 0x34
 8010c2a:	6803      	ldr	r3, [r0, #0]
 8010c2c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010c2e:	4798      	blx	r3
 8010c30:	4406      	add	r6, r0
 8010c32:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8010c34:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8010c36:	1af3      	subs	r3, r6, r3
 8010c38:	4293      	cmp	r3, r2
 8010c3a:	dd17      	ble.n	8010c6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>
 8010c3c:	2c00      	cmp	r4, #0
 8010c3e:	f000 8098 	beq.w	8010d72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8010c42:	2c0a      	cmp	r4, #10
 8010c44:	f040 8086 	bne.w	8010d54 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29c>
 8010c48:	240a      	movs	r4, #10
 8010c4a:	fab4 f084 	clz	r0, r4
 8010c4e:	0940      	lsrs	r0, r0, #5
 8010c50:	b01f      	add	sp, #124	; 0x7c
 8010c52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010c56:	f8d8 0000 	ldr.w	r0, [r8]
 8010c5a:	990d      	ldr	r1, [sp, #52]	; 0x34
 8010c5c:	6803      	ldr	r3, [r0, #0]
 8010c5e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010c60:	4798      	blx	r3
 8010c62:	f1bb 0f01 	cmp.w	fp, #1
 8010c66:	eba6 0600 	sub.w	r6, r6, r0
 8010c6a:	d0a4      	beq.n	8010bb6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 8010c6c:	981c      	ldr	r0, [sp, #112]	; 0x70
 8010c6e:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010c70:	f990 1009 	ldrsb.w	r1, [r0, #9]
 8010c74:	f9b3 7000 	ldrsh.w	r7, [r3]
 8010c78:	7b43      	ldrb	r3, [r0, #13]
 8010c7a:	015b      	lsls	r3, r3, #5
 8010c7c:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8010c80:	7983      	ldrb	r3, [r0, #6]
 8010c82:	4431      	add	r1, r6
 8010c84:	4313      	orrs	r3, r2
 8010c86:	440b      	add	r3, r1
 8010c88:	42bb      	cmp	r3, r7
 8010c8a:	db5d      	blt.n	8010d48 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8010c8c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8010c8e:	4299      	cmp	r1, r3
 8010c90:	da5a      	bge.n	8010d48 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8010c92:	f8d8 0000 	ldr.w	r0, [r8]
 8010c96:	6803      	ldr	r3, [r0, #0]
 8010c98:	42b7      	cmp	r7, r6
 8010c9a:	bfc8      	it	gt
 8010c9c:	1bbf      	subgt	r7, r7, r6
 8010c9e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010ca0:	bfcc      	ite	gt
 8010ca2:	b2bf      	uxthgt	r7, r7
 8010ca4:	2700      	movle	r7, #0
 8010ca6:	4798      	blx	r3
 8010ca8:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8010caa:	7b5a      	ldrb	r2, [r3, #13]
 8010cac:	00d1      	lsls	r1, r2, #3
 8010cae:	f401 7580 	and.w	r5, r1, #256	; 0x100
 8010cb2:	7a19      	ldrb	r1, [r3, #8]
 8010cb4:	4329      	orrs	r1, r5
 8010cb6:	0655      	lsls	r5, r2, #25
 8010cb8:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8010cba:	bf44      	itt	mi
 8010cbc:	f5a1 7100 	submi.w	r1, r1, #512	; 0x200
 8010cc0:	b209      	sxthmi	r1, r1
 8010cc2:	1945      	adds	r5, r0, r5
 8010cc4:	1a6d      	subs	r5, r5, r1
 8010cc6:	9929      	ldr	r1, [sp, #164]	; 0xa4
 8010cc8:	b2ad      	uxth	r5, r5
 8010cca:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 8010cce:	fa0f fa85 	sxth.w	sl, r5
 8010cd2:	4551      	cmp	r1, sl
 8010cd4:	dd3c      	ble.n	8010d50 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x298>
 8010cd6:	0112      	lsls	r2, r2, #4
 8010cd8:	79d8      	ldrb	r0, [r3, #7]
 8010cda:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8010cde:	4302      	orrs	r2, r0
 8010ce0:	4492      	add	sl, r2
 8010ce2:	4551      	cmp	r1, sl
 8010ce4:	dc30      	bgt.n	8010d48 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x290>
 8010ce6:	1b4d      	subs	r5, r1, r5
 8010ce8:	b22d      	sxth	r5, r5
 8010cea:	468a      	mov	sl, r1
 8010cec:	9319      	str	r3, [sp, #100]	; 0x64
 8010cee:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8010cf0:	f8d8 0000 	ldr.w	r0, [r8]
 8010cf4:	681a      	ldr	r2, [r3, #0]
 8010cf6:	6801      	ldr	r1, [r0, #0]
 8010cf8:	6cd3      	ldr	r3, [r2, #76]	; 0x4c
 8010cfa:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 8010cfc:	9313      	str	r3, [sp, #76]	; 0x4c
 8010cfe:	9218      	str	r2, [sp, #96]	; 0x60
 8010d00:	6c09      	ldr	r1, [r1, #64]	; 0x40
 8010d02:	4788      	blx	r1
 8010d04:	f898 1006 	ldrb.w	r1, [r8, #6]
 8010d08:	910b      	str	r1, [sp, #44]	; 0x2c
 8010d0a:	f898 100e 	ldrb.w	r1, [r8, #14]
 8010d0e:	910a      	str	r1, [sp, #40]	; 0x28
 8010d10:	f89d 106f 	ldrb.w	r1, [sp, #111]	; 0x6f
 8010d14:	9109      	str	r1, [sp, #36]	; 0x24
 8010d16:	f8d8 1008 	ldr.w	r1, [r8, #8]
 8010d1a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8010d1c:	9305      	str	r3, [sp, #20]
 8010d1e:	b2ad      	uxth	r5, r5
 8010d20:	e9cd 0107 	strd	r0, r1, [sp, #28]
 8010d24:	e9cd 7502 	strd	r7, r5, [sp, #8]
 8010d28:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8010d2a:	9304      	str	r3, [sp, #16]
 8010d2c:	4437      	add	r7, r6
 8010d2e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8010d30:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8010d32:	9206      	str	r2, [sp, #24]
 8010d34:	b23f      	sxth	r7, r7
 8010d36:	f8cd a004 	str.w	sl, [sp, #4]
 8010d3a:	9700      	str	r7, [sp, #0]
 8010d3c:	681a      	ldr	r2, [r3, #0]
 8010d3e:	9916      	ldr	r1, [sp, #88]	; 0x58
 8010d40:	685b      	ldr	r3, [r3, #4]
 8010d42:	9811      	ldr	r0, [sp, #68]	; 0x44
 8010d44:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8010d46:	47a8      	blx	r5
 8010d48:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010d4a:	3301      	adds	r3, #1
 8010d4c:	930e      	str	r3, [sp, #56]	; 0x38
 8010d4e:	e6e1      	b.n	8010b14 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x5c>
 8010d50:	2500      	movs	r5, #0
 8010d52:	e7cb      	b.n	8010cec <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x234>
 8010d54:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8010d56:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8010d58:	3501      	adds	r5, #1
 8010d5a:	429d      	cmp	r5, r3
 8010d5c:	f6bf af75 	bge.w	8010c4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8010d60:	4659      	mov	r1, fp
 8010d62:	982c      	ldr	r0, [sp, #176]	; 0xb0
 8010d64:	f7f3 ffa6 	bl	8004cb4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8010d68:	4604      	mov	r4, r0
 8010d6a:	b110      	cbz	r0, 8010d72 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2ba>
 8010d6c:	280a      	cmp	r0, #10
 8010d6e:	d1f2      	bne.n	8010d56 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29e>
 8010d70:	e76a      	b.n	8010c48 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x190>
 8010d72:	2400      	movs	r4, #0
 8010d74:	e769      	b.n	8010c4a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x192>
 8010d76:	f1bb 0f00 	cmp.w	fp, #0
 8010d7a:	f43f af5a 	beq.w	8010c32 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x17a>
 8010d7e:	e775      	b.n	8010c6c <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1b4>

08010d80 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8010d80:	b530      	push	{r4, r5, lr}
 8010d82:	8ac4      	ldrh	r4, [r0, #22]
 8010d84:	8b45      	ldrh	r5, [r0, #26]
 8010d86:	8343      	strh	r3, [r0, #26]
 8010d88:	442c      	add	r4, r5
 8010d8a:	1ae4      	subs	r4, r4, r3
 8010d8c:	82c4      	strh	r4, [r0, #22]
 8010d8e:	8b83      	ldrh	r3, [r0, #28]
 8010d90:	8b04      	ldrh	r4, [r0, #24]
 8010d92:	4422      	add	r2, r4
 8010d94:	440c      	add	r4, r1
 8010d96:	1a59      	subs	r1, r3, r1
 8010d98:	83c2      	strh	r2, [r0, #30]
 8010d9a:	8304      	strh	r4, [r0, #24]
 8010d9c:	8381      	strh	r1, [r0, #28]
 8010d9e:	bd30      	pop	{r4, r5, pc}

08010da0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8010da0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010da4:	4604      	mov	r4, r0
 8010da6:	8a47      	ldrh	r7, [r0, #18]
 8010da8:	68c0      	ldr	r0, [r0, #12]
 8010daa:	6803      	ldr	r3, [r0, #0]
 8010dac:	b085      	sub	sp, #20
 8010dae:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010db0:	4798      	blx	r3
 8010db2:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 8010db6:	7a63      	ldrb	r3, [r4, #9]
 8010db8:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8010dbc:	42b7      	cmp	r7, r6
 8010dbe:	f103 33ff 	add.w	r3, r3, #4294967295
 8010dc2:	bfac      	ite	ge
 8010dc4:	f04f 0900 	movge.w	r9, #0
 8010dc8:	f04f 0901 	movlt.w	r9, #1
 8010dcc:	2b05      	cmp	r3, #5
 8010dce:	d804      	bhi.n	8010dda <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8010dd0:	e8df f003 	tbb	[pc, r3]
 8010dd4:	470e0854 	.word	0x470e0854
 8010dd8:	4c4c      	.short	0x4c4c
 8010dda:	2500      	movs	r5, #0
 8010ddc:	46a9      	mov	r9, r5
 8010dde:	462e      	mov	r6, r5
 8010de0:	462f      	mov	r7, r5
 8010de2:	e00d      	b.n	8010e00 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8010de4:	42b7      	cmp	r7, r6
 8010de6:	bfb4      	ite	lt
 8010de8:	2600      	movlt	r6, #0
 8010dea:	2601      	movge	r6, #1
 8010dec:	2500      	movs	r5, #0
 8010dee:	e7f7      	b.n	8010de0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8010df0:	42b7      	cmp	r7, r6
 8010df2:	464d      	mov	r5, r9
 8010df4:	f04f 0900 	mov.w	r9, #0
 8010df8:	bfb4      	ite	lt
 8010dfa:	2600      	movlt	r6, #0
 8010dfc:	2601      	movge	r6, #1
 8010dfe:	464f      	mov	r7, r9
 8010e00:	f04f 0800 	mov.w	r8, #0
 8010e04:	f8a4 8016 	strh.w	r8, [r4, #22]
 8010e08:	f8a4 8018 	strh.w	r8, [r4, #24]
 8010e0c:	f8cd 8004 	str.w	r8, [sp, #4]
 8010e10:	2300      	movs	r3, #0
 8010e12:	9303      	str	r3, [sp, #12]
 8010e14:	8823      	ldrh	r3, [r4, #0]
 8010e16:	2b20      	cmp	r3, #32
 8010e18:	d034      	beq.n	8010e84 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 8010e1a:	f242 010b 	movw	r1, #8203	; 0x200b
 8010e1e:	1a5a      	subs	r2, r3, r1
 8010e20:	f1d2 0a00 	rsbs	sl, r2, #0
 8010e24:	eb4a 0a02 	adc.w	sl, sl, r2
 8010e28:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8010e2c:	4293      	cmp	r3, r2
 8010e2e:	d009      	beq.n	8010e44 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8010e30:	428b      	cmp	r3, r1
 8010e32:	9a01      	ldr	r2, [sp, #4]
 8010e34:	bf18      	it	ne
 8010e36:	461a      	movne	r2, r3
 8010e38:	9201      	str	r2, [sp, #4]
 8010e3a:	bf0c      	ite	eq
 8010e3c:	f04f 0a01 	moveq.w	sl, #1
 8010e40:	f04f 0a00 	movne.w	sl, #0
 8010e44:	ab03      	add	r3, sp, #12
 8010e46:	68e2      	ldr	r2, [r4, #12]
 8010e48:	7a21      	ldrb	r1, [r4, #8]
 8010e4a:	6860      	ldr	r0, [r4, #4]
 8010e4c:	f002 fe04 	bl	8013a58 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8010e50:	8020      	strh	r0, [r4, #0]
 8010e52:	b9d8      	cbnz	r0, 8010e8c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 8010e54:	8ba2      	ldrh	r2, [r4, #28]
 8010e56:	2300      	movs	r3, #0
 8010e58:	4611      	mov	r1, r2
 8010e5a:	4620      	mov	r0, r4
 8010e5c:	f7ff ff90 	bl	8010d80 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8010e60:	e06e      	b.n	8010f40 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8010e62:	2500      	movs	r5, #0
 8010e64:	46a9      	mov	r9, r5
 8010e66:	462e      	mov	r6, r5
 8010e68:	2701      	movs	r7, #1
 8010e6a:	e7c9      	b.n	8010e00 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8010e6c:	42b7      	cmp	r7, r6
 8010e6e:	f04f 0500 	mov.w	r5, #0
 8010e72:	bfb4      	ite	lt
 8010e74:	2700      	movlt	r7, #0
 8010e76:	2701      	movge	r7, #1
 8010e78:	462e      	mov	r6, r5
 8010e7a:	e7c1      	b.n	8010e00 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8010e7c:	2500      	movs	r5, #0
 8010e7e:	46a9      	mov	r9, r5
 8010e80:	2601      	movs	r6, #1
 8010e82:	e7ad      	b.n	8010de0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8010e84:	9301      	str	r3, [sp, #4]
 8010e86:	f04f 0a01 	mov.w	sl, #1
 8010e8a:	e7db      	b.n	8010e44 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8010e8c:	8b63      	ldrh	r3, [r4, #26]
 8010e8e:	280a      	cmp	r0, #10
 8010e90:	f103 0301 	add.w	r3, r3, #1
 8010e94:	8363      	strh	r3, [r4, #26]
 8010e96:	d0dd      	beq.n	8010e54 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8010e98:	9a03      	ldr	r2, [sp, #12]
 8010e9a:	bb62      	cbnz	r2, 8010ef6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8010e9c:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8010ea0:	4298      	cmp	r0, r3
 8010ea2:	d003      	beq.n	8010eac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8010ea4:	f242 030b 	movw	r3, #8203	; 0x200b
 8010ea8:	4298      	cmp	r0, r3
 8010eaa:	d1b1      	bne.n	8010e10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010eac:	8823      	ldrh	r3, [r4, #0]
 8010eae:	8ba1      	ldrh	r1, [r4, #28]
 8010eb0:	2b20      	cmp	r3, #32
 8010eb2:	d003      	beq.n	8010ebc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 8010eb4:	f242 000b 	movw	r0, #8203	; 0x200b
 8010eb8:	4283      	cmp	r3, r0
 8010eba:	d131      	bne.n	8010f20 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8010ebc:	f1ba 0f00 	cmp.w	sl, #0
 8010ec0:	bf0a      	itet	eq
 8010ec2:	4688      	moveq	r8, r1
 8010ec4:	4650      	movne	r0, sl
 8010ec6:	2001      	moveq	r0, #1
 8010ec8:	440a      	add	r2, r1
 8010eca:	8b23      	ldrh	r3, [r4, #24]
 8010ecc:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8010ed0:	b292      	uxth	r2, r2
 8010ed2:	83a2      	strh	r2, [r4, #28]
 8010ed4:	4413      	add	r3, r2
 8010ed6:	f1b9 0f00 	cmp.w	r9, #0
 8010eda:	d102      	bne.n	8010ee2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8010edc:	2d00      	cmp	r5, #0
 8010ede:	d042      	beq.n	8010f66 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8010ee0:	b300      	cbz	r0, 8010f24 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 8010ee2:	8c21      	ldrh	r1, [r4, #32]
 8010ee4:	4419      	add	r1, r3
 8010ee6:	458c      	cmp	ip, r1
 8010ee8:	da37      	bge.n	8010f5a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8010eea:	8ae1      	ldrh	r1, [r4, #22]
 8010eec:	2900      	cmp	r1, #0
 8010eee:	d034      	beq.n	8010f5a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8010ef0:	4563      	cmp	r3, ip
 8010ef2:	dd8d      	ble.n	8010e10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010ef4:	e01d      	b.n	8010f32 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 8010ef6:	8893      	ldrh	r3, [r2, #4]
 8010ef8:	8023      	strh	r3, [r4, #0]
 8010efa:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8010efe:	9901      	ldr	r1, [sp, #4]
 8010f00:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 8010f04:	f40b 7080 	and.w	r0, fp, #256	; 0x100
 8010f08:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8010f0c:	ea4b 0b00 	orr.w	fp, fp, r0
 8010f10:	68e0      	ldr	r0, [r4, #12]
 8010f12:	6803      	ldr	r3, [r0, #0]
 8010f14:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8010f16:	4798      	blx	r3
 8010f18:	eb0b 0200 	add.w	r2, fp, r0
 8010f1c:	b292      	uxth	r2, r2
 8010f1e:	e7c5      	b.n	8010eac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 8010f20:	2000      	movs	r0, #0
 8010f22:	e7d1      	b.n	8010ec8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 8010f24:	4563      	cmp	r3, ip
 8010f26:	f77f af73 	ble.w	8010e10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010f2a:	8ae3      	ldrh	r3, [r4, #22]
 8010f2c:	2b00      	cmp	r3, #0
 8010f2e:	f43f af6f 	beq.w	8010e10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010f32:	2301      	movs	r3, #1
 8010f34:	f884 3022 	strb.w	r3, [r4, #34]	; 0x22
 8010f38:	8c22      	ldrh	r2, [r4, #32]
 8010f3a:	8be3      	ldrh	r3, [r4, #30]
 8010f3c:	4413      	add	r3, r2
 8010f3e:	83e3      	strh	r3, [r4, #30]
 8010f40:	68e0      	ldr	r0, [r4, #12]
 8010f42:	6803      	ldr	r3, [r0, #0]
 8010f44:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010f46:	4798      	blx	r3
 8010f48:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 8010f4c:	4418      	add	r0, r3
 8010f4e:	8a63      	ldrh	r3, [r4, #18]
 8010f50:	1a18      	subs	r0, r3, r0
 8010f52:	8260      	strh	r0, [r4, #18]
 8010f54:	b005      	add	sp, #20
 8010f56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f5a:	2300      	movs	r3, #0
 8010f5c:	4611      	mov	r1, r2
 8010f5e:	4620      	mov	r0, r4
 8010f60:	f7ff ff0e 	bl	8010d80 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 8010f64:	e754      	b.n	8010e10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010f66:	4563      	cmp	r3, ip
 8010f68:	dd14      	ble.n	8010f94 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 8010f6a:	b117      	cbz	r7, 8010f72 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 8010f6c:	2301      	movs	r3, #1
 8010f6e:	460a      	mov	r2, r1
 8010f70:	e772      	b.n	8010e58 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 8010f72:	2e00      	cmp	r6, #0
 8010f74:	f43f af4c 	beq.w	8010e10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010f78:	2800      	cmp	r0, #0
 8010f7a:	f47f af49 	bne.w	8010e10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010f7e:	f1ba 0f00 	cmp.w	sl, #0
 8010f82:	d002      	beq.n	8010f8a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 8010f84:	2301      	movs	r3, #1
 8010f86:	4642      	mov	r2, r8
 8010f88:	e767      	b.n	8010e5a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8010f8a:	8ae3      	ldrh	r3, [r4, #22]
 8010f8c:	2b00      	cmp	r3, #0
 8010f8e:	f43f af3f 	beq.w	8010e10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010f92:	e7d5      	b.n	8010f40 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 8010f94:	2800      	cmp	r0, #0
 8010f96:	f47f af3b 	bne.w	8010e10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010f9a:	f1ba 0f00 	cmp.w	sl, #0
 8010f9e:	f43f af37 	beq.w	8010e10 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8010fa2:	2301      	movs	r3, #1
 8010fa4:	4642      	mov	r2, r8
 8010fa6:	e7da      	b.n	8010f5e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08010fa8 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8010fa8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8010faa:	4605      	mov	r5, r0
 8010fac:	b08f      	sub	sp, #60	; 0x3c
 8010fae:	4617      	mov	r7, r2
 8010fb0:	461c      	mov	r4, r3
 8010fb2:	460e      	mov	r6, r1
 8010fb4:	b1d1      	cbz	r1, 8010fec <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 8010fb6:	681b      	ldr	r3, [r3, #0]
 8010fb8:	4620      	mov	r0, r4
 8010fba:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8010fbc:	4798      	blx	r3
 8010fbe:	4240      	negs	r0, r0
 8010fc0:	b200      	sxth	r0, r0
 8010fc2:	e9cd 4001 	strd	r4, r0, [sp, #4]
 8010fc6:	9603      	str	r6, [sp, #12]
 8010fc8:	9700      	str	r7, [sp, #0]
 8010fca:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8010fce:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 8010fd2:	4629      	mov	r1, r5
 8010fd4:	a805      	add	r0, sp, #20
 8010fd6:	f7ff fcbf 	bl	8010958 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8010fda:	2401      	movs	r4, #1
 8010fdc:	a805      	add	r0, sp, #20
 8010fde:	f7ff fedf 	bl	8010da0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8010fe2:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 8010fe6:	b163      	cbz	r3, 8011002 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8010fe8:	3401      	adds	r4, #1
 8010fea:	e7f7      	b.n	8010fdc <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8010fec:	f002 fe02 	bl	8013bf4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010ff0:	2401      	movs	r4, #1
 8010ff2:	280a      	cmp	r0, #10
 8010ff4:	4628      	mov	r0, r5
 8010ff6:	bf08      	it	eq
 8010ff8:	3401      	addeq	r4, #1
 8010ffa:	f002 fdfb 	bl	8013bf4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8010ffe:	2800      	cmp	r0, #0
 8011000:	d1f7      	bne.n	8010ff2 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 8011002:	b2a0      	uxth	r0, r4
 8011004:	b00f      	add	sp, #60	; 0x3c
 8011006:	bdf0      	pop	{r4, r5, r6, r7, pc}

08011008 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8011008:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801100c:	b0e3      	sub	sp, #396	; 0x18c
 801100e:	461c      	mov	r4, r3
 8011010:	9b6c      	ldr	r3, [sp, #432]	; 0x1b0
 8011012:	4683      	mov	fp, r0
 8011014:	4688      	mov	r8, r1
 8011016:	2b00      	cmp	r3, #0
 8011018:	f000 810f 	beq.w	801123a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 801101c:	6823      	ldr	r3, [r4, #0]
 801101e:	2b00      	cmp	r3, #0
 8011020:	f000 810b 	beq.w	801123a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 8011024:	7ba3      	ldrb	r3, [r4, #14]
 8011026:	2b00      	cmp	r3, #0
 8011028:	f000 8107 	beq.w	801123a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 801102c:	6810      	ldr	r0, [r2, #0]
 801102e:	6851      	ldr	r1, [r2, #4]
 8011030:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 8011034:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 8011038:	ad0a      	add	r5, sp, #40	; 0x28
 801103a:	462b      	mov	r3, r5
 801103c:	c303      	stmia	r3!, {r0, r1}
 801103e:	2100      	movs	r1, #0
 8011040:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 8011044:	910c      	str	r1, [sp, #48]	; 0x30
 8011046:	79a2      	ldrb	r2, [r4, #6]
 8011048:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801104c:	a90c      	add	r1, sp, #48	; 0x30
 801104e:	4628      	mov	r0, r5
 8011050:	f7ff fd01 	bl	8010a56 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 8011054:	a90c      	add	r1, sp, #48	; 0x30
 8011056:	4608      	mov	r0, r1
 8011058:	79a2      	ldrb	r2, [r4, #6]
 801105a:	f7ff fcfc 	bl	8010a56 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 801105e:	a817      	add	r0, sp, #92	; 0x5c
 8011060:	f002 f99c 	bl	801339c <_ZN8touchgfx12TextProviderC1Ev>
 8011064:	6820      	ldr	r0, [r4, #0]
 8011066:	6803      	ldr	r3, [r0, #0]
 8011068:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801106a:	4798      	blx	r3
 801106c:	4606      	mov	r6, r0
 801106e:	6820      	ldr	r0, [r4, #0]
 8011070:	6803      	ldr	r3, [r0, #0]
 8011072:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8011074:	4798      	blx	r3
 8011076:	4633      	mov	r3, r6
 8011078:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 801107a:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 801107c:	9000      	str	r0, [sp, #0]
 801107e:	a817      	add	r0, sp, #92	; 0x5c
 8011080:	f002 f9e7 	bl	8013452 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011084:	6820      	ldr	r0, [r4, #0]
 8011086:	f894 a004 	ldrb.w	sl, [r4, #4]
 801108a:	6803      	ldr	r3, [r0, #0]
 801108c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801108e:	4798      	blx	r3
 8011090:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8011094:	6823      	ldr	r3, [r4, #0]
 8011096:	4607      	mov	r7, r0
 8011098:	4406      	add	r6, r0
 801109a:	a830      	add	r0, sp, #192	; 0xc0
 801109c:	f893 9009 	ldrb.w	r9, [r3, #9]
 80110a0:	f002 f97c 	bl	801339c <_ZN8touchgfx12TextProviderC1Ev>
 80110a4:	7c23      	ldrb	r3, [r4, #16]
 80110a6:	b17b      	cbz	r3, 80110c8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 80110a8:	6820      	ldr	r0, [r4, #0]
 80110aa:	6803      	ldr	r3, [r0, #0]
 80110ac:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80110ae:	4798      	blx	r3
 80110b0:	9009      	str	r0, [sp, #36]	; 0x24
 80110b2:	6820      	ldr	r0, [r4, #0]
 80110b4:	6802      	ldr	r2, [r0, #0]
 80110b6:	6d12      	ldr	r2, [r2, #80]	; 0x50
 80110b8:	4790      	blx	r2
 80110ba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80110bc:	9000      	str	r0, [sp, #0]
 80110be:	9a6d      	ldr	r2, [sp, #436]	; 0x1b4
 80110c0:	996c      	ldr	r1, [sp, #432]	; 0x1b0
 80110c2:	a830      	add	r0, sp, #192	; 0xc0
 80110c4:	f002 f9c5 	bl	8013452 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80110c8:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 80110cc:	7be2      	ldrb	r2, [r4, #15]
 80110ce:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 80110d2:	1a8a      	subs	r2, r1, r2
 80110d4:	7c21      	ldrb	r1, [r4, #16]
 80110d6:	9103      	str	r1, [sp, #12]
 80110d8:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 80110dc:	9102      	str	r1, [sp, #8]
 80110de:	6821      	ldr	r1, [r4, #0]
 80110e0:	9101      	str	r1, [sp, #4]
 80110e2:	7961      	ldrb	r1, [r4, #5]
 80110e4:	9100      	str	r1, [sp, #0]
 80110e6:	b292      	uxth	r2, r2
 80110e8:	a930      	add	r1, sp, #192	; 0xc0
 80110ea:	a80e      	add	r0, sp, #56	; 0x38
 80110ec:	f7ff fc34 	bl	8010958 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 80110f0:	2e00      	cmp	r6, #0
 80110f2:	dc5b      	bgt.n	80111ac <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 80110f4:	af17      	add	r7, sp, #92	; 0x5c
 80110f6:	f04f 0900 	mov.w	r9, #0
 80110fa:	7c23      	ldrb	r3, [r4, #16]
 80110fc:	2b00      	cmp	r3, #0
 80110fe:	f000 80ae 	beq.w	801125e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8011102:	a80e      	add	r0, sp, #56	; 0x38
 8011104:	f7ff fe4c 	bl	8010da0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8011108:	f1ba 0f00 	cmp.w	sl, #0
 801110c:	f000 80a2 	beq.w	8011254 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24c>
 8011110:	7c23      	ldrb	r3, [r4, #16]
 8011112:	9309      	str	r3, [sp, #36]	; 0x24
 8011114:	2264      	movs	r2, #100	; 0x64
 8011116:	4639      	mov	r1, r7
 8011118:	a849      	add	r0, sp, #292	; 0x124
 801111a:	f00f fb75 	bl	8020808 <memcpy>
 801111e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011120:	2b00      	cmp	r3, #0
 8011122:	f000 80a4 	beq.w	801126e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x266>
 8011126:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 801112a:	7922      	ldrb	r2, [r4, #4]
 801112c:	2a01      	cmp	r2, #1
 801112e:	f040 8087 	bne.w	8011240 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8011132:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	; 0x34
 8011136:	1ac0      	subs	r0, r0, r3
 8011138:	2302      	movs	r3, #2
 801113a:	fb90 f0f3 	sdiv	r0, r0, r3
 801113e:	b200      	sxth	r0, r0
 8011140:	7c23      	ldrb	r3, [r4, #16]
 8011142:	2b00      	cmp	r3, #0
 8011144:	f000 8088 	beq.w	8011258 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x250>
 8011148:	f8bd 204e 	ldrh.w	r2, [sp, #78]	; 0x4e
 801114c:	f89d 105a 	ldrb.w	r1, [sp, #90]	; 0x5a
 8011150:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8011154:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8011158:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801115c:	4410      	add	r0, r2
 801115e:	b200      	sxth	r0, r0
 8011160:	9000      	str	r0, [sp, #0]
 8011162:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8011166:	e9cd 5401 	strd	r5, r4, [sp, #4]
 801116a:	4642      	mov	r2, r8
 801116c:	2100      	movs	r1, #0
 801116e:	4658      	mov	r0, fp
 8011170:	f7ff fca2 	bl	8010ab8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8011174:	2800      	cmp	r0, #0
 8011176:	d160      	bne.n	801123a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 8011178:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 801117c:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8011180:	b2b2      	uxth	r2, r6
 8011182:	4413      	add	r3, r2
 8011184:	1a8a      	subs	r2, r1, r2
 8011186:	f8ad 2036 	strh.w	r2, [sp, #54]	; 0x36
 801118a:	f89d 205a 	ldrb.w	r2, [sp, #90]	; 0x5a
 801118e:	b21b      	sxth	r3, r3
 8011190:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8011194:	2a00      	cmp	r2, #0
 8011196:	d150      	bne.n	801123a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 8011198:	6822      	ldr	r2, [r4, #0]
 801119a:	8869      	ldrh	r1, [r5, #2]
 801119c:	7a12      	ldrb	r2, [r2, #8]
 801119e:	1a9b      	subs	r3, r3, r2
 80111a0:	88ea      	ldrh	r2, [r5, #6]
 80111a2:	440a      	add	r2, r1
 80111a4:	b212      	sxth	r2, r2
 80111a6:	4293      	cmp	r3, r2
 80111a8:	dda7      	ble.n	80110fa <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 80111aa:	e046      	b.n	801123a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 80111ac:	7c23      	ldrb	r3, [r4, #16]
 80111ae:	444f      	add	r7, r9
 80111b0:	b1c3      	cbz	r3, 80111e4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 80111b2:	f64f 79ff 	movw	r9, #65535	; 0xffff
 80111b6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80111ba:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80111be:	443b      	add	r3, r7
 80111c0:	4293      	cmp	r3, r2
 80111c2:	da97      	bge.n	80110f4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80111c4:	a80e      	add	r0, sp, #56	; 0x38
 80111c6:	f7ff fdeb 	bl	8010da0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80111ca:	f8bd 304e 	ldrh.w	r3, [sp, #78]	; 0x4e
 80111ce:	3b01      	subs	r3, #1
 80111d0:	b29b      	uxth	r3, r3
 80111d2:	454b      	cmp	r3, r9
 80111d4:	9309      	str	r3, [sp, #36]	; 0x24
 80111d6:	d021      	beq.n	801121c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 80111d8:	7961      	ldrb	r1, [r4, #5]
 80111da:	a817      	add	r0, sp, #92	; 0x5c
 80111dc:	f7f3 fd6a 	bl	8004cb4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80111e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80111e2:	e7f4      	b.n	80111ce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 80111e4:	fa1f f986 	uxth.w	r9, r6
 80111e8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 80111ec:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80111f0:	443b      	add	r3, r7
 80111f2:	4293      	cmp	r3, r2
 80111f4:	f6bf af7e 	bge.w	80110f4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 80111f8:	a817      	add	r0, sp, #92	; 0x5c
 80111fa:	f002 fcfb 	bl	8013bf4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 80111fe:	b1e0      	cbz	r0, 801123a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x232>
 8011200:	280a      	cmp	r0, #10
 8011202:	d1f1      	bne.n	80111e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8011204:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8011208:	444b      	add	r3, r9
 801120a:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 801120e:	f8bd 3036 	ldrh.w	r3, [sp, #54]	; 0x36
 8011212:	eba3 0309 	sub.w	r3, r3, r9
 8011216:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801121a:	e7e5      	b.n	80111e8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 801121c:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8011220:	b2b3      	uxth	r3, r6
 8011222:	441a      	add	r2, r3
 8011224:	f8ad 2032 	strh.w	r2, [sp, #50]	; 0x32
 8011228:	f8bd 2036 	ldrh.w	r2, [sp, #54]	; 0x36
 801122c:	1ad3      	subs	r3, r2, r3
 801122e:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 8011232:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011236:	2b00      	cmp	r3, #0
 8011238:	d1bd      	bne.n	80111b6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 801123a:	b063      	add	sp, #396	; 0x18c
 801123c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011240:	2a02      	cmp	r2, #2
 8011242:	d105      	bne.n	8011250 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x248>
 8011244:	7be2      	ldrb	r2, [r4, #15]
 8011246:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801124a:	1a80      	subs	r0, r0, r2
 801124c:	1ac0      	subs	r0, r0, r3
 801124e:	e776      	b.n	801113e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8011250:	2000      	movs	r0, #0
 8011252:	e775      	b.n	8011140 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8011254:	7be0      	ldrb	r0, [r4, #15]
 8011256:	e773      	b.n	8011140 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8011258:	f647 72ff 	movw	r2, #32767	; 0x7fff
 801125c:	e776      	b.n	801114c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 801125e:	f1ba 0f00 	cmp.w	sl, #0
 8011262:	d0f7      	beq.n	8011254 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24c>
 8011264:	2264      	movs	r2, #100	; 0x64
 8011266:	4639      	mov	r1, r7
 8011268:	a849      	add	r0, sp, #292	; 0x124
 801126a:	f00f facd 	bl	8020808 <memcpy>
 801126e:	2300      	movs	r3, #0
 8011270:	f647 72ff 	movw	r2, #32767	; 0x7fff
 8011274:	6821      	ldr	r1, [r4, #0]
 8011276:	a849      	add	r0, sp, #292	; 0x124
 8011278:	f7ff fbb1 	bl	80109de <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 801127c:	b203      	sxth	r3, r0
 801127e:	e754      	b.n	801112a <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08011280 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8011280:	2b03      	cmp	r3, #3
 8011282:	d818      	bhi.n	80112b6 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8011284:	e8df f003 	tbb	[pc, r3]
 8011288:	130d0602 	.word	0x130d0602
 801128c:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011290:	1850      	adds	r0, r2, r1
 8011292:	4770      	bx	lr
 8011294:	8803      	ldrh	r3, [r0, #0]
 8011296:	8880      	ldrh	r0, [r0, #4]
 8011298:	4418      	add	r0, r3
 801129a:	b200      	sxth	r0, r0
 801129c:	1a80      	subs	r0, r0, r2
 801129e:	3801      	subs	r0, #1
 80112a0:	4770      	bx	lr
 80112a2:	8803      	ldrh	r3, [r0, #0]
 80112a4:	8880      	ldrh	r0, [r0, #4]
 80112a6:	4418      	add	r0, r3
 80112a8:	b200      	sxth	r0, r0
 80112aa:	1a40      	subs	r0, r0, r1
 80112ac:	e7f7      	b.n	801129e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 80112ae:	f9b0 0000 	ldrsh.w	r0, [r0]
 80112b2:	4410      	add	r0, r2
 80112b4:	4770      	bx	lr
 80112b6:	2000      	movs	r0, #0
 80112b8:	4770      	bx	lr

080112ba <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 80112ba:	2b03      	cmp	r3, #3
 80112bc:	d817      	bhi.n	80112ee <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 80112be:	e8df f003 	tbb	[pc, r3]
 80112c2:	0602      	.short	0x0602
 80112c4:	1009      	.short	0x1009
 80112c6:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 80112ca:	1850      	adds	r0, r2, r1
 80112cc:	4770      	bx	lr
 80112ce:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80112d2:	e7fa      	b.n	80112ca <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 80112d4:	8843      	ldrh	r3, [r0, #2]
 80112d6:	88c0      	ldrh	r0, [r0, #6]
 80112d8:	4418      	add	r0, r3
 80112da:	b200      	sxth	r0, r0
 80112dc:	1a80      	subs	r0, r0, r2
 80112de:	3801      	subs	r0, #1
 80112e0:	4770      	bx	lr
 80112e2:	8843      	ldrh	r3, [r0, #2]
 80112e4:	88c0      	ldrh	r0, [r0, #6]
 80112e6:	4418      	add	r0, r3
 80112e8:	b200      	sxth	r0, r0
 80112ea:	1a40      	subs	r0, r0, r1
 80112ec:	e7f7      	b.n	80112de <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 80112ee:	2000      	movs	r0, #0
 80112f0:	4770      	bx	lr
	...

080112f4 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 80112f4:	4b01      	ldr	r3, [pc, #4]	; (80112fc <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 80112f6:	2200      	movs	r2, #0
 80112f8:	601a      	str	r2, [r3, #0]
 80112fa:	4770      	bx	lr
 80112fc:	20011e50 	.word	0x20011e50

08011300 <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8011300:	4603      	mov	r3, r0
 8011302:	b1c8      	cbz	r0, 8011338 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8011304:	0c02      	lsrs	r2, r0, #16
 8011306:	0412      	lsls	r2, r2, #16
 8011308:	b9a2      	cbnz	r2, 8011334 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 801130a:	0403      	lsls	r3, r0, #16
 801130c:	2010      	movs	r0, #16
 801130e:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8011312:	bf04      	itt	eq
 8011314:	021b      	lsleq	r3, r3, #8
 8011316:	3008      	addeq	r0, #8
 8011318:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 801131c:	bf04      	itt	eq
 801131e:	011b      	lsleq	r3, r3, #4
 8011320:	3004      	addeq	r0, #4
 8011322:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8011326:	bf04      	itt	eq
 8011328:	009b      	lsleq	r3, r3, #2
 801132a:	3002      	addeq	r0, #2
 801132c:	2b00      	cmp	r3, #0
 801132e:	db04      	blt.n	801133a <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8011330:	3001      	adds	r0, #1
 8011332:	4770      	bx	lr
 8011334:	2000      	movs	r0, #0
 8011336:	e7ea      	b.n	801130e <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8011338:	2020      	movs	r0, #32
 801133a:	4770      	bx	lr

0801133c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 801133c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011340:	b087      	sub	sp, #28
 8011342:	4681      	mov	r9, r0
 8011344:	4698      	mov	r8, r3
 8011346:	4610      	mov	r0, r2
 8011348:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 801134c:	460d      	mov	r5, r1
 801134e:	b981      	cbnz	r1, 8011372 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 8011350:	b14b      	cbz	r3, 8011366 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 8011352:	460b      	mov	r3, r1
 8011354:	e9cd 4700 	strd	r4, r7, [sp]
 8011358:	464a      	mov	r2, r9
 801135a:	4641      	mov	r1, r8
 801135c:	f7ff ffee 	bl	801133c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8011360:	b007      	add	sp, #28
 8011362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011366:	f04f 33ff 	mov.w	r3, #4294967295
 801136a:	603b      	str	r3, [r7, #0]
 801136c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8011370:	e7f6      	b.n	8011360 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8011372:	fa32 fa01 	lsrs.w	sl, r2, r1
 8011376:	d107      	bne.n	8011388 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 8011378:	fb09 f602 	mul.w	r6, r9, r2
 801137c:	fbb6 f0f4 	udiv	r0, r6, r4
 8011380:	fb04 6610 	mls	r6, r4, r0, r6
 8011384:	603e      	str	r6, [r7, #0]
 8011386:	e7eb      	b.n	8011360 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 8011388:	2601      	movs	r6, #1
 801138a:	408e      	lsls	r6, r1
 801138c:	3e01      	subs	r6, #1
 801138e:	4016      	ands	r6, r2
 8011390:	fa09 fb01 	lsl.w	fp, r9, r1
 8011394:	4630      	mov	r0, r6
 8011396:	fbbb f3f4 	udiv	r3, fp, r4
 801139a:	9302      	str	r3, [sp, #8]
 801139c:	fb0a f303 	mul.w	r3, sl, r3
 80113a0:	9303      	str	r3, [sp, #12]
 80113a2:	f7ff ffad 	bl	8011300 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80113a6:	464a      	mov	r2, r9
 80113a8:	460b      	mov	r3, r1
 80113aa:	e9cd 4700 	strd	r4, r7, [sp]
 80113ae:	4601      	mov	r1, r0
 80113b0:	4630      	mov	r0, r6
 80113b2:	f7ff ffc3 	bl	801133c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80113b6:	9b02      	ldr	r3, [sp, #8]
 80113b8:	fb04 bb13 	mls	fp, r4, r3, fp
 80113bc:	4606      	mov	r6, r0
 80113be:	4658      	mov	r0, fp
 80113c0:	eb05 0108 	add.w	r1, r5, r8
 80113c4:	f7ff ff9c 	bl	8011300 <_ZN8touchgfx16TouchCalibration4clzuEm>
 80113c8:	ab05      	add	r3, sp, #20
 80113ca:	e9cd 4300 	strd	r4, r3, [sp]
 80113ce:	465a      	mov	r2, fp
 80113d0:	4603      	mov	r3, r0
 80113d2:	4650      	mov	r0, sl
 80113d4:	f7ff ffb2 	bl	801133c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 80113d8:	6839      	ldr	r1, [r7, #0]
 80113da:	9a05      	ldr	r2, [sp, #20]
 80113dc:	9b03      	ldr	r3, [sp, #12]
 80113de:	4411      	add	r1, r2
 80113e0:	fbb1 f2f4 	udiv	r2, r1, r4
 80113e4:	18d3      	adds	r3, r2, r3
 80113e6:	441e      	add	r6, r3
 80113e8:	fb04 1412 	mls	r4, r4, r2, r1
 80113ec:	4430      	add	r0, r6
 80113ee:	603c      	str	r4, [r7, #0]
 80113f0:	e7b6      	b.n	8011360 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

080113f2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 80113f2:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80113f6:	b085      	sub	sp, #20
 80113f8:	f1b0 0900 	subs.w	r9, r0, #0
 80113fc:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80113fe:	461d      	mov	r5, r3
 8011400:	bfbf      	itttt	lt
 8011402:	6823      	ldrlt	r3, [r4, #0]
 8011404:	425b      	neglt	r3, r3
 8011406:	f1c9 0900 	rsblt	r9, r9, #0
 801140a:	6023      	strlt	r3, [r4, #0]
 801140c:	bfb4      	ite	lt
 801140e:	f04f 36ff 	movlt.w	r6, #4294967295
 8011412:	2601      	movge	r6, #1
 8011414:	2a00      	cmp	r2, #0
 8011416:	4617      	mov	r7, r2
 8011418:	da04      	bge.n	8011424 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 801141a:	6823      	ldr	r3, [r4, #0]
 801141c:	425b      	negs	r3, r3
 801141e:	4257      	negs	r7, r2
 8011420:	4276      	negs	r6, r6
 8011422:	6023      	str	r3, [r4, #0]
 8011424:	2d00      	cmp	r5, #0
 8011426:	4638      	mov	r0, r7
 8011428:	bfba      	itte	lt
 801142a:	426d      	neglt	r5, r5
 801142c:	f04f 38ff 	movlt.w	r8, #4294967295
 8011430:	f04f 0801 	movge.w	r8, #1
 8011434:	f7ff ff64 	bl	8011300 <_ZN8touchgfx16TouchCalibration4clzuEm>
 8011438:	ab03      	add	r3, sp, #12
 801143a:	e9cd 5300 	strd	r5, r3, [sp]
 801143e:	463a      	mov	r2, r7
 8011440:	4603      	mov	r3, r0
 8011442:	4648      	mov	r0, r9
 8011444:	f7ff ff7a 	bl	801133c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8011448:	6823      	ldr	r3, [r4, #0]
 801144a:	9a03      	ldr	r2, [sp, #12]
 801144c:	4546      	cmp	r6, r8
 801144e:	441a      	add	r2, r3
 8011450:	fb92 f3f5 	sdiv	r3, r2, r5
 8011454:	4418      	add	r0, r3
 8011456:	bf18      	it	ne
 8011458:	4240      	negne	r0, r0
 801145a:	fb05 2313 	mls	r3, r5, r3, r2
 801145e:	1c72      	adds	r2, r6, #1
 8011460:	6023      	str	r3, [r4, #0]
 8011462:	d105      	bne.n	8011470 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8011464:	2b00      	cmp	r3, #0
 8011466:	f1c3 0200 	rsb	r2, r3, #0
 801146a:	db0b      	blt.n	8011484 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 801146c:	6022      	str	r2, [r4, #0]
 801146e:	e006      	b.n	801147e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8011470:	2e01      	cmp	r6, #1
 8011472:	d104      	bne.n	801147e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8011474:	2b00      	cmp	r3, #0
 8011476:	da02      	bge.n	801147e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8011478:	442b      	add	r3, r5
 801147a:	3801      	subs	r0, #1
 801147c:	6023      	str	r3, [r4, #0]
 801147e:	b005      	add	sp, #20
 8011480:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011484:	3801      	subs	r0, #1
 8011486:	1b52      	subs	r2, r2, r5
 8011488:	e7f0      	b.n	801146c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0801148c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 801148c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8011490:	4c1c      	ldr	r4, [pc, #112]	; (8011504 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8011492:	6807      	ldr	r7, [r0, #0]
 8011494:	69a3      	ldr	r3, [r4, #24]
 8011496:	4605      	mov	r5, r0
 8011498:	b92b      	cbnz	r3, 80114a6 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 801149a:	6840      	ldr	r0, [r0, #4]
 801149c:	e9c5 7000 	strd	r7, r0, [r5]
 80114a0:	b004      	add	sp, #16
 80114a2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80114a6:	68a2      	ldr	r2, [r4, #8]
 80114a8:	6820      	ldr	r0, [r4, #0]
 80114aa:	ae04      	add	r6, sp, #16
 80114ac:	f04f 0802 	mov.w	r8, #2
 80114b0:	fb93 f1f8 	sdiv	r1, r3, r8
 80114b4:	440a      	add	r2, r1
 80114b6:	f846 2d04 	str.w	r2, [r6, #-4]!
 80114ba:	69e1      	ldr	r1, [r4, #28]
 80114bc:	9600      	str	r6, [sp, #0]
 80114be:	463a      	mov	r2, r7
 80114c0:	f7ff ff97 	bl	80113f2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80114c4:	69a3      	ldr	r3, [r4, #24]
 80114c6:	686a      	ldr	r2, [r5, #4]
 80114c8:	6a21      	ldr	r1, [r4, #32]
 80114ca:	9600      	str	r6, [sp, #0]
 80114cc:	4607      	mov	r7, r0
 80114ce:	6860      	ldr	r0, [r4, #4]
 80114d0:	f7ff ff8f 	bl	80113f2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80114d4:	6962      	ldr	r2, [r4, #20]
 80114d6:	69a3      	ldr	r3, [r4, #24]
 80114d8:	fb93 f8f8 	sdiv	r8, r3, r8
 80114dc:	4442      	add	r2, r8
 80114de:	9203      	str	r2, [sp, #12]
 80114e0:	6a61      	ldr	r1, [r4, #36]	; 0x24
 80114e2:	682a      	ldr	r2, [r5, #0]
 80114e4:	9600      	str	r6, [sp, #0]
 80114e6:	4407      	add	r7, r0
 80114e8:	68e0      	ldr	r0, [r4, #12]
 80114ea:	f7ff ff82 	bl	80113f2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80114ee:	9600      	str	r6, [sp, #0]
 80114f0:	4680      	mov	r8, r0
 80114f2:	69a3      	ldr	r3, [r4, #24]
 80114f4:	686a      	ldr	r2, [r5, #4]
 80114f6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80114f8:	6920      	ldr	r0, [r4, #16]
 80114fa:	f7ff ff7a 	bl	80113f2 <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 80114fe:	4440      	add	r0, r8
 8011500:	e7cc      	b.n	801149c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8011502:	bf00      	nop
 8011504:	20011e54 	.word	0x20011e54

08011508 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8011508:	4b07      	ldr	r3, [pc, #28]	; (8011528 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 801150a:	781b      	ldrb	r3, [r3, #0]
 801150c:	2b01      	cmp	r3, #1
 801150e:	d109      	bne.n	8011524 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8011510:	f9b1 3000 	ldrsh.w	r3, [r1]
 8011514:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011518:	8003      	strh	r3, [r0, #0]
 801151a:	4b04      	ldr	r3, [pc, #16]	; (801152c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 801151c:	881b      	ldrh	r3, [r3, #0]
 801151e:	3b01      	subs	r3, #1
 8011520:	1a9b      	subs	r3, r3, r2
 8011522:	800b      	strh	r3, [r1, #0]
 8011524:	4770      	bx	lr
 8011526:	bf00      	nop
 8011528:	20011e38 	.word	0x20011e38
 801152c:	20011e34 	.word	0x20011e34

08011530 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8011530:	b510      	push	{r4, lr}
 8011532:	4b07      	ldr	r3, [pc, #28]	; (8011550 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8011534:	781b      	ldrb	r3, [r3, #0]
 8011536:	2b01      	cmp	r3, #1
 8011538:	d108      	bne.n	801154c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 801153a:	4b06      	ldr	r3, [pc, #24]	; (8011554 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 801153c:	880c      	ldrh	r4, [r1, #0]
 801153e:	881b      	ldrh	r3, [r3, #0]
 8011540:	f9b0 2000 	ldrsh.w	r2, [r0]
 8011544:	3b01      	subs	r3, #1
 8011546:	1b1b      	subs	r3, r3, r4
 8011548:	8003      	strh	r3, [r0, #0]
 801154a:	800a      	strh	r2, [r1, #0]
 801154c:	bd10      	pop	{r4, pc}
 801154e:	bf00      	nop
 8011550:	20011e38 	.word	0x20011e38
 8011554:	20011e34 	.word	0x20011e34

08011558 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8011558:	b510      	push	{r4, lr}
 801155a:	4b0a      	ldr	r3, [pc, #40]	; (8011584 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 801155c:	781b      	ldrb	r3, [r3, #0]
 801155e:	2b01      	cmp	r3, #1
 8011560:	d10e      	bne.n	8011580 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8011562:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8011566:	8843      	ldrh	r3, [r0, #2]
 8011568:	f9b0 4000 	ldrsh.w	r4, [r0]
 801156c:	8044      	strh	r4, [r0, #2]
 801156e:	18ca      	adds	r2, r1, r3
 8011570:	4b05      	ldr	r3, [pc, #20]	; (8011588 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8011572:	881b      	ldrh	r3, [r3, #0]
 8011574:	1a9b      	subs	r3, r3, r2
 8011576:	8003      	strh	r3, [r0, #0]
 8011578:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 801157c:	80c3      	strh	r3, [r0, #6]
 801157e:	8081      	strh	r1, [r0, #4]
 8011580:	bd10      	pop	{r4, pc}
 8011582:	bf00      	nop
 8011584:	20011e38 	.word	0x20011e38
 8011588:	20011e34 	.word	0x20011e34

0801158c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 801158c:	4b08      	ldr	r3, [pc, #32]	; (80115b0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 801158e:	781b      	ldrb	r3, [r3, #0]
 8011590:	2b01      	cmp	r3, #1
 8011592:	d10c      	bne.n	80115ae <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8011594:	8803      	ldrh	r3, [r0, #0]
 8011596:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 801159a:	8842      	ldrh	r2, [r0, #2]
 801159c:	8002      	strh	r2, [r0, #0]
 801159e:	185a      	adds	r2, r3, r1
 80115a0:	4b04      	ldr	r3, [pc, #16]	; (80115b4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 80115a2:	881b      	ldrh	r3, [r3, #0]
 80115a4:	1a9b      	subs	r3, r3, r2
 80115a6:	8043      	strh	r3, [r0, #2]
 80115a8:	88c3      	ldrh	r3, [r0, #6]
 80115aa:	8083      	strh	r3, [r0, #4]
 80115ac:	80c1      	strh	r1, [r0, #6]
 80115ae:	4770      	bx	lr
 80115b0:	20011e38 	.word	0x20011e38
 80115b4:	20011e34 	.word	0x20011e34

080115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 80115b8:	b510      	push	{r4, lr}
 80115ba:	4b07      	ldr	r3, [pc, #28]	; (80115d8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 80115bc:	781b      	ldrb	r3, [r3, #0]
 80115be:	2b01      	cmp	r3, #1
 80115c0:	d108      	bne.n	80115d4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 80115c2:	f9b1 3000 	ldrsh.w	r3, [r1]
 80115c6:	f9b0 4000 	ldrsh.w	r4, [r0]
 80115ca:	8003      	strh	r3, [r0, #0]
 80115cc:	8893      	ldrh	r3, [r2, #4]
 80115ce:	3b01      	subs	r3, #1
 80115d0:	1b1b      	subs	r3, r3, r4
 80115d2:	800b      	strh	r3, [r1, #0]
 80115d4:	bd10      	pop	{r4, pc}
 80115d6:	bf00      	nop
 80115d8:	20011e38 	.word	0x20011e38

080115dc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE>:
 80115dc:	4b0b      	ldr	r3, [pc, #44]	; (801160c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x30>)
 80115de:	781b      	ldrb	r3, [r3, #0]
 80115e0:	2b01      	cmp	r3, #1
 80115e2:	d111      	bne.n	8011608 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x2c>
 80115e4:	680b      	ldr	r3, [r1, #0]
 80115e6:	ed90 7a00 	vldr	s14, [r0]
 80115ea:	6003      	str	r3, [r0, #0]
 80115ec:	f9b2 3004 	ldrsh.w	r3, [r2, #4]
 80115f0:	eddf 6a07 	vldr	s13, [pc, #28]	; 8011610 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERfS1_RKNS_4RectE+0x34>
 80115f4:	ee07 3a90 	vmov	s15, r3
 80115f8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80115fc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8011600:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8011604:	edc1 7a00 	vstr	s15, [r1]
 8011608:	4770      	bx	lr
 801160a:	bf00      	nop
 801160c:	20011e38 	.word	0x20011e38
 8011610:	38d1b717 	.word	0x38d1b717

08011614 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8011614:	b510      	push	{r4, lr}
 8011616:	4b0a      	ldr	r3, [pc, #40]	; (8011640 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8011618:	781b      	ldrb	r3, [r3, #0]
 801161a:	2b01      	cmp	r3, #1
 801161c:	460a      	mov	r2, r1
 801161e:	d10d      	bne.n	801163c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8011620:	8881      	ldrh	r1, [r0, #4]
 8011622:	8803      	ldrh	r3, [r0, #0]
 8011624:	440b      	add	r3, r1
 8011626:	4601      	mov	r1, r0
 8011628:	3b01      	subs	r3, #1
 801162a:	f821 3b02 	strh.w	r3, [r1], #2
 801162e:	f7ff ffc3 	bl	80115b8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8011632:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011636:	88c2      	ldrh	r2, [r0, #6]
 8011638:	8082      	strh	r2, [r0, #4]
 801163a:	80c3      	strh	r3, [r0, #6]
 801163c:	bd10      	pop	{r4, pc}
 801163e:	bf00      	nop
 8011640:	20011e38 	.word	0x20011e38

08011644 <_ZN8touchgfx11Application13requestRedrawEv>:
 8011644:	4b06      	ldr	r3, [pc, #24]	; (8011660 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8011646:	f9b3 2000 	ldrsh.w	r2, [r3]
 801164a:	4b06      	ldr	r3, [pc, #24]	; (8011664 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 801164c:	f8a0 2134 	strh.w	r2, [r0, #308]	; 0x134
 8011650:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011654:	f8a0 3136 	strh.w	r3, [r0, #310]	; 0x136
 8011658:	2100      	movs	r1, #0
 801165a:	f8c0 1130 	str.w	r1, [r0, #304]	; 0x130
 801165e:	4770      	bx	lr
 8011660:	20011e34 	.word	0x20011e34
 8011664:	20011e36 	.word	0x20011e36

08011668 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8011668:	4b03      	ldr	r3, [pc, #12]	; (8011678 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 801166a:	6818      	ldr	r0, [r3, #0]
 801166c:	b110      	cbz	r0, 8011674 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 801166e:	6803      	ldr	r3, [r0, #0]
 8011670:	699b      	ldr	r3, [r3, #24]
 8011672:	4718      	bx	r3
 8011674:	4770      	bx	lr
 8011676:	bf00      	nop
 8011678:	20011e84 	.word	0x20011e84

0801167c <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 801167c:	4770      	bx	lr
	...

08011680 <_ZN8touchgfx11Application4drawEv>:
 8011680:	b507      	push	{r0, r1, r2, lr}
 8011682:	4b09      	ldr	r3, [pc, #36]	; (80116a8 <_ZN8touchgfx11Application4drawEv+0x28>)
 8011684:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011688:	4b08      	ldr	r3, [pc, #32]	; (80116ac <_ZN8touchgfx11Application4drawEv+0x2c>)
 801168a:	f8ad 2004 	strh.w	r2, [sp, #4]
 801168e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8011692:	f8ad 3006 	strh.w	r3, [sp, #6]
 8011696:	6803      	ldr	r3, [r0, #0]
 8011698:	2100      	movs	r1, #0
 801169a:	9100      	str	r1, [sp, #0]
 801169c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801169e:	4669      	mov	r1, sp
 80116a0:	4798      	blx	r3
 80116a2:	b003      	add	sp, #12
 80116a4:	f85d fb04 	ldr.w	pc, [sp], #4
 80116a8:	20011e34 	.word	0x20011e34
 80116ac:	20011e36 	.word	0x20011e36

080116b0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 80116b0:	4b03      	ldr	r3, [pc, #12]	; (80116c0 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 80116b2:	6818      	ldr	r0, [r3, #0]
 80116b4:	b110      	cbz	r0, 80116bc <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 80116b6:	6803      	ldr	r3, [r0, #0]
 80116b8:	69db      	ldr	r3, [r3, #28]
 80116ba:	4718      	bx	r3
 80116bc:	4770      	bx	lr
 80116be:	bf00      	nop
 80116c0:	20011e84 	.word	0x20011e84

080116c4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 80116c4:	4b03      	ldr	r3, [pc, #12]	; (80116d4 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 80116c6:	6818      	ldr	r0, [r3, #0]
 80116c8:	b110      	cbz	r0, 80116d0 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 80116ca:	6803      	ldr	r3, [r0, #0]
 80116cc:	6a1b      	ldr	r3, [r3, #32]
 80116ce:	4718      	bx	r3
 80116d0:	4770      	bx	lr
 80116d2:	bf00      	nop
 80116d4:	20011e84 	.word	0x20011e84

080116d8 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 80116d8:	2300      	movs	r3, #0
 80116da:	f8a0 30ec 	strh.w	r3, [r0, #236]	; 0xec
 80116de:	4770      	bx	lr

080116e0 <_ZN8touchgfx11Application14handleKeyEventEh>:
 80116e0:	4b03      	ldr	r3, [pc, #12]	; (80116f0 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 80116e2:	6818      	ldr	r0, [r3, #0]
 80116e4:	b110      	cbz	r0, 80116ec <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 80116e6:	6803      	ldr	r3, [r0, #0]
 80116e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80116ea:	4718      	bx	r3
 80116ec:	4770      	bx	lr
 80116ee:	bf00      	nop
 80116f0:	20011e84 	.word	0x20011e84

080116f4 <_ZN8touchgfx11ApplicationD1Ev>:
 80116f4:	4770      	bx	lr

080116f6 <_ZN8touchgfx11ApplicationD0Ev>:
 80116f6:	b510      	push	{r4, lr}
 80116f8:	f44f 719e 	mov.w	r1, #316	; 0x13c
 80116fc:	4604      	mov	r4, r0
 80116fe:	f00e ffd7 	bl	80206b0 <_ZdlPvj>
 8011702:	4620      	mov	r0, r4
 8011704:	bd10      	pop	{r4, pc}

08011706 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8011706:	b510      	push	{r4, lr}
 8011708:	f9b1 4000 	ldrsh.w	r4, [r1]
 801170c:	888a      	ldrh	r2, [r1, #4]
 801170e:	f9b0 3000 	ldrsh.w	r3, [r0]
 8011712:	4422      	add	r2, r4
 8011714:	b212      	sxth	r2, r2
 8011716:	4293      	cmp	r3, r2
 8011718:	da15      	bge.n	8011746 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 801171a:	8882      	ldrh	r2, [r0, #4]
 801171c:	4413      	add	r3, r2
 801171e:	b21b      	sxth	r3, r3
 8011720:	429c      	cmp	r4, r3
 8011722:	da10      	bge.n	8011746 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8011724:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 8011728:	88c9      	ldrh	r1, [r1, #6]
 801172a:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 801172e:	4419      	add	r1, r3
 8011730:	b209      	sxth	r1, r1
 8011732:	428a      	cmp	r2, r1
 8011734:	da07      	bge.n	8011746 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8011736:	88c0      	ldrh	r0, [r0, #6]
 8011738:	4410      	add	r0, r2
 801173a:	b200      	sxth	r0, r0
 801173c:	4283      	cmp	r3, r0
 801173e:	bfac      	ite	ge
 8011740:	2000      	movge	r0, #0
 8011742:	2001      	movlt	r0, #1
 8011744:	bd10      	pop	{r4, pc}
 8011746:	2000      	movs	r0, #0
 8011748:	e7fc      	b.n	8011744 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0801174a <_ZN8touchgfx4Rect10restrictToEss>:
 801174a:	f9b0 3000 	ldrsh.w	r3, [r0]
 801174e:	2b00      	cmp	r3, #0
 8011750:	b510      	push	{r4, lr}
 8011752:	da04      	bge.n	801175e <_ZN8touchgfx4Rect10restrictToEss+0x14>
 8011754:	8884      	ldrh	r4, [r0, #4]
 8011756:	4423      	add	r3, r4
 8011758:	8083      	strh	r3, [r0, #4]
 801175a:	2300      	movs	r3, #0
 801175c:	8003      	strh	r3, [r0, #0]
 801175e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8011762:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8011766:	1b09      	subs	r1, r1, r4
 8011768:	428b      	cmp	r3, r1
 801176a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 801176e:	bfc8      	it	gt
 8011770:	8081      	strhgt	r1, [r0, #4]
 8011772:	2b00      	cmp	r3, #0
 8011774:	da04      	bge.n	8011780 <_ZN8touchgfx4Rect10restrictToEss+0x36>
 8011776:	88c1      	ldrh	r1, [r0, #6]
 8011778:	440b      	add	r3, r1
 801177a:	80c3      	strh	r3, [r0, #6]
 801177c:	2300      	movs	r3, #0
 801177e:	8043      	strh	r3, [r0, #2]
 8011780:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8011784:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8011788:	1a52      	subs	r2, r2, r1
 801178a:	4293      	cmp	r3, r2
 801178c:	bfc8      	it	gt
 801178e:	80c2      	strhgt	r2, [r0, #6]
 8011790:	bd10      	pop	{r4, pc}
	...

08011794 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8011794:	b510      	push	{r4, lr}
 8011796:	4b10      	ldr	r3, [pc, #64]	; (80117d8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8011798:	f9b3 2000 	ldrsh.w	r2, [r3]
 801179c:	4b0f      	ldr	r3, [pc, #60]	; (80117dc <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801179e:	460c      	mov	r4, r1
 80117a0:	4620      	mov	r0, r4
 80117a2:	f9b3 1000 	ldrsh.w	r1, [r3]
 80117a6:	f7ff ffd0 	bl	801174a <_ZN8touchgfx4Rect10restrictToEss>
 80117aa:	4b0d      	ldr	r3, [pc, #52]	; (80117e0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 80117ac:	6818      	ldr	r0, [r3, #0]
 80117ae:	b190      	cbz	r0, 80117d6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 80117b0:	6803      	ldr	r3, [r0, #0]
 80117b2:	4621      	mov	r1, r4
 80117b4:	689b      	ldr	r3, [r3, #8]
 80117b6:	4798      	blx	r3
 80117b8:	4b0a      	ldr	r3, [pc, #40]	; (80117e4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 80117ba:	6818      	ldr	r0, [r3, #0]
 80117bc:	b118      	cbz	r0, 80117c6 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 80117be:	6803      	ldr	r3, [r0, #0]
 80117c0:	4621      	mov	r1, r4
 80117c2:	689b      	ldr	r3, [r3, #8]
 80117c4:	4798      	blx	r3
 80117c6:	4b08      	ldr	r3, [pc, #32]	; (80117e8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 80117c8:	6818      	ldr	r0, [r3, #0]
 80117ca:	6803      	ldr	r3, [r0, #0]
 80117cc:	4621      	mov	r1, r4
 80117ce:	69db      	ldr	r3, [r3, #28]
 80117d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80117d4:	4718      	bx	r3
 80117d6:	bd10      	pop	{r4, pc}
 80117d8:	20011e36 	.word	0x20011e36
 80117dc:	20011e34 	.word	0x20011e34
 80117e0:	20011e84 	.word	0x20011e84
 80117e4:	20011e80 	.word	0x20011e80
 80117e8:	20011e40 	.word	0x20011e40

080117ec <_ZNK8touchgfx4Rect8includesERKS0_>:
 80117ec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80117ee:	4606      	mov	r6, r0
 80117f0:	4608      	mov	r0, r1
 80117f2:	460f      	mov	r7, r1
 80117f4:	f7fa fad5 	bl	800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80117f8:	b9e8      	cbnz	r0, 8011836 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 80117fa:	f9b7 5000 	ldrsh.w	r5, [r7]
 80117fe:	f9b6 4000 	ldrsh.w	r4, [r6]
 8011802:	42a5      	cmp	r5, r4
 8011804:	db17      	blt.n	8011836 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011806:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 801180a:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801180e:	429a      	cmp	r2, r3
 8011810:	db11      	blt.n	8011836 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011812:	88b9      	ldrh	r1, [r7, #4]
 8011814:	440d      	add	r5, r1
 8011816:	88b1      	ldrh	r1, [r6, #4]
 8011818:	440c      	add	r4, r1
 801181a:	b22d      	sxth	r5, r5
 801181c:	b224      	sxth	r4, r4
 801181e:	42a5      	cmp	r5, r4
 8011820:	dc09      	bgt.n	8011836 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8011822:	88f8      	ldrh	r0, [r7, #6]
 8011824:	4410      	add	r0, r2
 8011826:	88f2      	ldrh	r2, [r6, #6]
 8011828:	4413      	add	r3, r2
 801182a:	b200      	sxth	r0, r0
 801182c:	b21b      	sxth	r3, r3
 801182e:	4298      	cmp	r0, r3
 8011830:	bfcc      	ite	gt
 8011832:	2000      	movgt	r0, #0
 8011834:	2001      	movle	r0, #1
 8011836:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

08011838 <_ZN8touchgfx11Application11getInstanceEv>:
 8011838:	4b01      	ldr	r3, [pc, #4]	; (8011840 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 801183a:	6818      	ldr	r0, [r3, #0]
 801183c:	4770      	bx	lr
 801183e:	bf00      	nop
 8011840:	20011e94 	.word	0x20011e94

08011844 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv>:
 8011844:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011846:	4b10      	ldr	r3, [pc, #64]	; (8011888 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x44>)
 8011848:	781b      	ldrb	r3, [r3, #0]
 801184a:	4605      	mov	r5, r0
 801184c:	b1d3      	cbz	r3, 8011884 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x40>
 801184e:	4b0f      	ldr	r3, [pc, #60]	; (801188c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x48>)
 8011850:	4f0f      	ldr	r7, [pc, #60]	; (8011890 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x4c>)
 8011852:	881c      	ldrh	r4, [r3, #0]
 8011854:	f100 06ee 	add.w	r6, r0, #238	; 0xee
 8011858:	f8b5 312e 	ldrh.w	r3, [r5, #302]	; 0x12e
 801185c:	42a3      	cmp	r3, r4
 801185e:	d90e      	bls.n	801187e <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x3a>
 8011860:	683b      	ldr	r3, [r7, #0]
 8011862:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8011866:	b10a      	cbz	r2, 801186c <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x28>
 8011868:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 801186a:	b900      	cbnz	r0, 801186e <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x2a>
 801186c:	6898      	ldr	r0, [r3, #8]
 801186e:	6803      	ldr	r3, [r0, #0]
 8011870:	eb06 01c4 	add.w	r1, r6, r4, lsl #3
 8011874:	69db      	ldr	r3, [r3, #28]
 8011876:	3401      	adds	r4, #1
 8011878:	4798      	blx	r3
 801187a:	b2a4      	uxth	r4, r4
 801187c:	e7ec      	b.n	8011858 <_ZN8touchgfx11Application41copyInvalidatedAreasFromTFTToClientBufferEv+0x14>
 801187e:	2300      	movs	r3, #0
 8011880:	f8a5 312e 	strh.w	r3, [r5, #302]	; 0x12e
 8011884:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011886:	bf00      	nop
 8011888:	20011e3e 	.word	0x20011e3e
 801188c:	20000060 	.word	0x20000060
 8011890:	20011e40 	.word	0x20011e40

08011894 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 8011894:	b510      	push	{r4, lr}
 8011896:	2300      	movs	r3, #0
 8011898:	f8a0 30a4 	strh.w	r3, [r0, #164]	; 0xa4
 801189c:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 80118a0:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 80118a4:	4604      	mov	r4, r0
 80118a6:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80118aa:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	; 0xa6
 80118ae:	429a      	cmp	r2, r3
 80118b0:	d90e      	bls.n	80118d0 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 80118b2:	18e2      	adds	r2, r4, r3
 80118b4:	f892 2084 	ldrb.w	r2, [r2, #132]	; 0x84
 80118b8:	b122      	cbz	r2, 80118c4 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 80118ba:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 80118be:	6803      	ldr	r3, [r0, #0]
 80118c0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80118c2:	4798      	blx	r3
 80118c4:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	; 0xa4
 80118c8:	3301      	adds	r3, #1
 80118ca:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 80118ce:	e7ea      	b.n	80118a6 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 80118d0:	bd10      	pop	{r4, pc}

080118d2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 80118d2:	2300      	movs	r3, #0
 80118d4:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 80118d8:	f100 0284 	add.w	r2, r0, #132	; 0x84
 80118dc:	30a4      	adds	r0, #164	; 0xa4
 80118de:	f802 3b01 	strb.w	r3, [r2], #1
 80118e2:	4282      	cmp	r2, r0
 80118e4:	d1fb      	bne.n	80118de <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 80118e6:	4770      	bx	lr

080118e8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80118e8:	b570      	push	{r4, r5, r6, lr}
 80118ea:	4c0b      	ldr	r4, [pc, #44]	; (8011918 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80118ec:	4605      	mov	r5, r0
 80118ee:	6820      	ldr	r0, [r4, #0]
 80118f0:	460e      	mov	r6, r1
 80118f2:	b110      	cbz	r0, 80118fa <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 80118f4:	6803      	ldr	r3, [r0, #0]
 80118f6:	695b      	ldr	r3, [r3, #20]
 80118f8:	4798      	blx	r3
 80118fa:	1d28      	adds	r0, r5, #4
 80118fc:	f7ff ffe9 	bl	80118d2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8011900:	6026      	str	r6, [r4, #0]
 8011902:	6833      	ldr	r3, [r6, #0]
 8011904:	4630      	mov	r0, r6
 8011906:	68db      	ldr	r3, [r3, #12]
 8011908:	4798      	blx	r3
 801190a:	682b      	ldr	r3, [r5, #0]
 801190c:	4628      	mov	r0, r5
 801190e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8011910:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011914:	4718      	bx	r3
 8011916:	bf00      	nop
 8011918:	20011e84 	.word	0x20011e84

0801191c <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 801191c:	2300      	movs	r3, #0
 801191e:	f8b0 c080 	ldrh.w	ip, [r0, #128]	; 0x80
 8011922:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	; 0xa4
 8011926:	b5f0      	push	{r4, r5, r6, r7, lr}
 8011928:	461a      	mov	r2, r3
 801192a:	461c      	mov	r4, r3
 801192c:	461d      	mov	r5, r3
 801192e:	459c      	cmp	ip, r3
 8011930:	dd1a      	ble.n	8011968 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 8011932:	18c6      	adds	r6, r0, r3
 8011934:	f896 6084 	ldrb.w	r6, [r6, #132]	; 0x84
 8011938:	b16e      	cbz	r6, 8011956 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 801193a:	429a      	cmp	r2, r3
 801193c:	d008      	beq.n	8011950 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 801193e:	fa1f fe82 	uxth.w	lr, r2
 8011942:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 8011946:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 801194a:	1887      	adds	r7, r0, r2
 801194c:	f887 6084 	strb.w	r6, [r7, #132]	; 0x84
 8011950:	3201      	adds	r2, #1
 8011952:	3301      	adds	r3, #1
 8011954:	e7eb      	b.n	801192e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 8011956:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	; 0xa6
 801195a:	4299      	cmp	r1, r3
 801195c:	bfa8      	it	ge
 801195e:	3501      	addge	r5, #1
 8011960:	429e      	cmp	r6, r3
 8011962:	bfc8      	it	gt
 8011964:	3401      	addgt	r4, #1
 8011966:	e7f4      	b.n	8011952 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8011968:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	; 0xa6
 801196c:	1b49      	subs	r1, r1, r5
 801196e:	1b1b      	subs	r3, r3, r4
 8011970:	f8a0 10a4 	strh.w	r1, [r0, #164]	; 0xa4
 8011974:	f8a0 30a6 	strh.w	r3, [r0, #166]	; 0xa6
 8011978:	f8b0 3080 	ldrh.w	r3, [r0, #128]	; 0x80
 801197c:	4293      	cmp	r3, r2
 801197e:	dd03      	ble.n	8011988 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8011980:	3b01      	subs	r3, #1
 8011982:	f8a0 3080 	strh.w	r3, [r0, #128]	; 0x80
 8011986:	e7f7      	b.n	8011978 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8011988:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

0801198c <_ZN8touchgfx11Application15handleTickEventEv>:
 801198c:	b570      	push	{r4, r5, r6, lr}
 801198e:	4d16      	ldr	r5, [pc, #88]	; (80119e8 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8011990:	4604      	mov	r4, r0
 8011992:	6828      	ldr	r0, [r5, #0]
 8011994:	b140      	cbz	r0, 80119a8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8011996:	7a03      	ldrb	r3, [r0, #8]
 8011998:	b933      	cbnz	r3, 80119a8 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801199a:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 801199e:	6803      	ldr	r3, [r0, #0]
 80119a0:	689b      	ldr	r3, [r3, #8]
 80119a2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80119a6:	4718      	bx	r3
 80119a8:	f894 3138 	ldrb.w	r3, [r4, #312]	; 0x138
 80119ac:	4e0f      	ldr	r6, [pc, #60]	; (80119ec <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 80119ae:	b973      	cbnz	r3, 80119ce <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80119b0:	b168      	cbz	r0, 80119ce <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80119b2:	7a03      	ldrb	r3, [r0, #8]
 80119b4:	b15b      	cbz	r3, 80119ce <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 80119b6:	6830      	ldr	r0, [r6, #0]
 80119b8:	b110      	cbz	r0, 80119c0 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 80119ba:	6803      	ldr	r3, [r0, #0]
 80119bc:	691b      	ldr	r3, [r3, #16]
 80119be:	4798      	blx	r3
 80119c0:	6828      	ldr	r0, [r5, #0]
 80119c2:	6803      	ldr	r3, [r0, #0]
 80119c4:	68db      	ldr	r3, [r3, #12]
 80119c6:	4798      	blx	r3
 80119c8:	2301      	movs	r3, #1
 80119ca:	f884 3138 	strb.w	r3, [r4, #312]	; 0x138
 80119ce:	3404      	adds	r4, #4
 80119d0:	4620      	mov	r0, r4
 80119d2:	f7ff ff5f 	bl	8011894 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 80119d6:	4620      	mov	r0, r4
 80119d8:	f7ff ffa0 	bl	801191c <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 80119dc:	6830      	ldr	r0, [r6, #0]
 80119de:	b110      	cbz	r0, 80119e6 <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 80119e0:	6803      	ldr	r3, [r0, #0]
 80119e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80119e4:	e7dd      	b.n	80119a2 <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 80119e6:	bd70      	pop	{r4, r5, r6, pc}
 80119e8:	20011e88 	.word	0x20011e88
 80119ec:	20011e84 	.word	0x20011e84

080119f0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80119f0:	4603      	mov	r3, r0
 80119f2:	f100 0140 	add.w	r1, r0, #64	; 0x40
 80119f6:	2200      	movs	r2, #0
 80119f8:	801a      	strh	r2, [r3, #0]
 80119fa:	805a      	strh	r2, [r3, #2]
 80119fc:	809a      	strh	r2, [r3, #4]
 80119fe:	80da      	strh	r2, [r3, #6]
 8011a00:	3308      	adds	r3, #8
 8011a02:	428b      	cmp	r3, r1
 8011a04:	d1f8      	bne.n	80119f8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 8011a06:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 8011a0a:	4770      	bx	lr

08011a0c <_ZN8touchgfx11ApplicationC1Ev>:
 8011a0c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011a0e:	4606      	mov	r6, r0
 8011a10:	4b1c      	ldr	r3, [pc, #112]	; (8011a84 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 8011a12:	f846 3b04 	str.w	r3, [r6], #4
 8011a16:	4604      	mov	r4, r0
 8011a18:	2500      	movs	r5, #0
 8011a1a:	22a8      	movs	r2, #168	; 0xa8
 8011a1c:	2100      	movs	r1, #0
 8011a1e:	4630      	mov	r0, r6
 8011a20:	f00e ff00 	bl	8020824 <memset>
 8011a24:	f8a4 5084 	strh.w	r5, [r4, #132]	; 0x84
 8011a28:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 8011a2c:	f7ff ffe0 	bl	80119f0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011a30:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 8011a34:	f7ff ffdc 	bl	80119f0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8011a38:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 8011a3c:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 8011a40:	f8a4 5134 	strh.w	r5, [r4, #308]	; 0x134
 8011a44:	f8a4 5136 	strh.w	r5, [r4, #310]	; 0x136
 8011a48:	f884 5138 	strb.w	r5, [r4, #312]	; 0x138
 8011a4c:	490e      	ldr	r1, [pc, #56]	; (8011a88 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8011a4e:	480f      	ldr	r0, [pc, #60]	; (8011a8c <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8011a50:	4f0f      	ldr	r7, [pc, #60]	; (8011a90 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 8011a52:	f00e fd05 	bl	8020460 <CRC_Lock>
 8011a56:	4b0f      	ldr	r3, [pc, #60]	; (8011a94 <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8011a58:	b158      	cbz	r0, 8011a72 <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8011a5a:	801d      	strh	r5, [r3, #0]
 8011a5c:	4a0e      	ldr	r2, [pc, #56]	; (8011a98 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8011a5e:	2300      	movs	r3, #0
 8011a60:	6013      	str	r3, [r2, #0]
 8011a62:	4a0e      	ldr	r2, [pc, #56]	; (8011a9c <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 8011a64:	603b      	str	r3, [r7, #0]
 8011a66:	4630      	mov	r0, r6
 8011a68:	6013      	str	r3, [r2, #0]
 8011a6a:	f7ff ff32 	bl	80118d2 <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8011a6e:	4620      	mov	r0, r4
 8011a70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011a72:	f44f 6280 	mov.w	r2, #1024	; 0x400
 8011a76:	2002      	movs	r0, #2
 8011a78:	801a      	strh	r2, [r3, #0]
 8011a7a:	6038      	str	r0, [r7, #0]
 8011a7c:	f001 fb14 	bl	80130a8 <_ZN8touchgfx6Screen4drawEv>
 8011a80:	e7ec      	b.n	8011a5c <_ZN8touchgfx11ApplicationC1Ev+0x50>
 8011a82:	bf00      	nop
 8011a84:	08023dc0 	.word	0x08023dc0
 8011a88:	b5e8b5cd 	.word	0xb5e8b5cd
 8011a8c:	f407a5c2 	.word	0xf407a5c2
 8011a90:	20011e84 	.word	0x20011e84
 8011a94:	20000060 	.word	0x20000060
 8011a98:	20011e94 	.word	0x20011e94
 8011a9c:	20011e88 	.word	0x20011e88

08011aa0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8011aa0:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 8011aa4:	3b01      	subs	r3, #1
 8011aa6:	b29b      	uxth	r3, r3
 8011aa8:	428b      	cmp	r3, r1
 8011aaa:	b510      	push	{r4, lr}
 8011aac:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 8011ab0:	d908      	bls.n	8011ac4 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 8011ab2:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 8011ab6:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8011aba:	681a      	ldr	r2, [r3, #0]
 8011abc:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8011ac0:	685a      	ldr	r2, [r3, #4]
 8011ac2:	6062      	str	r2, [r4, #4]
 8011ac4:	bd10      	pop	{r4, pc}
	...

08011ac8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8011ac8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011acc:	4b8f      	ldr	r3, [pc, #572]	; (8011d0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8011ace:	b08f      	sub	sp, #60	; 0x3c
 8011ad0:	ac0a      	add	r4, sp, #40	; 0x28
 8011ad2:	e884 0006 	stmia.w	r4, {r1, r2}
 8011ad6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8011ada:	4b8d      	ldr	r3, [pc, #564]	; (8011d10 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8011adc:	4683      	mov	fp, r0
 8011ade:	f9b3 1000 	ldrsh.w	r1, [r3]
 8011ae2:	4620      	mov	r0, r4
 8011ae4:	f7ff fe31 	bl	801174a <_ZN8touchgfx4Rect10restrictToEss>
 8011ae8:	4620      	mov	r0, r4
 8011aea:	f7fa f95a 	bl	800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011aee:	2800      	cmp	r0, #0
 8011af0:	d16a      	bne.n	8011bc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011af2:	9403      	str	r4, [sp, #12]
 8011af4:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	; 0xec
 8011af8:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 8011afc:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 8011b00:	35a4      	adds	r5, #164	; 0xa4
 8011b02:	9301      	str	r3, [sp, #4]
 8011b04:	b15c      	cbz	r4, 8011b1e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 8011b06:	4629      	mov	r1, r5
 8011b08:	9803      	ldr	r0, [sp, #12]
 8011b0a:	f7ff fe6f 	bl	80117ec <_ZNK8touchgfx4Rect8includesERKS0_>
 8011b0e:	3c01      	subs	r4, #1
 8011b10:	b118      	cbz	r0, 8011b1a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 8011b12:	b2a1      	uxth	r1, r4
 8011b14:	9801      	ldr	r0, [sp, #4]
 8011b16:	f7ff ffc3 	bl	8011aa0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011b1a:	3d08      	subs	r5, #8
 8011b1c:	e7f2      	b.n	8011b04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 8011b1e:	f8bb 80ec 	ldrh.w	r8, [fp, #236]	; 0xec
 8011b22:	f8cd 8010 	str.w	r8, [sp, #16]
 8011b26:	f108 33ff 	add.w	r3, r8, #4294967295
 8011b2a:	9302      	str	r3, [sp, #8]
 8011b2c:	ea4f 03c8 	mov.w	r3, r8, lsl #3
 8011b30:	f103 04a4 	add.w	r4, r3, #164	; 0xa4
 8011b34:	9306      	str	r3, [sp, #24]
 8011b36:	445c      	add	r4, fp
 8011b38:	2500      	movs	r5, #0
 8011b3a:	4626      	mov	r6, r4
 8011b3c:	f8cd 8014 	str.w	r8, [sp, #20]
 8011b40:	462f      	mov	r7, r5
 8011b42:	9b05      	ldr	r3, [sp, #20]
 8011b44:	2b00      	cmp	r3, #0
 8011b46:	d073      	beq.n	8011c30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8011b48:	9903      	ldr	r1, [sp, #12]
 8011b4a:	4630      	mov	r0, r6
 8011b4c:	f7ff fddb 	bl	8011706 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011b50:	b350      	cbz	r0, 8011ba8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8011b52:	f9bd e028 	ldrsh.w	lr, [sp, #40]	; 0x28
 8011b56:	f9b6 c000 	ldrsh.w	ip, [r6]
 8011b5a:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8011b5e:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8011b62:	45e6      	cmp	lr, ip
 8011b64:	db33      	blt.n	8011bce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8011b66:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8011b6a:	88b3      	ldrh	r3, [r6, #4]
 8011b6c:	4472      	add	r2, lr
 8011b6e:	4463      	add	r3, ip
 8011b70:	b212      	sxth	r2, r2
 8011b72:	b21b      	sxth	r3, r3
 8011b74:	429a      	cmp	r2, r3
 8011b76:	dc2a      	bgt.n	8011bce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8011b78:	88f3      	ldrh	r3, [r6, #6]
 8011b7a:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8011b7e:	fa1f f289 	uxth.w	r2, r9
 8011b82:	4413      	add	r3, r2
 8011b84:	b29b      	uxth	r3, r3
 8011b86:	45ca      	cmp	sl, r9
 8011b88:	fa0f fe83 	sxth.w	lr, r3
 8011b8c:	fa1f fc8a 	uxth.w	ip, sl
 8011b90:	db0f      	blt.n	8011bb2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 8011b92:	eba3 030c 	sub.w	r3, r3, ip
 8011b96:	1ac9      	subs	r1, r1, r3
 8011b98:	b209      	sxth	r1, r1
 8011b9a:	2900      	cmp	r1, #0
 8011b9c:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011ba0:	dd12      	ble.n	8011bc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011ba2:	f8ad e02a 	strh.w	lr, [sp, #42]	; 0x2a
 8011ba6:	4605      	mov	r5, r0
 8011ba8:	9b05      	ldr	r3, [sp, #20]
 8011baa:	3b01      	subs	r3, #1
 8011bac:	9305      	str	r3, [sp, #20]
 8011bae:	3e08      	subs	r6, #8
 8011bb0:	e7c7      	b.n	8011b42 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 8011bb2:	4461      	add	r1, ip
 8011bb4:	b209      	sxth	r1, r1
 8011bb6:	4571      	cmp	r1, lr
 8011bb8:	dc38      	bgt.n	8011c2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8011bba:	eba2 020c 	sub.w	r2, r2, ip
 8011bbe:	b212      	sxth	r2, r2
 8011bc0:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 8011bc4:	2a00      	cmp	r2, #0
 8011bc6:	dcee      	bgt.n	8011ba6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8011bc8:	b00f      	add	sp, #60	; 0x3c
 8011bca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011bce:	45ca      	cmp	sl, r9
 8011bd0:	db2c      	blt.n	8011c2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8011bd2:	f8bd 302e 	ldrh.w	r3, [sp, #46]	; 0x2e
 8011bd6:	449a      	add	sl, r3
 8011bd8:	88f3      	ldrh	r3, [r6, #6]
 8011bda:	4499      	add	r9, r3
 8011bdc:	fa0f fa8a 	sxth.w	sl, sl
 8011be0:	fa0f f989 	sxth.w	r9, r9
 8011be4:	45ca      	cmp	sl, r9
 8011be6:	dc21      	bgt.n	8011c2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8011be8:	88b3      	ldrh	r3, [r6, #4]
 8011bea:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8011bee:	fa1f f28c 	uxth.w	r2, ip
 8011bf2:	4413      	add	r3, r2
 8011bf4:	b29b      	uxth	r3, r3
 8011bf6:	45e6      	cmp	lr, ip
 8011bf8:	fa1f f98e 	uxth.w	r9, lr
 8011bfc:	fa0f fa83 	sxth.w	sl, r3
 8011c00:	db0a      	blt.n	8011c18 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 8011c02:	eba3 0309 	sub.w	r3, r3, r9
 8011c06:	1ac9      	subs	r1, r1, r3
 8011c08:	b209      	sxth	r1, r1
 8011c0a:	2900      	cmp	r1, #0
 8011c0c:	f8ad 102c 	strh.w	r1, [sp, #44]	; 0x2c
 8011c10:	ddda      	ble.n	8011bc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8011c12:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8011c16:	e7c6      	b.n	8011ba6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8011c18:	4449      	add	r1, r9
 8011c1a:	b209      	sxth	r1, r1
 8011c1c:	4551      	cmp	r1, sl
 8011c1e:	dc05      	bgt.n	8011c2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8011c20:	eba2 0209 	sub.w	r2, r2, r9
 8011c24:	b212      	sxth	r2, r2
 8011c26:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 8011c2a:	e7cb      	b.n	8011bc4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 8011c2c:	4607      	mov	r7, r0
 8011c2e:	e7bb      	b.n	8011ba8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 8011c30:	2d00      	cmp	r5, #0
 8011c32:	d181      	bne.n	8011b38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 8011c34:	2f00      	cmp	r7, #0
 8011c36:	f000 81dd 	beq.w	8011ff4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8011c3a:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	; 0x28
 8011c3e:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	; 0x2a
 8011c42:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8011c46:	f8bd a02e 	ldrh.w	sl, [sp, #46]	; 0x2e
 8011c4a:	b2b9      	uxth	r1, r7
 8011c4c:	b2b3      	uxth	r3, r6
 8011c4e:	441a      	add	r2, r3
 8011c50:	448a      	add	sl, r1
 8011c52:	b292      	uxth	r2, r2
 8011c54:	fa1f fa8a 	uxth.w	sl, sl
 8011c58:	fa0f f882 	sxth.w	r8, r2
 8011c5c:	9105      	str	r1, [sp, #20]
 8011c5e:	fa0f f98a 	sxth.w	r9, sl
 8011c62:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8011c66:	9b04      	ldr	r3, [sp, #16]
 8011c68:	2b00      	cmp	r3, #0
 8011c6a:	d053      	beq.n	8011d14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8011c6c:	9903      	ldr	r1, [sp, #12]
 8011c6e:	4620      	mov	r0, r4
 8011c70:	f7ff fd49 	bl	8011706 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011c74:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8011c78:	b1c0      	cbz	r0, 8011cac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8011c7a:	f9b4 e000 	ldrsh.w	lr, [r4]
 8011c7e:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8011c82:	4576      	cmp	r6, lr
 8011c84:	dc23      	bgt.n	8011cce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8011c86:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8011c8a:	44f4      	add	ip, lr
 8011c8c:	fa0f fc8c 	sxth.w	ip, ip
 8011c90:	45e0      	cmp	r8, ip
 8011c92:	db1c      	blt.n	8011cce <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8011c94:	428f      	cmp	r7, r1
 8011c96:	fa1f fc81 	uxth.w	ip, r1
 8011c9a:	88e1      	ldrh	r1, [r4, #6]
 8011c9c:	dc0d      	bgt.n	8011cba <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 8011c9e:	ebaa 0c0c 	sub.w	ip, sl, ip
 8011ca2:	eba1 010c 	sub.w	r1, r1, ip
 8011ca6:	f8a4 9002 	strh.w	r9, [r4, #2]
 8011caa:	80e1      	strh	r1, [r4, #6]
 8011cac:	4628      	mov	r0, r5
 8011cae:	9904      	ldr	r1, [sp, #16]
 8011cb0:	3901      	subs	r1, #1
 8011cb2:	9104      	str	r1, [sp, #16]
 8011cb4:	3c08      	subs	r4, #8
 8011cb6:	4605      	mov	r5, r0
 8011cb8:	e7d3      	b.n	8011c62 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19a>
 8011cba:	4461      	add	r1, ip
 8011cbc:	b209      	sxth	r1, r1
 8011cbe:	4549      	cmp	r1, r9
 8011cc0:	dcf5      	bgt.n	8011cae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8011cc2:	9905      	ldr	r1, [sp, #20]
 8011cc4:	eba1 0c0c 	sub.w	ip, r1, ip
 8011cc8:	f8a4 c006 	strh.w	ip, [r4, #6]
 8011ccc:	e7ee      	b.n	8011cac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8011cce:	428f      	cmp	r7, r1
 8011cd0:	dced      	bgt.n	8011cae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8011cd2:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 8011cd6:	4461      	add	r1, ip
 8011cd8:	b209      	sxth	r1, r1
 8011cda:	4589      	cmp	r9, r1
 8011cdc:	dbe7      	blt.n	8011cae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8011cde:	4576      	cmp	r6, lr
 8011ce0:	fa1f fc8e 	uxth.w	ip, lr
 8011ce4:	88a1      	ldrh	r1, [r4, #4]
 8011ce6:	dc07      	bgt.n	8011cf8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 8011ce8:	eba2 0c0c 	sub.w	ip, r2, ip
 8011cec:	eba1 010c 	sub.w	r1, r1, ip
 8011cf0:	f8a4 8000 	strh.w	r8, [r4]
 8011cf4:	80a1      	strh	r1, [r4, #4]
 8011cf6:	e7d9      	b.n	8011cac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8011cf8:	4461      	add	r1, ip
 8011cfa:	b209      	sxth	r1, r1
 8011cfc:	4588      	cmp	r8, r1
 8011cfe:	dbd6      	blt.n	8011cae <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8011d00:	eba3 0c0c 	sub.w	ip, r3, ip
 8011d04:	f8a4 c004 	strh.w	ip, [r4, #4]
 8011d08:	e7d0      	b.n	8011cac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 8011d0a:	bf00      	nop
 8011d0c:	20011e36 	.word	0x20011e36
 8011d10:	20011e34 	.word	0x20011e34
 8011d14:	2d00      	cmp	r5, #0
 8011d16:	f000 816d 	beq.w	8011ff4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8011d1a:	9b06      	ldr	r3, [sp, #24]
 8011d1c:	445b      	add	r3, fp
 8011d1e:	461c      	mov	r4, r3
 8011d20:	9b02      	ldr	r3, [sp, #8]
 8011d22:	3301      	adds	r3, #1
 8011d24:	f000 8166 	beq.w	8011ff4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 8011d28:	f104 05a4 	add.w	r5, r4, #164	; 0xa4
 8011d2c:	4629      	mov	r1, r5
 8011d2e:	9803      	ldr	r0, [sp, #12]
 8011d30:	f7ff fd5c 	bl	80117ec <_ZNK8touchgfx4Rect8includesERKS0_>
 8011d34:	b120      	cbz	r0, 8011d40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 8011d36:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8011d3a:	9801      	ldr	r0, [sp, #4]
 8011d3c:	f7ff feb0 	bl	8011aa0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8011d40:	9903      	ldr	r1, [sp, #12]
 8011d42:	4628      	mov	r0, r5
 8011d44:	f7ff fcdf 	bl	8011706 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8011d48:	2800      	cmp	r0, #0
 8011d4a:	f000 809c 	beq.w	8011e86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8011d4e:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	; 0xa4
 8011d52:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 8011d56:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 8011d5a:	9309      	str	r3, [sp, #36]	; 0x24
 8011d5c:	fa1f f189 	uxth.w	r1, r9
 8011d60:	eb01 0c03 	add.w	ip, r1, r3
 8011d64:	fa1f fa8c 	uxth.w	sl, ip
 8011d68:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 8011d6c:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	; 0x2a
 8011d70:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	; 0xa6
 8011d74:	b283      	uxth	r3, r0
 8011d76:	eb03 050c 	add.w	r5, r3, ip
 8011d7a:	b2ad      	uxth	r5, r5
 8011d7c:	9505      	str	r5, [sp, #20]
 8011d7e:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 8011d82:	9504      	str	r5, [sp, #16]
 8011d84:	4548      	cmp	r0, r9
 8011d86:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	; 0xec
 8011d8a:	f340 8099 	ble.w	8011ec0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8011d8e:	1a5b      	subs	r3, r3, r1
 8011d90:	b29b      	uxth	r3, r3
 8011d92:	4596      	cmp	lr, r2
 8011d94:	fa0f f08a 	sxth.w	r0, sl
 8011d98:	b21e      	sxth	r6, r3
 8011d9a:	dd2e      	ble.n	8011dfa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8011d9c:	9f02      	ldr	r7, [sp, #8]
 8011d9e:	f8bd 402e 	ldrh.w	r4, [sp, #46]	; 0x2e
 8011da2:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 8011da6:	9f04      	ldr	r7, [sp, #16]
 8011da8:	1a3f      	subs	r7, r7, r0
 8011daa:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	; 0xb2
 8011dae:	fa1f fe8e 	uxth.w	lr, lr
 8011db2:	b292      	uxth	r2, r2
 8011db4:	ebae 0102 	sub.w	r1, lr, r2
 8011db8:	44a6      	add	lr, r4
 8011dba:	4402      	add	r2, r0
 8011dbc:	b289      	uxth	r1, r1
 8011dbe:	fa0f fe8e 	sxth.w	lr, lr
 8011dc2:	b212      	sxth	r2, r2
 8011dc4:	b20d      	sxth	r5, r1
 8011dc6:	ebae 0202 	sub.w	r2, lr, r2
 8011dca:	436f      	muls	r7, r5
 8011dcc:	4372      	muls	r2, r6
 8011dce:	4297      	cmp	r7, r2
 8011dd0:	db09      	blt.n	8011de6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 8011dd2:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	; 0xac
 8011dd6:	f8a8 50b2 	strh.w	r5, [r8, #178]	; 0xb2
 8011dda:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8011dde:	449c      	add	ip, r3
 8011de0:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011de4:	e686      	b.n	8011af4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011de6:	4421      	add	r1, r4
 8011de8:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	; 0xae
 8011dec:	f8a8 60b0 	strh.w	r6, [r8, #176]	; 0xb0
 8011df0:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011df4:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8011df8:	e67c      	b.n	8011af4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011dfa:	9f04      	ldr	r7, [sp, #16]
 8011dfc:	42b8      	cmp	r0, r7
 8011dfe:	da27      	bge.n	8011e50 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 8011e00:	9902      	ldr	r1, [sp, #8]
 8011e02:	f8bd 502e 	ldrh.w	r5, [sp, #46]	; 0x2e
 8011e06:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 8011e0a:	eb05 010e 	add.w	r1, r5, lr
 8011e0e:	fa1f f881 	uxth.w	r8, r1
 8011e12:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	; 0xb2
 8011e16:	4411      	add	r1, r2
 8011e18:	eba1 0108 	sub.w	r1, r1, r8
 8011e1c:	b289      	uxth	r1, r1
 8011e1e:	fa0f f988 	sxth.w	r9, r8
 8011e22:	eba2 020e 	sub.w	r2, r2, lr
 8011e26:	fa0f f881 	sxth.w	r8, r1
 8011e2a:	1a3f      	subs	r7, r7, r0
 8011e2c:	4372      	muls	r2, r6
 8011e2e:	fb08 f707 	mul.w	r7, r8, r7
 8011e32:	42ba      	cmp	r2, r7
 8011e34:	dc06      	bgt.n	8011e44 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 8011e36:	f8a4 90ae 	strh.w	r9, [r4, #174]	; 0xae
 8011e3a:	f8a4 80b2 	strh.w	r8, [r4, #178]	; 0xb2
 8011e3e:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	; 0xac
 8011e42:	e7ca      	b.n	8011dda <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 8011e44:	f8a4 60b0 	strh.w	r6, [r4, #176]	; 0xb0
 8011e48:	4429      	add	r1, r5
 8011e4a:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011e4e:	e651      	b.n	8011af4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011e50:	9805      	ldr	r0, [sp, #20]
 8011e52:	ebaa 0000 	sub.w	r0, sl, r0
 8011e56:	b280      	uxth	r0, r0
 8011e58:	2d06      	cmp	r5, #6
 8011e5a:	fa0f fe80 	sxth.w	lr, r0
 8011e5e:	d817      	bhi.n	8011e90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8011e60:	9b04      	ldr	r3, [sp, #16]
 8011e62:	f8a4 30a4 	strh.w	r3, [r4, #164]	; 0xa4
 8011e66:	1c6b      	adds	r3, r5, #1
 8011e68:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	; 0xaa
 8011e6c:	f8a4 e0a8 	strh.w	lr, [r4, #168]	; 0xa8
 8011e70:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8011e74:	9b01      	ldr	r3, [sp, #4]
 8011e76:	9801      	ldr	r0, [sp, #4]
 8011e78:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8011e7c:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8011e80:	805a      	strh	r2, [r3, #2]
 8011e82:	809e      	strh	r6, [r3, #4]
 8011e84:	80d9      	strh	r1, [r3, #6]
 8011e86:	9b02      	ldr	r3, [sp, #8]
 8011e88:	3b01      	subs	r3, #1
 8011e8a:	9302      	str	r3, [sp, #8]
 8011e8c:	3c08      	subs	r4, #8
 8011e8e:	e747      	b.n	8011d20 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8011e90:	9a02      	ldr	r2, [sp, #8]
 8011e92:	45b6      	cmp	lr, r6
 8011e94:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8011e98:	db0d      	blt.n	8011eb6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8011e9a:	449c      	add	ip, r3
 8011e9c:	fa1f fc8c 	uxth.w	ip, ip
 8011ea0:	445a      	add	r2, fp
 8011ea2:	f8ad c02c 	strh.w	ip, [sp, #44]	; 0x2c
 8011ea6:	448c      	add	ip, r1
 8011ea8:	f8ad 9028 	strh.w	r9, [sp, #40]	; 0x28
 8011eac:	f8a2 c0ac 	strh.w	ip, [r2, #172]	; 0xac
 8011eb0:	f8a2 e0b0 	strh.w	lr, [r2, #176]	; 0xb0
 8011eb4:	e61e      	b.n	8011af4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011eb6:	445a      	add	r2, fp
 8011eb8:	4484      	add	ip, r0
 8011eba:	f8a2 60b0 	strh.w	r6, [r2, #176]	; 0xb0
 8011ebe:	e78f      	b.n	8011de0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8011ec0:	f8bd 602e 	ldrh.w	r6, [sp, #46]	; 0x2e
 8011ec4:	fa1f f18e 	uxth.w	r1, lr
 8011ec8:	eb01 0806 	add.w	r8, r1, r6
 8011ecc:	b293      	uxth	r3, r2
 8011ece:	fa1f f888 	uxth.w	r8, r8
 8011ed2:	9306      	str	r3, [sp, #24]
 8011ed4:	fa0f f388 	sxth.w	r3, r8
 8011ed8:	9307      	str	r3, [sp, #28]
 8011eda:	9f06      	ldr	r7, [sp, #24]
 8011edc:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	; 0xaa
 8011ee0:	443b      	add	r3, r7
 8011ee2:	b29b      	uxth	r3, r3
 8011ee4:	4596      	cmp	lr, r2
 8011ee6:	9308      	str	r3, [sp, #32]
 8011ee8:	da24      	bge.n	8011f34 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 8011eea:	9905      	ldr	r1, [sp, #20]
 8011eec:	eba3 0308 	sub.w	r3, r3, r8
 8011ef0:	ebaa 0401 	sub.w	r4, sl, r1
 8011ef4:	b2a4      	uxth	r4, r4
 8011ef6:	b29b      	uxth	r3, r3
 8011ef8:	b225      	sxth	r5, r4
 8011efa:	b219      	sxth	r1, r3
 8011efc:	eba2 020e 	sub.w	r2, r2, lr
 8011f00:	eba9 0000 	sub.w	r0, r9, r0
 8011f04:	436a      	muls	r2, r5
 8011f06:	4348      	muls	r0, r1
 8011f08:	4282      	cmp	r2, r0
 8011f0a:	9a02      	ldr	r2, [sp, #8]
 8011f0c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8011f10:	445a      	add	r2, fp
 8011f12:	dc06      	bgt.n	8011f22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 8011f14:	9b07      	ldr	r3, [sp, #28]
 8011f16:	f8a2 10b2 	strh.w	r1, [r2, #178]	; 0xb2
 8011f1a:	f8a2 30ae 	strh.w	r3, [r2, #174]	; 0xae
 8011f1e:	44a4      	add	ip, r4
 8011f20:	e75e      	b.n	8011de0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8011f22:	9904      	ldr	r1, [sp, #16]
 8011f24:	f8a2 50b0 	strh.w	r5, [r2, #176]	; 0xb0
 8011f28:	f8a2 10ac 	strh.w	r1, [r2, #172]	; 0xac
 8011f2c:	4433      	add	r3, r6
 8011f2e:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 8011f32:	e5df      	b.n	8011af4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011f34:	9f06      	ldr	r7, [sp, #24]
 8011f36:	9b04      	ldr	r3, [sp, #16]
 8011f38:	1bc9      	subs	r1, r1, r7
 8011f3a:	fa0f f78a 	sxth.w	r7, sl
 8011f3e:	b289      	uxth	r1, r1
 8011f40:	429f      	cmp	r7, r3
 8011f42:	fa0f fe81 	sxth.w	lr, r1
 8011f46:	dd23      	ble.n	8011f90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8011f48:	9a05      	ldr	r2, [sp, #20]
 8011f4a:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8011f4e:	9d07      	ldr	r5, [sp, #28]
 8011f50:	ebaa 0202 	sub.w	r2, sl, r2
 8011f54:	b292      	uxth	r2, r2
 8011f56:	eba5 0a03 	sub.w	sl, r5, r3
 8011f5a:	b214      	sxth	r4, r2
 8011f5c:	eba9 0000 	sub.w	r0, r9, r0
 8011f60:	9b02      	ldr	r3, [sp, #8]
 8011f62:	fb0e f000 	mul.w	r0, lr, r0
 8011f66:	fb04 fa0a 	mul.w	sl, r4, sl
 8011f6a:	00db      	lsls	r3, r3, #3
 8011f6c:	4550      	cmp	r0, sl
 8011f6e:	445b      	add	r3, fp
 8011f70:	db03      	blt.n	8011f7a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 8011f72:	f8a3 e0b2 	strh.w	lr, [r3, #178]	; 0xb2
 8011f76:	4494      	add	ip, r2
 8011f78:	e732      	b.n	8011de0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8011f7a:	9a04      	ldr	r2, [sp, #16]
 8011f7c:	f8a3 20ac 	strh.w	r2, [r3, #172]	; 0xac
 8011f80:	f8a3 40b0 	strh.w	r4, [r3, #176]	; 0xb0
 8011f84:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	; 0xae
 8011f88:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8011f8c:	4431      	add	r1, r6
 8011f8e:	e75c      	b.n	8011e4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8011f90:	9b08      	ldr	r3, [sp, #32]
 8011f92:	eba3 0308 	sub.w	r3, r3, r8
 8011f96:	b29b      	uxth	r3, r3
 8011f98:	2d06      	cmp	r5, #6
 8011f9a:	b218      	sxth	r0, r3
 8011f9c:	d813      	bhi.n	8011fc6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8011f9e:	9b07      	ldr	r3, [sp, #28]
 8011fa0:	f8a4 30a6 	strh.w	r3, [r4, #166]	; 0xa6
 8011fa4:	1c6b      	adds	r3, r5, #1
 8011fa6:	f8a4 00aa 	strh.w	r0, [r4, #170]	; 0xaa
 8011faa:	f8ab 30ec 	strh.w	r3, [fp, #236]	; 0xec
 8011fae:	9b01      	ldr	r3, [sp, #4]
 8011fb0:	9901      	ldr	r1, [sp, #4]
 8011fb2:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8011fb6:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8011fba:	805a      	strh	r2, [r3, #2]
 8011fbc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8011fbe:	809a      	strh	r2, [r3, #4]
 8011fc0:	f8a3 e006 	strh.w	lr, [r3, #6]
 8011fc4:	e75f      	b.n	8011e86 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8011fc6:	9c02      	ldr	r4, [sp, #8]
 8011fc8:	4570      	cmp	r0, lr
 8011fca:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8011fce:	db0d      	blt.n	8011fec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8011fd0:	4431      	add	r1, r6
 8011fd2:	9b06      	ldr	r3, [sp, #24]
 8011fd4:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8011fd8:	b289      	uxth	r1, r1
 8011fda:	445c      	add	r4, fp
 8011fdc:	f8ad 102e 	strh.w	r1, [sp, #46]	; 0x2e
 8011fe0:	4419      	add	r1, r3
 8011fe2:	f8a4 10ae 	strh.w	r1, [r4, #174]	; 0xae
 8011fe6:	f8a4 00b2 	strh.w	r0, [r4, #178]	; 0xb2
 8011fea:	e583      	b.n	8011af4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8011fec:	445c      	add	r4, fp
 8011fee:	f8a4 e0b2 	strh.w	lr, [r4, #178]	; 0xb2
 8011ff2:	e79b      	b.n	8011f2c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 8011ff4:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	; 0xec
 8011ff8:	2e07      	cmp	r6, #7
 8011ffa:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8011ffe:	d812      	bhi.n	8012026 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x55e>
 8012000:	1c75      	adds	r5, r6, #1
 8012002:	f8ab 50ec 	strh.w	r5, [fp, #236]	; 0xec
 8012006:	9d01      	ldr	r5, [sp, #4]
 8012008:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	; 0x28
 801200c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	; 0x2a
 8012010:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8012014:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8012018:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 801201c:	442c      	add	r4, r5
 801201e:	8061      	strh	r1, [r4, #2]
 8012020:	80a2      	strh	r2, [r4, #4]
 8012022:	80e3      	strh	r3, [r4, #6]
 8012024:	e5d0      	b.n	8011bc8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8012026:	f10b 03ac 	add.w	r3, fp, #172	; 0xac
 801202a:	3e01      	subs	r6, #1
 801202c:	445c      	add	r4, fp
 801202e:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 8012032:	f04f 37ff 	mov.w	r7, #4294967295
 8012036:	2500      	movs	r5, #0
 8012038:	9305      	str	r3, [sp, #20]
 801203a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	; 0xa8
 801203e:	9302      	str	r3, [sp, #8]
 8012040:	1e72      	subs	r2, r6, #1
 8012042:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	; 0xaa
 8012046:	9304      	str	r3, [sp, #16]
 8012048:	4691      	mov	r9, r2
 801204a:	f104 03a4 	add.w	r3, r4, #164	; 0xa4
 801204e:	f1b9 3fff 	cmp.w	r9, #4294967295
 8012052:	bf14      	ite	ne
 8012054:	9905      	ldrne	r1, [sp, #20]
 8012056:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 801205a:	6818      	ldr	r0, [r3, #0]
 801205c:	9207      	str	r2, [sp, #28]
 801205e:	bf18      	it	ne
 8012060:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8012064:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8012068:	f8be 1006 	ldrh.w	r1, [lr, #6]
 801206c:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8012070:	9306      	str	r3, [sp, #24]
 8012072:	fb18 f801 	smulbb	r8, r8, r1
 8012076:	6859      	ldr	r1, [r3, #4]
 8012078:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 801207c:	4671      	mov	r1, lr
 801207e:	a80c      	add	r0, sp, #48	; 0x30
 8012080:	f7fb fe79 	bl	800dd76 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8012084:	f8bd 1036 	ldrh.w	r1, [sp, #54]	; 0x36
 8012088:	f8bd 0034 	ldrh.w	r0, [sp, #52]	; 0x34
 801208c:	9b04      	ldr	r3, [sp, #16]
 801208e:	9a02      	ldr	r2, [sp, #8]
 8012090:	fb10 f001 	smulbb	r0, r0, r1
 8012094:	fb02 8803 	mla	r8, r2, r3, r8
 8012098:	eba0 0108 	sub.w	r1, r0, r8
 801209c:	f04f 0c08 	mov.w	ip, #8
 80120a0:	fb90 f0fc 	sdiv	r0, r0, ip
 80120a4:	4288      	cmp	r0, r1
 80120a6:	dc20      	bgt.n	80120ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x622>
 80120a8:	4551      	cmp	r1, sl
 80120aa:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 80120ae:	da03      	bge.n	80120b8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f0>
 80120b0:	b1d9      	cbz	r1, 80120ea <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x622>
 80120b2:	468a      	mov	sl, r1
 80120b4:	464f      	mov	r7, r9
 80120b6:	4635      	mov	r5, r6
 80120b8:	f109 39ff 	add.w	r9, r9, #4294967295
 80120bc:	f119 0f02 	cmn.w	r9, #2
 80120c0:	d1c5      	bne.n	801204e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x586>
 80120c2:	4616      	mov	r6, r2
 80120c4:	3201      	adds	r2, #1
 80120c6:	f1a4 0408 	sub.w	r4, r4, #8
 80120ca:	d1b6      	bne.n	801203a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x572>
 80120cc:	9b01      	ldr	r3, [sp, #4]
 80120ce:	b2ac      	uxth	r4, r5
 80120d0:	00ed      	lsls	r5, r5, #3
 80120d2:	1958      	adds	r0, r3, r5
 80120d4:	1c7b      	adds	r3, r7, #1
 80120d6:	d10b      	bne.n	80120f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x628>
 80120d8:	4601      	mov	r1, r0
 80120da:	9803      	ldr	r0, [sp, #12]
 80120dc:	f7fb fe4b 	bl	800dd76 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80120e0:	4621      	mov	r1, r4
 80120e2:	9801      	ldr	r0, [sp, #4]
 80120e4:	f7ff fcdc 	bl	8011aa0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80120e8:	e504      	b.n	8011af4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80120ea:	464f      	mov	r7, r9
 80120ec:	4635      	mov	r5, r6
 80120ee:	e7ed      	b.n	80120cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 80120f0:	9b01      	ldr	r3, [sp, #4]
 80120f2:	00ff      	lsls	r7, r7, #3
 80120f4:	19d9      	adds	r1, r3, r7
 80120f6:	f7fb fe3e 	bl	800dd76 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 80120fa:	9b03      	ldr	r3, [sp, #12]
 80120fc:	cb03      	ldmia	r3!, {r0, r1}
 80120fe:	445f      	add	r7, fp
 8012100:	445d      	add	r5, fp
 8012102:	f8c7 00ac 	str.w	r0, [r7, #172]	; 0xac
 8012106:	f8c7 10b0 	str.w	r1, [r7, #176]	; 0xb0
 801210a:	f855 0fac 	ldr.w	r0, [r5, #172]!
 801210e:	9b03      	ldr	r3, [sp, #12]
 8012110:	6869      	ldr	r1, [r5, #4]
 8012112:	c303      	stmia	r3!, {r0, r1}
 8012114:	e7e4      	b.n	80120e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x618>
 8012116:	bf00      	nop

08012118 <_ZN8touchgfx11Application10invalidateEv>:
 8012118:	4b09      	ldr	r3, [pc, #36]	; (8012140 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 801211a:	f9b3 2000 	ldrsh.w	r2, [r3]
 801211e:	4b09      	ldr	r3, [pc, #36]	; (8012144 <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8012120:	b082      	sub	sp, #8
 8012122:	f9b3 3000 	ldrsh.w	r3, [r3]
 8012126:	f8ad 3006 	strh.w	r3, [sp, #6]
 801212a:	2100      	movs	r1, #0
 801212c:	9100      	str	r1, [sp, #0]
 801212e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8012132:	ab02      	add	r3, sp, #8
 8012134:	e913 0006 	ldmdb	r3, {r1, r2}
 8012138:	b002      	add	sp, #8
 801213a:	f7ff bcc5 	b.w	8011ac8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 801213e:	bf00      	nop
 8012140:	20011e34 	.word	0x20011e34
 8012144:	20011e36 	.word	0x20011e36

08012148 <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8012148:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801214c:	f500 7698 	add.w	r6, r0, #304	; 0x130
 8012150:	b09b      	sub	sp, #108	; 0x6c
 8012152:	4604      	mov	r4, r0
 8012154:	4630      	mov	r0, r6
 8012156:	f7f9 fe24 	bl	800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801215a:	4605      	mov	r5, r0
 801215c:	b940      	cbnz	r0, 8012170 <_ZN8touchgfx11Application15drawCachedAreasEv+0x28>
 801215e:	e896 0006 	ldmia.w	r6, {r1, r2}
 8012162:	4620      	mov	r0, r4
 8012164:	f7ff fcb0 	bl	8011ac8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8012168:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 801216c:	f8c4 5134 	str.w	r5, [r4, #308]	; 0x134
 8012170:	4bc9      	ldr	r3, [pc, #804]	; (8012498 <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8012172:	681b      	ldr	r3, [r3, #0]
 8012174:	2b00      	cmp	r3, #0
 8012176:	d03e      	beq.n	80121f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8012178:	4dc8      	ldr	r5, [pc, #800]	; (801249c <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 801217a:	4628      	mov	r0, r5
 801217c:	f7f9 fe11 	bl	800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012180:	4606      	mov	r6, r0
 8012182:	2800      	cmp	r0, #0
 8012184:	d137      	bne.n	80121f6 <_ZN8touchgfx11Application15drawCachedAreasEv+0xae>
 8012186:	4628      	mov	r0, r5
 8012188:	f7ff f9e6 	bl	8011558 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801218c:	6829      	ldr	r1, [r5, #0]
 801218e:	686a      	ldr	r2, [r5, #4]
 8012190:	4620      	mov	r0, r4
 8012192:	f7ff fc99 	bl	8011ac8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8012196:	802e      	strh	r6, [r5, #0]
 8012198:	806e      	strh	r6, [r5, #2]
 801219a:	80ae      	strh	r6, [r5, #4]
 801219c:	80ee      	strh	r6, [r5, #6]
 801219e:	ae09      	add	r6, sp, #36	; 0x24
 80121a0:	4630      	mov	r0, r6
 80121a2:	f7ff fc25 	bl	80119f0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80121a6:	4abe      	ldr	r2, [pc, #760]	; (80124a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 80121a8:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 80121ac:	8815      	ldrh	r5, [r2, #0]
 80121ae:	9202      	str	r2, [sp, #8]
 80121b0:	462b      	mov	r3, r5
 80121b2:	f104 00ac 	add.w	r0, r4, #172	; 0xac
 80121b6:	429f      	cmp	r7, r3
 80121b8:	d924      	bls.n	8012204 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbc>
 80121ba:	f8bd 1064 	ldrh.w	r1, [sp, #100]	; 0x64
 80121be:	2907      	cmp	r1, #7
 80121c0:	d816      	bhi.n	80121f0 <_ZN8touchgfx11Application15drawCachedAreasEv+0xa8>
 80121c2:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 80121c6:	f930 8033 	ldrsh.w	r8, [r0, r3, lsl #3]
 80121ca:	f9b2 9002 	ldrsh.w	r9, [r2, #2]
 80121ce:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 80121d2:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 80121d6:	1c4a      	adds	r2, r1, #1
 80121d8:	f8ad 2064 	strh.w	r2, [sp, #100]	; 0x64
 80121dc:	eb06 02c1 	add.w	r2, r6, r1, lsl #3
 80121e0:	f826 8031 	strh.w	r8, [r6, r1, lsl #3]
 80121e4:	f8a2 9002 	strh.w	r9, [r2, #2]
 80121e8:	f8a2 e004 	strh.w	lr, [r2, #4]
 80121ec:	f8a2 c006 	strh.w	ip, [r2, #6]
 80121f0:	3301      	adds	r3, #1
 80121f2:	b29b      	uxth	r3, r3
 80121f4:	e7df      	b.n	80121b6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x6e>
 80121f6:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80121fa:	2b00      	cmp	r3, #0
 80121fc:	d1cf      	bne.n	801219e <_ZN8touchgfx11Application15drawCachedAreasEv+0x56>
 80121fe:	b01b      	add	sp, #108	; 0x6c
 8012200:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012204:	462f      	mov	r7, r5
 8012206:	f8b4 312e 	ldrh.w	r3, [r4, #302]	; 0x12e
 801220a:	42bb      	cmp	r3, r7
 801220c:	d90b      	bls.n	8012226 <_ZN8touchgfx11Application15drawCachedAreasEv+0xde>
 801220e:	eb04 03c7 	add.w	r3, r4, r7, lsl #3
 8012212:	4620      	mov	r0, r4
 8012214:	f8d3 10ee 	ldr.w	r1, [r3, #238]	; 0xee
 8012218:	f8d3 20f2 	ldr.w	r2, [r3, #242]	; 0xf2
 801221c:	3701      	adds	r7, #1
 801221e:	f7ff fc53 	bl	8011ac8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8012222:	b2bf      	uxth	r7, r7
 8012224:	e7ef      	b.n	8012206 <_ZN8touchgfx11Application15drawCachedAreasEv+0xbe>
 8012226:	4a9f      	ldr	r2, [pc, #636]	; (80124a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8012228:	6813      	ldr	r3, [r2, #0]
 801222a:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 801222e:	2b01      	cmp	r3, #1
 8012230:	4690      	mov	r8, r2
 8012232:	f040 80e6 	bne.w	8012402 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ba>
 8012236:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 801223a:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	; 0xec
 801223e:	4629      	mov	r1, r5
 8012240:	33ae      	adds	r3, #174	; 0xae
 8012242:	2500      	movs	r5, #0
 8012244:	428f      	cmp	r7, r1
 8012246:	f103 0308 	add.w	r3, r3, #8
 801224a:	dd0a      	ble.n	8012262 <_ZN8touchgfx11Application15drawCachedAreasEv+0x11a>
 801224c:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 8012250:	f833 0c04 	ldrh.w	r0, [r3, #-4]
 8012254:	4402      	add	r2, r0
 8012256:	b212      	sxth	r2, r2
 8012258:	4295      	cmp	r5, r2
 801225a:	bfb8      	it	lt
 801225c:	4615      	movlt	r5, r2
 801225e:	3101      	adds	r1, #1
 8012260:	e7f0      	b.n	8012244 <_ZN8touchgfx11Application15drawCachedAreasEv+0xfc>
 8012262:	4b91      	ldr	r3, [pc, #580]	; (80124a8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8012264:	f8df b23c 	ldr.w	fp, [pc, #572]	; 80124a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>
 8012268:	881b      	ldrh	r3, [r3, #0]
 801226a:	2b0f      	cmp	r3, #15
 801226c:	bf88      	it	hi
 801226e:	ea4f 0ad3 	movhi.w	sl, r3, lsr #3
 8012272:	f04f 0300 	mov.w	r3, #0
 8012276:	e9cd 3305 	strd	r3, r3, [sp, #20]
 801227a:	bf98      	it	ls
 801227c:	f04f 0a01 	movls.w	sl, #1
 8012280:	46d8      	mov	r8, fp
 8012282:	f8bd 701a 	ldrh.w	r7, [sp, #26]
 8012286:	f8bd 0016 	ldrh.w	r0, [sp, #22]
 801228a:	4438      	add	r0, r7
 801228c:	b207      	sxth	r7, r0
 801228e:	f8db 0000 	ldr.w	r0, [fp]
 8012292:	42bd      	cmp	r5, r7
 8012294:	6803      	ldr	r3, [r0, #0]
 8012296:	f340 8084 	ble.w	80123a2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 801229a:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 801229e:	4798      	blx	r3
 80122a0:	eb07 030a 	add.w	r3, r7, sl
 80122a4:	4298      	cmp	r0, r3
 80122a6:	da07      	bge.n	80122b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 80122a8:	4285      	cmp	r5, r0
 80122aa:	dd05      	ble.n	80122b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x170>
 80122ac:	4287      	cmp	r7, r0
 80122ae:	dd6d      	ble.n	801238c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80122b0:	2f00      	cmp	r7, #0
 80122b2:	dd6b      	ble.n	801238c <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 80122b4:	4628      	mov	r0, r5
 80122b6:	e004      	b.n	80122c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17a>
 80122b8:	4287      	cmp	r7, r0
 80122ba:	dcfb      	bgt.n	80122b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x16c>
 80122bc:	42a8      	cmp	r0, r5
 80122be:	bfa8      	it	ge
 80122c0:	4628      	movge	r0, r5
 80122c2:	4b7a      	ldr	r3, [pc, #488]	; (80124ac <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>)
 80122c4:	f8ad 7016 	strh.w	r7, [sp, #22]
 80122c8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80122cc:	f8ad 3018 	strh.w	r3, [sp, #24]
 80122d0:	9b02      	ldr	r3, [sp, #8]
 80122d2:	1bc0      	subs	r0, r0, r7
 80122d4:	2200      	movs	r2, #0
 80122d6:	881f      	ldrh	r7, [r3, #0]
 80122d8:	f8ad 2014 	strh.w	r2, [sp, #20]
 80122dc:	f8ad 001a 	strh.w	r0, [sp, #26]
 80122e0:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 80122e4:	42bb      	cmp	r3, r7
 80122e6:	d9cc      	bls.n	8012282 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 80122e8:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 80122ec:	ab07      	add	r3, sp, #28
 80122ee:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80122f2:	6851      	ldr	r1, [r2, #4]
 80122f4:	c303      	stmia	r3!, {r0, r1}
 80122f6:	a905      	add	r1, sp, #20
 80122f8:	a807      	add	r0, sp, #28
 80122fa:	f7ff fa04 	bl	8011706 <_ZNK8touchgfx4Rect9intersectERKS0_>
 80122fe:	2800      	cmp	r0, #0
 8012300:	d04c      	beq.n	801239c <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8012302:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8012306:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 801230a:	f8bd 9020 	ldrh.w	r9, [sp, #32]
 801230e:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8012312:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8012316:	9303      	str	r3, [sp, #12]
 8012318:	4686      	mov	lr, r0
 801231a:	4290      	cmp	r0, r2
 801231c:	4448      	add	r0, r9
 801231e:	f8bd 9018 	ldrh.w	r9, [sp, #24]
 8012322:	bfb8      	it	lt
 8012324:	4696      	movlt	lr, r2
 8012326:	444a      	add	r2, r9
 8012328:	4299      	cmp	r1, r3
 801232a:	b280      	uxth	r0, r0
 801232c:	b292      	uxth	r2, r2
 801232e:	468c      	mov	ip, r1
 8012330:	fa0f f982 	sxth.w	r9, r2
 8012334:	bfb8      	it	lt
 8012336:	469c      	movlt	ip, r3
 8012338:	b203      	sxth	r3, r0
 801233a:	454b      	cmp	r3, r9
 801233c:	bfb8      	it	lt
 801233e:	4602      	movlt	r2, r0
 8012340:	eba2 020e 	sub.w	r2, r2, lr
 8012344:	f8ad 2020 	strh.w	r2, [sp, #32]
 8012348:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 801234c:	9b03      	ldr	r3, [sp, #12]
 801234e:	f8ad e01c 	strh.w	lr, [sp, #28]
 8012352:	4411      	add	r1, r2
 8012354:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8012358:	f8ad c01e 	strh.w	ip, [sp, #30]
 801235c:	4413      	add	r3, r2
 801235e:	b289      	uxth	r1, r1
 8012360:	b29b      	uxth	r3, r3
 8012362:	b208      	sxth	r0, r1
 8012364:	b21a      	sxth	r2, r3
 8012366:	4290      	cmp	r0, r2
 8012368:	bfb8      	it	lt
 801236a:	460b      	movlt	r3, r1
 801236c:	eba3 030c 	sub.w	r3, r3, ip
 8012370:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8012374:	a807      	add	r0, sp, #28
 8012376:	f7f9 fd14 	bl	800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>
 801237a:	b920      	cbnz	r0, 8012386 <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 801237c:	6823      	ldr	r3, [r4, #0]
 801237e:	a907      	add	r1, sp, #28
 8012380:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012382:	4620      	mov	r0, r4
 8012384:	4798      	blx	r3
 8012386:	3701      	adds	r7, #1
 8012388:	b2bf      	uxth	r7, r7
 801238a:	e7a9      	b.n	80122e0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 801238c:	f8d8 0000 	ldr.w	r0, [r8]
 8012390:	6803      	ldr	r3, [r0, #0]
 8012392:	2101      	movs	r1, #1
 8012394:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8012398:	4798      	blx	r3
 801239a:	e772      	b.n	8012282 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13a>
 801239c:	e9cd 0007 	strd	r0, r0, [sp, #28]
 80123a0:	e7e8      	b.n	8012374 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 80123a2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80123a4:	4798      	blx	r3
 80123a6:	4b42      	ldr	r3, [pc, #264]	; (80124b0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x368>)
 80123a8:	781b      	ldrb	r3, [r3, #0]
 80123aa:	2b00      	cmp	r3, #0
 80123ac:	f43f af27 	beq.w	80121fe <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 80123b0:	2300      	movs	r3, #0
 80123b2:	f8a4 312e 	strh.w	r3, [r4, #302]	; 0x12e
 80123b6:	9b02      	ldr	r3, [sp, #8]
 80123b8:	f8bd 5064 	ldrh.w	r5, [sp, #100]	; 0x64
 80123bc:	881b      	ldrh	r3, [r3, #0]
 80123be:	f104 00ee 	add.w	r0, r4, #238	; 0xee
 80123c2:	429d      	cmp	r5, r3
 80123c4:	f67f af1b 	bls.w	80121fe <_ZN8touchgfx11Application15drawCachedAreasEv+0xb6>
 80123c8:	f8b4 112e 	ldrh.w	r1, [r4, #302]	; 0x12e
 80123cc:	2907      	cmp	r1, #7
 80123ce:	d815      	bhi.n	80123fc <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b4>
 80123d0:	eb06 02c3 	add.w	r2, r6, r3, lsl #3
 80123d4:	f936 8033 	ldrsh.w	r8, [r6, r3, lsl #3]
 80123d8:	f9b2 e002 	ldrsh.w	lr, [r2, #2]
 80123dc:	f9b2 c004 	ldrsh.w	ip, [r2, #4]
 80123e0:	f9b2 7006 	ldrsh.w	r7, [r2, #6]
 80123e4:	1c4a      	adds	r2, r1, #1
 80123e6:	f8a4 212e 	strh.w	r2, [r4, #302]	; 0x12e
 80123ea:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 80123ee:	f820 8031 	strh.w	r8, [r0, r1, lsl #3]
 80123f2:	f8a2 e002 	strh.w	lr, [r2, #2]
 80123f6:	f8a2 c004 	strh.w	ip, [r2, #4]
 80123fa:	80d7      	strh	r7, [r2, #6]
 80123fc:	3301      	adds	r3, #1
 80123fe:	b29b      	uxth	r3, r3
 8012400:	e7df      	b.n	80123c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x27a>
 8012402:	2b02      	cmp	r3, #2
 8012404:	f040 8136 	bne.w	8012674 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 8012408:	4b2a      	ldr	r3, [pc, #168]	; (80124b4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x36c>)
 801240a:	781b      	ldrb	r3, [r3, #0]
 801240c:	2b01      	cmp	r3, #1
 801240e:	f104 09ac 	add.w	r9, r4, #172	; 0xac
 8012412:	f000 809c 	beq.w	801254e <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8012416:	9b02      	ldr	r3, [sp, #8]
 8012418:	f8b4 20ec 	ldrh.w	r2, [r4, #236]	; 0xec
 801241c:	f8b3 b000 	ldrh.w	fp, [r3]
 8012420:	f10b 0b01 	add.w	fp, fp, #1
 8012424:	fa1f fb8b 	uxth.w	fp, fp
 8012428:	2a00      	cmp	r2, #0
 801242a:	d0bc      	beq.n	80123a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801242c:	f8b4 50ae 	ldrh.w	r5, [r4, #174]	; 0xae
 8012430:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	; 0xb2
 8012434:	441d      	add	r5, r3
 8012436:	b22d      	sxth	r5, r5
 8012438:	4659      	mov	r1, fp
 801243a:	f04f 0800 	mov.w	r8, #0
 801243e:	b28b      	uxth	r3, r1
 8012440:	429a      	cmp	r2, r3
 8012442:	ea4f 07c8 	mov.w	r7, r8, lsl #3
 8012446:	f240 80c1 	bls.w	80125cc <_ZN8touchgfx11Application15drawCachedAreasEv+0x484>
 801244a:	4427      	add	r7, r4
 801244c:	eb04 0ec1 	add.w	lr, r4, r1, lsl #3
 8012450:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	; 0xae
 8012454:	f9be c0ae 	ldrsh.w	ip, [lr, #174]	; 0xae
 8012458:	4563      	cmp	r3, ip
 801245a:	4608      	mov	r0, r1
 801245c:	f340 80a3 	ble.w	80125a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x45e>
 8012460:	f8be 50b2 	ldrh.w	r5, [lr, #178]	; 0xb2
 8012464:	4465      	add	r5, ip
 8012466:	b22d      	sxth	r5, r5
 8012468:	429d      	cmp	r5, r3
 801246a:	bfa8      	it	ge
 801246c:	461d      	movge	r5, r3
 801246e:	3101      	adds	r1, #1
 8012470:	4680      	mov	r8, r0
 8012472:	e7e4      	b.n	801243e <_ZN8touchgfx11Application15drawCachedAreasEv+0x2f6>
 8012474:	d10b      	bne.n	801248e <_ZN8touchgfx11Application15drawCachedAreasEv+0x346>
 8012476:	f9b5 c0b2 	ldrsh.w	ip, [r5, #178]	; 0xb2
 801247a:	f9ba 10b2 	ldrsh.w	r1, [sl, #178]	; 0xb2
 801247e:	458c      	cmp	ip, r1
 8012480:	bfb4      	ite	lt
 8012482:	469c      	movlt	ip, r3
 8012484:	46bc      	movge	ip, r7
 8012486:	4572      	cmp	r2, lr
 8012488:	bfb8      	it	lt
 801248a:	4672      	movlt	r2, lr
 801248c:	e088      	b.n	80125a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 801248e:	428a      	cmp	r2, r1
 8012490:	bfb8      	it	lt
 8012492:	460a      	movlt	r2, r1
 8012494:	46bc      	mov	ip, r7
 8012496:	e083      	b.n	80125a0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x458>
 8012498:	20011e80 	.word	0x20011e80
 801249c:	20011e8c 	.word	0x20011e8c
 80124a0:	20000060 	.word	0x20000060
 80124a4:	20011e40 	.word	0x20011e40
 80124a8:	20011e36 	.word	0x20011e36
 80124ac:	20011e34 	.word	0x20011e34
 80124b0:	20011e3e 	.word	0x20011e3e
 80124b4:	20011e38 	.word	0x20011e38
 80124b8:	1961      	adds	r1, r4, r5
 80124ba:	ab07      	add	r3, sp, #28
 80124bc:	f851 0fac 	ldr.w	r0, [r1, #172]!
 80124c0:	6849      	ldr	r1, [r1, #4]
 80124c2:	c303      	stmia	r3!, {r0, r1}
 80124c4:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 80124c8:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 80124cc:	2b13      	cmp	r3, #19
 80124ce:	bfd8      	it	le
 80124d0:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 80124d4:	f8ad 201c 	strh.w	r2, [sp, #28]
 80124d8:	440b      	add	r3, r1
 80124da:	1a9b      	subs	r3, r3, r2
 80124dc:	a807      	add	r0, sp, #28
 80124de:	f8ad 3020 	strh.w	r3, [sp, #32]
 80124e2:	f7ff f853 	bl	801158c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80124e6:	a807      	add	r0, sp, #28
 80124e8:	f7f9 fc5b 	bl	800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80124ec:	bb78      	cbnz	r0, 801254e <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 80124ee:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 80124f2:	f8d8 0000 	ldr.w	r0, [r8]
 80124f6:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80124fa:	f8d0 e000 	ldr.w	lr, [r0]
 80124fe:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8012502:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8012506:	f1bc 0f14 	cmp.w	ip, #20
 801250a:	bfa8      	it	ge
 801250c:	f04f 0c14 	movge.w	ip, #20
 8012510:	fa1f fc8c 	uxth.w	ip, ip
 8012514:	f8cd c000 	str.w	ip, [sp]
 8012518:	f8de a090 	ldr.w	sl, [lr, #144]	; 0x90
 801251c:	47d0      	blx	sl
 801251e:	4682      	mov	sl, r0
 8012520:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8012524:	a807      	add	r0, sp, #28
 8012526:	f7ff f817 	bl	8011558 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 801252a:	6823      	ldr	r3, [r4, #0]
 801252c:	4425      	add	r5, r4
 801252e:	4620      	mov	r0, r4
 8012530:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012532:	a907      	add	r1, sp, #28
 8012534:	4798      	blx	r3
 8012536:	f8b5 00b0 	ldrh.w	r0, [r5, #176]	; 0xb0
 801253a:	eba0 000a 	sub.w	r0, r0, sl
 801253e:	b200      	sxth	r0, r0
 8012540:	f8a5 00b0 	strh.w	r0, [r5, #176]	; 0xb0
 8012544:	b918      	cbnz	r0, 801254e <_ZN8touchgfx11Application15drawCachedAreasEv+0x406>
 8012546:	b2b9      	uxth	r1, r7
 8012548:	4648      	mov	r0, r9
 801254a:	f7ff faa9 	bl	8011aa0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801254e:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	; 0xec
 8012552:	f1bb 0f00 	cmp.w	fp, #0
 8012556:	f43f af26 	beq.w	80123a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801255a:	9b02      	ldr	r3, [sp, #8]
 801255c:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	; 0xac
 8012560:	881b      	ldrh	r3, [r3, #0]
 8012562:	3301      	adds	r3, #1
 8012564:	b29b      	uxth	r3, r3
 8012566:	2700      	movs	r7, #0
 8012568:	b299      	uxth	r1, r3
 801256a:	458b      	cmp	fp, r1
 801256c:	ea4f 05c7 	mov.w	r5, r7, lsl #3
 8012570:	d9a2      	bls.n	80124b8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x370>
 8012572:	4425      	add	r5, r4
 8012574:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 8012578:	f8b5 10b0 	ldrh.w	r1, [r5, #176]	; 0xb0
 801257c:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 8012580:	f9ba e0ac 	ldrsh.w	lr, [sl, #172]	; 0xac
 8012584:	4408      	add	r0, r1
 8012586:	f8ba 10b0 	ldrh.w	r1, [sl, #176]	; 0xb0
 801258a:	4471      	add	r1, lr
 801258c:	b200      	sxth	r0, r0
 801258e:	b209      	sxth	r1, r1
 8012590:	4288      	cmp	r0, r1
 8012592:	469c      	mov	ip, r3
 8012594:	f6bf af6e 	bge.w	8012474 <_ZN8touchgfx11Application15drawCachedAreasEv+0x32c>
 8012598:	4586      	cmp	lr, r0
 801259a:	4672      	mov	r2, lr
 801259c:	bfb8      	it	lt
 801259e:	4602      	movlt	r2, r0
 80125a0:	3301      	adds	r3, #1
 80125a2:	4667      	mov	r7, ip
 80125a4:	e7e0      	b.n	8012568 <_ZN8touchgfx11Application15drawCachedAreasEv+0x420>
 80125a6:	d10c      	bne.n	80125c2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x47a>
 80125a8:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	; 0xb0
 80125ac:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	; 0xb0
 80125b0:	4287      	cmp	r7, r0
 80125b2:	bfb4      	ite	lt
 80125b4:	4608      	movlt	r0, r1
 80125b6:	4640      	movge	r0, r8
 80125b8:	f8be 70b2 	ldrh.w	r7, [lr, #178]	; 0xb2
 80125bc:	443b      	add	r3, r7
 80125be:	b21b      	sxth	r3, r3
 80125c0:	e752      	b.n	8012468 <_ZN8touchgfx11Application15drawCachedAreasEv+0x320>
 80125c2:	4565      	cmp	r5, ip
 80125c4:	bfa8      	it	ge
 80125c6:	4665      	movge	r5, ip
 80125c8:	4640      	mov	r0, r8
 80125ca:	e750      	b.n	801246e <_ZN8touchgfx11Application15drawCachedAreasEv+0x326>
 80125cc:	eb09 0007 	add.w	r0, r9, r7
 80125d0:	4427      	add	r7, r4
 80125d2:	9203      	str	r2, [sp, #12]
 80125d4:	f9b7 a0b2 	ldrsh.w	sl, [r7, #178]	; 0xb2
 80125d8:	f1ba 0f13 	cmp.w	sl, #19
 80125dc:	bfde      	ittt	le
 80125de:	f8b7 50ae 	ldrhle.w	r5, [r7, #174]	; 0xae
 80125e2:	4455      	addle	r5, sl
 80125e4:	b22d      	sxthle	r5, r5
 80125e6:	f7f9 fbdc 	bl	800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>
 80125ea:	9a03      	ldr	r2, [sp, #12]
 80125ec:	2800      	cmp	r0, #0
 80125ee:	f47f af1b 	bne.w	8012428 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2e0>
 80125f2:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	; 0xae
 80125f6:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 80125fa:	482a      	ldr	r0, [pc, #168]	; (80126a4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x55c>)
 80125fc:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	; 0xac
 8012600:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	; 0xb0
 8012604:	6800      	ldr	r0, [r0, #0]
 8012606:	f8ad 101c 	strh.w	r1, [sp, #28]
 801260a:	1aad      	subs	r5, r5, r2
 801260c:	2d14      	cmp	r5, #20
 801260e:	f8ad 201e 	strh.w	r2, [sp, #30]
 8012612:	f8ad 3020 	strh.w	r3, [sp, #32]
 8012616:	bfa8      	it	ge
 8012618:	2514      	movge	r5, #20
 801261a:	f8d0 c000 	ldr.w	ip, [r0]
 801261e:	b2ad      	uxth	r5, r5
 8012620:	fa1f fa8a 	uxth.w	sl, sl
 8012624:	4555      	cmp	r5, sl
 8012626:	bf94      	ite	ls
 8012628:	9500      	strls	r5, [sp, #0]
 801262a:	f8cd a000 	strhi.w	sl, [sp]
 801262e:	b292      	uxth	r2, r2
 8012630:	f8dc 5090 	ldr.w	r5, [ip, #144]	; 0x90
 8012634:	b29b      	uxth	r3, r3
 8012636:	b289      	uxth	r1, r1
 8012638:	47a8      	blx	r5
 801263a:	6823      	ldr	r3, [r4, #0]
 801263c:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 8012640:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8012642:	a907      	add	r1, sp, #28
 8012644:	4620      	mov	r0, r4
 8012646:	4798      	blx	r3
 8012648:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 801264c:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	; 0xb2
 8012650:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	; 0xae
 8012654:	1a5b      	subs	r3, r3, r1
 8012656:	440a      	add	r2, r1
 8012658:	b21b      	sxth	r3, r3
 801265a:	f8a7 20ae 	strh.w	r2, [r7, #174]	; 0xae
 801265e:	f8a7 30b2 	strh.w	r3, [r7, #178]	; 0xb2
 8012662:	2b00      	cmp	r3, #0
 8012664:	f47f aed7 	bne.w	8012416 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8012668:	fa1f f188 	uxth.w	r1, r8
 801266c:	4648      	mov	r0, r9
 801266e:	f7ff fa17 	bl	8011aa0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8012672:	e6d0      	b.n	8012416 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ce>
 8012674:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	; 0xec
 8012678:	42ab      	cmp	r3, r5
 801267a:	f67f ae94 	bls.w	80123a6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801267e:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 8012682:	ab07      	add	r3, sp, #28
 8012684:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8012688:	6851      	ldr	r1, [r2, #4]
 801268a:	c303      	stmia	r3!, {r0, r1}
 801268c:	a807      	add	r0, sp, #28
 801268e:	f7f9 fb88 	bl	800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8012692:	b920      	cbnz	r0, 801269e <_ZN8touchgfx11Application15drawCachedAreasEv+0x556>
 8012694:	6823      	ldr	r3, [r4, #0]
 8012696:	a907      	add	r1, sp, #28
 8012698:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801269a:	4620      	mov	r0, r4
 801269c:	4798      	blx	r3
 801269e:	3501      	adds	r5, #1
 80126a0:	b2ad      	uxth	r5, r5
 80126a2:	e7e7      	b.n	8012674 <_ZN8touchgfx11Application15drawCachedAreasEv+0x52c>
 80126a4:	20011e40 	.word	0x20011e40

080126a8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80126a8:	4b03      	ldr	r3, [pc, #12]	; (80126b8 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80126aa:	2200      	movs	r2, #0
 80126ac:	801a      	strh	r2, [r3, #0]
 80126ae:	805a      	strh	r2, [r3, #2]
 80126b0:	809a      	strh	r2, [r3, #4]
 80126b2:	80da      	strh	r2, [r3, #6]
 80126b4:	4770      	bx	lr
 80126b6:	bf00      	nop
 80126b8:	20011e8c 	.word	0x20011e8c

080126bc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80126bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80126c0:	4606      	mov	r6, r0
 80126c2:	b09d      	sub	sp, #116	; 0x74
 80126c4:	a803      	add	r0, sp, #12
 80126c6:	4614      	mov	r4, r2
 80126c8:	468a      	mov	sl, r1
 80126ca:	461d      	mov	r5, r3
 80126cc:	f000 fe66 	bl	801339c <_ZN8touchgfx12TextProviderC1Ev>
 80126d0:	6833      	ldr	r3, [r6, #0]
 80126d2:	4630      	mov	r0, r6
 80126d4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80126d6:	4798      	blx	r3
 80126d8:	6833      	ldr	r3, [r6, #0]
 80126da:	4607      	mov	r7, r0
 80126dc:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80126de:	4630      	mov	r0, r6
 80126e0:	4798      	blx	r3
 80126e2:	462a      	mov	r2, r5
 80126e4:	9000      	str	r0, [sp, #0]
 80126e6:	4621      	mov	r1, r4
 80126e8:	463b      	mov	r3, r7
 80126ea:	a803      	add	r0, sp, #12
 80126ec:	f000 feb1 	bl	8013452 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80126f0:	2500      	movs	r5, #0
 80126f2:	462c      	mov	r4, r5
 80126f4:	46a9      	mov	r9, r5
 80126f6:	46a8      	mov	r8, r5
 80126f8:	f242 0b0b 	movw	fp, #8203	; 0x200b
 80126fc:	2300      	movs	r3, #0
 80126fe:	9302      	str	r3, [sp, #8]
 8012700:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 8012704:	429c      	cmp	r4, r3
 8012706:	d002      	beq.n	801270e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8012708:	455c      	cmp	r4, fp
 801270a:	bf18      	it	ne
 801270c:	4625      	movne	r5, r4
 801270e:	ab02      	add	r3, sp, #8
 8012710:	4632      	mov	r2, r6
 8012712:	4651      	mov	r1, sl
 8012714:	a803      	add	r0, sp, #12
 8012716:	f001 f99f 	bl	8013a58 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801271a:	4604      	mov	r4, r0
 801271c:	b108      	cbz	r0, 8012722 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801271e:	280a      	cmp	r0, #10
 8012720:	d10a      	bne.n	8012738 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 8012722:	45c1      	cmp	r9, r8
 8012724:	bf38      	it	cc
 8012726:	46c1      	movcc	r9, r8
 8012728:	f04f 0800 	mov.w	r8, #0
 801272c:	2c00      	cmp	r4, #0
 801272e:	d1e5      	bne.n	80126fc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 8012730:	4648      	mov	r0, r9
 8012732:	b01d      	add	sp, #116	; 0x74
 8012734:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012738:	9a02      	ldr	r2, [sp, #8]
 801273a:	2a00      	cmp	r2, #0
 801273c:	d0de      	beq.n	80126fc <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801273e:	7b57      	ldrb	r7, [r2, #13]
 8012740:	6833      	ldr	r3, [r6, #0]
 8012742:	8894      	ldrh	r4, [r2, #4]
 8012744:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012746:	007f      	lsls	r7, r7, #1
 8012748:	f407 7080 	and.w	r0, r7, #256	; 0x100
 801274c:	7a97      	ldrb	r7, [r2, #10]
 801274e:	4629      	mov	r1, r5
 8012750:	4307      	orrs	r7, r0
 8012752:	4630      	mov	r0, r6
 8012754:	4798      	blx	r3
 8012756:	4438      	add	r0, r7
 8012758:	4480      	add	r8, r0
 801275a:	fa1f f888 	uxth.w	r8, r8
 801275e:	e7e5      	b.n	801272c <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

08012760 <_ZNK8touchgfx4Font12getCharWidthEt>:
 8012760:	b508      	push	{r3, lr}
 8012762:	6803      	ldr	r3, [r0, #0]
 8012764:	68db      	ldr	r3, [r3, #12]
 8012766:	4798      	blx	r3
 8012768:	b128      	cbz	r0, 8012776 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 801276a:	7b43      	ldrb	r3, [r0, #13]
 801276c:	7a80      	ldrb	r0, [r0, #10]
 801276e:	005b      	lsls	r3, r3, #1
 8012770:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8012774:	4318      	orrs	r0, r3
 8012776:	bd08      	pop	{r3, pc}

08012778 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8012778:	b40e      	push	{r1, r2, r3}
 801277a:	b5f0      	push	{r4, r5, r6, r7, lr}
 801277c:	b09e      	sub	sp, #120	; 0x78
 801277e:	ab23      	add	r3, sp, #140	; 0x8c
 8012780:	4605      	mov	r5, r0
 8012782:	f853 4b04 	ldr.w	r4, [r3], #4
 8012786:	9303      	str	r3, [sp, #12]
 8012788:	a805      	add	r0, sp, #20
 801278a:	f000 fe07 	bl	801339c <_ZN8touchgfx12TextProviderC1Ev>
 801278e:	682b      	ldr	r3, [r5, #0]
 8012790:	4628      	mov	r0, r5
 8012792:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012794:	4798      	blx	r3
 8012796:	682b      	ldr	r3, [r5, #0]
 8012798:	4606      	mov	r6, r0
 801279a:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801279c:	4628      	mov	r0, r5
 801279e:	4798      	blx	r3
 80127a0:	4633      	mov	r3, r6
 80127a2:	ae1e      	add	r6, sp, #120	; 0x78
 80127a4:	4621      	mov	r1, r4
 80127a6:	9000      	str	r0, [sp, #0]
 80127a8:	9a03      	ldr	r2, [sp, #12]
 80127aa:	2400      	movs	r4, #0
 80127ac:	a805      	add	r0, sp, #20
 80127ae:	f000 fe50 	bl	8013452 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80127b2:	f846 4d68 	str.w	r4, [r6, #-104]!
 80127b6:	462a      	mov	r2, r5
 80127b8:	4633      	mov	r3, r6
 80127ba:	4621      	mov	r1, r4
 80127bc:	a805      	add	r0, sp, #20
 80127be:	f001 f94b 	bl	8013a58 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80127c2:	b1f0      	cbz	r0, 8012802 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 80127c4:	280a      	cmp	r0, #10
 80127c6:	d018      	beq.n	80127fa <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80127c8:	9f04      	ldr	r7, [sp, #16]
 80127ca:	b1b7      	cbz	r7, 80127fa <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80127cc:	7b78      	ldrb	r0, [r7, #13]
 80127ce:	7a3b      	ldrb	r3, [r7, #8]
 80127d0:	88ea      	ldrh	r2, [r5, #6]
 80127d2:	00c1      	lsls	r1, r0, #3
 80127d4:	f401 7180 	and.w	r1, r1, #256	; 0x100
 80127d8:	4319      	orrs	r1, r3
 80127da:	0643      	lsls	r3, r0, #25
 80127dc:	bf44      	itt	mi
 80127de:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 80127e2:	b219      	sxthmi	r1, r3
 80127e4:	0100      	lsls	r0, r0, #4
 80127e6:	79fb      	ldrb	r3, [r7, #7]
 80127e8:	f400 7080 	and.w	r0, r0, #256	; 0x100
 80127ec:	4303      	orrs	r3, r0
 80127ee:	4413      	add	r3, r2
 80127f0:	1a5b      	subs	r3, r3, r1
 80127f2:	b21b      	sxth	r3, r3
 80127f4:	429c      	cmp	r4, r3
 80127f6:	bfb8      	it	lt
 80127f8:	461c      	movlt	r4, r3
 80127fa:	4633      	mov	r3, r6
 80127fc:	462a      	mov	r2, r5
 80127fe:	2100      	movs	r1, #0
 8012800:	e7dc      	b.n	80127bc <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 8012802:	b2a0      	uxth	r0, r4
 8012804:	b01e      	add	sp, #120	; 0x78
 8012806:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801280a:	b003      	add	sp, #12
 801280c:	4770      	bx	lr

0801280e <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801280e:	7a43      	ldrb	r3, [r0, #9]
 8012810:	8880      	ldrh	r0, [r0, #4]
 8012812:	4418      	add	r0, r3
 8012814:	b280      	uxth	r0, r0
 8012816:	4770      	bx	lr

08012818 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8012818:	6803      	ldr	r3, [r0, #0]
 801281a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801281c:	4718      	bx	r3

0801281e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801281e:	b40e      	push	{r1, r2, r3}
 8012820:	b570      	push	{r4, r5, r6, lr}
 8012822:	b09d      	sub	sp, #116	; 0x74
 8012824:	ab21      	add	r3, sp, #132	; 0x84
 8012826:	4604      	mov	r4, r0
 8012828:	f853 5b04 	ldr.w	r5, [r3], #4
 801282c:	9302      	str	r3, [sp, #8]
 801282e:	a803      	add	r0, sp, #12
 8012830:	f000 fdb4 	bl	801339c <_ZN8touchgfx12TextProviderC1Ev>
 8012834:	6823      	ldr	r3, [r4, #0]
 8012836:	4620      	mov	r0, r4
 8012838:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801283a:	4798      	blx	r3
 801283c:	6823      	ldr	r3, [r4, #0]
 801283e:	4606      	mov	r6, r0
 8012840:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8012842:	4620      	mov	r0, r4
 8012844:	4798      	blx	r3
 8012846:	4633      	mov	r3, r6
 8012848:	9000      	str	r0, [sp, #0]
 801284a:	9a02      	ldr	r2, [sp, #8]
 801284c:	4629      	mov	r1, r5
 801284e:	a803      	add	r0, sp, #12
 8012850:	f000 fdff 	bl	8013452 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8012854:	a803      	add	r0, sp, #12
 8012856:	f001 f9cd 	bl	8013bf4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 801285a:	2401      	movs	r4, #1
 801285c:	b2a3      	uxth	r3, r4
 801285e:	b140      	cbz	r0, 8012872 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 8012860:	280a      	cmp	r0, #10
 8012862:	bf08      	it	eq
 8012864:	3301      	addeq	r3, #1
 8012866:	a803      	add	r0, sp, #12
 8012868:	bf08      	it	eq
 801286a:	b21c      	sxtheq	r4, r3
 801286c:	f001 f9c2 	bl	8013bf4 <_ZN8touchgfx12TextProvider11getNextCharEv>
 8012870:	e7f4      	b.n	801285c <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 8012872:	4618      	mov	r0, r3
 8012874:	b01d      	add	sp, #116	; 0x74
 8012876:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801287a:	b003      	add	sp, #12
 801287c:	4770      	bx	lr

0801287e <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801287e:	b40e      	push	{r1, r2, r3}
 8012880:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012882:	b09e      	sub	sp, #120	; 0x78
 8012884:	ab23      	add	r3, sp, #140	; 0x8c
 8012886:	4604      	mov	r4, r0
 8012888:	f853 5b04 	ldr.w	r5, [r3], #4
 801288c:	9303      	str	r3, [sp, #12]
 801288e:	a805      	add	r0, sp, #20
 8012890:	f000 fd84 	bl	801339c <_ZN8touchgfx12TextProviderC1Ev>
 8012894:	6823      	ldr	r3, [r4, #0]
 8012896:	4620      	mov	r0, r4
 8012898:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801289a:	4798      	blx	r3
 801289c:	6823      	ldr	r3, [r4, #0]
 801289e:	4606      	mov	r6, r0
 80128a0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 80128a2:	4620      	mov	r0, r4
 80128a4:	4798      	blx	r3
 80128a6:	4633      	mov	r3, r6
 80128a8:	4629      	mov	r1, r5
 80128aa:	9000      	str	r0, [sp, #0]
 80128ac:	9a03      	ldr	r2, [sp, #12]
 80128ae:	a805      	add	r0, sp, #20
 80128b0:	ad1e      	add	r5, sp, #120	; 0x78
 80128b2:	f000 fdce 	bl	8013452 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80128b6:	2100      	movs	r1, #0
 80128b8:	f845 1d68 	str.w	r1, [r5, #-104]!
 80128bc:	4622      	mov	r2, r4
 80128be:	462b      	mov	r3, r5
 80128c0:	a805      	add	r0, sp, #20
 80128c2:	f001 f8c9 	bl	8013a58 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80128c6:	f647 76ff 	movw	r6, #32767	; 0x7fff
 80128ca:	b1d8      	cbz	r0, 8012904 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80128cc:	280a      	cmp	r0, #10
 80128ce:	d012      	beq.n	80128f6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80128d0:	9804      	ldr	r0, [sp, #16]
 80128d2:	b180      	cbz	r0, 80128f6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80128d4:	7b47      	ldrb	r7, [r0, #13]
 80128d6:	88e2      	ldrh	r2, [r4, #6]
 80128d8:	00fb      	lsls	r3, r7, #3
 80128da:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80128de:	7a03      	ldrb	r3, [r0, #8]
 80128e0:	430b      	orrs	r3, r1
 80128e2:	0679      	lsls	r1, r7, #25
 80128e4:	bf44      	itt	mi
 80128e6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80128ea:	b21b      	sxthmi	r3, r3
 80128ec:	1ad3      	subs	r3, r2, r3
 80128ee:	b21b      	sxth	r3, r3
 80128f0:	429e      	cmp	r6, r3
 80128f2:	bfa8      	it	ge
 80128f4:	461e      	movge	r6, r3
 80128f6:	462b      	mov	r3, r5
 80128f8:	4622      	mov	r2, r4
 80128fa:	2100      	movs	r1, #0
 80128fc:	a805      	add	r0, sp, #20
 80128fe:	f001 f8ab 	bl	8013a58 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8012902:	e7e2      	b.n	80128ca <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8012904:	4630      	mov	r0, r6
 8012906:	b01e      	add	sp, #120	; 0x78
 8012908:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 801290c:	b003      	add	sp, #12
 801290e:	4770      	bx	lr

08012910 <_ZNK8touchgfx8Drawable10invalidateEv>:
 8012910:	b513      	push	{r0, r1, r4, lr}
 8012912:	6803      	ldr	r3, [r0, #0]
 8012914:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8012918:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801291c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012920:	2400      	movs	r4, #0
 8012922:	9400      	str	r4, [sp, #0]
 8012924:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012928:	691b      	ldr	r3, [r3, #16]
 801292a:	4669      	mov	r1, sp
 801292c:	4798      	blx	r3
 801292e:	b002      	add	sp, #8
 8012930:	bd10      	pop	{r4, pc}

08012932 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 8012932:	b538      	push	{r3, r4, r5, lr}
 8012934:	680b      	ldr	r3, [r1, #0]
 8012936:	460c      	mov	r4, r1
 8012938:	68db      	ldr	r3, [r3, #12]
 801293a:	4605      	mov	r5, r0
 801293c:	4798      	blx	r3
 801293e:	6823      	ldr	r3, [r4, #0]
 8012940:	4620      	mov	r0, r4
 8012942:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012944:	4629      	mov	r1, r5
 8012946:	4798      	blx	r3
 8012948:	4628      	mov	r0, r5
 801294a:	bd38      	pop	{r3, r4, r5, pc}

0801294c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 801294c:	b410      	push	{r4}
 801294e:	880a      	ldrh	r2, [r1, #0]
 8012950:	8884      	ldrh	r4, [r0, #4]
 8012952:	4422      	add	r2, r4
 8012954:	800a      	strh	r2, [r1, #0]
 8012956:	88c4      	ldrh	r4, [r0, #6]
 8012958:	884a      	ldrh	r2, [r1, #2]
 801295a:	4422      	add	r2, r4
 801295c:	804a      	strh	r2, [r1, #2]
 801295e:	6940      	ldr	r0, [r0, #20]
 8012960:	b120      	cbz	r0, 801296c <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 8012962:	6803      	ldr	r3, [r0, #0]
 8012964:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012968:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801296a:	4718      	bx	r3
 801296c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8012970:	4770      	bx	lr

08012972 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 8012972:	b570      	push	{r4, r5, r6, lr}
 8012974:	8882      	ldrh	r2, [r0, #4]
 8012976:	880b      	ldrh	r3, [r1, #0]
 8012978:	4413      	add	r3, r2
 801297a:	800b      	strh	r3, [r1, #0]
 801297c:	88c2      	ldrh	r2, [r0, #6]
 801297e:	884b      	ldrh	r3, [r1, #2]
 8012980:	460c      	mov	r4, r1
 8012982:	4413      	add	r3, r2
 8012984:	804b      	strh	r3, [r1, #2]
 8012986:	4605      	mov	r5, r0
 8012988:	1d01      	adds	r1, r0, #4
 801298a:	4620      	mov	r0, r4
 801298c:	f7f9 f9c6 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 8012990:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 8012994:	2b00      	cmp	r3, #0
 8012996:	dd0b      	ble.n	80129b0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 8012998:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801299c:	2b00      	cmp	r3, #0
 801299e:	dd07      	ble.n	80129b0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80129a0:	6968      	ldr	r0, [r5, #20]
 80129a2:	b128      	cbz	r0, 80129b0 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80129a4:	6803      	ldr	r3, [r0, #0]
 80129a6:	4621      	mov	r1, r4
 80129a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80129aa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80129ae:	4718      	bx	r3
 80129b0:	bd70      	pop	{r4, r5, r6, pc}
	...

080129b4 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80129b4:	b570      	push	{r4, r5, r6, lr}
 80129b6:	8882      	ldrh	r2, [r0, #4]
 80129b8:	880b      	ldrh	r3, [r1, #0]
 80129ba:	4413      	add	r3, r2
 80129bc:	800b      	strh	r3, [r1, #0]
 80129be:	88c2      	ldrh	r2, [r0, #6]
 80129c0:	884b      	ldrh	r3, [r1, #2]
 80129c2:	460c      	mov	r4, r1
 80129c4:	4413      	add	r3, r2
 80129c6:	804b      	strh	r3, [r1, #2]
 80129c8:	4605      	mov	r5, r0
 80129ca:	1d01      	adds	r1, r0, #4
 80129cc:	4620      	mov	r0, r4
 80129ce:	f7f9 f9a5 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 80129d2:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80129d6:	2b00      	cmp	r3, #0
 80129d8:	dd18      	ble.n	8012a0c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 80129da:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80129de:	2b00      	cmp	r3, #0
 80129e0:	dd14      	ble.n	8012a0c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 80129e2:	6968      	ldr	r0, [r5, #20]
 80129e4:	b128      	cbz	r0, 80129f2 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 80129e6:	6803      	ldr	r3, [r0, #0]
 80129e8:	4621      	mov	r1, r4
 80129ea:	691b      	ldr	r3, [r3, #16]
 80129ec:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80129f0:	4718      	bx	r3
 80129f2:	4b07      	ldr	r3, [pc, #28]	; (8012a10 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 80129f4:	681b      	ldr	r3, [r3, #0]
 80129f6:	3304      	adds	r3, #4
 80129f8:	429d      	cmp	r5, r3
 80129fa:	d107      	bne.n	8012a0c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x58>
 80129fc:	f7fe ff1c 	bl	8011838 <_ZN8touchgfx11Application11getInstanceEv>
 8012a00:	6821      	ldr	r1, [r4, #0]
 8012a02:	6862      	ldr	r2, [r4, #4]
 8012a04:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012a08:	f7ff b85e 	b.w	8011ac8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 8012a0c:	bd70      	pop	{r4, r5, r6, pc}
 8012a0e:	bf00      	nop
 8012a10:	20011e84 	.word	0x20011e84

08012a14 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8012a14:	b570      	push	{r4, r5, r6, lr}
 8012a16:	4604      	mov	r4, r0
 8012a18:	4616      	mov	r6, r2
 8012a1a:	460d      	mov	r5, r1
 8012a1c:	b901      	cbnz	r1, 8012a20 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 8012a1e:	b192      	cbz	r2, 8012a46 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 8012a20:	6823      	ldr	r3, [r4, #0]
 8012a22:	4620      	mov	r0, r4
 8012a24:	699b      	ldr	r3, [r3, #24]
 8012a26:	4798      	blx	r3
 8012a28:	88e2      	ldrh	r2, [r4, #6]
 8012a2a:	88a1      	ldrh	r1, [r4, #4]
 8012a2c:	4432      	add	r2, r6
 8012a2e:	4429      	add	r1, r5
 8012a30:	4620      	mov	r0, r4
 8012a32:	b212      	sxth	r2, r2
 8012a34:	b209      	sxth	r1, r1
 8012a36:	f7f1 f898 	bl	8003b6a <_ZN8touchgfx8Drawable5setXYEss>
 8012a3a:	6823      	ldr	r3, [r4, #0]
 8012a3c:	4620      	mov	r0, r4
 8012a3e:	699b      	ldr	r3, [r3, #24]
 8012a40:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8012a44:	4718      	bx	r3
 8012a46:	bd70      	pop	{r4, r5, r6, pc}

08012a48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8012a48:	b510      	push	{r4, lr}
 8012a4a:	4604      	mov	r4, r0
 8012a4c:	4608      	mov	r0, r1
 8012a4e:	2300      	movs	r3, #0
 8012a50:	8023      	strh	r3, [r4, #0]
 8012a52:	8063      	strh	r3, [r4, #2]
 8012a54:	6803      	ldr	r3, [r0, #0]
 8012a56:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012a5a:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 8012a5e:	80a1      	strh	r1, [r4, #4]
 8012a60:	80e2      	strh	r2, [r4, #6]
 8012a62:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8012a64:	4621      	mov	r1, r4
 8012a66:	4798      	blx	r3
 8012a68:	4620      	mov	r0, r4
 8012a6a:	bd10      	pop	{r4, pc}

08012a6c <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8012a6c:	b530      	push	{r4, r5, lr}
 8012a6e:	8083      	strh	r3, [r0, #4]
 8012a70:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8012a74:	80c3      	strh	r3, [r0, #6]
 8012a76:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8012a7a:	7203      	strb	r3, [r0, #8]
 8012a7c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 8012a80:	f89d 5018 	ldrb.w	r5, [sp, #24]
 8012a84:	7243      	strb	r3, [r0, #9]
 8012a86:	7a83      	ldrb	r3, [r0, #10]
 8012a88:	6141      	str	r1, [r0, #20]
 8012a8a:	f365 0306 	bfi	r3, r5, #0, #7
 8012a8e:	f89d 501c 	ldrb.w	r5, [sp, #28]
 8012a92:	8302      	strh	r2, [r0, #24]
 8012a94:	f365 13c7 	bfi	r3, r5, #7, #1
 8012a98:	7283      	strb	r3, [r0, #10]
 8012a9a:	f89d 3020 	ldrb.w	r3, [sp, #32]
 8012a9e:	72c3      	strb	r3, [r0, #11]
 8012aa0:	f89d 3024 	ldrb.w	r3, [sp, #36]	; 0x24
 8012aa4:	7303      	strb	r3, [r0, #12]
 8012aa6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	; 0x28
 8012aaa:	81c3      	strh	r3, [r0, #14]
 8012aac:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8012ab0:	8203      	strh	r3, [r0, #16]
 8012ab2:	4b01      	ldr	r3, [pc, #4]	; (8012ab8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 8012ab4:	6003      	str	r3, [r0, #0]
 8012ab6:	bd30      	pop	{r4, r5, pc}
 8012ab8:	08023e74 	.word	0x08023e74

08012abc <_ZNK8touchgfx9ConstFont4findEt>:
 8012abc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012abe:	6944      	ldr	r4, [r0, #20]
 8012ac0:	b3bc      	cbz	r4, 8012b32 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012ac2:	88a3      	ldrh	r3, [r4, #4]
 8012ac4:	8b02      	ldrh	r2, [r0, #24]
 8012ac6:	1acb      	subs	r3, r1, r3
 8012ac8:	f102 32ff 	add.w	r2, r2, #4294967295
 8012acc:	d431      	bmi.n	8012b32 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012ace:	4293      	cmp	r3, r2
 8012ad0:	dd0c      	ble.n	8012aec <_ZNK8touchgfx9ConstFont4findEt+0x30>
 8012ad2:	230e      	movs	r3, #14
 8012ad4:	fb03 4302 	mla	r3, r3, r2, r4
 8012ad8:	889b      	ldrh	r3, [r3, #4]
 8012ada:	1a5b      	subs	r3, r3, r1
 8012adc:	1ad3      	subs	r3, r2, r3
 8012ade:	429a      	cmp	r2, r3
 8012ae0:	db27      	blt.n	8012b32 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012ae2:	2b00      	cmp	r3, #0
 8012ae4:	bfbc      	itt	lt
 8012ae6:	2302      	movlt	r3, #2
 8012ae8:	fb92 f3f3 	sdivlt	r3, r2, r3
 8012aec:	2500      	movs	r5, #0
 8012aee:	260e      	movs	r6, #14
 8012af0:	4295      	cmp	r5, r2
 8012af2:	dc1e      	bgt.n	8012b32 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012af4:	fb06 4003 	mla	r0, r6, r3, r4
 8012af8:	8887      	ldrh	r7, [r0, #4]
 8012afa:	42b9      	cmp	r1, r7
 8012afc:	d01a      	beq.n	8012b34 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 8012afe:	d20d      	bcs.n	8012b1c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 8012b00:	1e5a      	subs	r2, r3, #1
 8012b02:	4295      	cmp	r5, r2
 8012b04:	dc15      	bgt.n	8012b32 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012b06:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8012b0a:	1a5b      	subs	r3, r3, r1
 8012b0c:	1ad3      	subs	r3, r2, r3
 8012b0e:	429a      	cmp	r2, r3
 8012b10:	db0f      	blt.n	8012b32 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012b12:	429d      	cmp	r5, r3
 8012b14:	ddec      	ble.n	8012af0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8012b16:	1953      	adds	r3, r2, r5
 8012b18:	105b      	asrs	r3, r3, #1
 8012b1a:	e7e9      	b.n	8012af0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8012b1c:	1c5d      	adds	r5, r3, #1
 8012b1e:	42aa      	cmp	r2, r5
 8012b20:	db07      	blt.n	8012b32 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012b22:	8a43      	ldrh	r3, [r0, #18]
 8012b24:	1acb      	subs	r3, r1, r3
 8012b26:	442b      	add	r3, r5
 8012b28:	429d      	cmp	r5, r3
 8012b2a:	dc02      	bgt.n	8012b32 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8012b2c:	429a      	cmp	r2, r3
 8012b2e:	dadf      	bge.n	8012af0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8012b30:	e7f1      	b.n	8012b16 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 8012b32:	2000      	movs	r0, #0
 8012b34:	bdf0      	pop	{r4, r5, r6, r7, pc}

08012b36 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8012b36:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8012b38:	4604      	mov	r4, r0
 8012b3a:	4617      	mov	r7, r2
 8012b3c:	461e      	mov	r6, r3
 8012b3e:	b911      	cbnz	r1, 8012b46 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 8012b40:	2500      	movs	r5, #0
 8012b42:	4628      	mov	r0, r5
 8012b44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8012b46:	290a      	cmp	r1, #10
 8012b48:	d0fa      	beq.n	8012b40 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012b4a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 8012b4e:	4291      	cmp	r1, r2
 8012b50:	d0f6      	beq.n	8012b40 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012b52:	f242 020b 	movw	r2, #8203	; 0x200b
 8012b56:	4291      	cmp	r1, r2
 8012b58:	d0f2      	beq.n	8012b40 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012b5a:	f7ff ffaf 	bl	8012abc <_ZNK8touchgfx9ConstFont4findEt>
 8012b5e:	4605      	mov	r5, r0
 8012b60:	b950      	cbnz	r0, 8012b78 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 8012b62:	6823      	ldr	r3, [r4, #0]
 8012b64:	4620      	mov	r0, r4
 8012b66:	691b      	ldr	r3, [r3, #16]
 8012b68:	4798      	blx	r3
 8012b6a:	4601      	mov	r1, r0
 8012b6c:	4620      	mov	r0, r4
 8012b6e:	f7ff ffa5 	bl	8012abc <_ZNK8touchgfx9ConstFont4findEt>
 8012b72:	4605      	mov	r5, r0
 8012b74:	2800      	cmp	r0, #0
 8012b76:	d0e3      	beq.n	8012b40 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8012b78:	6823      	ldr	r3, [r4, #0]
 8012b7a:	4629      	mov	r1, r5
 8012b7c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8012b7e:	4620      	mov	r0, r4
 8012b80:	4798      	blx	r3
 8012b82:	6038      	str	r0, [r7, #0]
 8012b84:	6823      	ldr	r3, [r4, #0]
 8012b86:	4620      	mov	r0, r4
 8012b88:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8012b8a:	4798      	blx	r3
 8012b8c:	7030      	strb	r0, [r6, #0]
 8012b8e:	e7d8      	b.n	8012b42 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

08012b90 <_ZN8touchgfx34lookupNearestNeighborRenderVariantERKNS_6BitmapE>:
 8012b90:	b538      	push	{r3, r4, r5, lr}
 8012b92:	4605      	mov	r5, r0
 8012b94:	f002 f904 	bl	8014da0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012b98:	4604      	mov	r4, r0
 8012b9a:	4628      	mov	r0, r5
 8012b9c:	f002 f844 	bl	8014c28 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8012ba0:	2800      	cmp	r0, #0
 8012ba2:	bf14      	ite	ne
 8012ba4:	2002      	movne	r0, #2
 8012ba6:	2000      	moveq	r0, #0
 8012ba8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8012bac:	b280      	uxth	r0, r0
 8012bae:	bd38      	pop	{r3, r4, r5, pc}

08012bb0 <_ZN8touchgfx27lookupBilinearRenderVariantERKNS_6BitmapE>:
 8012bb0:	b538      	push	{r3, r4, r5, lr}
 8012bb2:	4605      	mov	r5, r0
 8012bb4:	f002 f8f4 	bl	8014da0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8012bb8:	4604      	mov	r4, r0
 8012bba:	4628      	mov	r0, r5
 8012bbc:	f002 f834 	bl	8014c28 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8012bc0:	2800      	cmp	r0, #0
 8012bc2:	bf14      	ite	ne
 8012bc4:	2002      	movne	r0, #2
 8012bc6:	2000      	moveq	r0, #0
 8012bc8:	ea40 0084 	orr.w	r0, r0, r4, lsl #2
 8012bcc:	f040 0001 	orr.w	r0, r0, #1
 8012bd0:	b280      	uxth	r0, r0
 8012bd2:	bd38      	pop	{r3, r4, r5, pc}

08012bd4 <_ZN8touchgfx4clzuEm>:
 8012bd4:	4603      	mov	r3, r0
 8012bd6:	b1c8      	cbz	r0, 8012c0c <_ZN8touchgfx4clzuEm+0x38>
 8012bd8:	0c02      	lsrs	r2, r0, #16
 8012bda:	0412      	lsls	r2, r2, #16
 8012bdc:	b9a2      	cbnz	r2, 8012c08 <_ZN8touchgfx4clzuEm+0x34>
 8012bde:	0403      	lsls	r3, r0, #16
 8012be0:	2010      	movs	r0, #16
 8012be2:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8012be6:	bf04      	itt	eq
 8012be8:	021b      	lsleq	r3, r3, #8
 8012bea:	3008      	addeq	r0, #8
 8012bec:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8012bf0:	bf04      	itt	eq
 8012bf2:	011b      	lsleq	r3, r3, #4
 8012bf4:	3004      	addeq	r0, #4
 8012bf6:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8012bfa:	bf04      	itt	eq
 8012bfc:	009b      	lsleq	r3, r3, #2
 8012bfe:	3002      	addeq	r0, #2
 8012c00:	2b00      	cmp	r3, #0
 8012c02:	db04      	blt.n	8012c0e <_ZN8touchgfx4clzuEm+0x3a>
 8012c04:	3001      	adds	r0, #1
 8012c06:	4770      	bx	lr
 8012c08:	2000      	movs	r0, #0
 8012c0a:	e7ea      	b.n	8012be2 <_ZN8touchgfx4clzuEm+0xe>
 8012c0c:	2020      	movs	r0, #32
 8012c0e:	4770      	bx	lr

08012c10 <_ZN8touchgfx7muldivuEmmmRm>:
 8012c10:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c14:	4680      	mov	r8, r0
 8012c16:	460f      	mov	r7, r1
 8012c18:	4615      	mov	r5, r2
 8012c1a:	461e      	mov	r6, r3
 8012c1c:	f7ff ffda 	bl	8012bd4 <_ZN8touchgfx4clzuEm>
 8012c20:	b998      	cbnz	r0, 8012c4a <_ZN8touchgfx7muldivuEmmmRm+0x3a>
 8012c22:	4608      	mov	r0, r1
 8012c24:	f7ff ffd6 	bl	8012bd4 <_ZN8touchgfx4clzuEm>
 8012c28:	2800      	cmp	r0, #0
 8012c2a:	dd08      	ble.n	8012c3e <_ZN8touchgfx7muldivuEmmmRm+0x2e>
 8012c2c:	4633      	mov	r3, r6
 8012c2e:	462a      	mov	r2, r5
 8012c30:	4641      	mov	r1, r8
 8012c32:	4638      	mov	r0, r7
 8012c34:	f7ff ffec 	bl	8012c10 <_ZN8touchgfx7muldivuEmmmRm>
 8012c38:	b003      	add	sp, #12
 8012c3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012c3e:	f04f 33ff 	mov.w	r3, #4294967295
 8012c42:	6033      	str	r3, [r6, #0]
 8012c44:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 8012c48:	e7f6      	b.n	8012c38 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8012c4a:	fa31 f900 	lsrs.w	r9, r1, r0
 8012c4e:	fb01 f308 	mul.w	r3, r1, r8
 8012c52:	d105      	bne.n	8012c60 <_ZN8touchgfx7muldivuEmmmRm+0x50>
 8012c54:	fbb3 f0f5 	udiv	r0, r3, r5
 8012c58:	fb05 3510 	mls	r5, r5, r0, r3
 8012c5c:	6035      	str	r5, [r6, #0]
 8012c5e:	e7eb      	b.n	8012c38 <_ZN8touchgfx7muldivuEmmmRm+0x28>
 8012c60:	2301      	movs	r3, #1
 8012c62:	fa08 fb00 	lsl.w	fp, r8, r0
 8012c66:	fa03 f000 	lsl.w	r0, r3, r0
 8012c6a:	3801      	subs	r0, #1
 8012c6c:	462a      	mov	r2, r5
 8012c6e:	4633      	mov	r3, r6
 8012c70:	4641      	mov	r1, r8
 8012c72:	4038      	ands	r0, r7
 8012c74:	f7ff ffcc 	bl	8012c10 <_ZN8touchgfx7muldivuEmmmRm>
 8012c78:	fbbb faf5 	udiv	sl, fp, r5
 8012c7c:	462a      	mov	r2, r5
 8012c7e:	4607      	mov	r7, r0
 8012c80:	ab01      	add	r3, sp, #4
 8012c82:	fb05 b11a 	mls	r1, r5, sl, fp
 8012c86:	4648      	mov	r0, r9
 8012c88:	f7ff ffc2 	bl	8012c10 <_ZN8touchgfx7muldivuEmmmRm>
 8012c8c:	9b01      	ldr	r3, [sp, #4]
 8012c8e:	6832      	ldr	r2, [r6, #0]
 8012c90:	fb09 f40a 	mul.w	r4, r9, sl
 8012c94:	441a      	add	r2, r3
 8012c96:	fbb2 f3f5 	udiv	r3, r2, r5
 8012c9a:	441c      	add	r4, r3
 8012c9c:	443c      	add	r4, r7
 8012c9e:	4420      	add	r0, r4
 8012ca0:	fb05 2513 	mls	r5, r5, r3, r2
 8012ca4:	e7da      	b.n	8012c5c <_ZN8touchgfx7muldivuEmmmRm+0x4c>

08012ca6 <_ZN8touchgfx6muldivElllRl>:
 8012ca6:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012ca8:	2800      	cmp	r0, #0
 8012caa:	bfba      	itte	lt
 8012cac:	4240      	neglt	r0, r0
 8012cae:	f04f 34ff 	movlt.w	r4, #4294967295
 8012cb2:	2401      	movge	r4, #1
 8012cb4:	2900      	cmp	r1, #0
 8012cb6:	bfbc      	itt	lt
 8012cb8:	4249      	neglt	r1, r1
 8012cba:	4264      	neglt	r4, r4
 8012cbc:	2a00      	cmp	r2, #0
 8012cbe:	bfb6      	itet	lt
 8012cc0:	4265      	neglt	r5, r4
 8012cc2:	4625      	movge	r5, r4
 8012cc4:	4252      	neglt	r2, r2
 8012cc6:	4288      	cmp	r0, r1
 8012cc8:	461e      	mov	r6, r3
 8012cca:	bfc2      	ittt	gt
 8012ccc:	4603      	movgt	r3, r0
 8012cce:	4608      	movgt	r0, r1
 8012cd0:	4619      	movgt	r1, r3
 8012cd2:	ab01      	add	r3, sp, #4
 8012cd4:	f7ff ff9c 	bl	8012c10 <_ZN8touchgfx7muldivuEmmmRm>
 8012cd8:	9b01      	ldr	r3, [sp, #4]
 8012cda:	4368      	muls	r0, r5
 8012cdc:	435c      	muls	r4, r3
 8012cde:	6034      	str	r4, [r6, #0]
 8012ce0:	b002      	add	sp, #8
 8012ce2:	bd70      	pop	{r4, r5, r6, pc}

08012ce4 <_ZN8touchgfx6muldivElll>:
 8012ce4:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8012ce6:	4606      	mov	r6, r0
 8012ce8:	ab01      	add	r3, sp, #4
 8012cea:	460d      	mov	r5, r1
 8012cec:	4614      	mov	r4, r2
 8012cee:	f7ff ffda 	bl	8012ca6 <_ZN8touchgfx6muldivElllRl>
 8012cf2:	2e00      	cmp	r6, #0
 8012cf4:	db20      	blt.n	8012d38 <_ZN8touchgfx6muldivElll+0x54>
 8012cf6:	bf14      	ite	ne
 8012cf8:	2301      	movne	r3, #1
 8012cfa:	2300      	moveq	r3, #0
 8012cfc:	2d00      	cmp	r5, #0
 8012cfe:	db1e      	blt.n	8012d3e <_ZN8touchgfx6muldivElll+0x5a>
 8012d00:	bf14      	ite	ne
 8012d02:	2201      	movne	r2, #1
 8012d04:	2200      	moveq	r2, #0
 8012d06:	2c00      	cmp	r4, #0
 8012d08:	fb03 f202 	mul.w	r2, r3, r2
 8012d0c:	db1a      	blt.n	8012d44 <_ZN8touchgfx6muldivElll+0x60>
 8012d0e:	bf14      	ite	ne
 8012d10:	2301      	movne	r3, #1
 8012d12:	2300      	moveq	r3, #0
 8012d14:	4353      	muls	r3, r2
 8012d16:	2b01      	cmp	r3, #1
 8012d18:	d117      	bne.n	8012d4a <_ZN8touchgfx6muldivElll+0x66>
 8012d1a:	9b01      	ldr	r3, [sp, #4]
 8012d1c:	2c00      	cmp	r4, #0
 8012d1e:	bfb8      	it	lt
 8012d20:	4264      	neglt	r4, r4
 8012d22:	2b00      	cmp	r3, #0
 8012d24:	f104 0401 	add.w	r4, r4, #1
 8012d28:	bfb8      	it	lt
 8012d2a:	425b      	neglt	r3, r3
 8012d2c:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8012d30:	db00      	blt.n	8012d34 <_ZN8touchgfx6muldivElll+0x50>
 8012d32:	3001      	adds	r0, #1
 8012d34:	b002      	add	sp, #8
 8012d36:	bd70      	pop	{r4, r5, r6, pc}
 8012d38:	f04f 33ff 	mov.w	r3, #4294967295
 8012d3c:	e7de      	b.n	8012cfc <_ZN8touchgfx6muldivElll+0x18>
 8012d3e:	f04f 32ff 	mov.w	r2, #4294967295
 8012d42:	e7e0      	b.n	8012d06 <_ZN8touchgfx6muldivElll+0x22>
 8012d44:	f04f 33ff 	mov.w	r3, #4294967295
 8012d48:	e7e4      	b.n	8012d14 <_ZN8touchgfx6muldivElll+0x30>
 8012d4a:	3301      	adds	r3, #1
 8012d4c:	d1f2      	bne.n	8012d34 <_ZN8touchgfx6muldivElll+0x50>
 8012d4e:	9b01      	ldr	r3, [sp, #4]
 8012d50:	2c00      	cmp	r4, #0
 8012d52:	bfb8      	it	lt
 8012d54:	4264      	neglt	r4, r4
 8012d56:	2b00      	cmp	r3, #0
 8012d58:	bfb8      	it	lt
 8012d5a:	425b      	neglt	r3, r3
 8012d5c:	ebb3 0f64 	cmp.w	r3, r4, asr #1
 8012d60:	bfc8      	it	gt
 8012d62:	f100 30ff 	addgt.w	r0, r0, #4294967295
 8012d66:	e7e5      	b.n	8012d34 <_ZN8touchgfx6muldivElll+0x50>

08012d68 <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 8012d68:	2000      	movs	r0, #0
 8012d6a:	4770      	bx	lr

08012d6c <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 8012d6c:	2001      	movs	r0, #1
 8012d6e:	4770      	bx	lr

08012d70 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 8012d70:	2002      	movs	r0, #2
 8012d72:	4770      	bx	lr

08012d74 <_ZN8touchgfx6ScreenD1Ev>:
 8012d74:	4770      	bx	lr

08012d76 <_ZN8touchgfx12GestureEventD1Ev>:
 8012d76:	4770      	bx	lr

08012d78 <_ZN8touchgfx9DragEventD1Ev>:
 8012d78:	4770      	bx	lr

08012d7a <_ZN8touchgfx10ClickEventD1Ev>:
 8012d7a:	4770      	bx	lr

08012d7c <_ZN8touchgfx10ClickEventD0Ev>:
 8012d7c:	b510      	push	{r4, lr}
 8012d7e:	210c      	movs	r1, #12
 8012d80:	4604      	mov	r4, r0
 8012d82:	f00d fc95 	bl	80206b0 <_ZdlPvj>
 8012d86:	4620      	mov	r0, r4
 8012d88:	bd10      	pop	{r4, pc}

08012d8a <_ZN8touchgfx9DragEventD0Ev>:
 8012d8a:	b510      	push	{r4, lr}
 8012d8c:	2110      	movs	r1, #16
 8012d8e:	4604      	mov	r4, r0
 8012d90:	f00d fc8e 	bl	80206b0 <_ZdlPvj>
 8012d94:	4620      	mov	r0, r4
 8012d96:	bd10      	pop	{r4, pc}

08012d98 <_ZN8touchgfx12GestureEventD0Ev>:
 8012d98:	b510      	push	{r4, lr}
 8012d9a:	210c      	movs	r1, #12
 8012d9c:	4604      	mov	r4, r0
 8012d9e:	f00d fc87 	bl	80206b0 <_ZdlPvj>
 8012da2:	4620      	mov	r0, r4
 8012da4:	bd10      	pop	{r4, pc}

08012da6 <_ZN8touchgfx6ScreenD0Ev>:
 8012da6:	b510      	push	{r4, lr}
 8012da8:	213c      	movs	r1, #60	; 0x3c
 8012daa:	4604      	mov	r4, r0
 8012dac:	f00d fc80 	bl	80206b0 <_ZdlPvj>
 8012db0:	4620      	mov	r0, r4
 8012db2:	bd10      	pop	{r4, pc}

08012db4 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 8012db4:	b530      	push	{r4, r5, lr}
 8012db6:	460d      	mov	r5, r1
 8012db8:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012dba:	b087      	sub	sp, #28
 8012dbc:	4604      	mov	r4, r0
 8012dbe:	b301      	cbz	r1, 8012e02 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 8012dc0:	a801      	add	r0, sp, #4
 8012dc2:	f7ff fe41 	bl	8012a48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012dc6:	892a      	ldrh	r2, [r5, #8]
 8012dc8:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8012dcc:	7928      	ldrb	r0, [r5, #4]
 8012dce:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8012dd2:	f88d 0010 	strb.w	r0, [sp, #16]
 8012dd6:	1ad2      	subs	r2, r2, r3
 8012dd8:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 8012dda:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012ddc:	f8ad 1012 	strh.w	r1, [sp, #18]
 8012de0:	441a      	add	r2, r3
 8012de2:	896b      	ldrh	r3, [r5, #10]
 8012de4:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 8012de8:	f8ad 2014 	strh.w	r2, [sp, #20]
 8012dec:	1b5b      	subs	r3, r3, r5
 8012dee:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 8012df0:	442b      	add	r3, r5
 8012df2:	4d05      	ldr	r5, [pc, #20]	; (8012e08 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8012df4:	9503      	str	r5, [sp, #12]
 8012df6:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012dfa:	6803      	ldr	r3, [r0, #0]
 8012dfc:	a903      	add	r1, sp, #12
 8012dfe:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8012e00:	4798      	blx	r3
 8012e02:	b007      	add	sp, #28
 8012e04:	bd30      	pop	{r4, r5, pc}
 8012e06:	bf00      	nop
 8012e08:	08023efc 	.word	0x08023efc

08012e0c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8012e0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012e10:	6b03      	ldr	r3, [r0, #48]	; 0x30
 8012e12:	b08a      	sub	sp, #40	; 0x28
 8012e14:	4604      	mov	r4, r0
 8012e16:	460d      	mov	r5, r1
 8012e18:	b113      	cbz	r3, 8012e20 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 8012e1a:	790b      	ldrb	r3, [r1, #4]
 8012e1c:	2b00      	cmp	r3, #0
 8012e1e:	d044      	beq.n	8012eaa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012e20:	f104 0804 	add.w	r8, r4, #4
 8012e24:	4641      	mov	r1, r8
 8012e26:	a803      	add	r0, sp, #12
 8012e28:	f7ff fe0e 	bl	8012a48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012e2c:	792b      	ldrb	r3, [r5, #4]
 8012e2e:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8012e32:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 8012e36:	b983      	cbnz	r3, 8012e5a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 8012e38:	892a      	ldrh	r2, [r5, #8]
 8012e3a:	88e9      	ldrh	r1, [r5, #6]
 8012e3c:	f104 0336 	add.w	r3, r4, #54	; 0x36
 8012e40:	1b92      	subs	r2, r2, r6
 8012e42:	1bc9      	subs	r1, r1, r7
 8012e44:	9301      	str	r3, [sp, #4]
 8012e46:	f104 0334 	add.w	r3, r4, #52	; 0x34
 8012e4a:	9300      	str	r3, [sp, #0]
 8012e4c:	b212      	sxth	r2, r2
 8012e4e:	f104 0330 	add.w	r3, r4, #48	; 0x30
 8012e52:	b209      	sxth	r1, r1
 8012e54:	4640      	mov	r0, r8
 8012e56:	f7f8 fe7d 	bl	800bb54 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 8012e5a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 8012e5c:	b329      	cbz	r1, 8012eaa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012e5e:	a805      	add	r0, sp, #20
 8012e60:	f7ff fdf2 	bl	8012a48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012e64:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 8012e68:	792b      	ldrb	r3, [r5, #4]
 8012e6a:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8012e6c:	f88d 3020 	strb.w	r3, [sp, #32]
 8012e70:	1abf      	subs	r7, r7, r2
 8012e72:	88ea      	ldrh	r2, [r5, #6]
 8012e74:	4417      	add	r7, r2
 8012e76:	8ea2      	ldrh	r2, [r4, #52]	; 0x34
 8012e78:	4417      	add	r7, r2
 8012e7a:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 8012e7e:	f8ad 7022 	strh.w	r7, [sp, #34]	; 0x22
 8012e82:	1ab6      	subs	r6, r6, r2
 8012e84:	892a      	ldrh	r2, [r5, #8]
 8012e86:	4416      	add	r6, r2
 8012e88:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8012e8a:	4416      	add	r6, r2
 8012e8c:	f8ad 6024 	strh.w	r6, [sp, #36]	; 0x24
 8012e90:	4a07      	ldr	r2, [pc, #28]	; (8012eb0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 8012e92:	9207      	str	r2, [sp, #28]
 8012e94:	2600      	movs	r6, #0
 8012e96:	f8ad 6026 	strh.w	r6, [sp, #38]	; 0x26
 8012e9a:	6803      	ldr	r3, [r0, #0]
 8012e9c:	a907      	add	r1, sp, #28
 8012e9e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012ea0:	4798      	blx	r3
 8012ea2:	792b      	ldrb	r3, [r5, #4]
 8012ea4:	b10b      	cbz	r3, 8012eaa <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8012ea6:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 8012eaa:	b00a      	add	sp, #40	; 0x28
 8012eac:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012eb0:	08023ed4 	.word	0x08023ed4

08012eb4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 8012eb4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012eb8:	460c      	mov	r4, r1
 8012eba:	6b01      	ldr	r1, [r0, #48]	; 0x30
 8012ebc:	b088      	sub	sp, #32
 8012ebe:	4605      	mov	r5, r0
 8012ec0:	2900      	cmp	r1, #0
 8012ec2:	d06d      	beq.n	8012fa0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 8012ec4:	4668      	mov	r0, sp
 8012ec6:	f7ff fdbf 	bl	8012a48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012eca:	8ea9      	ldrh	r1, [r5, #52]	; 0x34
 8012ecc:	88e3      	ldrh	r3, [r4, #6]
 8012ece:	f9bd 8000 	ldrsh.w	r8, [sp]
 8012ed2:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 8012ed6:	440b      	add	r3, r1
 8012ed8:	b21b      	sxth	r3, r3
 8012eda:	4543      	cmp	r3, r8
 8012edc:	db31      	blt.n	8012f42 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012ede:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8012ee2:	44c4      	add	ip, r8
 8012ee4:	fa0f fc8c 	sxth.w	ip, ip
 8012ee8:	4563      	cmp	r3, ip
 8012eea:	da2a      	bge.n	8012f42 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012eec:	8eea      	ldrh	r2, [r5, #54]	; 0x36
 8012eee:	8926      	ldrh	r6, [r4, #8]
 8012ef0:	4416      	add	r6, r2
 8012ef2:	b236      	sxth	r6, r6
 8012ef4:	42be      	cmp	r6, r7
 8012ef6:	db24      	blt.n	8012f42 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012ef8:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8012efc:	4438      	add	r0, r7
 8012efe:	b200      	sxth	r0, r0
 8012f00:	4286      	cmp	r6, r0
 8012f02:	da1e      	bge.n	8012f42 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012f04:	8963      	ldrh	r3, [r4, #10]
 8012f06:	4419      	add	r1, r3
 8012f08:	b209      	sxth	r1, r1
 8012f0a:	4541      	cmp	r1, r8
 8012f0c:	db08      	blt.n	8012f20 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012f0e:	4561      	cmp	r1, ip
 8012f10:	da06      	bge.n	8012f20 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012f12:	89a3      	ldrh	r3, [r4, #12]
 8012f14:	441a      	add	r2, r3
 8012f16:	b212      	sxth	r2, r2
 8012f18:	42ba      	cmp	r2, r7
 8012f1a:	db01      	blt.n	8012f20 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8012f1c:	4282      	cmp	r2, r0
 8012f1e:	db10      	blt.n	8012f42 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8012f20:	4b21      	ldr	r3, [pc, #132]	; (8012fa8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8012f22:	9304      	str	r3, [sp, #16]
 8012f24:	2302      	movs	r3, #2
 8012f26:	f88d 3014 	strb.w	r3, [sp, #20]
 8012f2a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012f2c:	2300      	movs	r3, #0
 8012f2e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8012f32:	f8ad 3018 	strh.w	r3, [sp, #24]
 8012f36:	f8ad 301a 	strh.w	r3, [sp, #26]
 8012f3a:	6803      	ldr	r3, [r0, #0]
 8012f3c:	a904      	add	r1, sp, #16
 8012f3e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8012f40:	4798      	blx	r3
 8012f42:	1d29      	adds	r1, r5, #4
 8012f44:	a802      	add	r0, sp, #8
 8012f46:	f7ff fd7f 	bl	8012a48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012f4a:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8012f4e:	88e0      	ldrh	r0, [r4, #6]
 8012f50:	7921      	ldrb	r1, [r4, #4]
 8012f52:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 8012f56:	8922      	ldrh	r2, [r4, #8]
 8012f58:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 8012f5a:	f88d 1014 	strb.w	r1, [sp, #20]
 8012f5e:	eba3 0808 	sub.w	r8, r3, r8
 8012f62:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8012f66:	1bdf      	subs	r7, r3, r7
 8012f68:	b2bb      	uxth	r3, r7
 8012f6a:	fa1f f888 	uxth.w	r8, r8
 8012f6e:	8967      	ldrh	r7, [r4, #10]
 8012f70:	89a4      	ldrh	r4, [r4, #12]
 8012f72:	4440      	add	r0, r8
 8012f74:	4460      	add	r0, ip
 8012f76:	441a      	add	r2, r3
 8012f78:	44b8      	add	r8, r7
 8012f7a:	4423      	add	r3, r4
 8012f7c:	f8ad 0016 	strh.w	r0, [sp, #22]
 8012f80:	4433      	add	r3, r6
 8012f82:	4432      	add	r2, r6
 8012f84:	44e0      	add	r8, ip
 8012f86:	4c09      	ldr	r4, [pc, #36]	; (8012fac <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 8012f88:	6b28      	ldr	r0, [r5, #48]	; 0x30
 8012f8a:	9404      	str	r4, [sp, #16]
 8012f8c:	f8ad 2018 	strh.w	r2, [sp, #24]
 8012f90:	f8ad 801a 	strh.w	r8, [sp, #26]
 8012f94:	f8ad 301c 	strh.w	r3, [sp, #28]
 8012f98:	6803      	ldr	r3, [r0, #0]
 8012f9a:	a904      	add	r1, sp, #16
 8012f9c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8012f9e:	4798      	blx	r3
 8012fa0:	b008      	add	sp, #32
 8012fa2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012fa6:	bf00      	nop
 8012fa8:	08023ed4 	.word	0x08023ed4
 8012fac:	08023ee8 	.word	0x08023ee8

08012fb0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 8012fb0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8012fb2:	4604      	mov	r4, r0
 8012fb4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 8012fb8:	3201      	adds	r2, #1
 8012fba:	d112      	bne.n	8012fe2 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 8012fbc:	6803      	ldr	r3, [r0, #0]
 8012fbe:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8012fc2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8012fc6:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012fca:	2500      	movs	r5, #0
 8012fcc:	9500      	str	r5, [sp, #0]
 8012fce:	466d      	mov	r5, sp
 8012fd0:	4629      	mov	r1, r5
 8012fd2:	f8ad 2006 	strh.w	r2, [sp, #6]
 8012fd6:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8012fd8:	4798      	blx	r3
 8012fda:	e895 0003 	ldmia.w	r5, {r0, r1}
 8012fde:	e884 0003 	stmia.w	r4, {r0, r1}
 8012fe2:	4620      	mov	r0, r4
 8012fe4:	b003      	add	sp, #12
 8012fe6:	bd30      	pop	{r4, r5, pc}

08012fe8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 8012fe8:	b513      	push	{r0, r1, r4, lr}
 8012fea:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8012fee:	3301      	adds	r3, #1
 8012ff0:	4604      	mov	r4, r0
 8012ff2:	d109      	bne.n	8013008 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8012ff4:	4601      	mov	r1, r0
 8012ff6:	4668      	mov	r0, sp
 8012ff8:	f7ff fd26 	bl	8012a48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012ffc:	f8bd 3000 	ldrh.w	r3, [sp]
 8013000:	8423      	strh	r3, [r4, #32]
 8013002:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013006:	8463      	strh	r3, [r4, #34]	; 0x22
 8013008:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 801300c:	b002      	add	sp, #8
 801300e:	bd10      	pop	{r4, pc}

08013010 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8013010:	b513      	push	{r0, r1, r4, lr}
 8013012:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 8013016:	3301      	adds	r3, #1
 8013018:	4604      	mov	r4, r0
 801301a:	d109      	bne.n	8013030 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 801301c:	4601      	mov	r1, r0
 801301e:	4668      	mov	r0, sp
 8013020:	f7ff fd12 	bl	8012a48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8013024:	f8bd 3000 	ldrh.w	r3, [sp]
 8013028:	8423      	strh	r3, [r4, #32]
 801302a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801302e:	8463      	strh	r3, [r4, #34]	; 0x22
 8013030:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 8013034:	b002      	add	sp, #8
 8013036:	bd10      	pop	{r4, pc}

08013038 <_ZN8touchgfx6ScreenC1Ev>:
 8013038:	b570      	push	{r4, r5, r6, lr}
 801303a:	4605      	mov	r5, r0
 801303c:	4b16      	ldr	r3, [pc, #88]	; (8013098 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 801303e:	f845 3b04 	str.w	r3, [r5], #4
 8013042:	2300      	movs	r3, #0
 8013044:	8103      	strh	r3, [r0, #8]
 8013046:	8143      	strh	r3, [r0, #10]
 8013048:	8183      	strh	r3, [r0, #12]
 801304a:	81c3      	strh	r3, [r0, #14]
 801304c:	8203      	strh	r3, [r0, #16]
 801304e:	8243      	strh	r3, [r0, #18]
 8013050:	8283      	strh	r3, [r0, #20]
 8013052:	82c3      	strh	r3, [r0, #22]
 8013054:	e9c0 3306 	strd	r3, r3, [r0, #24]
 8013058:	6203      	str	r3, [r0, #32]
 801305a:	8483      	strh	r3, [r0, #36]	; 0x24
 801305c:	84c3      	strh	r3, [r0, #38]	; 0x26
 801305e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 8013062:	4a0e      	ldr	r2, [pc, #56]	; (801309c <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8013064:	6343      	str	r3, [r0, #52]	; 0x34
 8013066:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 801306a:	4b0d      	ldr	r3, [pc, #52]	; (80130a0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 801306c:	6042      	str	r2, [r0, #4]
 801306e:	f9b3 6000 	ldrsh.w	r6, [r3]
 8013072:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8013074:	4a0b      	ldr	r2, [pc, #44]	; (80130a4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 8013076:	4604      	mov	r4, r0
 8013078:	2101      	movs	r1, #1
 801307a:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 801307e:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 8013082:	f9b2 1000 	ldrsh.w	r1, [r2]
 8013086:	4628      	mov	r0, r5
 8013088:	4798      	blx	r3
 801308a:	6863      	ldr	r3, [r4, #4]
 801308c:	4628      	mov	r0, r5
 801308e:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8013090:	4631      	mov	r1, r6
 8013092:	4798      	blx	r3
 8013094:	4620      	mov	r0, r4
 8013096:	bd70      	pop	{r4, r5, r6, pc}
 8013098:	08023f10 	.word	0x08023f10
 801309c:	08023498 	.word	0x08023498
 80130a0:	20011e36 	.word	0x20011e36
 80130a4:	20011e34 	.word	0x20011e34

080130a8 <_ZN8touchgfx6Screen4drawEv>:
 80130a8:	b507      	push	{r0, r1, r2, lr}
 80130aa:	4b09      	ldr	r3, [pc, #36]	; (80130d0 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80130ac:	f9b3 2000 	ldrsh.w	r2, [r3]
 80130b0:	4b08      	ldr	r3, [pc, #32]	; (80130d4 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80130b2:	f8ad 2004 	strh.w	r2, [sp, #4]
 80130b6:	f9b3 3000 	ldrsh.w	r3, [r3]
 80130ba:	f8ad 3006 	strh.w	r3, [sp, #6]
 80130be:	6803      	ldr	r3, [r0, #0]
 80130c0:	2100      	movs	r1, #0
 80130c2:	9100      	str	r1, [sp, #0]
 80130c4:	689b      	ldr	r3, [r3, #8]
 80130c6:	4669      	mov	r1, sp
 80130c8:	4798      	blx	r3
 80130ca:	b003      	add	sp, #12
 80130cc:	f85d fb04 	ldr.w	pc, [sp], #4
 80130d0:	20011e34 	.word	0x20011e34
 80130d4:	20011e36 	.word	0x20011e36

080130d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 80130d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80130dc:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 80130e0:	2b00      	cmp	r3, #0
 80130e2:	b089      	sub	sp, #36	; 0x24
 80130e4:	4680      	mov	r8, r0
 80130e6:	460c      	mov	r4, r1
 80130e8:	4615      	mov	r5, r2
 80130ea:	dd0e      	ble.n	801310a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80130ec:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 80130f0:	2b00      	cmp	r3, #0
 80130f2:	dd0a      	ble.n	801310a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80130f4:	4628      	mov	r0, r5
 80130f6:	f7ff ff5b 	bl	8012fb0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 80130fa:	4621      	mov	r1, r4
 80130fc:	f7fe fb03 	bl	8011706 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8013100:	69eb      	ldr	r3, [r5, #28]
 8013102:	b928      	cbnz	r0, 8013110 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8013104:	461d      	mov	r5, r3
 8013106:	2b00      	cmp	r3, #0
 8013108:	d1f4      	bne.n	80130f4 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801310a:	b009      	add	sp, #36	; 0x24
 801310c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013110:	ae04      	add	r6, sp, #16
 8013112:	2b00      	cmp	r3, #0
 8013114:	f000 80b5 	beq.w	8013282 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8013118:	682b      	ldr	r3, [r5, #0]
 801311a:	4629      	mov	r1, r5
 801311c:	68db      	ldr	r3, [r3, #12]
 801311e:	a802      	add	r0, sp, #8
 8013120:	4798      	blx	r3
 8013122:	4628      	mov	r0, r5
 8013124:	f7ff ff60 	bl	8012fe8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8013128:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 801312c:	4407      	add	r7, r0
 801312e:	4628      	mov	r0, r5
 8013130:	f7ff ff6e 	bl	8013010 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8013134:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8013138:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 801313c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8013140:	4418      	add	r0, r3
 8013142:	4621      	mov	r1, r4
 8013144:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8013148:	f8ad 0012 	strh.w	r0, [sp, #18]
 801314c:	b23f      	sxth	r7, r7
 801314e:	4630      	mov	r0, r6
 8013150:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013154:	f8ad 7010 	strh.w	r7, [sp, #16]
 8013158:	f7f8 fde0 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 801315c:	4628      	mov	r0, r5
 801315e:	f7ff ff27 	bl	8012fb0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8013162:	4602      	mov	r2, r0
 8013164:	e896 0003 	ldmia.w	r6, {r0, r1}
 8013168:	ab06      	add	r3, sp, #24
 801316a:	e883 0003 	stmia.w	r3, {r0, r1}
 801316e:	4611      	mov	r1, r2
 8013170:	4618      	mov	r0, r3
 8013172:	f7f8 fdd3 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 8013176:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801317a:	f9b4 1000 	ldrsh.w	r1, [r4]
 801317e:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 8013182:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 8013186:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 801318a:	4299      	cmp	r1, r3
 801318c:	d10b      	bne.n	80131a6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801318e:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8013192:	4552      	cmp	r2, sl
 8013194:	d107      	bne.n	80131a6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 8013196:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 801319a:	455a      	cmp	r2, fp
 801319c:	d103      	bne.n	80131a6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 801319e:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80131a2:	454a      	cmp	r2, r9
 80131a4:	d06d      	beq.n	8013282 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80131a6:	f1bb 0f00 	cmp.w	fp, #0
 80131aa:	dd65      	ble.n	8013278 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80131ac:	f1b9 0f00 	cmp.w	r9, #0
 80131b0:	dd62      	ble.n	8013278 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80131b2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80131b6:	fa1f f08a 	uxth.w	r0, sl
 80131ba:	4552      	cmp	r2, sl
 80131bc:	9000      	str	r0, [sp, #0]
 80131be:	da12      	bge.n	80131e6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80131c0:	9301      	str	r3, [sp, #4]
 80131c2:	9b00      	ldr	r3, [sp, #0]
 80131c4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80131c8:	f8ad 2012 	strh.w	r2, [sp, #18]
 80131cc:	1a9a      	subs	r2, r3, r2
 80131ce:	f8ad 1010 	strh.w	r1, [sp, #16]
 80131d2:	f8ad 0014 	strh.w	r0, [sp, #20]
 80131d6:	f8ad 2016 	strh.w	r2, [sp, #22]
 80131da:	69ea      	ldr	r2, [r5, #28]
 80131dc:	4631      	mov	r1, r6
 80131de:	4640      	mov	r0, r8
 80131e0:	f7ff ff7a 	bl	80130d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 80131e4:	9b01      	ldr	r3, [sp, #4]
 80131e6:	f9b4 2000 	ldrsh.w	r2, [r4]
 80131ea:	429a      	cmp	r2, r3
 80131ec:	b29f      	uxth	r7, r3
 80131ee:	da0d      	bge.n	801320c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 80131f0:	f8ad 2010 	strh.w	r2, [sp, #16]
 80131f4:	1aba      	subs	r2, r7, r2
 80131f6:	f8ad a012 	strh.w	sl, [sp, #18]
 80131fa:	f8ad 2014 	strh.w	r2, [sp, #20]
 80131fe:	f8ad 9016 	strh.w	r9, [sp, #22]
 8013202:	69ea      	ldr	r2, [r5, #28]
 8013204:	4631      	mov	r1, r6
 8013206:	4640      	mov	r0, r8
 8013208:	f7ff ff66 	bl	80130d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801320c:	8822      	ldrh	r2, [r4, #0]
 801320e:	88a3      	ldrh	r3, [r4, #4]
 8013210:	445f      	add	r7, fp
 8013212:	4413      	add	r3, r2
 8013214:	b29b      	uxth	r3, r3
 8013216:	b2bf      	uxth	r7, r7
 8013218:	b23a      	sxth	r2, r7
 801321a:	b219      	sxth	r1, r3
 801321c:	4291      	cmp	r1, r2
 801321e:	dd0d      	ble.n	801323c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8013220:	1bdb      	subs	r3, r3, r7
 8013222:	f8ad 2010 	strh.w	r2, [sp, #16]
 8013226:	f8ad a012 	strh.w	sl, [sp, #18]
 801322a:	f8ad 3014 	strh.w	r3, [sp, #20]
 801322e:	f8ad 9016 	strh.w	r9, [sp, #22]
 8013232:	69ea      	ldr	r2, [r5, #28]
 8013234:	4631      	mov	r1, r6
 8013236:	4640      	mov	r0, r8
 8013238:	f7ff ff4e 	bl	80130d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801323c:	88e2      	ldrh	r2, [r4, #6]
 801323e:	8863      	ldrh	r3, [r4, #2]
 8013240:	4413      	add	r3, r2
 8013242:	9a00      	ldr	r2, [sp, #0]
 8013244:	444a      	add	r2, r9
 8013246:	b29b      	uxth	r3, r3
 8013248:	fa1f f982 	uxth.w	r9, r2
 801324c:	fa0f f289 	sxth.w	r2, r9
 8013250:	b219      	sxth	r1, r3
 8013252:	428a      	cmp	r2, r1
 8013254:	da15      	bge.n	8013282 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8013256:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801325a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801325e:	f8ad 1014 	strh.w	r1, [sp, #20]
 8013262:	eba3 0309 	sub.w	r3, r3, r9
 8013266:	f8ad 0010 	strh.w	r0, [sp, #16]
 801326a:	f8ad 2012 	strh.w	r2, [sp, #18]
 801326e:	f8ad 3016 	strh.w	r3, [sp, #22]
 8013272:	69ea      	ldr	r2, [r5, #28]
 8013274:	4631      	mov	r1, r6
 8013276:	e001      	b.n	801327c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8013278:	69ea      	ldr	r2, [r5, #28]
 801327a:	4621      	mov	r1, r4
 801327c:	4640      	mov	r0, r8
 801327e:	f7ff ff2b 	bl	80130d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8013282:	4628      	mov	r0, r5
 8013284:	f7ff fe94 	bl	8012fb0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8013288:	6861      	ldr	r1, [r4, #4]
 801328a:	4602      	mov	r2, r0
 801328c:	6820      	ldr	r0, [r4, #0]
 801328e:	4633      	mov	r3, r6
 8013290:	c303      	stmia	r3!, {r0, r1}
 8013292:	4611      	mov	r1, r2
 8013294:	4630      	mov	r0, r6
 8013296:	f7f8 fd41 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 801329a:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 801329e:	2b00      	cmp	r3, #0
 80132a0:	f77f af33 	ble.w	801310a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80132a4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80132a8:	2b00      	cmp	r3, #0
 80132aa:	f77f af2e 	ble.w	801310a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 80132ae:	4628      	mov	r0, r5
 80132b0:	f7ff fe9a 	bl	8012fe8 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 80132b4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 80132b8:	1a18      	subs	r0, r3, r0
 80132ba:	f8ad 0010 	strh.w	r0, [sp, #16]
 80132be:	4628      	mov	r0, r5
 80132c0:	f7ff fea6 	bl	8013010 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 80132c4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80132c8:	1a18      	subs	r0, r3, r0
 80132ca:	f8ad 0012 	strh.w	r0, [sp, #18]
 80132ce:	682b      	ldr	r3, [r5, #0]
 80132d0:	4631      	mov	r1, r6
 80132d2:	689b      	ldr	r3, [r3, #8]
 80132d4:	4628      	mov	r0, r5
 80132d6:	4798      	blx	r3
 80132d8:	e717      	b.n	801310a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

080132da <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 80132da:	b570      	push	{r4, r5, r6, lr}
 80132dc:	460c      	mov	r4, r1
 80132de:	b086      	sub	sp, #24
 80132e0:	1d06      	adds	r6, r0, #4
 80132e2:	2300      	movs	r3, #0
 80132e4:	4631      	mov	r1, r6
 80132e6:	4605      	mov	r5, r0
 80132e8:	a802      	add	r0, sp, #8
 80132ea:	9301      	str	r3, [sp, #4]
 80132ec:	f7ff fbac 	bl	8012a48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80132f0:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 80132f4:	8822      	ldrh	r2, [r4, #0]
 80132f6:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 80132fa:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80132fe:	f8ad 0014 	strh.w	r0, [sp, #20]
 8013302:	1ad2      	subs	r2, r2, r3
 8013304:	8863      	ldrh	r3, [r4, #2]
 8013306:	f8ad 2010 	strh.w	r2, [sp, #16]
 801330a:	1a5b      	subs	r3, r3, r1
 801330c:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8013310:	f8ad 1016 	strh.w	r1, [sp, #22]
 8013314:	aa01      	add	r2, sp, #4
 8013316:	a904      	add	r1, sp, #16
 8013318:	4630      	mov	r0, r6
 801331a:	f8ad 3012 	strh.w	r3, [sp, #18]
 801331e:	f7f8 fdd5 	bl	800becc <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8013322:	9a01      	ldr	r2, [sp, #4]
 8013324:	b11a      	cbz	r2, 801332e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8013326:	4621      	mov	r1, r4
 8013328:	4628      	mov	r0, r5
 801332a:	f7ff fed5 	bl	80130d8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 801332e:	b006      	add	sp, #24
 8013330:	bd70      	pop	{r4, r5, r6, pc}

08013332 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8013332:	b530      	push	{r4, r5, lr}
 8013334:	4602      	mov	r2, r0
 8013336:	4604      	mov	r4, r0
 8013338:	f852 0f08 	ldr.w	r0, [r2, #8]!
 801333c:	b085      	sub	sp, #20
 801333e:	460d      	mov	r5, r1
 8013340:	6851      	ldr	r1, [r2, #4]
 8013342:	466b      	mov	r3, sp
 8013344:	c303      	stmia	r3!, {r0, r1}
 8013346:	4629      	mov	r1, r5
 8013348:	4668      	mov	r0, sp
 801334a:	f7f8 fce7 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 801334e:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 8013352:	b12b      	cbz	r3, 8013360 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8013354:	4669      	mov	r1, sp
 8013356:	4620      	mov	r0, r4
 8013358:	f7ff ffbf 	bl	80132da <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 801335c:	b005      	add	sp, #20
 801335e:	bd30      	pop	{r4, r5, pc}
 8013360:	3404      	adds	r4, #4
 8013362:	4621      	mov	r1, r4
 8013364:	a802      	add	r0, sp, #8
 8013366:	f7ff fb6f 	bl	8012a48 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801336a:	f8bd 3000 	ldrh.w	r3, [sp]
 801336e:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8013372:	1a9b      	subs	r3, r3, r2
 8013374:	f8ad 3000 	strh.w	r3, [sp]
 8013378:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801337c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8013380:	4669      	mov	r1, sp
 8013382:	1a9b      	subs	r3, r3, r2
 8013384:	4620      	mov	r0, r4
 8013386:	f8ad 3002 	strh.w	r3, [sp, #2]
 801338a:	f7f8 fd66 	bl	800be5a <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 801338e:	e7e5      	b.n	801335c <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08013390 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8013390:	680a      	ldr	r2, [r1, #0]
 8013392:	460b      	mov	r3, r1
 8013394:	6992      	ldr	r2, [r2, #24]
 8013396:	1d01      	adds	r1, r0, #4
 8013398:	4618      	mov	r0, r3
 801339a:	4710      	bx	r2

0801339c <_ZN8touchgfx12TextProviderC1Ev>:
 801339c:	b538      	push	{r3, r4, r5, lr}
 801339e:	2500      	movs	r5, #0
 80133a0:	2302      	movs	r3, #2
 80133a2:	4604      	mov	r4, r0
 80133a4:	e9c0 5500 	strd	r5, r5, [r0]
 80133a8:	7403      	strb	r3, [r0, #16]
 80133aa:	6145      	str	r5, [r0, #20]
 80133ac:	7605      	strb	r5, [r0, #24]
 80133ae:	83c5      	strh	r5, [r0, #30]
 80133b0:	8405      	strh	r5, [r0, #32]
 80133b2:	86c5      	strh	r5, [r0, #54]	; 0x36
 80133b4:	8705      	strh	r5, [r0, #56]	; 0x38
 80133b6:	87c5      	strh	r5, [r0, #62]	; 0x3e
 80133b8:	f8a0 5040 	strh.w	r5, [r0, #64]	; 0x40
 80133bc:	e9c0 5511 	strd	r5, r5, [r0, #68]	; 0x44
 80133c0:	220e      	movs	r2, #14
 80133c2:	4629      	mov	r1, r5
 80133c4:	304c      	adds	r0, #76	; 0x4c
 80133c6:	f00d fa2d 	bl	8020824 <memset>
 80133ca:	2301      	movs	r3, #1
 80133cc:	4620      	mov	r0, r4
 80133ce:	f8a4 505a 	strh.w	r5, [r4, #90]	; 0x5a
 80133d2:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80133d6:	f8a4 505e 	strh.w	r5, [r4, #94]	; 0x5e
 80133da:	f884 3060 	strb.w	r3, [r4, #96]	; 0x60
 80133de:	f884 5061 	strb.w	r5, [r4, #97]	; 0x61
 80133e2:	f7f1 fca9 	bl	8004d38 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 80133e6:	4620      	mov	r0, r4
 80133e8:	bd38      	pop	{r3, r4, r5, pc}

080133ea <_ZN8touchgfx12TextProvider11endOfStringEv>:
 80133ea:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 80133ec:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80133f0:	8c40      	ldrh	r0, [r0, #34]	; 0x22
 80133f2:	fab0 f080 	clz	r0, r0
 80133f6:	0940      	lsrs	r0, r0, #5
 80133f8:	4770      	bx	lr

080133fa <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 80133fa:	b530      	push	{r4, r5, lr}
 80133fc:	2500      	movs	r5, #0
 80133fe:	2401      	movs	r4, #1
 8013400:	6843      	ldr	r3, [r0, #4]
 8013402:	b913      	cbnz	r3, 801340a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8013404:	6803      	ldr	r3, [r0, #0]
 8013406:	b313      	cbz	r3, 801344e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8013408:	6043      	str	r3, [r0, #4]
 801340a:	7e03      	ldrb	r3, [r0, #24]
 801340c:	b143      	cbz	r3, 8013420 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 801340e:	6943      	ldr	r3, [r0, #20]
 8013410:	b12b      	cbz	r3, 801341e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8013412:	881a      	ldrh	r2, [r3, #0]
 8013414:	b11a      	cbz	r2, 801341e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8013416:	1c9a      	adds	r2, r3, #2
 8013418:	6142      	str	r2, [r0, #20]
 801341a:	8818      	ldrh	r0, [r3, #0]
 801341c:	bd30      	pop	{r4, r5, pc}
 801341e:	7605      	strb	r5, [r0, #24]
 8013420:	6843      	ldr	r3, [r0, #4]
 8013422:	8819      	ldrh	r1, [r3, #0]
 8013424:	b199      	cbz	r1, 801344e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8013426:	1c9a      	adds	r2, r3, #2
 8013428:	2902      	cmp	r1, #2
 801342a:	6042      	str	r2, [r0, #4]
 801342c:	d1f5      	bne.n	801341a <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 801342e:	7c03      	ldrb	r3, [r0, #16]
 8013430:	2b01      	cmp	r3, #1
 8013432:	d8e5      	bhi.n	8013400 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8013434:	1c5a      	adds	r2, r3, #1
 8013436:	3302      	adds	r3, #2
 8013438:	7402      	strb	r2, [r0, #16]
 801343a:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 801343e:	6143      	str	r3, [r0, #20]
 8013440:	2b00      	cmp	r3, #0
 8013442:	d0dd      	beq.n	8013400 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8013444:	881b      	ldrh	r3, [r3, #0]
 8013446:	2b00      	cmp	r3, #0
 8013448:	d0da      	beq.n	8013400 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801344a:	7604      	strb	r4, [r0, #24]
 801344c:	e7d8      	b.n	8013400 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 801344e:	2000      	movs	r0, #0
 8013450:	e7e4      	b.n	801341c <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08013452 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8013452:	b430      	push	{r4, r5}
 8013454:	6001      	str	r1, [r0, #0]
 8013456:	2100      	movs	r1, #0
 8013458:	6041      	str	r1, [r0, #4]
 801345a:	6815      	ldr	r5, [r2, #0]
 801345c:	6085      	str	r5, [r0, #8]
 801345e:	6852      	ldr	r2, [r2, #4]
 8013460:	6443      	str	r3, [r0, #68]	; 0x44
 8013462:	9b02      	ldr	r3, [sp, #8]
 8013464:	60c2      	str	r2, [r0, #12]
 8013466:	7401      	strb	r1, [r0, #16]
 8013468:	6141      	str	r1, [r0, #20]
 801346a:	7601      	strb	r1, [r0, #24]
 801346c:	8701      	strh	r1, [r0, #56]	; 0x38
 801346e:	8401      	strh	r1, [r0, #32]
 8013470:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 8013474:	6483      	str	r3, [r0, #72]	; 0x48
 8013476:	bc30      	pop	{r4, r5}
 8013478:	f7f1 bc5e 	b.w	8004d38 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0801347c <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 801347c:	b408      	push	{r3}
 801347e:	b510      	push	{r4, lr}
 8013480:	b085      	sub	sp, #20
 8013482:	ac07      	add	r4, sp, #28
 8013484:	f854 3b04 	ldr.w	r3, [r4], #4
 8013488:	9300      	str	r3, [sp, #0]
 801348a:	4613      	mov	r3, r2
 801348c:	4622      	mov	r2, r4
 801348e:	9403      	str	r4, [sp, #12]
 8013490:	f7ff ffdf 	bl	8013452 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013494:	b005      	add	sp, #20
 8013496:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801349a:	b001      	add	sp, #4
 801349c:	4770      	bx	lr

0801349e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 801349e:	b5f0      	push	{r4, r5, r6, r7, lr}
 80134a0:	4605      	mov	r5, r0
 80134a2:	4608      	mov	r0, r1
 80134a4:	b1e9      	cbz	r1, 80134e2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 80134a6:	f105 044c 	add.w	r4, r5, #76	; 0x4c
 80134aa:	460b      	mov	r3, r1
 80134ac:	f101 0708 	add.w	r7, r1, #8
 80134b0:	4622      	mov	r2, r4
 80134b2:	6818      	ldr	r0, [r3, #0]
 80134b4:	6859      	ldr	r1, [r3, #4]
 80134b6:	4626      	mov	r6, r4
 80134b8:	c603      	stmia	r6!, {r0, r1}
 80134ba:	3308      	adds	r3, #8
 80134bc:	42bb      	cmp	r3, r7
 80134be:	4634      	mov	r4, r6
 80134c0:	d1f7      	bne.n	80134b2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 80134c2:	6818      	ldr	r0, [r3, #0]
 80134c4:	6030      	str	r0, [r6, #0]
 80134c6:	889b      	ldrh	r3, [r3, #4]
 80134c8:	80b3      	strh	r3, [r6, #4]
 80134ca:	f895 3059 	ldrb.w	r3, [r5, #89]	; 0x59
 80134ce:	015b      	lsls	r3, r3, #5
 80134d0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 80134d4:	f895 3052 	ldrb.w	r3, [r5, #82]	; 0x52
 80134d8:	430b      	orrs	r3, r1
 80134da:	425b      	negs	r3, r3
 80134dc:	f885 3055 	strb.w	r3, [r5, #85]	; 0x55
 80134e0:	4610      	mov	r0, r2
 80134e2:	bdf0      	pop	{r4, r5, r6, r7, pc}

080134e4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 80134e4:	b538      	push	{r3, r4, r5, lr}
 80134e6:	460c      	mov	r4, r1
 80134e8:	6811      	ldr	r1, [r2, #0]
 80134ea:	4610      	mov	r0, r2
 80134ec:	68cd      	ldr	r5, [r1, #12]
 80134ee:	4619      	mov	r1, r3
 80134f0:	47a8      	blx	r5
 80134f2:	2800      	cmp	r0, #0
 80134f4:	bf08      	it	eq
 80134f6:	4620      	moveq	r0, r4
 80134f8:	bd38      	pop	{r3, r4, r5, pc}
	...

080134fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 80134fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80134fe:	4604      	mov	r4, r0
 8013500:	4615      	mov	r5, r2
 8013502:	4608      	mov	r0, r1
 8013504:	b93a      	cbnz	r2, 8013516 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 8013506:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 801350a:	f8a4 205c 	strh.w	r2, [r4, #92]	; 0x5c
 801350e:	f8a4 205e 	strh.w	r2, [r4, #94]	; 0x5e
 8013512:	4628      	mov	r0, r5
 8013514:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8013516:	f892 c00d 	ldrb.w	ip, [r2, #13]
 801351a:	8893      	ldrh	r3, [r2, #4]
 801351c:	ea4f 160c 	mov.w	r6, ip, lsl #4
 8013520:	f406 7280 	and.w	r2, r6, #256	; 0x100
 8013524:	79ee      	ldrb	r6, [r5, #7]
 8013526:	f46f 6763 	mvn.w	r7, #3632	; 0xe30
 801352a:	4316      	orrs	r6, r2
 801352c:	19da      	adds	r2, r3, r7
 801352e:	b291      	uxth	r1, r2
 8013530:	291d      	cmp	r1, #29
 8013532:	b2b7      	uxth	r7, r6
 8013534:	d87a      	bhi.n	801362c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 8013536:	2201      	movs	r2, #1
 8013538:	408a      	lsls	r2, r1
 801353a:	4975      	ldr	r1, [pc, #468]	; (8013710 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x214>)
 801353c:	420a      	tst	r2, r1
 801353e:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8013542:	d12d      	bne.n	80135a0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8013544:	f412 7f60 	tst.w	r2, #896	; 0x380
 8013548:	d070      	beq.n	801362c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x130>
 801354a:	f104 024c 	add.w	r2, r4, #76	; 0x4c
 801354e:	462b      	mov	r3, r5
 8013550:	f105 0e08 	add.w	lr, r5, #8
 8013554:	4615      	mov	r5, r2
 8013556:	6818      	ldr	r0, [r3, #0]
 8013558:	6859      	ldr	r1, [r3, #4]
 801355a:	4694      	mov	ip, r2
 801355c:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8013560:	3308      	adds	r3, #8
 8013562:	4573      	cmp	r3, lr
 8013564:	4662      	mov	r2, ip
 8013566:	d1f6      	bne.n	8013556 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8013568:	6818      	ldr	r0, [r3, #0]
 801356a:	f8cc 0000 	str.w	r0, [ip]
 801356e:	889b      	ldrh	r3, [r3, #4]
 8013570:	f8ac 3004 	strh.w	r3, [ip, #4]
 8013574:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 8013578:	f894 0059 	ldrb.w	r0, [r4, #89]	; 0x59
 801357c:	b2b3      	uxth	r3, r6
 801357e:	1aca      	subs	r2, r1, r3
 8013580:	b292      	uxth	r2, r2
 8013582:	f884 2054 	strb.w	r2, [r4, #84]	; 0x54
 8013586:	10d2      	asrs	r2, r2, #3
 8013588:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 801358c:	f002 0260 	and.w	r2, r2, #96	; 0x60
 8013590:	4302      	orrs	r2, r0
 8013592:	1bcf      	subs	r7, r1, r7
 8013594:	f884 2059 	strb.w	r2, [r4, #89]	; 0x59
 8013598:	1afb      	subs	r3, r7, r3
 801359a:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 801359e:	e7b8      	b.n	8013512 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 80135a0:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 80135a2:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80135a6:	8c59      	ldrh	r1, [r3, #34]	; 0x22
 80135a8:	f640 6333 	movw	r3, #3635	; 0xe33
 80135ac:	4299      	cmp	r1, r3
 80135ae:	d110      	bne.n	80135d2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xd6>
 80135b0:	6803      	ldr	r3, [r0, #0]
 80135b2:	68db      	ldr	r3, [r3, #12]
 80135b4:	4798      	blx	r3
 80135b6:	7b41      	ldrb	r1, [r0, #13]
 80135b8:	00cb      	lsls	r3, r1, #3
 80135ba:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80135be:	7a03      	ldrb	r3, [r0, #8]
 80135c0:	0648      	lsls	r0, r1, #25
 80135c2:	ea43 0302 	orr.w	r3, r3, r2
 80135c6:	bf44      	itt	mi
 80135c8:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80135cc:	b21b      	sxthmi	r3, r3
 80135ce:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80135d2:	f8b4 305a 	ldrh.w	r3, [r4, #90]	; 0x5a
 80135d6:	443b      	add	r3, r7
 80135d8:	4433      	add	r3, r6
 80135da:	b29b      	uxth	r3, r3
 80135dc:	f104 064c 	add.w	r6, r4, #76	; 0x4c
 80135e0:	462a      	mov	r2, r5
 80135e2:	f105 0c08 	add.w	ip, r5, #8
 80135e6:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80135ea:	4635      	mov	r5, r6
 80135ec:	6810      	ldr	r0, [r2, #0]
 80135ee:	6851      	ldr	r1, [r2, #4]
 80135f0:	4637      	mov	r7, r6
 80135f2:	c703      	stmia	r7!, {r0, r1}
 80135f4:	3208      	adds	r2, #8
 80135f6:	4562      	cmp	r2, ip
 80135f8:	463e      	mov	r6, r7
 80135fa:	d1f7      	bne.n	80135ec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xf0>
 80135fc:	6810      	ldr	r0, [r2, #0]
 80135fe:	6038      	str	r0, [r7, #0]
 8013600:	8892      	ldrh	r2, [r2, #4]
 8013602:	80ba      	strh	r2, [r7, #4]
 8013604:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8013608:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801360c:	10db      	asrs	r3, r3, #3
 801360e:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013612:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013616:	4313      	orrs	r3, r2
 8013618:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801361c:	f894 205e 	ldrb.w	r2, [r4, #94]	; 0x5e
 8013620:	f894 3055 	ldrb.w	r3, [r4, #85]	; 0x55
 8013624:	1a9b      	subs	r3, r3, r2
 8013626:	f884 3055 	strb.w	r3, [r4, #85]	; 0x55
 801362a:	e772      	b.n	8013512 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 801362c:	f023 0204 	bic.w	r2, r3, #4
 8013630:	f640 611b 	movw	r1, #3611	; 0xe1b
 8013634:	428a      	cmp	r2, r1
 8013636:	d003      	beq.n	8013640 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x144>
 8013638:	f640 621d 	movw	r2, #3613	; 0xe1d
 801363c:	4293      	cmp	r3, r2
 801363e:	d120      	bne.n	8013682 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x186>
 8013640:	3b01      	subs	r3, #1
 8013642:	4602      	mov	r2, r0
 8013644:	b29b      	uxth	r3, r3
 8013646:	4629      	mov	r1, r5
 8013648:	4620      	mov	r0, r4
 801364a:	f7ff ff4b 	bl	80134e4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 801364e:	7b41      	ldrb	r1, [r0, #13]
 8013650:	00cb      	lsls	r3, r1, #3
 8013652:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013656:	7a03      	ldrb	r3, [r0, #8]
 8013658:	0649      	lsls	r1, r1, #25
 801365a:	ea43 0302 	orr.w	r3, r3, r2
 801365e:	bf44      	itt	mi
 8013660:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013664:	b21b      	sxthmi	r3, r3
 8013666:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801366a:	7b6b      	ldrb	r3, [r5, #13]
 801366c:	7aaa      	ldrb	r2, [r5, #10]
 801366e:	005b      	lsls	r3, r3, #1
 8013670:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8013674:	4313      	orrs	r3, r2
 8013676:	115a      	asrs	r2, r3, #5
 8013678:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 801367c:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 8013680:	e036      	b.n	80136f0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f4>
 8013682:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 8013686:	f402 7180 	and.w	r1, r2, #256	; 0x100
 801368a:	7a2a      	ldrb	r2, [r5, #8]
 801368c:	f01c 0f40 	tst.w	ip, #64	; 0x40
 8013690:	ea42 0201 	orr.w	r2, r2, r1
 8013694:	bf1c      	itt	ne
 8013696:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 801369a:	b212      	sxthne	r2, r2
 801369c:	f8a4 205a 	strh.w	r2, [r4, #90]	; 0x5a
 80136a0:	f640 6109 	movw	r1, #3593	; 0xe09
 80136a4:	f023 0210 	bic.w	r2, r3, #16
 80136a8:	428a      	cmp	r2, r1
 80136aa:	d003      	beq.n	80136b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b8>
 80136ac:	f640 6213 	movw	r2, #3603	; 0xe13
 80136b0:	4293      	cmp	r3, r2
 80136b2:	d12a      	bne.n	801370a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x20e>
 80136b4:	7b6e      	ldrb	r6, [r5, #13]
 80136b6:	0076      	lsls	r6, r6, #1
 80136b8:	f406 7280 	and.w	r2, r6, #256	; 0x100
 80136bc:	7aae      	ldrb	r6, [r5, #10]
 80136be:	4316      	orrs	r6, r2
 80136c0:	f640 6213 	movw	r2, #3603	; 0xe13
 80136c4:	4293      	cmp	r3, r2
 80136c6:	bf18      	it	ne
 80136c8:	f103 33ff 	addne.w	r3, r3, #4294967295
 80136cc:	4602      	mov	r2, r0
 80136ce:	bf14      	ite	ne
 80136d0:	b29b      	uxthne	r3, r3
 80136d2:	f640 630c 	movweq	r3, #3596	; 0xe0c
 80136d6:	4629      	mov	r1, r5
 80136d8:	4620      	mov	r0, r4
 80136da:	f7ff ff03 	bl	80134e4 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 80136de:	7b43      	ldrb	r3, [r0, #13]
 80136e0:	7a82      	ldrb	r2, [r0, #10]
 80136e2:	005b      	lsls	r3, r3, #1
 80136e4:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80136e8:	4313      	orrs	r3, r2
 80136ea:	1af6      	subs	r6, r6, r3
 80136ec:	f8a4 605e 	strh.w	r6, [r4, #94]	; 0x5e
 80136f0:	7b69      	ldrb	r1, [r5, #13]
 80136f2:	00cb      	lsls	r3, r1, #3
 80136f4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80136f8:	7a2b      	ldrb	r3, [r5, #8]
 80136fa:	4313      	orrs	r3, r2
 80136fc:	064a      	lsls	r2, r1, #25
 80136fe:	bf44      	itt	mi
 8013700:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013704:	b21b      	sxthmi	r3, r3
 8013706:	1bdb      	subs	r3, r3, r7
 8013708:	e747      	b.n	801359a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 801370a:	2300      	movs	r3, #0
 801370c:	e7b6      	b.n	801367c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x180>
 801370e:	bf00      	nop
 8013710:	3fc00079 	.word	0x3fc00079

08013714 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8013714:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013718:	4604      	mov	r4, r0
 801371a:	b942      	cbnz	r2, 801372e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 801371c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8013720:	f8a0 305a 	strh.w	r3, [r0, #90]	; 0x5a
 8013724:	f8a0 305c 	strh.w	r3, [r0, #92]	; 0x5c
 8013728:	f8a4 305e 	strh.w	r3, [r4, #94]	; 0x5e
 801372c:	e047      	b.n	80137be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 801372e:	7b51      	ldrb	r1, [r2, #13]
 8013730:	8893      	ldrh	r3, [r2, #4]
 8013732:	010d      	lsls	r5, r1, #4
 8013734:	f405 7080 	and.w	r0, r5, #256	; 0x100
 8013738:	79d5      	ldrb	r5, [r2, #7]
 801373a:	4305      	orrs	r5, r0
 801373c:	2d04      	cmp	r5, #4
 801373e:	bfcc      	ite	gt
 8013740:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8013744:	f04f 0e01 	movle.w	lr, #1
 8013748:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 801374c:	f200 80ab 	bhi.w	80138a6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8013750:	f240 60e7 	movw	r0, #1767	; 0x6e7
 8013754:	4283      	cmp	r3, r0
 8013756:	d216      	bcs.n	8013786 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013758:	f240 605b 	movw	r0, #1627	; 0x65b
 801375c:	4283      	cmp	r3, r0
 801375e:	d859      	bhi.n	8013814 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8013760:	f240 6057 	movw	r0, #1623	; 0x657
 8013764:	4283      	cmp	r3, r0
 8013766:	d20e      	bcs.n	8013786 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013768:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 801376c:	d24a      	bcs.n	8013804 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 801376e:	f240 604e 	movw	r0, #1614	; 0x64e
 8013772:	4283      	cmp	r3, r0
 8013774:	d207      	bcs.n	8013786 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013776:	f240 601a 	movw	r0, #1562	; 0x61a
 801377a:	4283      	cmp	r3, r0
 801377c:	d02a      	beq.n	80137d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801377e:	d821      	bhi.n	80137c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8013780:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 8013784:	d35b      	bcc.n	801383e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013786:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	; 0x5a
 801378a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801378e:	f040 80d0 	bne.w	8013932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8013792:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	; 0x5c
 8013796:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 801379a:	f040 80ca 	bne.w	8013932 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801379e:	00cb      	lsls	r3, r1, #3
 80137a0:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80137a4:	7a13      	ldrb	r3, [r2, #8]
 80137a6:	0649      	lsls	r1, r1, #25
 80137a8:	ea43 0300 	orr.w	r3, r3, r0
 80137ac:	bf44      	itt	mi
 80137ae:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80137b2:	b21b      	sxthmi	r3, r3
 80137b4:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80137b8:	1b5d      	subs	r5, r3, r5
 80137ba:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 80137be:	4610      	mov	r0, r2
 80137c0:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80137c4:	f240 604b 	movw	r0, #1611	; 0x64b
 80137c8:	4283      	cmp	r3, r0
 80137ca:	d338      	bcc.n	801383e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80137cc:	f240 604c 	movw	r0, #1612	; 0x64c
 80137d0:	4283      	cmp	r3, r0
 80137d2:	d9d8      	bls.n	8013786 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80137d4:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	; 0x5a
 80137d8:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	; 0x5c
 80137dc:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80137e0:	f040 80f2 	bne.w	80139c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80137e4:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 80137e8:	f040 80ee 	bne.w	80139c8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 80137ec:	00cb      	lsls	r3, r1, #3
 80137ee:	f403 7080 	and.w	r0, r3, #256	; 0x100
 80137f2:	7a13      	ldrb	r3, [r2, #8]
 80137f4:	064e      	lsls	r6, r1, #25
 80137f6:	ea43 0300 	orr.w	r3, r3, r0
 80137fa:	bf44      	itt	mi
 80137fc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013800:	b21b      	sxthmi	r3, r3
 8013802:	e7d9      	b.n	80137b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 8013804:	f240 6054 	movw	r0, #1620	; 0x654
 8013808:	4283      	cmp	r3, r0
 801380a:	d8e3      	bhi.n	80137d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801380c:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 8013810:	d9e0      	bls.n	80137d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013812:	e7b8      	b.n	8013786 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013814:	f240 6074 	movw	r0, #1652	; 0x674
 8013818:	4283      	cmp	r3, r0
 801381a:	d0b4      	beq.n	8013786 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801381c:	d82d      	bhi.n	801387a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 801381e:	f240 605e 	movw	r0, #1630	; 0x65e
 8013822:	4283      	cmp	r3, r0
 8013824:	d804      	bhi.n	8013830 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 8013826:	f240 605d 	movw	r0, #1629	; 0x65d
 801382a:	4283      	cmp	r3, r0
 801382c:	d3d2      	bcc.n	80137d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801382e:	e7aa      	b.n	8013786 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013830:	f240 605f 	movw	r0, #1631	; 0x65f
 8013834:	4283      	cmp	r3, r0
 8013836:	d0cd      	beq.n	80137d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013838:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 801383c:	d0a3      	beq.n	8013786 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801383e:	00cb      	lsls	r3, r1, #3
 8013840:	f403 7080 	and.w	r0, r3, #256	; 0x100
 8013844:	7a13      	ldrb	r3, [r2, #8]
 8013846:	0649      	lsls	r1, r1, #25
 8013848:	ea43 0300 	orr.w	r3, r3, r0
 801384c:	bf44      	itt	mi
 801384e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013852:	b21b      	sxthmi	r3, r3
 8013854:	1b5d      	subs	r5, r3, r5
 8013856:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 801385a:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 801385e:	7b53      	ldrb	r3, [r2, #13]
 8013860:	015b      	lsls	r3, r3, #5
 8013862:	f403 7180 	and.w	r1, r3, #256	; 0x100
 8013866:	7993      	ldrb	r3, [r2, #6]
 8013868:	430b      	orrs	r3, r1
 801386a:	005b      	lsls	r3, r3, #1
 801386c:	2105      	movs	r1, #5
 801386e:	fb93 f3f1 	sdiv	r3, r3, r1
 8013872:	f992 1009 	ldrsb.w	r1, [r2, #9]
 8013876:	440b      	add	r3, r1
 8013878:	e756      	b.n	8013728 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 801387a:	f240 60e2 	movw	r0, #1762	; 0x6e2
 801387e:	4283      	cmp	r3, r0
 8013880:	d809      	bhi.n	8013896 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 8013882:	f240 60df 	movw	r0, #1759	; 0x6df
 8013886:	4283      	cmp	r3, r0
 8013888:	f4bf af7d 	bcs.w	8013786 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801388c:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 8013890:	2b05      	cmp	r3, #5
 8013892:	d8d4      	bhi.n	801383e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8013894:	e777      	b.n	8013786 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013896:	f240 60e3 	movw	r0, #1763	; 0x6e3
 801389a:	4283      	cmp	r3, r0
 801389c:	d09a      	beq.n	80137d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801389e:	f240 60e4 	movw	r0, #1764	; 0x6e4
 80138a2:	4283      	cmp	r3, r0
 80138a4:	e7ca      	b.n	801383c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 80138a6:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 80138aa:	d22b      	bcs.n	8013904 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 80138ac:	f640 00ed 	movw	r0, #2285	; 0x8ed
 80138b0:	4283      	cmp	r3, r0
 80138b2:	d28f      	bcs.n	80137d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80138b4:	f640 00e5 	movw	r0, #2277	; 0x8e5
 80138b8:	4283      	cmp	r3, r0
 80138ba:	d816      	bhi.n	80138ea <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 80138bc:	f640 00e4 	movw	r0, #2276	; 0x8e4
 80138c0:	4283      	cmp	r3, r0
 80138c2:	f4bf af60 	bcs.w	8013786 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80138c6:	f240 60ec 	movw	r0, #1772	; 0x6ec
 80138ca:	4283      	cmp	r3, r0
 80138cc:	d80a      	bhi.n	80138e4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 80138ce:	f240 60eb 	movw	r0, #1771	; 0x6eb
 80138d2:	4283      	cmp	r3, r0
 80138d4:	f4bf af57 	bcs.w	8013786 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80138d8:	f240 60ea 	movw	r0, #1770	; 0x6ea
 80138dc:	4283      	cmp	r3, r0
 80138de:	f43f af79 	beq.w	80137d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80138e2:	e7ac      	b.n	801383e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 80138e4:	f240 60ed 	movw	r0, #1773	; 0x6ed
 80138e8:	e7f8      	b.n	80138dc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 80138ea:	f640 00e8 	movw	r0, #2280	; 0x8e8
 80138ee:	4283      	cmp	r3, r0
 80138f0:	d802      	bhi.n	80138f8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 80138f2:	f640 00e7 	movw	r0, #2279	; 0x8e7
 80138f6:	e798      	b.n	801382a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 80138f8:	f640 00e9 	movw	r0, #2281	; 0x8e9
 80138fc:	4283      	cmp	r3, r0
 80138fe:	f47f af42 	bne.w	8013786 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013902:	e767      	b.n	80137d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8013904:	f640 00f6 	movw	r0, #2294	; 0x8f6
 8013908:	4283      	cmp	r3, r0
 801390a:	f43f af63 	beq.w	80137d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801390e:	d802      	bhi.n	8013916 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8013910:	f640 00f2 	movw	r0, #2290	; 0x8f2
 8013914:	e7f2      	b.n	80138fc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 8013916:	f640 00fa 	movw	r0, #2298	; 0x8fa
 801391a:	4283      	cmp	r3, r0
 801391c:	d805      	bhi.n	801392a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 801391e:	f640 00f9 	movw	r0, #2297	; 0x8f9
 8013922:	4283      	cmp	r3, r0
 8013924:	f4ff af2f 	bcc.w	8013786 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8013928:	e754      	b.n	80137d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801392a:	f640 00fe 	movw	r0, #2302	; 0x8fe
 801392e:	4283      	cmp	r3, r0
 8013930:	e7af      	b.n	8013892 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 8013932:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 8013936:	4617      	mov	r7, r2
 8013938:	f102 0808 	add.w	r8, r2, #8
 801393c:	4666      	mov	r6, ip
 801393e:	6838      	ldr	r0, [r7, #0]
 8013940:	6879      	ldr	r1, [r7, #4]
 8013942:	46e6      	mov	lr, ip
 8013944:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8013948:	3708      	adds	r7, #8
 801394a:	4547      	cmp	r7, r8
 801394c:	46f4      	mov	ip, lr
 801394e:	d1f6      	bne.n	801393e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 8013950:	6838      	ldr	r0, [r7, #0]
 8013952:	f8ce 0000 	str.w	r0, [lr]
 8013956:	88b9      	ldrh	r1, [r7, #4]
 8013958:	f8ae 1004 	strh.w	r1, [lr, #4]
 801395c:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 8013960:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 8013964:	d009      	beq.n	801397a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 8013966:	7b51      	ldrb	r1, [r2, #13]
 8013968:	7992      	ldrb	r2, [r2, #6]
 801396a:	0149      	lsls	r1, r1, #5
 801396c:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013970:	4311      	orrs	r1, r2
 8013972:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8013976:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 801397a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 801397e:	b2ad      	uxth	r5, r5
 8013980:	d00d      	beq.n	801399e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 8013982:	442b      	add	r3, r5
 8013984:	b29b      	uxth	r3, r3
 8013986:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 801398a:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 801398e:	10db      	asrs	r3, r3, #3
 8013990:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013994:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013998:	4313      	orrs	r3, r2
 801399a:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 801399e:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 80139a2:	00cb      	lsls	r3, r1, #3
 80139a4:	f403 7280 	and.w	r2, r3, #256	; 0x100
 80139a8:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 80139ac:	064f      	lsls	r7, r1, #25
 80139ae:	ea43 0302 	orr.w	r3, r3, r2
 80139b2:	bf44      	itt	mi
 80139b4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 80139b8:	b21b      	sxthmi	r3, r3
 80139ba:	f8a4 305a 	strh.w	r3, [r4, #90]	; 0x5a
 80139be:	1b5b      	subs	r3, r3, r5
 80139c0:	f8a4 305c 	strh.w	r3, [r4, #92]	; 0x5c
 80139c4:	4632      	mov	r2, r6
 80139c6:	e6fa      	b.n	80137be <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 80139c8:	f104 0c4c 	add.w	ip, r4, #76	; 0x4c
 80139cc:	4617      	mov	r7, r2
 80139ce:	f102 0908 	add.w	r9, r2, #8
 80139d2:	4666      	mov	r6, ip
 80139d4:	6838      	ldr	r0, [r7, #0]
 80139d6:	6879      	ldr	r1, [r7, #4]
 80139d8:	46e0      	mov	r8, ip
 80139da:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 80139de:	3708      	adds	r7, #8
 80139e0:	454f      	cmp	r7, r9
 80139e2:	46c4      	mov	ip, r8
 80139e4:	d1f6      	bne.n	80139d4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 80139e6:	6838      	ldr	r0, [r7, #0]
 80139e8:	f8c8 0000 	str.w	r0, [r8]
 80139ec:	88b9      	ldrh	r1, [r7, #4]
 80139ee:	f8a8 1004 	strh.w	r1, [r8, #4]
 80139f2:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	; 0x5e
 80139f6:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 80139fa:	d009      	beq.n	8013a10 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 80139fc:	7b51      	ldrb	r1, [r2, #13]
 80139fe:	7992      	ldrb	r2, [r2, #6]
 8013a00:	0149      	lsls	r1, r1, #5
 8013a02:	f401 7180 	and.w	r1, r1, #256	; 0x100
 8013a06:	4311      	orrs	r1, r2
 8013a08:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8013a0c:	f884 0055 	strb.w	r0, [r4, #85]	; 0x55
 8013a10:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 8013a14:	d00e      	beq.n	8013a34 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 8013a16:	eba3 030e 	sub.w	r3, r3, lr
 8013a1a:	f894 2059 	ldrb.w	r2, [r4, #89]	; 0x59
 8013a1e:	b29b      	uxth	r3, r3
 8013a20:	f884 3054 	strb.w	r3, [r4, #84]	; 0x54
 8013a24:	10db      	asrs	r3, r3, #3
 8013a26:	f003 0360 	and.w	r3, r3, #96	; 0x60
 8013a2a:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 8013a2e:	4313      	orrs	r3, r2
 8013a30:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 8013a34:	f894 1059 	ldrb.w	r1, [r4, #89]	; 0x59
 8013a38:	00cb      	lsls	r3, r1, #3
 8013a3a:	f403 7280 	and.w	r2, r3, #256	; 0x100
 8013a3e:	f894 3054 	ldrb.w	r3, [r4, #84]	; 0x54
 8013a42:	0648      	lsls	r0, r1, #25
 8013a44:	ea43 0302 	orr.w	r3, r3, r2
 8013a48:	bf44      	itt	mi
 8013a4a:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 8013a4e:	b21b      	sxthmi	r3, r3
 8013a50:	1b5d      	subs	r5, r3, r5
 8013a52:	f8a4 505c 	strh.w	r5, [r4, #92]	; 0x5c
 8013a56:	e7b5      	b.n	80139c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

08013a58 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 8013a58:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013a5c:	461e      	mov	r6, r3
 8013a5e:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013a60:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013a64:	4604      	mov	r4, r0
 8013a66:	4617      	mov	r7, r2
 8013a68:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8013a6c:	f7f1 f922 	bl	8004cb4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013a70:	4605      	mov	r5, r0
 8013a72:	b918      	cbnz	r0, 8013a7c <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 8013a74:	6030      	str	r0, [r6, #0]
 8013a76:	4628      	mov	r0, r5
 8013a78:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013a7c:	683b      	ldr	r3, [r7, #0]
 8013a7e:	4601      	mov	r1, r0
 8013a80:	68db      	ldr	r3, [r3, #12]
 8013a82:	4638      	mov	r0, r7
 8013a84:	4798      	blx	r3
 8013a86:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8013a8a:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8013a8e:	4602      	mov	r2, r0
 8013a90:	6030      	str	r0, [r6, #0]
 8013a92:	d213      	bcs.n	8013abc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 8013a94:	4643      	mov	r3, r8
 8013a96:	4639      	mov	r1, r7
 8013a98:	4620      	mov	r0, r4
 8013a9a:	f7ff fe3b 	bl	8013714 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8013a9e:	6030      	str	r0, [r6, #0]
 8013aa0:	6833      	ldr	r3, [r6, #0]
 8013aa2:	b143      	cbz	r3, 8013ab6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 8013aa4:	7b5a      	ldrb	r2, [r3, #13]
 8013aa6:	7a9b      	ldrb	r3, [r3, #10]
 8013aa8:	0052      	lsls	r2, r2, #1
 8013aaa:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8013aae:	4313      	orrs	r3, r2
 8013ab0:	bf0c      	ite	eq
 8013ab2:	2301      	moveq	r3, #1
 8013ab4:	2300      	movne	r3, #0
 8013ab6:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8013aba:	e7dc      	b.n	8013a76 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8013abc:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8013ac0:	b29b      	uxth	r3, r3
 8013ac2:	2b7f      	cmp	r3, #127	; 0x7f
 8013ac4:	d804      	bhi.n	8013ad0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 8013ac6:	4639      	mov	r1, r7
 8013ac8:	4620      	mov	r0, r4
 8013aca:	f7ff fd17 	bl	80134fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8013ace:	e7e6      	b.n	8013a9e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8013ad0:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8013ad4:	2b00      	cmp	r3, #0
 8013ad6:	d0e3      	beq.n	8013aa0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8013ad8:	f640 1302 	movw	r3, #2306	; 0x902
 8013adc:	429d      	cmp	r5, r3
 8013ade:	d1df      	bne.n	8013aa0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8013ae0:	4601      	mov	r1, r0
 8013ae2:	4620      	mov	r0, r4
 8013ae4:	f7ff fcdb 	bl	801349e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013ae8:	e7d9      	b.n	8013a9e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08013aea <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8013aea:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8013aee:	461e      	mov	r6, r3
 8013af0:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013af2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8013af6:	4604      	mov	r4, r0
 8013af8:	4617      	mov	r7, r2
 8013afa:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8013afe:	f7f1 f8d9 	bl	8004cb4 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013b02:	4605      	mov	r5, r0
 8013b04:	b918      	cbnz	r0, 8013b0e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 8013b06:	6030      	str	r0, [r6, #0]
 8013b08:	4628      	mov	r0, r5
 8013b0a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8013b0e:	683b      	ldr	r3, [r7, #0]
 8013b10:	4601      	mov	r1, r0
 8013b12:	f8d3 9008 	ldr.w	r9, [r3, #8]
 8013b16:	4638      	mov	r0, r7
 8013b18:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8013b1c:	47c8      	blx	r9
 8013b1e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 8013b22:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8013b26:	4602      	mov	r2, r0
 8013b28:	6030      	str	r0, [r6, #0]
 8013b2a:	d213      	bcs.n	8013b54 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 8013b2c:	4643      	mov	r3, r8
 8013b2e:	4639      	mov	r1, r7
 8013b30:	4620      	mov	r0, r4
 8013b32:	f7ff fdef 	bl	8013714 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8013b36:	6030      	str	r0, [r6, #0]
 8013b38:	6833      	ldr	r3, [r6, #0]
 8013b3a:	b143      	cbz	r3, 8013b4e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 8013b3c:	7b5a      	ldrb	r2, [r3, #13]
 8013b3e:	7a9b      	ldrb	r3, [r3, #10]
 8013b40:	0052      	lsls	r2, r2, #1
 8013b42:	f402 7280 	and.w	r2, r2, #256	; 0x100
 8013b46:	4313      	orrs	r3, r2
 8013b48:	bf0c      	ite	eq
 8013b4a:	2301      	moveq	r3, #1
 8013b4c:	2300      	movne	r3, #0
 8013b4e:	f884 3061 	strb.w	r3, [r4, #97]	; 0x61
 8013b52:	e7d9      	b.n	8013b08 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 8013b54:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 8013b58:	b29b      	uxth	r3, r3
 8013b5a:	2b7f      	cmp	r3, #127	; 0x7f
 8013b5c:	d804      	bhi.n	8013b68 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 8013b5e:	4639      	mov	r1, r7
 8013b60:	4620      	mov	r0, r4
 8013b62:	f7ff fccb 	bl	80134fc <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8013b66:	e7e6      	b.n	8013b36 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 8013b68:	f894 3061 	ldrb.w	r3, [r4, #97]	; 0x61
 8013b6c:	2b00      	cmp	r3, #0
 8013b6e:	d0e3      	beq.n	8013b38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013b70:	f640 1302 	movw	r3, #2306	; 0x902
 8013b74:	429d      	cmp	r5, r3
 8013b76:	d1df      	bne.n	8013b38 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8013b78:	4601      	mov	r1, r0
 8013b7a:	4620      	mov	r0, r4
 8013b7c:	f7ff fc8f 	bl	801349e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8013b80:	e7d9      	b.n	8013b36 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

08013b82 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 8013b82:	b510      	push	{r4, lr}
 8013b84:	4604      	mov	r4, r0
 8013b86:	f8b4 1040 	ldrh.w	r1, [r4, #64]	; 0x40
 8013b8a:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013b8c:	b1f1      	cbz	r1, 8013bcc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8013b8e:	2b0a      	cmp	r3, #10
 8013b90:	d02f      	beq.n	8013bf2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8013b92:	8fe2      	ldrh	r2, [r4, #62]	; 0x3e
 8013b94:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8013b98:	3901      	subs	r1, #1
 8013b9a:	8f40      	ldrh	r0, [r0, #58]	; 0x3a
 8013b9c:	f8a4 1040 	strh.w	r1, [r4, #64]	; 0x40
 8013ba0:	1c51      	adds	r1, r2, #1
 8013ba2:	b289      	uxth	r1, r1
 8013ba4:	2901      	cmp	r1, #1
 8013ba6:	bf84      	itt	hi
 8013ba8:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8013bac:	87e2      	strhhi	r2, [r4, #62]	; 0x3e
 8013bae:	f103 0201 	add.w	r2, r3, #1
 8013bb2:	8722      	strh	r2, [r4, #56]	; 0x38
 8013bb4:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013bb6:	bf98      	it	ls
 8013bb8:	87e1      	strhls	r1, [r4, #62]	; 0x3e
 8013bba:	4413      	add	r3, r2
 8013bbc:	b29b      	uxth	r3, r3
 8013bbe:	2b09      	cmp	r3, #9
 8013bc0:	bf88      	it	hi
 8013bc2:	3b0a      	subhi	r3, #10
 8013bc4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013bc8:	8458      	strh	r0, [r3, #34]	; 0x22
 8013bca:	e7dc      	b.n	8013b86 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8013bcc:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013bce:	2b0a      	cmp	r3, #10
 8013bd0:	d00f      	beq.n	8013bf2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 8013bd2:	4620      	mov	r0, r4
 8013bd4:	f7ff fc11 	bl	80133fa <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8013bd8:	8f23      	ldrh	r3, [r4, #56]	; 0x38
 8013bda:	1c5a      	adds	r2, r3, #1
 8013bdc:	8722      	strh	r2, [r4, #56]	; 0x38
 8013bde:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 8013be0:	4413      	add	r3, r2
 8013be2:	b29b      	uxth	r3, r3
 8013be4:	2b09      	cmp	r3, #9
 8013be6:	bf88      	it	hi
 8013be8:	3b0a      	subhi	r3, #10
 8013bea:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013bee:	8458      	strh	r0, [r3, #34]	; 0x22
 8013bf0:	e7ec      	b.n	8013bcc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8013bf2:	bd10      	pop	{r4, pc}

08013bf4 <_ZN8touchgfx12TextProvider11getNextCharEv>:
 8013bf4:	b538      	push	{r3, r4, r5, lr}
 8013bf6:	8ec3      	ldrh	r3, [r0, #54]	; 0x36
 8013bf8:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8013bfc:	4604      	mov	r4, r0
 8013bfe:	8c55      	ldrh	r5, [r2, #34]	; 0x22
 8013c00:	8f02      	ldrh	r2, [r0, #56]	; 0x38
 8013c02:	3a01      	subs	r2, #1
 8013c04:	8702      	strh	r2, [r0, #56]	; 0x38
 8013c06:	1c5a      	adds	r2, r3, #1
 8013c08:	b292      	uxth	r2, r2
 8013c0a:	2a09      	cmp	r2, #9
 8013c0c:	bf86      	itte	hi
 8013c0e:	3b09      	subhi	r3, #9
 8013c10:	86c3      	strhhi	r3, [r0, #54]	; 0x36
 8013c12:	86c2      	strhls	r2, [r0, #54]	; 0x36
 8013c14:	f7ff ffb5 	bl	8013b82 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 8013c18:	8c23      	ldrh	r3, [r4, #32]
 8013c1a:	2b01      	cmp	r3, #1
 8013c1c:	bf9c      	itt	ls
 8013c1e:	3301      	addls	r3, #1
 8013c20:	8423      	strhls	r3, [r4, #32]
 8013c22:	8be3      	ldrh	r3, [r4, #30]
 8013c24:	b90b      	cbnz	r3, 8013c2a <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 8013c26:	2302      	movs	r3, #2
 8013c28:	83e3      	strh	r3, [r4, #30]
 8013c2a:	8be3      	ldrh	r3, [r4, #30]
 8013c2c:	3b01      	subs	r3, #1
 8013c2e:	b29b      	uxth	r3, r3
 8013c30:	83e3      	strh	r3, [r4, #30]
 8013c32:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8013c36:	4628      	mov	r0, r5
 8013c38:	8365      	strh	r5, [r4, #26]
 8013c3a:	bd38      	pop	{r3, r4, r5, pc}

08013c3c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 8013c3c:	428a      	cmp	r2, r1
 8013c3e:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013c42:	8ec7      	ldrh	r7, [r0, #54]	; 0x36
 8013c44:	d931      	bls.n	8013caa <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 8013c46:	8f05      	ldrh	r5, [r0, #56]	; 0x38
 8013c48:	f8b0 8040 	ldrh.w	r8, [r0, #64]	; 0x40
 8013c4c:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	; 0x3e
 8013c50:	19ee      	adds	r6, r5, r7
 8013c52:	1a54      	subs	r4, r2, r1
 8013c54:	3e01      	subs	r6, #1
 8013c56:	fa1f fe84 	uxth.w	lr, r4
 8013c5a:	b2b4      	uxth	r4, r6
 8013c5c:	eba4 090e 	sub.w	r9, r4, lr
 8013c60:	fa1f f989 	uxth.w	r9, r9
 8013c64:	2c09      	cmp	r4, #9
 8013c66:	4626      	mov	r6, r4
 8013c68:	bf88      	it	hi
 8013c6a:	f1a4 060a 	subhi.w	r6, r4, #10
 8013c6e:	f1bc 0f00 	cmp.w	ip, #0
 8013c72:	bf08      	it	eq
 8013c74:	f04f 0c02 	moveq.w	ip, #2
 8013c78:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8013c7c:	f10c 3cff 	add.w	ip, ip, #4294967295
 8013c80:	fa1f fc8c 	uxth.w	ip, ip
 8013c84:	3c01      	subs	r4, #1
 8013c86:	f8b6 a022 	ldrh.w	sl, [r6, #34]	; 0x22
 8013c8a:	b2a4      	uxth	r4, r4
 8013c8c:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8013c90:	454c      	cmp	r4, r9
 8013c92:	f8a6 a03a 	strh.w	sl, [r6, #58]	; 0x3a
 8013c96:	d1e5      	bne.n	8013c64 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8013c98:	eba5 050e 	sub.w	r5, r5, lr
 8013c9c:	eb0e 0408 	add.w	r4, lr, r8
 8013ca0:	8705      	strh	r5, [r0, #56]	; 0x38
 8013ca2:	f8a0 4040 	strh.w	r4, [r0, #64]	; 0x40
 8013ca6:	f8a0 c03e 	strh.w	ip, [r0, #62]	; 0x3e
 8013caa:	8f04      	ldrh	r4, [r0, #56]	; 0x38
 8013cac:	1a64      	subs	r4, r4, r1
 8013cae:	4439      	add	r1, r7
 8013cb0:	b289      	uxth	r1, r1
 8013cb2:	2909      	cmp	r1, #9
 8013cb4:	bf88      	it	hi
 8013cb6:	390a      	subhi	r1, #10
 8013cb8:	8704      	strh	r4, [r0, #56]	; 0x38
 8013cba:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013cbc:	250a      	movs	r5, #10
 8013cbe:	b18a      	cbz	r2, 8013ce4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8013cc0:	8f01      	ldrh	r1, [r0, #56]	; 0x38
 8013cc2:	3a01      	subs	r2, #1
 8013cc4:	b292      	uxth	r2, r2
 8013cc6:	3101      	adds	r1, #1
 8013cc8:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8013ccc:	8701      	strh	r1, [r0, #56]	; 0x38
 8013cce:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013cd0:	b901      	cbnz	r1, 8013cd4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 8013cd2:	86c5      	strh	r5, [r0, #54]	; 0x36
 8013cd4:	8ec1      	ldrh	r1, [r0, #54]	; 0x36
 8013cd6:	3901      	subs	r1, #1
 8013cd8:	b289      	uxth	r1, r1
 8013cda:	86c1      	strh	r1, [r0, #54]	; 0x36
 8013cdc:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8013ce0:	844c      	strh	r4, [r1, #34]	; 0x22
 8013ce2:	e7ec      	b.n	8013cbe <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 8013ce4:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8013ce8:	f7ff bf4b 	b.w	8013b82 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08013cec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8013cec:	b570      	push	{r4, r5, r6, lr}
 8013cee:	2500      	movs	r5, #0
 8013cf0:	4295      	cmp	r5, r2
 8013cf2:	d011      	beq.n	8013d18 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 8013cf4:	8bc4      	ldrh	r4, [r0, #30]
 8013cf6:	f831 6b02 	ldrh.w	r6, [r1], #2
 8013cfa:	4414      	add	r4, r2
 8013cfc:	3c01      	subs	r4, #1
 8013cfe:	1b64      	subs	r4, r4, r5
 8013d00:	b2a4      	uxth	r4, r4
 8013d02:	2c01      	cmp	r4, #1
 8013d04:	bf88      	it	hi
 8013d06:	3c02      	subhi	r4, #2
 8013d08:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8013d0c:	8b64      	ldrh	r4, [r4, #26]
 8013d0e:	42b4      	cmp	r4, r6
 8013d10:	d117      	bne.n	8013d42 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 8013d12:	3501      	adds	r5, #1
 8013d14:	b2ad      	uxth	r5, r5
 8013d16:	e7eb      	b.n	8013cf0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 8013d18:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8013d1c:	2400      	movs	r4, #0
 8013d1e:	4413      	add	r3, r2
 8013d20:	b2a2      	uxth	r2, r4
 8013d22:	429a      	cmp	r2, r3
 8013d24:	da0f      	bge.n	8013d46 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 8013d26:	8ec6      	ldrh	r6, [r0, #54]	; 0x36
 8013d28:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 8013d2c:	4432      	add	r2, r6
 8013d2e:	b292      	uxth	r2, r2
 8013d30:	2a09      	cmp	r2, #9
 8013d32:	bf88      	it	hi
 8013d34:	3a0a      	subhi	r2, #10
 8013d36:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8013d3a:	3401      	adds	r4, #1
 8013d3c:	8c52      	ldrh	r2, [r2, #34]	; 0x22
 8013d3e:	42aa      	cmp	r2, r5
 8013d40:	d0ee      	beq.n	8013d20 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 8013d42:	2000      	movs	r0, #0
 8013d44:	bd70      	pop	{r4, r5, r6, pc}
 8013d46:	2001      	movs	r0, #1
 8013d48:	e7fc      	b.n	8013d44 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

08013d4a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 8013d4a:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013d4e:	4605      	mov	r5, r0
 8013d50:	4616      	mov	r6, r2
 8013d52:	1c8c      	adds	r4, r1, #2
 8013d54:	8809      	ldrh	r1, [r1, #0]
 8013d56:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 8013d5a:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 8013d5e:	42b3      	cmp	r3, r6
 8013d60:	d124      	bne.n	8013dac <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 8013d62:	f3c1 2903 	ubfx	r9, r1, #8, #4
 8013d66:	f3c1 1803 	ubfx	r8, r1, #4, #4
 8013d6a:	f001 070f 	and.w	r7, r1, #15
 8013d6e:	f8cd 8000 	str.w	r8, [sp]
 8013d72:	464b      	mov	r3, r9
 8013d74:	4652      	mov	r2, sl
 8013d76:	4621      	mov	r1, r4
 8013d78:	4628      	mov	r0, r5
 8013d7a:	f7ff ffb7 	bl	8013cec <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8013d7e:	4683      	mov	fp, r0
 8013d80:	b168      	cbz	r0, 8013d9e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 8013d82:	eb0a 0109 	add.w	r1, sl, r9
 8013d86:	4441      	add	r1, r8
 8013d88:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8013d8c:	463a      	mov	r2, r7
 8013d8e:	4649      	mov	r1, r9
 8013d90:	4628      	mov	r0, r5
 8013d92:	f7ff ff53 	bl	8013c3c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 8013d96:	4658      	mov	r0, fp
 8013d98:	b003      	add	sp, #12
 8013d9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013d9e:	eb07 010a 	add.w	r1, r7, sl
 8013da2:	4449      	add	r1, r9
 8013da4:	4441      	add	r1, r8
 8013da6:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8013daa:	e7d2      	b.n	8013d52 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8013dac:	f04f 0b00 	mov.w	fp, #0
 8013db0:	e7f1      	b.n	8013d96 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

08013db2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 8013db2:	b570      	push	{r4, r5, r6, lr}
 8013db4:	8810      	ldrh	r0, [r2, #0]
 8013db6:	4298      	cmp	r0, r3
 8013db8:	d817      	bhi.n	8013dea <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013dba:	1e48      	subs	r0, r1, #1
 8013dbc:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8013dc0:	4298      	cmp	r0, r3
 8013dc2:	d312      	bcc.n	8013dea <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013dc4:	2400      	movs	r4, #0
 8013dc6:	428c      	cmp	r4, r1
 8013dc8:	d20f      	bcs.n	8013dea <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8013dca:	1860      	adds	r0, r4, r1
 8013dcc:	1040      	asrs	r0, r0, #1
 8013dce:	0085      	lsls	r5, r0, #2
 8013dd0:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 8013dd4:	42b3      	cmp	r3, r6
 8013dd6:	d902      	bls.n	8013dde <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8013dd8:	3001      	adds	r0, #1
 8013dda:	b284      	uxth	r4, r0
 8013ddc:	e7f3      	b.n	8013dc6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8013dde:	d201      	bcs.n	8013de4 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8013de0:	b281      	uxth	r1, r0
 8013de2:	e7f0      	b.n	8013dc6 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8013de4:	442a      	add	r2, r5
 8013de6:	8850      	ldrh	r0, [r2, #2]
 8013de8:	bd70      	pop	{r4, r5, r6, pc}
 8013dea:	2000      	movs	r0, #0
 8013dec:	e7fc      	b.n	8013de8 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08013dee <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8013dee:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013df2:	6c45      	ldr	r5, [r0, #68]	; 0x44
 8013df4:	886f      	ldrh	r7, [r5, #2]
 8013df6:	4604      	mov	r4, r0
 8013df8:	087f      	lsrs	r7, r7, #1
 8013dfa:	260b      	movs	r6, #11
 8013dfc:	3e01      	subs	r6, #1
 8013dfe:	d013      	beq.n	8013e28 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8013e00:	8ee3      	ldrh	r3, [r4, #54]	; 0x36
 8013e02:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8013e06:	462a      	mov	r2, r5
 8013e08:	f8b3 8022 	ldrh.w	r8, [r3, #34]	; 0x22
 8013e0c:	4639      	mov	r1, r7
 8013e0e:	4643      	mov	r3, r8
 8013e10:	4620      	mov	r0, r4
 8013e12:	f7ff ffce 	bl	8013db2 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 8013e16:	b138      	cbz	r0, 8013e28 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8013e18:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 8013e1c:	4642      	mov	r2, r8
 8013e1e:	4620      	mov	r0, r4
 8013e20:	f7ff ff93 	bl	8013d4a <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 8013e24:	2800      	cmp	r0, #0
 8013e26:	d1e9      	bne.n	8013dfc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 8013e28:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08013e2c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 8013e2c:	b570      	push	{r4, r5, r6, lr}
 8013e2e:	694a      	ldr	r2, [r1, #20]
 8013e30:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8013e32:	684b      	ldr	r3, [r1, #4]
 8013e34:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 8013e36:	1b54      	subs	r4, r2, r5
 8013e38:	f000 8106 	beq.w	8014048 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 8013e3c:	1b9b      	subs	r3, r3, r6
 8013e3e:	d003      	beq.n	8013e48 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 8013e40:	4363      	muls	r3, r4
 8013e42:	2210      	movs	r2, #16
 8013e44:	fb93 f3f2 	sdiv	r3, r3, r2
 8013e48:	680c      	ldr	r4, [r1, #0]
 8013e4a:	698a      	ldr	r2, [r1, #24]
 8013e4c:	1b65      	subs	r5, r4, r5
 8013e4e:	f000 80fd 	beq.w	801404c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 8013e52:	1b92      	subs	r2, r2, r6
 8013e54:	d003      	beq.n	8013e5e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8013e56:	436a      	muls	r2, r5
 8013e58:	2410      	movs	r4, #16
 8013e5a:	fb92 f2f4 	sdiv	r2, r2, r4
 8013e5e:	1a9b      	subs	r3, r3, r2
 8013e60:	ee07 3a90 	vmov	s15, r3
 8013e64:	ed9f 4a88 	vldr	s8, [pc, #544]	; 8014088 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 8013e68:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013e6c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013e70:	ee67 7a84 	vmul.f32	s15, s15, s8
 8013e74:	460a      	mov	r2, r1
 8013e76:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8013e7a:	4603      	mov	r3, r0
 8013e7c:	f100 040c 	add.w	r4, r0, #12
 8013e80:	eeb1 6a43 	vneg.f32	s12, s6
 8013e84:	edd2 7a02 	vldr	s15, [r2, #8]
 8013e88:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8013e8c:	3214      	adds	r2, #20
 8013e8e:	ece3 6a01 	vstmia	r3!, {s13}
 8013e92:	ed52 7a02 	vldr	s15, [r2, #-8]
 8013e96:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013e9a:	429c      	cmp	r4, r3
 8013e9c:	edc3 7a02 	vstr	s15, [r3, #8]
 8013ea0:	ed52 7a01 	vldr	s15, [r2, #-4]
 8013ea4:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8013ea8:	edc3 7a05 	vstr	s15, [r3, #20]
 8013eac:	d1ea      	bne.n	8013e84 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8013eae:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013eb0:	698b      	ldr	r3, [r1, #24]
 8013eb2:	edd0 4a02 	vldr	s9, [r0, #8]
 8013eb6:	edd0 3a00 	vldr	s7, [r0]
 8013eba:	edd0 6a01 	vldr	s13, [r0, #4]
 8013ebe:	ed90 5a05 	vldr	s10, [r0, #20]
 8013ec2:	ed90 2a03 	vldr	s4, [r0, #12]
 8013ec6:	edd0 5a04 	vldr	s11, [r0, #16]
 8013eca:	ed90 1a07 	vldr	s2, [r0, #28]
 8013ece:	edd0 2a06 	vldr	s5, [r0, #24]
 8013ed2:	1a9b      	subs	r3, r3, r2
 8013ed4:	ee07 3a90 	vmov	s15, r3
 8013ed8:	684b      	ldr	r3, [r1, #4]
 8013eda:	1a9b      	subs	r3, r3, r2
 8013edc:	ee07 3a10 	vmov	s14, r3
 8013ee0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8013ee4:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8013ee8:	ee67 7a84 	vmul.f32	s15, s15, s8
 8013eec:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8013ef0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013ef4:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8013ef8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013efc:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8013f00:	eee6 7a87 	vfma.f32	s15, s13, s14
 8013f04:	ee32 5a45 	vsub.f32	s10, s4, s10
 8013f08:	ee67 7a83 	vmul.f32	s15, s15, s6
 8013f0c:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 8013f10:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013f12:	694a      	ldr	r2, [r1, #20]
 8013f14:	1b13      	subs	r3, r2, r4
 8013f16:	ee07 3a10 	vmov	s14, r3
 8013f1a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013f1e:	680b      	ldr	r3, [r1, #0]
 8013f20:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013f24:	1b1b      	subs	r3, r3, r4
 8013f26:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 8013f2a:	ee07 3a10 	vmov	s14, r3
 8013f2e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013f32:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013f36:	eee6 4a87 	vfma.f32	s9, s13, s14
 8013f3a:	ee64 4a86 	vmul.f32	s9, s9, s12
 8013f3e:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 8013f42:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013f44:	698b      	ldr	r3, [r1, #24]
 8013f46:	1a9b      	subs	r3, r3, r2
 8013f48:	ee06 3a90 	vmov	s13, r3
 8013f4c:	684b      	ldr	r3, [r1, #4]
 8013f4e:	1a9b      	subs	r3, r3, r2
 8013f50:	ee07 3a10 	vmov	s14, r3
 8013f54:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8013f58:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013f5c:	ee66 6a84 	vmul.f32	s13, s13, s8
 8013f60:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013f64:	ee65 6a66 	vnmul.f32	s13, s10, s13
 8013f68:	eee5 6a87 	vfma.f32	s13, s11, s14
 8013f6c:	ee66 6a83 	vmul.f32	s13, s13, s6
 8013f70:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 8013f74:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013f76:	694a      	ldr	r2, [r1, #20]
 8013f78:	1b13      	subs	r3, r2, r4
 8013f7a:	ee07 3a10 	vmov	s14, r3
 8013f7e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013f82:	680b      	ldr	r3, [r1, #0]
 8013f84:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013f88:	1b1b      	subs	r3, r3, r4
 8013f8a:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8013f8e:	ee07 3a10 	vmov	s14, r3
 8013f92:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013f96:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013f9a:	eea5 5a87 	vfma.f32	s10, s11, s14
 8013f9e:	edd0 5a08 	vldr	s11, [r0, #32]
 8013fa2:	ee25 5a06 	vmul.f32	s10, s10, s12
 8013fa6:	ee31 1a65 	vsub.f32	s2, s2, s11
 8013faa:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 8013fae:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 8013fb0:	698b      	ldr	r3, [r1, #24]
 8013fb2:	1a9b      	subs	r3, r3, r2
 8013fb4:	ee07 3a10 	vmov	s14, r3
 8013fb8:	684b      	ldr	r3, [r1, #4]
 8013fba:	1a9b      	subs	r3, r3, r2
 8013fbc:	ee01 3a90 	vmov	s3, r3
 8013fc0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8013fc4:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8013fc8:	ee27 7a04 	vmul.f32	s14, s14, s8
 8013fcc:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8013fd0:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 8013fd4:	ee61 1a84 	vmul.f32	s3, s3, s8
 8013fd8:	eea1 7a21 	vfma.f32	s14, s2, s3
 8013fdc:	ee27 7a03 	vmul.f32	s14, s14, s6
 8013fe0:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 8013fe4:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 8013fe6:	694a      	ldr	r2, [r1, #20]
 8013fe8:	1b13      	subs	r3, r2, r4
 8013fea:	ee03 3a10 	vmov	s6, r3
 8013fee:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8013ff2:	680b      	ldr	r3, [r1, #0]
 8013ff4:	ee23 3a04 	vmul.f32	s6, s6, s8
 8013ff8:	1b1b      	subs	r3, r3, r4
 8013ffa:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8013ffe:	ee03 3a10 	vmov	s6, r3
 8014002:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 8014006:	ee23 4a04 	vmul.f32	s8, s6, s8
 801400a:	eee1 5a04 	vfma.f32	s11, s2, s8
 801400e:	ee25 6a86 	vmul.f32	s12, s11, s12
 8014012:	ee62 5a67 	vnmul.f32	s11, s4, s15
 8014016:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 801401a:	eee3 5aa6 	vfma.f32	s11, s7, s13
 801401e:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 8014022:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014026:	dd13      	ble.n	8014050 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 8014028:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 801402c:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 8014030:	63c3      	str	r3, [r0, #60]	; 0x3c
 8014032:	eee3 7a87 	vfma.f32	s15, s7, s14
 8014036:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 801403a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801403e:	dd15      	ble.n	801406c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 8014040:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 8014044:	6403      	str	r3, [r0, #64]	; 0x40
 8014046:	bd70      	pop	{r4, r5, r6, pc}
 8014048:	4623      	mov	r3, r4
 801404a:	e6fd      	b.n	8013e48 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 801404c:	462a      	mov	r2, r5
 801404e:	e706      	b.n	8013e5e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 8014050:	d502      	bpl.n	8014058 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 8014052:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8014056:	e7e9      	b.n	801402c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 8014058:	ee22 2a64 	vnmul.f32	s4, s4, s9
 801405c:	eea3 2a85 	vfma.f32	s4, s7, s10
 8014060:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 8014064:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014068:	dade      	bge.n	8014028 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 801406a:	e7f2      	b.n	8014052 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 801406c:	d502      	bpl.n	8014074 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 801406e:	f647 73ff 	movw	r3, #32767	; 0x7fff
 8014072:	e7e7      	b.n	8014044 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 8014074:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8014078:	eee3 4a86 	vfma.f32	s9, s7, s12
 801407c:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8014080:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014084:	dadc      	bge.n	8014040 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 8014086:	e7f2      	b.n	801406e <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8014088:	3d800000 	.word	0x3d800000

0801408c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 801408c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8014090:	2714      	movs	r7, #20
 8014092:	435f      	muls	r7, r3
 8014094:	eb02 0c07 	add.w	ip, r2, r7
 8014098:	f8dc 5004 	ldr.w	r5, [ip, #4]
 801409c:	f115 0e0f 	adds.w	lr, r5, #15
 80140a0:	f100 80a2 	bmi.w	80141e8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 80140a4:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 80140a8:	9c08      	ldr	r4, [sp, #32]
 80140aa:	f8c0 e014 	str.w	lr, [r0, #20]
 80140ae:	2614      	movs	r6, #20
 80140b0:	4366      	muls	r6, r4
 80140b2:	eb02 0806 	add.w	r8, r2, r6
 80140b6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80140ba:	f115 040f 	adds.w	r4, r5, #15
 80140be:	f100 809f 	bmi.w	8014200 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 80140c2:	1124      	asrs	r4, r4, #4
 80140c4:	eba4 040e 	sub.w	r4, r4, lr
 80140c8:	6184      	str	r4, [r0, #24]
 80140ca:	2c00      	cmp	r4, #0
 80140cc:	f000 808a 	beq.w	80141e4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 80140d0:	f8dc 9004 	ldr.w	r9, [ip, #4]
 80140d4:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80140d8:	5995      	ldr	r5, [r2, r6]
 80140da:	eba4 0809 	sub.w	r8, r4, r9
 80140de:	59d4      	ldr	r4, [r2, r7]
 80140e0:	eba5 0a04 	sub.w	sl, r5, r4
 80140e4:	ea4f 150a 	mov.w	r5, sl, lsl #4
 80140e8:	fb0e fe05 	mul.w	lr, lr, r5
 80140ec:	fb0a ee19 	mls	lr, sl, r9, lr
 80140f0:	fb08 e404 	mla	r4, r8, r4, lr
 80140f4:	ea4f 1608 	mov.w	r6, r8, lsl #4
 80140f8:	3c01      	subs	r4, #1
 80140fa:	19a4      	adds	r4, r4, r6
 80140fc:	f100 808c 	bmi.w	8014218 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8014100:	fb94 fef6 	sdiv	lr, r4, r6
 8014104:	f8c0 e000 	str.w	lr, [r0]
 8014108:	fb06 441e 	mls	r4, r6, lr, r4
 801410c:	6104      	str	r4, [r0, #16]
 801410e:	2d00      	cmp	r5, #0
 8014110:	f2c0 8095 	blt.w	801423e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 8014114:	fb95 f4f6 	sdiv	r4, r5, r6
 8014118:	6044      	str	r4, [r0, #4]
 801411a:	fb06 5514 	mls	r5, r6, r4, r5
 801411e:	6085      	str	r5, [r0, #8]
 8014120:	60c6      	str	r6, [r0, #12]
 8014122:	f8dc 4004 	ldr.w	r4, [ip, #4]
 8014126:	6945      	ldr	r5, [r0, #20]
 8014128:	59d2      	ldr	r2, [r2, r7]
 801412a:	eddf 6a4d 	vldr	s13, [pc, #308]	; 8014260 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 801412e:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8014132:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 8014136:	ee07 4a10 	vmov	s14, r4
 801413a:	6804      	ldr	r4, [r0, #0]
 801413c:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 8014140:	ee07 2a90 	vmov	s15, r2
 8014144:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8014148:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801414c:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 8014150:	ee27 7a26 	vmul.f32	s14, s14, s13
 8014154:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014158:	edd3 6a00 	vldr	s13, [r3]
 801415c:	eee6 6a07 	vfma.f32	s13, s12, s14
 8014160:	ed91 6a09 	vldr	s12, [r1, #36]	; 0x24
 8014164:	eee6 6a27 	vfma.f32	s13, s12, s15
 8014168:	edc0 6a07 	vstr	s13, [r0, #28]
 801416c:	edd0 6a01 	vldr	s13, [r0, #4]
 8014170:	edd1 5a09 	vldr	s11, [r1, #36]	; 0x24
 8014174:	ed91 6a0a 	vldr	s12, [r1, #40]	; 0x28
 8014178:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 801417c:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8014180:	ed80 6a08 	vstr	s12, [r0, #32]
 8014184:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8014186:	6242      	str	r2, [r0, #36]	; 0x24
 8014188:	edd1 5a0c 	vldr	s11, [r1, #48]	; 0x30
 801418c:	ed93 6a03 	vldr	s12, [r3, #12]
 8014190:	eea5 6a87 	vfma.f32	s12, s11, s14
 8014194:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 8014198:	eea5 6aa7 	vfma.f32	s12, s11, s15
 801419c:	ed80 6a0a 	vstr	s12, [r0, #40]	; 0x28
 80141a0:	edd1 5a0b 	vldr	s11, [r1, #44]	; 0x2c
 80141a4:	ed91 6a0c 	vldr	s12, [r1, #48]	; 0x30
 80141a8:	eea6 6aa5 	vfma.f32	s12, s13, s11
 80141ac:	ed80 6a0b 	vstr	s12, [r0, #44]	; 0x2c
 80141b0:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 80141b2:	6302      	str	r2, [r0, #48]	; 0x30
 80141b4:	ed93 6a06 	vldr	s12, [r3, #24]
 80141b8:	edd1 5a0e 	vldr	s11, [r1, #56]	; 0x38
 80141bc:	eea5 6a87 	vfma.f32	s12, s11, s14
 80141c0:	eeb0 7a46 	vmov.f32	s14, s12
 80141c4:	ed91 6a0d 	vldr	s12, [r1, #52]	; 0x34
 80141c8:	eea6 7a27 	vfma.f32	s14, s12, s15
 80141cc:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 80141d0:	ed91 7a0d 	vldr	s14, [r1, #52]	; 0x34
 80141d4:	edd1 7a0e 	vldr	s15, [r1, #56]	; 0x38
 80141d8:	eee6 7a87 	vfma.f32	s15, s13, s14
 80141dc:	edc0 7a0e 	vstr	s15, [r0, #56]	; 0x38
 80141e0:	6b4b      	ldr	r3, [r1, #52]	; 0x34
 80141e2:	63c3      	str	r3, [r0, #60]	; 0x3c
 80141e4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80141e8:	f1c5 0501 	rsb	r5, r5, #1
 80141ec:	f015 050f 	ands.w	r5, r5, #15
 80141f0:	bf18      	it	ne
 80141f2:	2501      	movne	r5, #1
 80141f4:	2410      	movs	r4, #16
 80141f6:	fb9e fef4 	sdiv	lr, lr, r4
 80141fa:	ebae 0e05 	sub.w	lr, lr, r5
 80141fe:	e753      	b.n	80140a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8014200:	f1c5 0501 	rsb	r5, r5, #1
 8014204:	f015 050f 	ands.w	r5, r5, #15
 8014208:	bf18      	it	ne
 801420a:	2501      	movne	r5, #1
 801420c:	f04f 0910 	mov.w	r9, #16
 8014210:	fb94 f4f9 	sdiv	r4, r4, r9
 8014214:	1b64      	subs	r4, r4, r5
 8014216:	e755      	b.n	80140c4 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8014218:	4264      	negs	r4, r4
 801421a:	fb94 fef6 	sdiv	lr, r4, r6
 801421e:	f1ce 0800 	rsb	r8, lr, #0
 8014222:	fb06 441e 	mls	r4, r6, lr, r4
 8014226:	f8c0 8000 	str.w	r8, [r0]
 801422a:	6104      	str	r4, [r0, #16]
 801422c:	2c00      	cmp	r4, #0
 801422e:	f43f af6e 	beq.w	801410e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8014232:	ea6f 0e0e 	mvn.w	lr, lr
 8014236:	f8c0 e000 	str.w	lr, [r0]
 801423a:	1b34      	subs	r4, r6, r4
 801423c:	e766      	b.n	801410c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 801423e:	426d      	negs	r5, r5
 8014240:	fb95 f4f6 	sdiv	r4, r5, r6
 8014244:	f1c4 0e00 	rsb	lr, r4, #0
 8014248:	fb06 5514 	mls	r5, r6, r4, r5
 801424c:	f8c0 e004 	str.w	lr, [r0, #4]
 8014250:	6085      	str	r5, [r0, #8]
 8014252:	2d00      	cmp	r5, #0
 8014254:	f43f af64 	beq.w	8014120 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8014258:	43e4      	mvns	r4, r4
 801425a:	6044      	str	r4, [r0, #4]
 801425c:	1b75      	subs	r5, r6, r5
 801425e:	e75e      	b.n	801411e <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8014260:	3d800000 	.word	0x3d800000

08014264 <_ZN8touchgfx7Unicode6strlenEPKt>:
 8014264:	4602      	mov	r2, r0
 8014266:	b148      	cbz	r0, 801427c <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8014268:	2300      	movs	r3, #0
 801426a:	b298      	uxth	r0, r3
 801426c:	3301      	adds	r3, #1
 801426e:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8014272:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8014276:	2900      	cmp	r1, #0
 8014278:	d1f7      	bne.n	801426a <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 801427a:	4770      	bx	lr
 801427c:	4770      	bx	lr

0801427e <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 801427e:	b530      	push	{r4, r5, lr}
 8014280:	4604      	mov	r4, r0
 8014282:	b159      	cbz	r1, 801429c <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8014284:	b148      	cbz	r0, 801429a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8014286:	2300      	movs	r3, #0
 8014288:	b298      	uxth	r0, r3
 801428a:	4282      	cmp	r2, r0
 801428c:	d905      	bls.n	801429a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 801428e:	5ccd      	ldrb	r5, [r1, r3]
 8014290:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8014294:	3301      	adds	r3, #1
 8014296:	2d00      	cmp	r5, #0
 8014298:	d1f6      	bne.n	8014288 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 801429a:	bd30      	pop	{r4, r5, pc}
 801429c:	4608      	mov	r0, r1
 801429e:	e7fc      	b.n	801429a <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

080142a0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>:
 80142a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80142a2:	b08b      	sub	sp, #44	; 0x2c
 80142a4:	468c      	mov	ip, r1
 80142a6:	2100      	movs	r1, #0
 80142a8:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80142ac:	ae01      	add	r6, sp, #4
 80142ae:	211f      	movs	r1, #31
 80142b0:	fbb0 f7f3 	udiv	r7, r0, r3
 80142b4:	fb03 0517 	mls	r5, r3, r7, r0
 80142b8:	b2ec      	uxtb	r4, r5
 80142ba:	2d09      	cmp	r5, #9
 80142bc:	bfd4      	ite	le
 80142be:	3430      	addle	r4, #48	; 0x30
 80142c0:	3457      	addgt	r4, #87	; 0x57
 80142c2:	b2e4      	uxtb	r4, r4
 80142c4:	558c      	strb	r4, [r1, r6]
 80142c6:	4638      	mov	r0, r7
 80142c8:	1e4c      	subs	r4, r1, #1
 80142ca:	b92f      	cbnz	r7, 80142d8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x38>
 80142cc:	4431      	add	r1, r6
 80142ce:	4660      	mov	r0, ip
 80142d0:	f7ff ffd5 	bl	801427e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 80142d4:	b00b      	add	sp, #44	; 0x2c
 80142d6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80142d8:	4621      	mov	r1, r4
 80142da:	e7e9      	b.n	80142b0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2+0x10>

080142dc <_ZN8touchgfx7Unicode4itoaElPtti>:
 80142dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80142de:	4607      	mov	r7, r0
 80142e0:	b08b      	sub	sp, #44	; 0x2c
 80142e2:	4608      	mov	r0, r1
 80142e4:	b341      	cbz	r1, 8014338 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 80142e6:	1e99      	subs	r1, r3, #2
 80142e8:	2922      	cmp	r1, #34	; 0x22
 80142ea:	d825      	bhi.n	8014338 <_ZN8touchgfx7Unicode4itoaElPtti+0x5c>
 80142ec:	2100      	movs	r1, #0
 80142ee:	f88d 1024 	strb.w	r1, [sp, #36]	; 0x24
 80142f2:	463c      	mov	r4, r7
 80142f4:	261f      	movs	r6, #31
 80142f6:	f10d 0c04 	add.w	ip, sp, #4
 80142fa:	fb94 fef3 	sdiv	lr, r4, r3
 80142fe:	fb03 441e 	mls	r4, r3, lr, r4
 8014302:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8014306:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 801430a:	b2ec      	uxtb	r4, r5
 801430c:	2d09      	cmp	r5, #9
 801430e:	bfd4      	ite	le
 8014310:	3430      	addle	r4, #48	; 0x30
 8014312:	3457      	addgt	r4, #87	; 0x57
 8014314:	b2e4      	uxtb	r4, r4
 8014316:	f80c 4006 	strb.w	r4, [ip, r6]
 801431a:	4674      	mov	r4, lr
 801431c:	1e71      	subs	r1, r6, #1
 801431e:	b96c      	cbnz	r4, 801433c <_ZN8touchgfx7Unicode4itoaElPtti+0x60>
 8014320:	2f00      	cmp	r7, #0
 8014322:	da05      	bge.n	8014330 <_ZN8touchgfx7Unicode4itoaElPtti+0x54>
 8014324:	ab0a      	add	r3, sp, #40	; 0x28
 8014326:	4419      	add	r1, r3
 8014328:	232d      	movs	r3, #45	; 0x2d
 801432a:	f801 3c24 	strb.w	r3, [r1, #-36]
 801432e:	1eb1      	subs	r1, r6, #2
 8014330:	3101      	adds	r1, #1
 8014332:	4461      	add	r1, ip
 8014334:	f7ff ffa3 	bl	801427e <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8014338:	b00b      	add	sp, #44	; 0x2c
 801433a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801433c:	460e      	mov	r6, r1
 801433e:	e7dc      	b.n	80142fa <_ZN8touchgfx7Unicode4itoaElPtti+0x1e>

08014340 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8014340:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014344:	4691      	mov	r9, r2
 8014346:	b085      	sub	sp, #20
 8014348:	6802      	ldr	r2, [r0, #0]
 801434a:	9201      	str	r2, [sp, #4]
 801434c:	4688      	mov	r8, r1
 801434e:	4683      	mov	fp, r0
 8014350:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
 8014354:	9103      	str	r1, [sp, #12]
 8014356:	4610      	mov	r0, r2
 8014358:	461c      	mov	r4, r3
 801435a:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 801435e:	9302      	str	r3, [sp, #8]
 8014360:	f7ff ff80 	bl	8014264 <_ZN8touchgfx7Unicode6strlenEPKt>
 8014364:	f1b8 0f00 	cmp.w	r8, #0
 8014368:	bf0c      	ite	eq
 801436a:	4684      	moveq	ip, r0
 801436c:	f100 0c01 	addne.w	ip, r0, #1
 8014370:	f1b9 0f69 	cmp.w	r9, #105	; 0x69
 8014374:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8014378:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801437a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801437c:	f8dd a054 	ldr.w	sl, [sp, #84]	; 0x54
 8014380:	9903      	ldr	r1, [sp, #12]
 8014382:	fa1f fc8c 	uxth.w	ip, ip
 8014386:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 801438a:	d041      	beq.n	8014410 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801438c:	d834      	bhi.n	80143f8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 801438e:	f1b9 0f63 	cmp.w	r9, #99	; 0x63
 8014392:	d059      	beq.n	8014448 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8014394:	f1b9 0f64 	cmp.w	r9, #100	; 0x64
 8014398:	d03a      	beq.n	8014410 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 801439a:	f1b9 0f58 	cmp.w	r9, #88	; 0x58
 801439e:	d034      	beq.n	801440a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 80143a0:	2400      	movs	r4, #0
 80143a2:	f8bd 2050 	ldrh.w	r2, [sp, #80]	; 0x50
 80143a6:	3a01      	subs	r2, #1
 80143a8:	b169      	cbz	r1, 80143c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80143aa:	9911      	ldr	r1, [sp, #68]	; 0x44
 80143ac:	458c      	cmp	ip, r1
 80143ae:	da09      	bge.n	80143c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 80143b0:	eba1 010c 	sub.w	r1, r1, ip
 80143b4:	b289      	uxth	r1, r1
 80143b6:	b933      	cbnz	r3, 80143c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 80143b8:	2e00      	cmp	r6, #0
 80143ba:	d051      	beq.n	8014460 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80143bc:	2800      	cmp	r0, #0
 80143be:	d04f      	beq.n	8014460 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 80143c0:	440c      	add	r4, r1
 80143c2:	b2a4      	uxth	r4, r4
 80143c4:	2100      	movs	r1, #0
 80143c6:	682b      	ldr	r3, [r5, #0]
 80143c8:	4293      	cmp	r3, r2
 80143ca:	da07      	bge.n	80143dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80143cc:	f1b8 0f00 	cmp.w	r8, #0
 80143d0:	d004      	beq.n	80143dc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 80143d2:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 80143d6:	682b      	ldr	r3, [r5, #0]
 80143d8:	3301      	adds	r3, #1
 80143da:	602b      	str	r3, [r5, #0]
 80143dc:	2730      	movs	r7, #48	; 0x30
 80143de:	2c00      	cmp	r4, #0
 80143e0:	d04e      	beq.n	8014480 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80143e2:	682e      	ldr	r6, [r5, #0]
 80143e4:	3c01      	subs	r4, #1
 80143e6:	42b2      	cmp	r2, r6
 80143e8:	b2a4      	uxth	r4, r4
 80143ea:	dd49      	ble.n	8014480 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80143ec:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 80143f0:	682b      	ldr	r3, [r5, #0]
 80143f2:	3301      	adds	r3, #1
 80143f4:	602b      	str	r3, [r5, #0]
 80143f6:	e7f2      	b.n	80143de <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 80143f8:	f1b9 0f73 	cmp.w	r9, #115	; 0x73
 80143fc:	d01d      	beq.n	801443a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 80143fe:	f1b9 0f78 	cmp.w	r9, #120	; 0x78
 8014402:	d002      	beq.n	801440a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8014404:	f1b9 0f6f 	cmp.w	r9, #111	; 0x6f
 8014408:	e7c9      	b.n	801439e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 801440a:	4684      	mov	ip, r0
 801440c:	f04f 0800 	mov.w	r8, #0
 8014410:	2c00      	cmp	r4, #0
 8014412:	d0c6      	beq.n	80143a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8014414:	b947      	cbnz	r7, 8014428 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8014416:	2801      	cmp	r0, #1
 8014418:	d106      	bne.n	8014428 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 801441a:	8814      	ldrh	r4, [r2, #0]
 801441c:	2c30      	cmp	r4, #48	; 0x30
 801441e:	bf02      	ittt	eq
 8014420:	3202      	addeq	r2, #2
 8014422:	f8cb 2000 	streq.w	r2, [fp]
 8014426:	4638      	moveq	r0, r7
 8014428:	45bc      	cmp	ip, r7
 801442a:	da14      	bge.n	8014456 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 801442c:	b2bf      	uxth	r7, r7
 801442e:	eba7 040c 	sub.w	r4, r7, ip
 8014432:	b2a4      	uxth	r4, r4
 8014434:	46bc      	mov	ip, r7
 8014436:	2600      	movs	r6, #0
 8014438:	e7b3      	b.n	80143a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 801443a:	4684      	mov	ip, r0
 801443c:	b16c      	cbz	r4, 801445a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 801443e:	42b8      	cmp	r0, r7
 8014440:	dd00      	ble.n	8014444 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8014442:	b2b8      	uxth	r0, r7
 8014444:	2400      	movs	r4, #0
 8014446:	e003      	b.n	8014450 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8014448:	f04f 0c01 	mov.w	ip, #1
 801444c:	2400      	movs	r4, #0
 801444e:	4660      	mov	r0, ip
 8014450:	4626      	mov	r6, r4
 8014452:	46a0      	mov	r8, r4
 8014454:	e7a5      	b.n	80143a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8014456:	2400      	movs	r4, #0
 8014458:	e7ed      	b.n	8014436 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 801445a:	4626      	mov	r6, r4
 801445c:	46a0      	mov	r8, r4
 801445e:	e7a0      	b.n	80143a2 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8014460:	2900      	cmp	r1, #0
 8014462:	d0b0      	beq.n	80143c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8014464:	2720      	movs	r7, #32
 8014466:	682e      	ldr	r6, [r5, #0]
 8014468:	2900      	cmp	r1, #0
 801446a:	d0ac      	beq.n	80143c6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 801446c:	3901      	subs	r1, #1
 801446e:	4296      	cmp	r6, r2
 8014470:	b289      	uxth	r1, r1
 8014472:	daa7      	bge.n	80143c4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8014474:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8014478:	682b      	ldr	r3, [r5, #0]
 801447a:	3301      	adds	r3, #1
 801447c:	602b      	str	r3, [r5, #0]
 801447e:	e7f2      	b.n	8014466 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8014480:	b188      	cbz	r0, 80144a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8014482:	682b      	ldr	r3, [r5, #0]
 8014484:	3801      	subs	r0, #1
 8014486:	429a      	cmp	r2, r3
 8014488:	b280      	uxth	r0, r0
 801448a:	dd0c      	ble.n	80144a6 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 801448c:	f8db 3000 	ldr.w	r3, [fp]
 8014490:	1c9c      	adds	r4, r3, #2
 8014492:	f8cb 4000 	str.w	r4, [fp]
 8014496:	881c      	ldrh	r4, [r3, #0]
 8014498:	682b      	ldr	r3, [r5, #0]
 801449a:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 801449e:	682b      	ldr	r3, [r5, #0]
 80144a0:	3301      	adds	r3, #1
 80144a2:	602b      	str	r3, [r5, #0]
 80144a4:	e7ec      	b.n	8014480 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 80144a6:	2620      	movs	r6, #32
 80144a8:	b151      	cbz	r1, 80144c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80144aa:	6828      	ldr	r0, [r5, #0]
 80144ac:	3901      	subs	r1, #1
 80144ae:	4282      	cmp	r2, r0
 80144b0:	b289      	uxth	r1, r1
 80144b2:	dd05      	ble.n	80144c0 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 80144b4:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 80144b8:	682b      	ldr	r3, [r5, #0]
 80144ba:	3301      	adds	r3, #1
 80144bc:	602b      	str	r3, [r5, #0]
 80144be:	e7f3      	b.n	80144a8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 80144c0:	b005      	add	sp, #20
 80144c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080144c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 80144c6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80144ca:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 80144ce:	e9dd e609 	ldrd	lr, r6, [sp, #36]	; 0x24
 80144d2:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	; 0x2c
 80144d6:	2400      	movs	r4, #0
 80144d8:	8014      	strh	r4, [r2, #0]
 80144da:	701c      	strb	r4, [r3, #0]
 80144dc:	f888 4000 	strb.w	r4, [r8]
 80144e0:	f88c 4000 	strb.w	r4, [ip]
 80144e4:	f88e 4000 	strb.w	r4, [lr]
 80144e8:	703c      	strb	r4, [r7, #0]
 80144ea:	6804      	ldr	r4, [r0, #0]
 80144ec:	b1a4      	cbz	r4, 8014518 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 80144ee:	8824      	ldrh	r4, [r4, #0]
 80144f0:	f04f 0901 	mov.w	r9, #1
 80144f4:	b314      	cbz	r4, 801453c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 80144f6:	2c2b      	cmp	r4, #43	; 0x2b
 80144f8:	d001      	beq.n	80144fe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 80144fa:	2c20      	cmp	r4, #32
 80144fc:	d110      	bne.n	8014520 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 80144fe:	8014      	strh	r4, [r2, #0]
 8014500:	6804      	ldr	r4, [r0, #0]
 8014502:	b10c      	cbz	r4, 8014508 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8014504:	3402      	adds	r4, #2
 8014506:	6004      	str	r4, [r0, #0]
 8014508:	680c      	ldr	r4, [r1, #0]
 801450a:	b10c      	cbz	r4, 8014510 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 801450c:	3401      	adds	r4, #1
 801450e:	600c      	str	r4, [r1, #0]
 8014510:	6804      	ldr	r4, [r0, #0]
 8014512:	b17c      	cbz	r4, 8014534 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8014514:	8824      	ldrh	r4, [r4, #0]
 8014516:	e7ed      	b.n	80144f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8014518:	680c      	ldr	r4, [r1, #0]
 801451a:	b17c      	cbz	r4, 801453c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 801451c:	7824      	ldrb	r4, [r4, #0]
 801451e:	e7e7      	b.n	80144f0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8014520:	2c2d      	cmp	r4, #45	; 0x2d
 8014522:	d102      	bne.n	801452a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8014524:	f883 9000 	strb.w	r9, [r3]
 8014528:	e7ea      	b.n	8014500 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 801452a:	2c23      	cmp	r4, #35	; 0x23
 801452c:	d107      	bne.n	801453e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 801452e:	f888 9000 	strb.w	r9, [r8]
 8014532:	e7e5      	b.n	8014500 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8014534:	680c      	ldr	r4, [r1, #0]
 8014536:	b10c      	cbz	r4, 801453c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8014538:	7824      	ldrb	r4, [r4, #0]
 801453a:	e7db      	b.n	80144f4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 801453c:	2400      	movs	r4, #0
 801453e:	f1a4 0330 	sub.w	r3, r4, #48	; 0x30
 8014542:	2b09      	cmp	r3, #9
 8014544:	d901      	bls.n	801454a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8014546:	2c2a      	cmp	r4, #42	; 0x2a
 8014548:	d122      	bne.n	8014590 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 801454a:	2301      	movs	r3, #1
 801454c:	2c30      	cmp	r4, #48	; 0x30
 801454e:	f88e 3000 	strb.w	r3, [lr]
 8014552:	d10d      	bne.n	8014570 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8014554:	f88c 3000 	strb.w	r3, [ip]
 8014558:	6803      	ldr	r3, [r0, #0]
 801455a:	b10b      	cbz	r3, 8014560 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 801455c:	3302      	adds	r3, #2
 801455e:	6003      	str	r3, [r0, #0]
 8014560:	680b      	ldr	r3, [r1, #0]
 8014562:	b10b      	cbz	r3, 8014568 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8014564:	3301      	adds	r3, #1
 8014566:	600b      	str	r3, [r1, #0]
 8014568:	6803      	ldr	r3, [r0, #0]
 801456a:	2b00      	cmp	r3, #0
 801456c:	d02f      	beq.n	80145ce <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 801456e:	881c      	ldrh	r4, [r3, #0]
 8014570:	2c2a      	cmp	r4, #42	; 0x2a
 8014572:	d135      	bne.n	80145e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8014574:	f04f 33ff 	mov.w	r3, #4294967295
 8014578:	6033      	str	r3, [r6, #0]
 801457a:	6803      	ldr	r3, [r0, #0]
 801457c:	b10b      	cbz	r3, 8014582 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 801457e:	3302      	adds	r3, #2
 8014580:	6003      	str	r3, [r0, #0]
 8014582:	680b      	ldr	r3, [r1, #0]
 8014584:	b10b      	cbz	r3, 801458a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8014586:	3301      	adds	r3, #1
 8014588:	600b      	str	r3, [r1, #0]
 801458a:	6803      	ldr	r3, [r0, #0]
 801458c:	b31b      	cbz	r3, 80145d6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 801458e:	881c      	ldrh	r4, [r3, #0]
 8014590:	2c2e      	cmp	r4, #46	; 0x2e
 8014592:	d11a      	bne.n	80145ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8014594:	2301      	movs	r3, #1
 8014596:	703b      	strb	r3, [r7, #0]
 8014598:	6803      	ldr	r3, [r0, #0]
 801459a:	b10b      	cbz	r3, 80145a0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 801459c:	3302      	adds	r3, #2
 801459e:	6003      	str	r3, [r0, #0]
 80145a0:	680b      	ldr	r3, [r1, #0]
 80145a2:	b10b      	cbz	r3, 80145a8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 80145a4:	3301      	adds	r3, #1
 80145a6:	600b      	str	r3, [r1, #0]
 80145a8:	6803      	ldr	r3, [r0, #0]
 80145aa:	2b00      	cmp	r3, #0
 80145ac:	d036      	beq.n	801461c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 80145ae:	881b      	ldrh	r3, [r3, #0]
 80145b0:	2b2a      	cmp	r3, #42	; 0x2a
 80145b2:	d137      	bne.n	8014624 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 80145b4:	f04f 33ff 	mov.w	r3, #4294967295
 80145b8:	602b      	str	r3, [r5, #0]
 80145ba:	6803      	ldr	r3, [r0, #0]
 80145bc:	b10b      	cbz	r3, 80145c2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 80145be:	3302      	adds	r3, #2
 80145c0:	6003      	str	r3, [r0, #0]
 80145c2:	680b      	ldr	r3, [r1, #0]
 80145c4:	b10b      	cbz	r3, 80145ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80145c6:	3301      	adds	r3, #1
 80145c8:	600b      	str	r3, [r1, #0]
 80145ca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80145ce:	680c      	ldr	r4, [r1, #0]
 80145d0:	b134      	cbz	r4, 80145e0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 80145d2:	7824      	ldrb	r4, [r4, #0]
 80145d4:	e7cc      	b.n	8014570 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 80145d6:	680b      	ldr	r3, [r1, #0]
 80145d8:	2b00      	cmp	r3, #0
 80145da:	d0f6      	beq.n	80145ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 80145dc:	781c      	ldrb	r4, [r3, #0]
 80145de:	e7d7      	b.n	8014590 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80145e0:	2300      	movs	r3, #0
 80145e2:	6033      	str	r3, [r6, #0]
 80145e4:	220a      	movs	r2, #10
 80145e6:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80145ea:	fa1f f38c 	uxth.w	r3, ip
 80145ee:	2b09      	cmp	r3, #9
 80145f0:	d8ce      	bhi.n	8014590 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 80145f2:	6833      	ldr	r3, [r6, #0]
 80145f4:	fb02 c303 	mla	r3, r2, r3, ip
 80145f8:	6033      	str	r3, [r6, #0]
 80145fa:	6803      	ldr	r3, [r0, #0]
 80145fc:	b10b      	cbz	r3, 8014602 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 80145fe:	3302      	adds	r3, #2
 8014600:	6003      	str	r3, [r0, #0]
 8014602:	680b      	ldr	r3, [r1, #0]
 8014604:	b10b      	cbz	r3, 801460a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8014606:	3301      	adds	r3, #1
 8014608:	600b      	str	r3, [r1, #0]
 801460a:	6803      	ldr	r3, [r0, #0]
 801460c:	b10b      	cbz	r3, 8014612 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 801460e:	881c      	ldrh	r4, [r3, #0]
 8014610:	e7e9      	b.n	80145e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8014612:	680c      	ldr	r4, [r1, #0]
 8014614:	2c00      	cmp	r4, #0
 8014616:	d0e6      	beq.n	80145e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8014618:	7824      	ldrb	r4, [r4, #0]
 801461a:	e7e4      	b.n	80145e6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 801461c:	680b      	ldr	r3, [r1, #0]
 801461e:	b10b      	cbz	r3, 8014624 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8014620:	781b      	ldrb	r3, [r3, #0]
 8014622:	e7c5      	b.n	80145b0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8014624:	2200      	movs	r2, #0
 8014626:	602a      	str	r2, [r5, #0]
 8014628:	240a      	movs	r4, #10
 801462a:	3b30      	subs	r3, #48	; 0x30
 801462c:	b29e      	uxth	r6, r3
 801462e:	2e09      	cmp	r6, #9
 8014630:	682a      	ldr	r2, [r5, #0]
 8014632:	d813      	bhi.n	801465c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8014634:	fb04 3302 	mla	r3, r4, r2, r3
 8014638:	602b      	str	r3, [r5, #0]
 801463a:	6803      	ldr	r3, [r0, #0]
 801463c:	b10b      	cbz	r3, 8014642 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 801463e:	3302      	adds	r3, #2
 8014640:	6003      	str	r3, [r0, #0]
 8014642:	680b      	ldr	r3, [r1, #0]
 8014644:	b10b      	cbz	r3, 801464a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8014646:	3301      	adds	r3, #1
 8014648:	600b      	str	r3, [r1, #0]
 801464a:	6803      	ldr	r3, [r0, #0]
 801464c:	b10b      	cbz	r3, 8014652 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 801464e:	881b      	ldrh	r3, [r3, #0]
 8014650:	e7eb      	b.n	801462a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8014652:	680b      	ldr	r3, [r1, #0]
 8014654:	2b00      	cmp	r3, #0
 8014656:	d0e8      	beq.n	801462a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8014658:	781b      	ldrb	r3, [r3, #0]
 801465a:	e7e6      	b.n	801462a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 801465c:	2a06      	cmp	r2, #6
 801465e:	bfa8      	it	ge
 8014660:	2206      	movge	r2, #6
 8014662:	602a      	str	r2, [r5, #0]
 8014664:	e7b1      	b.n	80145ca <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08014666 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8014666:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801466a:	b0a3      	sub	sp, #140	; 0x8c
 801466c:	2600      	movs	r6, #0
 801466e:	f10d 0944 	add.w	r9, sp, #68	; 0x44
 8014672:	4607      	mov	r7, r0
 8014674:	4688      	mov	r8, r1
 8014676:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801467a:	4631      	mov	r1, r6
 801467c:	2242      	movs	r2, #66	; 0x42
 801467e:	4648      	mov	r0, r9
 8014680:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8014682:	960d      	str	r6, [sp, #52]	; 0x34
 8014684:	f00c f8ce 	bl	8020824 <memset>
 8014688:	b15f      	cbz	r7, 80146a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 801468a:	f108 3aff 	add.w	sl, r8, #4294967295
 801468e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8014690:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014692:	b152      	cbz	r2, 80146aa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8014694:	8812      	ldrh	r2, [r2, #0]
 8014696:	b10a      	cbz	r2, 801469c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8014698:	459a      	cmp	sl, r3
 801469a:	dc2e      	bgt.n	80146fa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 801469c:	2200      	movs	r2, #0
 801469e:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80146a2:	4638      	mov	r0, r7
 80146a4:	b023      	add	sp, #140	; 0x8c
 80146a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80146aa:	9a08      	ldr	r2, [sp, #32]
 80146ac:	2a00      	cmp	r2, #0
 80146ae:	d0f5      	beq.n	801469c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 80146b0:	7812      	ldrb	r2, [r2, #0]
 80146b2:	e7f0      	b.n	8014696 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 80146b4:	2d00      	cmp	r5, #0
 80146b6:	d0ea      	beq.n	801468e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80146b8:	782a      	ldrb	r2, [r5, #0]
 80146ba:	b142      	cbz	r2, 80146ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 80146bc:	2a25      	cmp	r2, #37	; 0x25
 80146be:	d001      	beq.n	80146c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 80146c0:	459a      	cmp	sl, r3
 80146c2:	dc08      	bgt.n	80146d6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 80146c4:	f1bb 0f00 	cmp.w	fp, #0
 80146c8:	d121      	bne.n	801470e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 80146ca:	2d00      	cmp	r5, #0
 80146cc:	d0df      	beq.n	801468e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80146ce:	782a      	ldrb	r2, [r5, #0]
 80146d0:	f04f 0b00 	mov.w	fp, #0
 80146d4:	e01d      	b.n	8014712 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 80146d6:	f1bb 0f00 	cmp.w	fp, #0
 80146da:	d078      	beq.n	80147ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 80146dc:	f8bb 2000 	ldrh.w	r2, [fp]
 80146e0:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 80146e4:	f1bb 0f00 	cmp.w	fp, #0
 80146e8:	d002      	beq.n	80146f0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 80146ea:	f10b 0202 	add.w	r2, fp, #2
 80146ee:	9209      	str	r2, [sp, #36]	; 0x24
 80146f0:	b10d      	cbz	r5, 80146f6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 80146f2:	3501      	adds	r5, #1
 80146f4:	9508      	str	r5, [sp, #32]
 80146f6:	3301      	adds	r3, #1
 80146f8:	930d      	str	r3, [sp, #52]	; 0x34
 80146fa:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 80146fe:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014700:	f1bb 0f00 	cmp.w	fp, #0
 8014704:	d0d6      	beq.n	80146b4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8014706:	f8bb 2000 	ldrh.w	r2, [fp]
 801470a:	2a00      	cmp	r2, #0
 801470c:	d1d6      	bne.n	80146bc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 801470e:	f8bb 2000 	ldrh.w	r2, [fp]
 8014712:	2a00      	cmp	r2, #0
 8014714:	d0bb      	beq.n	801468e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014716:	459a      	cmp	sl, r3
 8014718:	ddb9      	ble.n	801468e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 801471a:	f8ad 6032 	strh.w	r6, [sp, #50]	; 0x32
 801471e:	f88d 602d 	strb.w	r6, [sp, #45]	; 0x2d
 8014722:	f88d 602e 	strb.w	r6, [sp, #46]	; 0x2e
 8014726:	f88d 602f 	strb.w	r6, [sp, #47]	; 0x2f
 801472a:	f88d 6030 	strb.w	r6, [sp, #48]	; 0x30
 801472e:	960e      	str	r6, [sp, #56]	; 0x38
 8014730:	f88d 6031 	strb.w	r6, [sp, #49]	; 0x31
 8014734:	960f      	str	r6, [sp, #60]	; 0x3c
 8014736:	f1bb 0f00 	cmp.w	fp, #0
 801473a:	d002      	beq.n	8014742 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 801473c:	f10b 0302 	add.w	r3, fp, #2
 8014740:	9309      	str	r3, [sp, #36]	; 0x24
 8014742:	b10d      	cbz	r5, 8014748 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8014744:	1c6b      	adds	r3, r5, #1
 8014746:	9308      	str	r3, [sp, #32]
 8014748:	ab0f      	add	r3, sp, #60	; 0x3c
 801474a:	9305      	str	r3, [sp, #20]
 801474c:	f10d 0331 	add.w	r3, sp, #49	; 0x31
 8014750:	9304      	str	r3, [sp, #16]
 8014752:	ab0e      	add	r3, sp, #56	; 0x38
 8014754:	9303      	str	r3, [sp, #12]
 8014756:	ab0c      	add	r3, sp, #48	; 0x30
 8014758:	9302      	str	r3, [sp, #8]
 801475a:	f10d 032f 	add.w	r3, sp, #47	; 0x2f
 801475e:	9301      	str	r3, [sp, #4]
 8014760:	f10d 032e 	add.w	r3, sp, #46	; 0x2e
 8014764:	9300      	str	r3, [sp, #0]
 8014766:	f10d 0232 	add.w	r2, sp, #50	; 0x32
 801476a:	f10d 032d 	add.w	r3, sp, #45	; 0x2d
 801476e:	a908      	add	r1, sp, #32
 8014770:	a809      	add	r0, sp, #36	; 0x24
 8014772:	f7ff fea8 	bl	80144c6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8014776:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8014778:	2b00      	cmp	r3, #0
 801477a:	bfbe      	ittt	lt
 801477c:	6823      	ldrlt	r3, [r4, #0]
 801477e:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8014782:	930e      	strlt	r3, [sp, #56]	; 0x38
 8014784:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8014786:	bfb8      	it	lt
 8014788:	3404      	addlt	r4, #4
 801478a:	2b00      	cmp	r3, #0
 801478c:	bfb8      	it	lt
 801478e:	6823      	ldrlt	r3, [r4, #0]
 8014790:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8014794:	bfbe      	ittt	lt
 8014796:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801479a:	930f      	strlt	r3, [sp, #60]	; 0x3c
 801479c:	3404      	addlt	r4, #4
 801479e:	b1d9      	cbz	r1, 80147d8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 80147a0:	880b      	ldrh	r3, [r1, #0]
 80147a2:	2b69      	cmp	r3, #105	; 0x69
 80147a4:	d01f      	beq.n	80147e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80147a6:	d82f      	bhi.n	8014808 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 80147a8:	2b58      	cmp	r3, #88	; 0x58
 80147aa:	d01c      	beq.n	80147e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80147ac:	d818      	bhi.n	80147e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 80147ae:	2b25      	cmp	r3, #37	; 0x25
 80147b0:	d034      	beq.n	801481c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 80147b2:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 80147b6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80147b8:	f1bb 0f00 	cmp.w	fp, #0
 80147bc:	f000 80b8 	beq.w	8014930 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 80147c0:	f8bb 5000 	ldrh.w	r5, [fp]
 80147c4:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 80147c8:	3301      	adds	r3, #1
 80147ca:	930d      	str	r3, [sp, #52]	; 0x34
 80147cc:	e029      	b.n	8014822 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80147ce:	b10d      	cbz	r5, 80147d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 80147d0:	782a      	ldrb	r2, [r5, #0]
 80147d2:	e785      	b.n	80146e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80147d4:	462a      	mov	r2, r5
 80147d6:	e783      	b.n	80146e0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 80147d8:	2a00      	cmp	r2, #0
 80147da:	d0ea      	beq.n	80147b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80147dc:	7813      	ldrb	r3, [r2, #0]
 80147de:	e7e0      	b.n	80147a2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 80147e0:	3b63      	subs	r3, #99	; 0x63
 80147e2:	2b01      	cmp	r3, #1
 80147e4:	d8e5      	bhi.n	80147b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80147e6:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 80147ea:	b329      	cbz	r1, 8014838 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 80147ec:	880b      	ldrh	r3, [r1, #0]
 80147ee:	2b69      	cmp	r3, #105	; 0x69
 80147f0:	d063      	beq.n	80148ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80147f2:	d825      	bhi.n	8014840 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 80147f4:	2b63      	cmp	r3, #99	; 0x63
 80147f6:	d038      	beq.n	801486a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 80147f8:	2b64      	cmp	r3, #100	; 0x64
 80147fa:	d05e      	beq.n	80148ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 80147fc:	2b58      	cmp	r3, #88	; 0x58
 80147fe:	d07b      	beq.n	80148f8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8014800:	f8ad 6044 	strh.w	r6, [sp, #68]	; 0x44
 8014804:	4625      	mov	r5, r4
 8014806:	e036      	b.n	8014876 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8014808:	2b73      	cmp	r3, #115	; 0x73
 801480a:	d0ec      	beq.n	80147e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801480c:	d802      	bhi.n	8014814 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 801480e:	2b6f      	cmp	r3, #111	; 0x6f
 8014810:	d1cf      	bne.n	80147b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8014812:	e7e8      	b.n	80147e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8014814:	2b75      	cmp	r3, #117	; 0x75
 8014816:	d0e6      	beq.n	80147e6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8014818:	2b78      	cmp	r3, #120	; 0x78
 801481a:	e7f9      	b.n	8014810 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 801481c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801481e:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 8014822:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014824:	b10b      	cbz	r3, 801482a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 8014826:	3302      	adds	r3, #2
 8014828:	9309      	str	r3, [sp, #36]	; 0x24
 801482a:	9b08      	ldr	r3, [sp, #32]
 801482c:	2b00      	cmp	r3, #0
 801482e:	f43f af2e 	beq.w	801468e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014832:	3301      	adds	r3, #1
 8014834:	9308      	str	r3, [sp, #32]
 8014836:	e72a      	b.n	801468e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8014838:	2a00      	cmp	r2, #0
 801483a:	d0e1      	beq.n	8014800 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801483c:	7813      	ldrb	r3, [r2, #0]
 801483e:	e7d6      	b.n	80147ee <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 8014840:	2b73      	cmp	r3, #115	; 0x73
 8014842:	d036      	beq.n	80148b2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 8014844:	d807      	bhi.n	8014856 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 8014846:	2b6f      	cmp	r3, #111	; 0x6f
 8014848:	d1da      	bne.n	8014800 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801484a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801484c:	1d25      	adds	r5, r4, #4
 801484e:	eba8 0202 	sub.w	r2, r8, r2
 8014852:	2308      	movs	r3, #8
 8014854:	e04a      	b.n	80148ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 8014856:	2b75      	cmp	r3, #117	; 0x75
 8014858:	d043      	beq.n	80148e2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 801485a:	2b78      	cmp	r3, #120	; 0x78
 801485c:	d1d0      	bne.n	8014800 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 801485e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8014860:	1d25      	adds	r5, r4, #4
 8014862:	eba8 0202 	sub.w	r2, r8, r2
 8014866:	2310      	movs	r3, #16
 8014868:	e040      	b.n	80148ec <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 801486a:	6823      	ldr	r3, [r4, #0]
 801486c:	f8ad 3044 	strh.w	r3, [sp, #68]	; 0x44
 8014870:	1d25      	adds	r5, r4, #4
 8014872:	f8ad 6046 	strh.w	r6, [sp, #70]	; 0x46
 8014876:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014878:	f8bd 1032 	ldrh.w	r1, [sp, #50]	; 0x32
 801487c:	2b00      	cmp	r3, #0
 801487e:	d052      	beq.n	8014926 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8014880:	881a      	ldrh	r2, [r3, #0]
 8014882:	f89d 3031 	ldrb.w	r3, [sp, #49]	; 0x31
 8014886:	a80d      	add	r0, sp, #52	; 0x34
 8014888:	9005      	str	r0, [sp, #20]
 801488a:	f89d 002d 	ldrb.w	r0, [sp, #45]	; 0x2d
 801488e:	9004      	str	r0, [sp, #16]
 8014890:	980e      	ldr	r0, [sp, #56]	; 0x38
 8014892:	9003      	str	r0, [sp, #12]
 8014894:	f89d 0030 	ldrb.w	r0, [sp, #48]	; 0x30
 8014898:	9002      	str	r0, [sp, #8]
 801489a:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801489c:	9001      	str	r0, [sp, #4]
 801489e:	f89d 002f 	ldrb.w	r0, [sp, #47]	; 0x2f
 80148a2:	9000      	str	r0, [sp, #0]
 80148a4:	e9cd 8706 	strd	r8, r7, [sp, #24]
 80148a8:	a810      	add	r0, sp, #64	; 0x40
 80148aa:	f7ff fd49 	bl	8014340 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 80148ae:	462c      	mov	r4, r5
 80148b0:	e7b7      	b.n	8014822 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 80148b2:	6823      	ldr	r3, [r4, #0]
 80148b4:	1d25      	adds	r5, r4, #4
 80148b6:	9310      	str	r3, [sp, #64]	; 0x40
 80148b8:	e7dd      	b.n	8014876 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80148ba:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80148bc:	6820      	ldr	r0, [r4, #0]
 80148be:	eba8 0202 	sub.w	r2, r8, r2
 80148c2:	230a      	movs	r3, #10
 80148c4:	b292      	uxth	r2, r2
 80148c6:	4649      	mov	r1, r9
 80148c8:	f7ff fd08 	bl	80142dc <_ZN8touchgfx7Unicode4itoaElPtti>
 80148cc:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 80148d0:	2b2d      	cmp	r3, #45	; 0x2d
 80148d2:	f104 0504 	add.w	r5, r4, #4
 80148d6:	d1ce      	bne.n	8014876 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80148d8:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 80148dc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80148de:	3302      	adds	r3, #2
 80148e0:	e7e9      	b.n	80148b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 80148e2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80148e4:	1d25      	adds	r5, r4, #4
 80148e6:	eba8 0202 	sub.w	r2, r8, r2
 80148ea:	230a      	movs	r3, #10
 80148ec:	b292      	uxth	r2, r2
 80148ee:	4649      	mov	r1, r9
 80148f0:	6820      	ldr	r0, [r4, #0]
 80148f2:	f7ff fcd5 	bl	80142a0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 80148f6:	e7be      	b.n	8014876 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80148f8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80148fa:	6820      	ldr	r0, [r4, #0]
 80148fc:	eba8 0202 	sub.w	r2, r8, r2
 8014900:	b292      	uxth	r2, r2
 8014902:	2310      	movs	r3, #16
 8014904:	4649      	mov	r1, r9
 8014906:	f7ff fccb 	bl	80142a0 <_ZN8touchgfx7Unicode4utoaEmPtti.part.2>
 801490a:	1d25      	adds	r5, r4, #4
 801490c:	f10d 0242 	add.w	r2, sp, #66	; 0x42
 8014910:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 8014914:	2b00      	cmp	r3, #0
 8014916:	d0ae      	beq.n	8014876 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 8014918:	f1a3 0161 	sub.w	r1, r3, #97	; 0x61
 801491c:	2919      	cmp	r1, #25
 801491e:	d8f7      	bhi.n	8014910 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8014920:	3b20      	subs	r3, #32
 8014922:	8013      	strh	r3, [r2, #0]
 8014924:	e7f4      	b.n	8014910 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 8014926:	9a08      	ldr	r2, [sp, #32]
 8014928:	2a00      	cmp	r2, #0
 801492a:	d0aa      	beq.n	8014882 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 801492c:	7812      	ldrb	r2, [r2, #0]
 801492e:	e7a8      	b.n	8014882 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 8014930:	2d00      	cmp	r5, #0
 8014932:	f43f af47 	beq.w	80147c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 8014936:	782d      	ldrb	r5, [r5, #0]
 8014938:	e744      	b.n	80147c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

0801493a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 801493a:	b507      	push	{r0, r1, r2, lr}
 801493c:	9300      	str	r3, [sp, #0]
 801493e:	4613      	mov	r3, r2
 8014940:	2200      	movs	r2, #0
 8014942:	f7ff fe90 	bl	8014666 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 8014946:	b003      	add	sp, #12
 8014948:	f85d fb04 	ldr.w	pc, [sp], #4

0801494c <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 801494c:	b40c      	push	{r2, r3}
 801494e:	b507      	push	{r0, r1, r2, lr}
 8014950:	ab04      	add	r3, sp, #16
 8014952:	f853 2b04 	ldr.w	r2, [r3], #4
 8014956:	9301      	str	r3, [sp, #4]
 8014958:	f7ff ffef 	bl	801493a <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 801495c:	b003      	add	sp, #12
 801495e:	f85d eb04 	ldr.w	lr, [sp], #4
 8014962:	b002      	add	sp, #8
 8014964:	4770      	bx	lr
	...

08014968 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 8014968:	4b01      	ldr	r3, [pc, #4]	; (8014970 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 801496a:	6018      	str	r0, [r3, #0]
 801496c:	4770      	bx	lr
 801496e:	bf00      	nop
 8014970:	20011ea8 	.word	0x20011ea8

08014974 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8014974:	4b06      	ldr	r3, [pc, #24]	; (8014990 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8014976:	881a      	ldrh	r2, [r3, #0]
 8014978:	4282      	cmp	r2, r0
 801497a:	d807      	bhi.n	801498c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 801497c:	4b05      	ldr	r3, [pc, #20]	; (8014994 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801497e:	881b      	ldrh	r3, [r3, #0]
 8014980:	4413      	add	r3, r2
 8014982:	4298      	cmp	r0, r3
 8014984:	bfac      	ite	ge
 8014986:	2000      	movge	r0, #0
 8014988:	2001      	movlt	r0, #1
 801498a:	4770      	bx	lr
 801498c:	2000      	movs	r0, #0
 801498e:	4770      	bx	lr
 8014990:	20011ec8 	.word	0x20011ec8
 8014994:	20011ecc 	.word	0x20011ecc

08014998 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8014998:	b508      	push	{r3, lr}
 801499a:	4601      	mov	r1, r0
 801499c:	f7ff ffea 	bl	8014974 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 80149a0:	b118      	cbz	r0, 80149aa <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 80149a2:	4b02      	ldr	r3, [pc, #8]	; (80149ac <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 80149a4:	681b      	ldr	r3, [r3, #0]
 80149a6:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 80149aa:	bd08      	pop	{r3, pc}
 80149ac:	20011eac 	.word	0x20011eac

080149b0 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 80149b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80149b2:	4c24      	ldr	r4, [pc, #144]	; (8014a44 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 80149b4:	6823      	ldr	r3, [r4, #0]
 80149b6:	2b00      	cmp	r3, #0
 80149b8:	d042      	beq.n	8014a40 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80149ba:	4a23      	ldr	r2, [pc, #140]	; (8014a48 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 80149bc:	4d23      	ldr	r5, [pc, #140]	; (8014a4c <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 80149be:	8811      	ldrh	r1, [r2, #0]
 80149c0:	f8b5 c000 	ldrh.w	ip, [r5]
 80149c4:	4822      	ldr	r0, [pc, #136]	; (8014a50 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 80149c6:	4461      	add	r1, ip
 80149c8:	1c4a      	adds	r2, r1, #1
 80149ca:	f022 0201 	bic.w	r2, r2, #1
 80149ce:	008f      	lsls	r7, r1, #2
 80149d0:	0412      	lsls	r2, r2, #16
 80149d2:	19de      	adds	r6, r3, r7
 80149d4:	0c12      	lsrs	r2, r2, #16
 80149d6:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 80149da:	6006      	str	r6, [r0, #0]
 80149dc:	4e1d      	ldr	r6, [pc, #116]	; (8014a54 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 80149de:	19da      	adds	r2, r3, r7
 80149e0:	6032      	str	r2, [r6, #0]
 80149e2:	220e      	movs	r2, #14
 80149e4:	fb02 f20c 	mul.w	r2, r2, ip
 80149e8:	3203      	adds	r2, #3
 80149ea:	f022 0203 	bic.w	r2, r2, #3
 80149ee:	443a      	add	r2, r7
 80149f0:	4f19      	ldr	r7, [pc, #100]	; (8014a58 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 80149f2:	4413      	add	r3, r2
 80149f4:	603b      	str	r3, [r7, #0]
 80149f6:	4f19      	ldr	r7, [pc, #100]	; (8014a5c <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 80149f8:	2300      	movs	r3, #0
 80149fa:	803b      	strh	r3, [r7, #0]
 80149fc:	4f18      	ldr	r7, [pc, #96]	; (8014a60 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 80149fe:	683f      	ldr	r7, [r7, #0]
 8014a00:	1aba      	subs	r2, r7, r2
 8014a02:	4f18      	ldr	r7, [pc, #96]	; (8014a64 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8014a04:	603a      	str	r2, [r7, #0]
 8014a06:	4a18      	ldr	r2, [pc, #96]	; (8014a68 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8014a08:	469c      	mov	ip, r3
 8014a0a:	8013      	strh	r3, [r2, #0]
 8014a0c:	f64f 77ff 	movw	r7, #65535	; 0xffff
 8014a10:	428b      	cmp	r3, r1
 8014a12:	d10d      	bne.n	8014a30 <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 8014a14:	882d      	ldrh	r5, [r5, #0]
 8014a16:	6830      	ldr	r0, [r6, #0]
 8014a18:	2300      	movs	r3, #0
 8014a1a:	240e      	movs	r4, #14
 8014a1c:	429d      	cmp	r5, r3
 8014a1e:	d90f      	bls.n	8014a40 <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8014a20:	fb04 0203 	mla	r2, r4, r3, r0
 8014a24:	3301      	adds	r3, #1
 8014a26:	7b11      	ldrb	r1, [r2, #12]
 8014a28:	f36f 1145 	bfc	r1, #5, #1
 8014a2c:	7311      	strb	r1, [r2, #12]
 8014a2e:	e7f5      	b.n	8014a1c <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 8014a30:	6822      	ldr	r2, [r4, #0]
 8014a32:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 8014a36:	6802      	ldr	r2, [r0, #0]
 8014a38:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 8014a3c:	3301      	adds	r3, #1
 8014a3e:	e7e7      	b.n	8014a10 <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 8014a40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014a42:	bf00      	nop
 8014a44:	20011eac 	.word	0x20011eac
 8014a48:	20011ec8 	.word	0x20011ec8
 8014a4c:	20011ecc 	.word	0x20011ecc
 8014a50:	20011ec0 	.word	0x20011ec0
 8014a54:	20011eb0 	.word	0x20011eb0
 8014a58:	20011eb8 	.word	0x20011eb8
 8014a5c:	20011eca 	.word	0x20011eca
 8014a60:	20011eb4 	.word	0x20011eb4
 8014a64:	20011ec4 	.word	0x20011ec4
 8014a68:	20011ebc 	.word	0x20011ebc

08014a6c <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 8014a6c:	4b06      	ldr	r3, [pc, #24]	; (8014a88 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 8014a6e:	681b      	ldr	r3, [r3, #0]
 8014a70:	b943      	cbnz	r3, 8014a84 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8014a72:	b139      	cbz	r1, 8014a84 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8014a74:	4b05      	ldr	r3, [pc, #20]	; (8014a8c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8014a76:	801a      	strh	r2, [r3, #0]
 8014a78:	4b05      	ldr	r3, [pc, #20]	; (8014a90 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8014a7a:	6019      	str	r1, [r3, #0]
 8014a7c:	4b05      	ldr	r3, [pc, #20]	; (8014a94 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 8014a7e:	6018      	str	r0, [r3, #0]
 8014a80:	f7ff bf96 	b.w	80149b0 <_ZN8touchgfx6Bitmap10clearCacheEv>
 8014a84:	4770      	bx	lr
 8014a86:	bf00      	nop
 8014a88:	20011eb8 	.word	0x20011eb8
 8014a8c:	20011ecc 	.word	0x20011ecc
 8014a90:	20011eb4 	.word	0x20011eb4
 8014a94:	20011eac 	.word	0x20011eac

08014a98 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8014a98:	b470      	push	{r4, r5, r6}
 8014a9a:	4c07      	ldr	r4, [pc, #28]	; (8014ab8 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8014a9c:	6826      	ldr	r6, [r4, #0]
 8014a9e:	4605      	mov	r5, r0
 8014aa0:	4610      	mov	r0, r2
 8014aa2:	9a03      	ldr	r2, [sp, #12]
 8014aa4:	b936      	cbnz	r6, 8014ab4 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8014aa6:	6025      	str	r5, [r4, #0]
 8014aa8:	4c04      	ldr	r4, [pc, #16]	; (8014abc <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8014aaa:	8021      	strh	r1, [r4, #0]
 8014aac:	bc70      	pop	{r4, r5, r6}
 8014aae:	4619      	mov	r1, r3
 8014ab0:	f7ff bfdc 	b.w	8014a6c <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8014ab4:	bc70      	pop	{r4, r5, r6}
 8014ab6:	4770      	bx	lr
 8014ab8:	20011ed0 	.word	0x20011ed0
 8014abc:	20011ec8 	.word	0x20011ec8

08014ac0 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 8014ac0:	4a12      	ldr	r2, [pc, #72]	; (8014b0c <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 8014ac2:	8803      	ldrh	r3, [r0, #0]
 8014ac4:	8812      	ldrh	r2, [r2, #0]
 8014ac6:	4293      	cmp	r3, r2
 8014ac8:	d207      	bcs.n	8014ada <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8014aca:	4a11      	ldr	r2, [pc, #68]	; (8014b10 <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8014acc:	6812      	ldr	r2, [r2, #0]
 8014ace:	2114      	movs	r1, #20
 8014ad0:	fb01 2303 	mla	r3, r1, r3, r2
 8014ad4:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8014ad8:	4770      	bx	lr
 8014ada:	490e      	ldr	r1, [pc, #56]	; (8014b14 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8014adc:	8809      	ldrh	r1, [r1, #0]
 8014ade:	4411      	add	r1, r2
 8014ae0:	428b      	cmp	r3, r1
 8014ae2:	da04      	bge.n	8014aee <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8014ae4:	1a9b      	subs	r3, r3, r2
 8014ae6:	4a0c      	ldr	r2, [pc, #48]	; (8014b18 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8014ae8:	210e      	movs	r1, #14
 8014aea:	6812      	ldr	r2, [r2, #0]
 8014aec:	e7f0      	b.n	8014ad0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 8014aee:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014af2:	4293      	cmp	r3, r2
 8014af4:	d108      	bne.n	8014b08 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8014af6:	4b09      	ldr	r3, [pc, #36]	; (8014b1c <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8014af8:	781b      	ldrb	r3, [r3, #0]
 8014afa:	b91b      	cbnz	r3, 8014b04 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8014afc:	4b08      	ldr	r3, [pc, #32]	; (8014b20 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 8014afe:	f9b3 0000 	ldrsh.w	r0, [r3]
 8014b02:	4770      	bx	lr
 8014b04:	4b07      	ldr	r3, [pc, #28]	; (8014b24 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8014b06:	e7fa      	b.n	8014afe <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8014b08:	2000      	movs	r0, #0
 8014b0a:	4770      	bx	lr
 8014b0c:	20011ec8 	.word	0x20011ec8
 8014b10:	20011ed0 	.word	0x20011ed0
 8014b14:	20011ecc 	.word	0x20011ecc
 8014b18:	20011eb0 	.word	0x20011eb0
 8014b1c:	20011e38 	.word	0x20011e38
 8014b20:	20011e3a 	.word	0x20011e3a
 8014b24:	20011e3c 	.word	0x20011e3c

08014b28 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 8014b28:	4a12      	ldr	r2, [pc, #72]	; (8014b74 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 8014b2a:	8803      	ldrh	r3, [r0, #0]
 8014b2c:	8812      	ldrh	r2, [r2, #0]
 8014b2e:	4293      	cmp	r3, r2
 8014b30:	d207      	bcs.n	8014b42 <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 8014b32:	4a11      	ldr	r2, [pc, #68]	; (8014b78 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 8014b34:	6812      	ldr	r2, [r2, #0]
 8014b36:	2114      	movs	r1, #20
 8014b38:	fb01 2303 	mla	r3, r1, r3, r2
 8014b3c:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 8014b40:	4770      	bx	lr
 8014b42:	490e      	ldr	r1, [pc, #56]	; (8014b7c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 8014b44:	8809      	ldrh	r1, [r1, #0]
 8014b46:	4411      	add	r1, r2
 8014b48:	428b      	cmp	r3, r1
 8014b4a:	da04      	bge.n	8014b56 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 8014b4c:	1a9b      	subs	r3, r3, r2
 8014b4e:	4a0c      	ldr	r2, [pc, #48]	; (8014b80 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 8014b50:	210e      	movs	r1, #14
 8014b52:	6812      	ldr	r2, [r2, #0]
 8014b54:	e7f0      	b.n	8014b38 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 8014b56:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014b5a:	4293      	cmp	r3, r2
 8014b5c:	d108      	bne.n	8014b70 <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 8014b5e:	4b09      	ldr	r3, [pc, #36]	; (8014b84 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 8014b60:	781b      	ldrb	r3, [r3, #0]
 8014b62:	b91b      	cbnz	r3, 8014b6c <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 8014b64:	4b08      	ldr	r3, [pc, #32]	; (8014b88 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 8014b66:	f9b3 0000 	ldrsh.w	r0, [r3]
 8014b6a:	4770      	bx	lr
 8014b6c:	4b07      	ldr	r3, [pc, #28]	; (8014b8c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 8014b6e:	e7fa      	b.n	8014b66 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 8014b70:	2000      	movs	r0, #0
 8014b72:	4770      	bx	lr
 8014b74:	20011ec8 	.word	0x20011ec8
 8014b78:	20011ed0 	.word	0x20011ed0
 8014b7c:	20011ecc 	.word	0x20011ecc
 8014b80:	20011eb0 	.word	0x20011eb0
 8014b84:	20011e38 	.word	0x20011e38
 8014b88:	20011e3c 	.word	0x20011e3c
 8014b8c:	20011e3a 	.word	0x20011e3a

08014b90 <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 8014b90:	b510      	push	{r4, lr}
 8014b92:	4a1f      	ldr	r2, [pc, #124]	; (8014c10 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>)
 8014b94:	880b      	ldrh	r3, [r1, #0]
 8014b96:	8812      	ldrh	r2, [r2, #0]
 8014b98:	4293      	cmp	r3, r2
 8014b9a:	d213      	bcs.n	8014bc4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8014b9c:	4a1d      	ldr	r2, [pc, #116]	; (8014c14 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>)
 8014b9e:	6812      	ldr	r2, [r2, #0]
 8014ba0:	2114      	movs	r1, #20
 8014ba2:	fb01 2303 	mla	r3, r1, r3, r2
 8014ba6:	8a1a      	ldrh	r2, [r3, #16]
 8014ba8:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8014bac:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 8014bb0:	8a5b      	ldrh	r3, [r3, #18]
 8014bb2:	8004      	strh	r4, [r0, #0]
 8014bb4:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014bb8:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8014bbc:	8041      	strh	r1, [r0, #2]
 8014bbe:	8082      	strh	r2, [r0, #4]
 8014bc0:	80c3      	strh	r3, [r0, #6]
 8014bc2:	e00e      	b.n	8014be2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8014bc4:	4914      	ldr	r1, [pc, #80]	; (8014c18 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x88>)
 8014bc6:	8809      	ldrh	r1, [r1, #0]
 8014bc8:	4411      	add	r1, r2
 8014bca:	428b      	cmp	r3, r1
 8014bcc:	da0a      	bge.n	8014be4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x54>
 8014bce:	1a9b      	subs	r3, r3, r2
 8014bd0:	4a12      	ldr	r2, [pc, #72]	; (8014c1c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8014bd2:	6812      	ldr	r2, [r2, #0]
 8014bd4:	210e      	movs	r1, #14
 8014bd6:	fb01 2303 	mla	r3, r1, r3, r2
 8014bda:	681a      	ldr	r2, [r3, #0]
 8014bdc:	6002      	str	r2, [r0, #0]
 8014bde:	685a      	ldr	r2, [r3, #4]
 8014be0:	6042      	str	r2, [r0, #4]
 8014be2:	bd10      	pop	{r4, pc}
 8014be4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014be8:	4293      	cmp	r3, r2
 8014bea:	d10b      	bne.n	8014c04 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x74>
 8014bec:	4b0c      	ldr	r3, [pc, #48]	; (8014c20 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 8014bee:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014bf2:	4b0c      	ldr	r3, [pc, #48]	; (8014c24 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8014bf4:	8081      	strh	r1, [r0, #4]
 8014bf6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014bfa:	80c2      	strh	r2, [r0, #6]
 8014bfc:	2300      	movs	r3, #0
 8014bfe:	8003      	strh	r3, [r0, #0]
 8014c00:	8043      	strh	r3, [r0, #2]
 8014c02:	e7ee      	b.n	8014be2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x52>
 8014c04:	2300      	movs	r3, #0
 8014c06:	8003      	strh	r3, [r0, #0]
 8014c08:	8043      	strh	r3, [r0, #2]
 8014c0a:	8083      	strh	r3, [r0, #4]
 8014c0c:	e7d8      	b.n	8014bc0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 8014c0e:	bf00      	nop
 8014c10:	20011ec8 	.word	0x20011ec8
 8014c14:	20011ed0 	.word	0x20011ed0
 8014c18:	20011ecc 	.word	0x20011ecc
 8014c1c:	20011eb0 	.word	0x20011eb0
 8014c20:	20011e34 	.word	0x20011e34
 8014c24:	20011e36 	.word	0x20011e36

08014c28 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 8014c28:	4a17      	ldr	r2, [pc, #92]	; (8014c88 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 8014c2a:	8803      	ldrh	r3, [r0, #0]
 8014c2c:	8812      	ldrh	r2, [r2, #0]
 8014c2e:	4293      	cmp	r3, r2
 8014c30:	d213      	bcs.n	8014c5a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 8014c32:	4a16      	ldr	r2, [pc, #88]	; (8014c8c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 8014c34:	6812      	ldr	r2, [r2, #0]
 8014c36:	2114      	movs	r1, #20
 8014c38:	fb01 2303 	mla	r3, r1, r3, r2
 8014c3c:	8a1a      	ldrh	r2, [r3, #16]
 8014c3e:	8919      	ldrh	r1, [r3, #8]
 8014c40:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8014c44:	428a      	cmp	r2, r1
 8014c46:	db1d      	blt.n	8014c84 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8014c48:	8a58      	ldrh	r0, [r3, #18]
 8014c4a:	f3c0 000c 	ubfx	r0, r0, #0, #13
 8014c4e:	895b      	ldrh	r3, [r3, #10]
 8014c50:	4298      	cmp	r0, r3
 8014c52:	bfac      	ite	ge
 8014c54:	2000      	movge	r0, #0
 8014c56:	2001      	movlt	r0, #1
 8014c58:	4770      	bx	lr
 8014c5a:	490d      	ldr	r1, [pc, #52]	; (8014c90 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 8014c5c:	8809      	ldrh	r1, [r1, #0]
 8014c5e:	4411      	add	r1, r2
 8014c60:	428b      	cmp	r3, r1
 8014c62:	da0d      	bge.n	8014c80 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 8014c64:	1a9b      	subs	r3, r3, r2
 8014c66:	4a0b      	ldr	r2, [pc, #44]	; (8014c94 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8014c68:	6812      	ldr	r2, [r2, #0]
 8014c6a:	210e      	movs	r1, #14
 8014c6c:	fb01 2303 	mla	r3, r1, r3, r2
 8014c70:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 8014c74:	891a      	ldrh	r2, [r3, #8]
 8014c76:	4291      	cmp	r1, r2
 8014c78:	db04      	blt.n	8014c84 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8014c7a:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8014c7e:	e7e6      	b.n	8014c4e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8014c80:	2000      	movs	r0, #0
 8014c82:	4770      	bx	lr
 8014c84:	2001      	movs	r0, #1
 8014c86:	4770      	bx	lr
 8014c88:	20011ec8 	.word	0x20011ec8
 8014c8c:	20011ed0 	.word	0x20011ed0
 8014c90:	20011ecc 	.word	0x20011ecc
 8014c94:	20011eb0 	.word	0x20011eb0

08014c98 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8014c98:	4a12      	ldr	r2, [pc, #72]	; (8014ce4 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8014c9a:	8803      	ldrh	r3, [r0, #0]
 8014c9c:	8811      	ldrh	r1, [r2, #0]
 8014c9e:	428b      	cmp	r3, r1
 8014ca0:	d20b      	bcs.n	8014cba <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 8014ca2:	4a11      	ldr	r2, [pc, #68]	; (8014ce8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8014ca4:	6812      	ldr	r2, [r2, #0]
 8014ca6:	b112      	cbz	r2, 8014cae <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8014ca8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8014cac:	b9c0      	cbnz	r0, 8014ce0 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8014cae:	4a0f      	ldr	r2, [pc, #60]	; (8014cec <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8014cb0:	6811      	ldr	r1, [r2, #0]
 8014cb2:	2214      	movs	r2, #20
 8014cb4:	4353      	muls	r3, r2
 8014cb6:	58c8      	ldr	r0, [r1, r3]
 8014cb8:	4770      	bx	lr
 8014cba:	4a0d      	ldr	r2, [pc, #52]	; (8014cf0 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8014cbc:	8812      	ldrh	r2, [r2, #0]
 8014cbe:	440a      	add	r2, r1
 8014cc0:	4293      	cmp	r3, r2
 8014cc2:	da04      	bge.n	8014cce <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 8014cc4:	4a08      	ldr	r2, [pc, #32]	; (8014ce8 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 8014cc6:	6812      	ldr	r2, [r2, #0]
 8014cc8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8014ccc:	4770      	bx	lr
 8014cce:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014cd2:	4293      	cmp	r3, r2
 8014cd4:	d103      	bne.n	8014cde <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 8014cd6:	4b07      	ldr	r3, [pc, #28]	; (8014cf4 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8014cd8:	681b      	ldr	r3, [r3, #0]
 8014cda:	6c58      	ldr	r0, [r3, #68]	; 0x44
 8014cdc:	4770      	bx	lr
 8014cde:	2000      	movs	r0, #0
 8014ce0:	4770      	bx	lr
 8014ce2:	bf00      	nop
 8014ce4:	20011ec8 	.word	0x20011ec8
 8014ce8:	20011eac 	.word	0x20011eac
 8014cec:	20011ed0 	.word	0x20011ed0
 8014cf0:	20011ecc 	.word	0x20011ecc
 8014cf4:	20011e40 	.word	0x20011e40

08014cf8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8014cf8:	4b24      	ldr	r3, [pc, #144]	; (8014d8c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8014cfa:	8802      	ldrh	r2, [r0, #0]
 8014cfc:	8818      	ldrh	r0, [r3, #0]
 8014cfe:	4282      	cmp	r2, r0
 8014d00:	d221      	bcs.n	8014d46 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 8014d02:	4b23      	ldr	r3, [pc, #140]	; (8014d90 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 8014d04:	6819      	ldr	r1, [r3, #0]
 8014d06:	2314      	movs	r3, #20
 8014d08:	fb03 1302 	mla	r3, r3, r2, r1
 8014d0c:	6858      	ldr	r0, [r3, #4]
 8014d0e:	2800      	cmp	r0, #0
 8014d10:	d03a      	beq.n	8014d88 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014d12:	4920      	ldr	r1, [pc, #128]	; (8014d94 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8014d14:	6809      	ldr	r1, [r1, #0]
 8014d16:	2900      	cmp	r1, #0
 8014d18:	d036      	beq.n	8014d88 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014d1a:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 8014d1e:	2900      	cmp	r1, #0
 8014d20:	d032      	beq.n	8014d88 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 8014d22:	891a      	ldrh	r2, [r3, #8]
 8014d24:	8958      	ldrh	r0, [r3, #10]
 8014d26:	4350      	muls	r0, r2
 8014d28:	7c5a      	ldrb	r2, [r3, #17]
 8014d2a:	7cdb      	ldrb	r3, [r3, #19]
 8014d2c:	0952      	lsrs	r2, r2, #5
 8014d2e:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8014d32:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8014d36:	2b0b      	cmp	r3, #11
 8014d38:	bf18      	it	ne
 8014d3a:	0040      	lslne	r0, r0, #1
 8014d3c:	3003      	adds	r0, #3
 8014d3e:	f020 0003 	bic.w	r0, r0, #3
 8014d42:	4408      	add	r0, r1
 8014d44:	4770      	bx	lr
 8014d46:	4b14      	ldr	r3, [pc, #80]	; (8014d98 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 8014d48:	881b      	ldrh	r3, [r3, #0]
 8014d4a:	4403      	add	r3, r0
 8014d4c:	429a      	cmp	r2, r3
 8014d4e:	da1a      	bge.n	8014d86 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8014d50:	4b12      	ldr	r3, [pc, #72]	; (8014d9c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 8014d52:	681b      	ldr	r3, [r3, #0]
 8014d54:	1a10      	subs	r0, r2, r0
 8014d56:	210e      	movs	r1, #14
 8014d58:	fb01 3000 	mla	r0, r1, r0, r3
 8014d5c:	7b03      	ldrb	r3, [r0, #12]
 8014d5e:	f003 031f 	and.w	r3, r3, #31
 8014d62:	2b0b      	cmp	r3, #11
 8014d64:	d10b      	bne.n	8014d7e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 8014d66:	8903      	ldrh	r3, [r0, #8]
 8014d68:	8940      	ldrh	r0, [r0, #10]
 8014d6a:	4358      	muls	r0, r3
 8014d6c:	4b09      	ldr	r3, [pc, #36]	; (8014d94 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8014d6e:	6819      	ldr	r1, [r3, #0]
 8014d70:	3003      	adds	r0, #3
 8014d72:	f020 0303 	bic.w	r3, r0, #3
 8014d76:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8014d7a:	4418      	add	r0, r3
 8014d7c:	4770      	bx	lr
 8014d7e:	2b0d      	cmp	r3, #13
 8014d80:	d101      	bne.n	8014d86 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8014d82:	300d      	adds	r0, #13
 8014d84:	4770      	bx	lr
 8014d86:	2000      	movs	r0, #0
 8014d88:	4770      	bx	lr
 8014d8a:	bf00      	nop
 8014d8c:	20011ec8 	.word	0x20011ec8
 8014d90:	20011ed0 	.word	0x20011ed0
 8014d94:	20011eac 	.word	0x20011eac
 8014d98:	20011ecc 	.word	0x20011ecc
 8014d9c:	20011eb0 	.word	0x20011eb0

08014da0 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8014da0:	b510      	push	{r4, lr}
 8014da2:	4a17      	ldr	r2, [pc, #92]	; (8014e00 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 8014da4:	8803      	ldrh	r3, [r0, #0]
 8014da6:	8812      	ldrh	r2, [r2, #0]
 8014da8:	4293      	cmp	r3, r2
 8014daa:	d20c      	bcs.n	8014dc6 <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 8014dac:	4a15      	ldr	r2, [pc, #84]	; (8014e04 <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 8014dae:	6812      	ldr	r2, [r2, #0]
 8014db0:	2114      	movs	r1, #20
 8014db2:	fb01 2303 	mla	r3, r1, r3, r2
 8014db6:	7c58      	ldrb	r0, [r3, #17]
 8014db8:	0942      	lsrs	r2, r0, #5
 8014dba:	7cd8      	ldrb	r0, [r3, #19]
 8014dbc:	f3c0 1042 	ubfx	r0, r0, #5, #3
 8014dc0:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 8014dc4:	bd10      	pop	{r4, pc}
 8014dc6:	4910      	ldr	r1, [pc, #64]	; (8014e08 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 8014dc8:	8809      	ldrh	r1, [r1, #0]
 8014dca:	4411      	add	r1, r2
 8014dcc:	428b      	cmp	r3, r1
 8014dce:	da09      	bge.n	8014de4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x44>
 8014dd0:	1a9b      	subs	r3, r3, r2
 8014dd2:	4a0e      	ldr	r2, [pc, #56]	; (8014e0c <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 8014dd4:	6812      	ldr	r2, [r2, #0]
 8014dd6:	210e      	movs	r1, #14
 8014dd8:	fb01 2303 	mla	r3, r1, r3, r2
 8014ddc:	7b18      	ldrb	r0, [r3, #12]
 8014dde:	f000 001f 	and.w	r0, r0, #31
 8014de2:	e7ef      	b.n	8014dc4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8014de4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 8014de8:	4293      	cmp	r3, r2
 8014dea:	d106      	bne.n	8014dfa <_ZNK8touchgfx6Bitmap9getFormatEv+0x5a>
 8014dec:	f7f7 fd30 	bl	800c850 <_ZN8touchgfx3HAL3lcdEv>
 8014df0:	6803      	ldr	r3, [r0, #0]
 8014df2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014df6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8014df8:	4718      	bx	r3
 8014dfa:	2000      	movs	r0, #0
 8014dfc:	e7e2      	b.n	8014dc4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x24>
 8014dfe:	bf00      	nop
 8014e00:	20011ec8 	.word	0x20011ec8
 8014e04:	20011ed0 	.word	0x20011ed0
 8014e08:	20011ecc 	.word	0x20011ecc
 8014e0c:	20011eb0 	.word	0x20011eb0

08014e10 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8014e10:	2010      	movs	r0, #16
 8014e12:	4770      	bx	lr

08014e14 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8014e14:	2000      	movs	r0, #0
 8014e16:	4770      	bx	lr

08014e18 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8014e18:	4b02      	ldr	r3, [pc, #8]	; (8014e24 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8014e1a:	8818      	ldrh	r0, [r3, #0]
 8014e1c:	0040      	lsls	r0, r0, #1
 8014e1e:	b280      	uxth	r0, r0
 8014e20:	4770      	bx	lr
 8014e22:	bf00      	nop
 8014e24:	20011e3a 	.word	0x20011e3a

08014e28 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8014e28:	2bff      	cmp	r3, #255	; 0xff
 8014e2a:	d050      	beq.n	8014ece <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8014e2c:	2a0b      	cmp	r2, #11
 8014e2e:	d04a      	beq.n	8014ec6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014e30:	d80e      	bhi.n	8014e50 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8014e32:	2a03      	cmp	r2, #3
 8014e34:	d03f      	beq.n	8014eb6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 8014e36:	d804      	bhi.n	8014e42 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8014e38:	2a01      	cmp	r2, #1
 8014e3a:	d03e      	beq.n	8014eba <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 8014e3c:	d93f      	bls.n	8014ebe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 8014e3e:	6b80      	ldr	r0, [r0, #56]	; 0x38
 8014e40:	4770      	bx	lr
 8014e42:	2a09      	cmp	r2, #9
 8014e44:	d03f      	beq.n	8014ec6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 8014e46:	d83c      	bhi.n	8014ec2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014e48:	2a08      	cmp	r2, #8
 8014e4a:	d03a      	beq.n	8014ec2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 8014e4c:	2000      	movs	r0, #0
 8014e4e:	4770      	bx	lr
 8014e50:	2a2f      	cmp	r2, #47	; 0x2f
 8014e52:	d024      	beq.n	8014e9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 8014e54:	d80d      	bhi.n	8014e72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 8014e56:	2a2d      	cmp	r2, #45	; 0x2d
 8014e58:	d014      	beq.n	8014e84 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 8014e5a:	d826      	bhi.n	8014eaa <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8014e5c:	2a2c      	cmp	r2, #44	; 0x2c
 8014e5e:	d1f5      	bne.n	8014e4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014e60:	684b      	ldr	r3, [r1, #4]
 8014e62:	781b      	ldrb	r3, [r3, #0]
 8014e64:	2b01      	cmp	r3, #1
 8014e66:	d018      	beq.n	8014e9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 8014e68:	d323      	bcc.n	8014eb2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 8014e6a:	2b02      	cmp	r3, #2
 8014e6c:	d1ee      	bne.n	8014e4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014e6e:	6880      	ldr	r0, [r0, #8]
 8014e70:	4770      	bx	lr
 8014e72:	2a31      	cmp	r2, #49	; 0x31
 8014e74:	d004      	beq.n	8014e80 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 8014e76:	d328      	bcc.n	8014eca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8014e78:	2a32      	cmp	r2, #50	; 0x32
 8014e7a:	d026      	beq.n	8014eca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 8014e7c:	2a33      	cmp	r2, #51	; 0x33
 8014e7e:	d1e5      	bne.n	8014e4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014e80:	6f00      	ldr	r0, [r0, #112]	; 0x70
 8014e82:	4770      	bx	lr
 8014e84:	684b      	ldr	r3, [r1, #4]
 8014e86:	781b      	ldrb	r3, [r3, #0]
 8014e88:	2b01      	cmp	r3, #1
 8014e8a:	d004      	beq.n	8014e96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 8014e8c:	d30b      	bcc.n	8014ea6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8014e8e:	2b02      	cmp	r3, #2
 8014e90:	d1dc      	bne.n	8014e4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014e92:	6900      	ldr	r0, [r0, #16]
 8014e94:	4770      	bx	lr
 8014e96:	6a00      	ldr	r0, [r0, #32]
 8014e98:	4770      	bx	lr
 8014e9a:	6980      	ldr	r0, [r0, #24]
 8014e9c:	4770      	bx	lr
 8014e9e:	684b      	ldr	r3, [r1, #4]
 8014ea0:	781b      	ldrb	r3, [r3, #0]
 8014ea2:	2b00      	cmp	r3, #0
 8014ea4:	d1d2      	bne.n	8014e4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014ea6:	6b00      	ldr	r0, [r0, #48]	; 0x30
 8014ea8:	4770      	bx	lr
 8014eaa:	684b      	ldr	r3, [r1, #4]
 8014eac:	781b      	ldrb	r3, [r3, #0]
 8014eae:	2b00      	cmp	r3, #0
 8014eb0:	d1cc      	bne.n	8014e4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014eb2:	6a80      	ldr	r0, [r0, #40]	; 0x28
 8014eb4:	4770      	bx	lr
 8014eb6:	6c80      	ldr	r0, [r0, #72]	; 0x48
 8014eb8:	4770      	bx	lr
 8014eba:	6d00      	ldr	r0, [r0, #80]	; 0x50
 8014ebc:	4770      	bx	lr
 8014ebe:	6c00      	ldr	r0, [r0, #64]	; 0x40
 8014ec0:	4770      	bx	lr
 8014ec2:	6d80      	ldr	r0, [r0, #88]	; 0x58
 8014ec4:	4770      	bx	lr
 8014ec6:	6e00      	ldr	r0, [r0, #96]	; 0x60
 8014ec8:	4770      	bx	lr
 8014eca:	6e80      	ldr	r0, [r0, #104]	; 0x68
 8014ecc:	4770      	bx	lr
 8014ece:	2a0b      	cmp	r2, #11
 8014ed0:	d049      	beq.n	8014f66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8014ed2:	d80e      	bhi.n	8014ef2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 8014ed4:	2a03      	cmp	r2, #3
 8014ed6:	d040      	beq.n	8014f5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 8014ed8:	d804      	bhi.n	8014ee4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 8014eda:	2a01      	cmp	r2, #1
 8014edc:	d03f      	beq.n	8014f5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 8014ede:	d940      	bls.n	8014f62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 8014ee0:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 8014ee2:	4770      	bx	lr
 8014ee4:	2a09      	cmp	r2, #9
 8014ee6:	d03e      	beq.n	8014f66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8014ee8:	d801      	bhi.n	8014eee <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 8014eea:	2a08      	cmp	r2, #8
 8014eec:	d1ae      	bne.n	8014e4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014eee:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 8014ef0:	4770      	bx	lr
 8014ef2:	2a2f      	cmp	r2, #47	; 0x2f
 8014ef4:	d024      	beq.n	8014f40 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 8014ef6:	d80d      	bhi.n	8014f14 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 8014ef8:	2a2d      	cmp	r2, #45	; 0x2d
 8014efa:	d014      	beq.n	8014f26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 8014efc:	d826      	bhi.n	8014f4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 8014efe:	2a2c      	cmp	r2, #44	; 0x2c
 8014f00:	d1a4      	bne.n	8014e4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014f02:	684b      	ldr	r3, [r1, #4]
 8014f04:	781b      	ldrb	r3, [r3, #0]
 8014f06:	2b01      	cmp	r3, #1
 8014f08:	d018      	beq.n	8014f3c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 8014f0a:	d324      	bcc.n	8014f56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 8014f0c:	2b02      	cmp	r3, #2
 8014f0e:	d19d      	bne.n	8014e4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014f10:	68c0      	ldr	r0, [r0, #12]
 8014f12:	4770      	bx	lr
 8014f14:	2a31      	cmp	r2, #49	; 0x31
 8014f16:	d004      	beq.n	8014f22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 8014f18:	d327      	bcc.n	8014f6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8014f1a:	2a32      	cmp	r2, #50	; 0x32
 8014f1c:	d025      	beq.n	8014f6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8014f1e:	2a33      	cmp	r2, #51	; 0x33
 8014f20:	d194      	bne.n	8014e4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014f22:	6f40      	ldr	r0, [r0, #116]	; 0x74
 8014f24:	4770      	bx	lr
 8014f26:	684b      	ldr	r3, [r1, #4]
 8014f28:	781b      	ldrb	r3, [r3, #0]
 8014f2a:	2b01      	cmp	r3, #1
 8014f2c:	d004      	beq.n	8014f38 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8014f2e:	d30b      	bcc.n	8014f48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 8014f30:	2b02      	cmp	r3, #2
 8014f32:	d18b      	bne.n	8014e4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014f34:	6940      	ldr	r0, [r0, #20]
 8014f36:	4770      	bx	lr
 8014f38:	6a40      	ldr	r0, [r0, #36]	; 0x24
 8014f3a:	4770      	bx	lr
 8014f3c:	69c0      	ldr	r0, [r0, #28]
 8014f3e:	4770      	bx	lr
 8014f40:	684b      	ldr	r3, [r1, #4]
 8014f42:	781b      	ldrb	r3, [r3, #0]
 8014f44:	2b00      	cmp	r3, #0
 8014f46:	d181      	bne.n	8014e4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014f48:	6b40      	ldr	r0, [r0, #52]	; 0x34
 8014f4a:	4770      	bx	lr
 8014f4c:	684b      	ldr	r3, [r1, #4]
 8014f4e:	781b      	ldrb	r3, [r3, #0]
 8014f50:	2b00      	cmp	r3, #0
 8014f52:	f47f af7b 	bne.w	8014e4c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8014f56:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 8014f58:	4770      	bx	lr
 8014f5a:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8014f5c:	4770      	bx	lr
 8014f5e:	6d40      	ldr	r0, [r0, #84]	; 0x54
 8014f60:	4770      	bx	lr
 8014f62:	6c40      	ldr	r0, [r0, #68]	; 0x44
 8014f64:	4770      	bx	lr
 8014f66:	6e40      	ldr	r0, [r0, #100]	; 0x64
 8014f68:	4770      	bx	lr
 8014f6a:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 8014f6c:	4770      	bx	lr

08014f6e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8014f6e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014f72:	b087      	sub	sp, #28
 8014f74:	9815      	ldr	r0, [sp, #84]	; 0x54
 8014f76:	9205      	str	r2, [sp, #20]
 8014f78:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8014f7c:	9202      	str	r2, [sp, #8]
 8014f7e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8014f82:	9101      	str	r1, [sp, #4]
 8014f84:	6841      	ldr	r1, [r0, #4]
 8014f86:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8014f8a:	fb01 2404 	mla	r4, r1, r4, r2
 8014f8e:	6802      	ldr	r2, [r0, #0]
 8014f90:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8014f94:	f8de 2000 	ldr.w	r2, [lr]
 8014f98:	9203      	str	r2, [sp, #12]
 8014f9a:	f8de 2004 	ldr.w	r2, [lr, #4]
 8014f9e:	3204      	adds	r2, #4
 8014fa0:	9204      	str	r2, [sp, #16]
 8014fa2:	9a02      	ldr	r2, [sp, #8]
 8014fa4:	43d6      	mvns	r6, r2
 8014fa6:	b2f6      	uxtb	r6, r6
 8014fa8:	9a01      	ldr	r2, [sp, #4]
 8014faa:	2a00      	cmp	r2, #0
 8014fac:	dc03      	bgt.n	8014fb6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8014fae:	9a05      	ldr	r2, [sp, #20]
 8014fb0:	2a00      	cmp	r2, #0
 8014fb2:	f340 8129 	ble.w	8015208 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014fb6:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8014fb8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8014fbc:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8014fc0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8014fc4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8014fc6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8014fca:	2b00      	cmp	r3, #0
 8014fcc:	dd0e      	ble.n	8014fec <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8014fce:	1408      	asrs	r0, r1, #16
 8014fd0:	d405      	bmi.n	8014fde <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014fd2:	4560      	cmp	r0, ip
 8014fd4:	da03      	bge.n	8014fde <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014fd6:	1410      	asrs	r0, r2, #16
 8014fd8:	d401      	bmi.n	8014fde <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014fda:	42b8      	cmp	r0, r7
 8014fdc:	db07      	blt.n	8014fee <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8014fde:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8014fe0:	4401      	add	r1, r0
 8014fe2:	9814      	ldr	r0, [sp, #80]	; 0x50
 8014fe4:	3b01      	subs	r3, #1
 8014fe6:	4402      	add	r2, r0
 8014fe8:	3402      	adds	r4, #2
 8014fea:	e7ee      	b.n	8014fca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8014fec:	d071      	beq.n	80150d2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8014fee:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8014ff0:	1e58      	subs	r0, r3, #1
 8014ff2:	fb05 1500 	mla	r5, r5, r0, r1
 8014ff6:	142d      	asrs	r5, r5, #16
 8014ff8:	d45f      	bmi.n	80150ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014ffa:	4565      	cmp	r5, ip
 8014ffc:	da5d      	bge.n	80150ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8014ffe:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015000:	fb05 2000 	mla	r0, r5, r0, r2
 8015004:	1400      	asrs	r0, r0, #16
 8015006:	d458      	bmi.n	80150ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8015008:	42b8      	cmp	r0, r7
 801500a:	da56      	bge.n	80150ba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 801500c:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8015010:	4699      	mov	r9, r3
 8015012:	46a2      	mov	sl, r4
 8015014:	f1b9 0f00 	cmp.w	r9, #0
 8015018:	dd57      	ble.n	80150ca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801501a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801501e:	9803      	ldr	r0, [sp, #12]
 8015020:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8015024:	140d      	asrs	r5, r1, #16
 8015026:	fb07 000c 	mla	r0, r7, ip, r0
 801502a:	f109 39ff 	add.w	r9, r9, #4294967295
 801502e:	5d40      	ldrb	r0, [r0, r5]
 8015030:	9d04      	ldr	r5, [sp, #16]
 8015032:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015036:	f8ba 5000 	ldrh.w	r5, [sl]
 801503a:	122f      	asrs	r7, r5, #8
 801503c:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015040:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015044:	fb17 f706 	smulbb	r7, r7, r6
 8015048:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801504c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015050:	00ed      	lsls	r5, r5, #3
 8015052:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8015056:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 801505a:	10c7      	asrs	r7, r0, #3
 801505c:	b2ed      	uxtb	r5, r5
 801505e:	00c0      	lsls	r0, r0, #3
 8015060:	fb18 f806 	smulbb	r8, r8, r6
 8015064:	fb15 f506 	smulbb	r5, r5, r6
 8015068:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801506c:	b2c0      	uxtb	r0, r0
 801506e:	fa1f fc8c 	uxth.w	ip, ip
 8015072:	fb07 870b 	mla	r7, r7, fp, r8
 8015076:	fb00 500b 	mla	r0, r0, fp, r5
 801507a:	b280      	uxth	r0, r0
 801507c:	b2bf      	uxth	r7, r7
 801507e:	f10c 0501 	add.w	r5, ip, #1
 8015082:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015086:	f107 0801 	add.w	r8, r7, #1
 801508a:	1c45      	adds	r5, r0, #1
 801508c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8015090:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8015094:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015096:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801509a:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801509e:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80150a2:	ea45 0c0c 	orr.w	ip, r5, ip
 80150a6:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80150aa:	4401      	add	r1, r0
 80150ac:	9814      	ldr	r0, [sp, #80]	; 0x50
 80150ae:	ea4c 0c08 	orr.w	ip, ip, r8
 80150b2:	f82a cb02 	strh.w	ip, [sl], #2
 80150b6:	4402      	add	r2, r0
 80150b8:	e7ac      	b.n	8015014 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80150ba:	f8bd a008 	ldrh.w	sl, [sp, #8]
 80150be:	f04f 0800 	mov.w	r8, #0
 80150c2:	eb03 0008 	add.w	r0, r3, r8
 80150c6:	2800      	cmp	r0, #0
 80150c8:	dc41      	bgt.n	801514e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 80150ca:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80150ce:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80150d2:	9b01      	ldr	r3, [sp, #4]
 80150d4:	2b00      	cmp	r3, #0
 80150d6:	f340 8097 	ble.w	8015208 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 80150da:	ee30 0a04 	vadd.f32	s0, s0, s8
 80150de:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80150e2:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80150e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80150e8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80150ec:	ee31 1a05 	vadd.f32	s2, s2, s10
 80150f0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80150f4:	eef0 6a62 	vmov.f32	s13, s5
 80150f8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80150fc:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015100:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015104:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8015108:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801510c:	eef0 6a43 	vmov.f32	s13, s6
 8015110:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015114:	ee12 2a90 	vmov	r2, s5
 8015118:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801511c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015120:	ee13 2a10 	vmov	r2, s6
 8015124:	9313      	str	r3, [sp, #76]	; 0x4c
 8015126:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015128:	fb92 f3f3 	sdiv	r3, r2, r3
 801512c:	9314      	str	r3, [sp, #80]	; 0x50
 801512e:	9b01      	ldr	r3, [sp, #4]
 8015130:	9a05      	ldr	r2, [sp, #20]
 8015132:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015136:	3b01      	subs	r3, #1
 8015138:	9301      	str	r3, [sp, #4]
 801513a:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 801513e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015140:	eeb0 3a67 	vmov.f32	s6, s15
 8015144:	bf08      	it	eq
 8015146:	4613      	moveq	r3, r2
 8015148:	eef0 2a47 	vmov.f32	s5, s14
 801514c:	e72c      	b.n	8014fa8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801514e:	140f      	asrs	r7, r1, #16
 8015150:	d453      	bmi.n	80151fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015152:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015156:	42bd      	cmp	r5, r7
 8015158:	dd4f      	ble.n	80151fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801515a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801515e:	d44c      	bmi.n	80151fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015160:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015164:	4560      	cmp	r0, ip
 8015166:	dd48      	ble.n	80151fa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8015168:	9803      	ldr	r0, [sp, #12]
 801516a:	b22d      	sxth	r5, r5
 801516c:	fb0c 0505 	mla	r5, ip, r5, r0
 8015170:	5de8      	ldrb	r0, [r5, r7]
 8015172:	9d04      	ldr	r5, [sp, #16]
 8015174:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8015178:	f06f 0501 	mvn.w	r5, #1
 801517c:	fb05 fb08 	mul.w	fp, r5, r8
 8015180:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8015184:	f834 500b 	ldrh.w	r5, [r4, fp]
 8015188:	122f      	asrs	r7, r5, #8
 801518a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801518e:	fb17 f706 	smulbb	r7, r7, r6
 8015192:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8015196:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801519a:	00ed      	lsls	r5, r5, #3
 801519c:	fb0c 7c0a 	mla	ip, ip, sl, r7
 80151a0:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 80151a4:	10c7      	asrs	r7, r0, #3
 80151a6:	b2ed      	uxtb	r5, r5
 80151a8:	00c0      	lsls	r0, r0, #3
 80151aa:	fb19 f906 	smulbb	r9, r9, r6
 80151ae:	fb15 f506 	smulbb	r5, r5, r6
 80151b2:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80151b6:	b2c0      	uxtb	r0, r0
 80151b8:	fa1f fc8c 	uxth.w	ip, ip
 80151bc:	fb07 970a 	mla	r7, r7, sl, r9
 80151c0:	fb00 500a 	mla	r0, r0, sl, r5
 80151c4:	b2bf      	uxth	r7, r7
 80151c6:	b280      	uxth	r0, r0
 80151c8:	f10c 0501 	add.w	r5, ip, #1
 80151cc:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80151d0:	f107 0901 	add.w	r9, r7, #1
 80151d4:	1c45      	adds	r5, r0, #1
 80151d6:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80151da:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80151de:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80151e2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80151e6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80151ea:	ea45 0c0c 	orr.w	ip, r5, ip
 80151ee:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80151f2:	ea4c 0c09 	orr.w	ip, ip, r9
 80151f6:	f824 c00b 	strh.w	ip, [r4, fp]
 80151fa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80151fc:	4401      	add	r1, r0
 80151fe:	9814      	ldr	r0, [sp, #80]	; 0x50
 8015200:	f108 38ff 	add.w	r8, r8, #4294967295
 8015204:	4402      	add	r2, r0
 8015206:	e75c      	b.n	80150c2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8015208:	b007      	add	sp, #28
 801520a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801520e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801520e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015212:	b085      	sub	sp, #20
 8015214:	4693      	mov	fp, r2
 8015216:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015218:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801521a:	6870      	ldr	r0, [r6, #4]
 801521c:	9100      	str	r1, [sp, #0]
 801521e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015222:	fb00 2404 	mla	r4, r0, r4, r2
 8015226:	6832      	ldr	r2, [r6, #0]
 8015228:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801522c:	682a      	ldr	r2, [r5, #0]
 801522e:	9201      	str	r2, [sp, #4]
 8015230:	686a      	ldr	r2, [r5, #4]
 8015232:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8015236:	3204      	adds	r2, #4
 8015238:	9202      	str	r2, [sp, #8]
 801523a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801523e:	9a00      	ldr	r2, [sp, #0]
 8015240:	2a00      	cmp	r2, #0
 8015242:	dc03      	bgt.n	801524c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8015244:	f1bb 0f00 	cmp.w	fp, #0
 8015248:	f340 80a0 	ble.w	801538c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 801524c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801524e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015252:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015256:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801525a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801525c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015260:	2b00      	cmp	r3, #0
 8015262:	dd0c      	ble.n	801527e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015264:	1406      	asrs	r6, r0, #16
 8015266:	d405      	bmi.n	8015274 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015268:	454e      	cmp	r6, r9
 801526a:	da03      	bge.n	8015274 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801526c:	1416      	asrs	r6, r2, #16
 801526e:	d401      	bmi.n	8015274 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8015270:	4546      	cmp	r6, r8
 8015272:	db05      	blt.n	8015280 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015274:	4470      	add	r0, lr
 8015276:	4462      	add	r2, ip
 8015278:	3b01      	subs	r3, #1
 801527a:	3402      	adds	r4, #2
 801527c:	e7f0      	b.n	8015260 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801527e:	d00f      	beq.n	80152a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8015280:	1e5e      	subs	r6, r3, #1
 8015282:	fb0e 0706 	mla	r7, lr, r6, r0
 8015286:	143f      	asrs	r7, r7, #16
 8015288:	d541      	bpl.n	801530e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 801528a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801528e:	4698      	mov	r8, r3
 8015290:	9603      	str	r6, [sp, #12]
 8015292:	f1b8 0f00 	cmp.w	r8, #0
 8015296:	dc59      	bgt.n	801534c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8015298:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801529c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80152a0:	9b00      	ldr	r3, [sp, #0]
 80152a2:	2b00      	cmp	r3, #0
 80152a4:	dd72      	ble.n	801538c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 80152a6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80152aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80152ae:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80152b2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80152b4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80152b8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80152bc:	eeb0 6a62 	vmov.f32	s12, s5
 80152c0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80152c4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80152c8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80152cc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80152d0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80152d4:	eeb0 6a43 	vmov.f32	s12, s6
 80152d8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80152dc:	ee12 2a90 	vmov	r2, s5
 80152e0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80152e4:	fb92 fef3 	sdiv	lr, r2, r3
 80152e8:	ee13 2a10 	vmov	r2, s6
 80152ec:	fb92 fcf3 	sdiv	ip, r2, r3
 80152f0:	9b00      	ldr	r3, [sp, #0]
 80152f2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80152f6:	3b01      	subs	r3, #1
 80152f8:	9300      	str	r3, [sp, #0]
 80152fa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80152fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015300:	eeb0 3a67 	vmov.f32	s6, s15
 8015304:	bf08      	it	eq
 8015306:	465b      	moveq	r3, fp
 8015308:	eef0 2a47 	vmov.f32	s5, s14
 801530c:	e797      	b.n	801523e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801530e:	454f      	cmp	r7, r9
 8015310:	dabb      	bge.n	801528a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015312:	fb0c 2606 	mla	r6, ip, r6, r2
 8015316:	1436      	asrs	r6, r6, #16
 8015318:	d4b7      	bmi.n	801528a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801531a:	4546      	cmp	r6, r8
 801531c:	dab5      	bge.n	801528a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801531e:	461e      	mov	r6, r3
 8015320:	46a0      	mov	r8, r4
 8015322:	2e00      	cmp	r6, #0
 8015324:	ddb8      	ble.n	8015298 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8015326:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801532a:	9901      	ldr	r1, [sp, #4]
 801532c:	1417      	asrs	r7, r2, #16
 801532e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8015332:	fb0a 1707 	mla	r7, sl, r7, r1
 8015336:	9902      	ldr	r1, [sp, #8]
 8015338:	f817 7009 	ldrb.w	r7, [r7, r9]
 801533c:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8015340:	f828 7b02 	strh.w	r7, [r8], #2
 8015344:	4470      	add	r0, lr
 8015346:	4462      	add	r2, ip
 8015348:	3e01      	subs	r6, #1
 801534a:	e7ea      	b.n	8015322 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 801534c:	ea5f 4920 	movs.w	r9, r0, asr #16
 8015350:	d417      	bmi.n	8015382 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015352:	68ae      	ldr	r6, [r5, #8]
 8015354:	454e      	cmp	r6, r9
 8015356:	dd14      	ble.n	8015382 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015358:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801535c:	d411      	bmi.n	8015382 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801535e:	68ef      	ldr	r7, [r5, #12]
 8015360:	4557      	cmp	r7, sl
 8015362:	dd0e      	ble.n	8015382 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8015364:	9f01      	ldr	r7, [sp, #4]
 8015366:	b236      	sxth	r6, r6
 8015368:	fb0a 7606 	mla	r6, sl, r6, r7
 801536c:	9f02      	ldr	r7, [sp, #8]
 801536e:	f816 6009 	ldrb.w	r6, [r6, r9]
 8015372:	f06f 0101 	mvn.w	r1, #1
 8015376:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801537a:	fb01 f608 	mul.w	r6, r1, r8
 801537e:	9903      	ldr	r1, [sp, #12]
 8015380:	538f      	strh	r7, [r1, r6]
 8015382:	4470      	add	r0, lr
 8015384:	4462      	add	r2, ip
 8015386:	f108 38ff 	add.w	r8, r8, #4294967295
 801538a:	e782      	b.n	8015292 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801538c:	b005      	add	sp, #20
 801538e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015392 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015392:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015396:	b087      	sub	sp, #28
 8015398:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801539a:	9205      	str	r2, [sp, #20]
 801539c:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 80153a0:	9203      	str	r2, [sp, #12]
 80153a2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 80153a6:	9102      	str	r1, [sp, #8]
 80153a8:	6861      	ldr	r1, [r4, #4]
 80153aa:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 80153ae:	fb01 2000 	mla	r0, r1, r0, r2
 80153b2:	6822      	ldr	r2, [r4, #0]
 80153b4:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80153b8:	9200      	str	r2, [sp, #0]
 80153ba:	f8dc 2000 	ldr.w	r2, [ip]
 80153be:	9204      	str	r2, [sp, #16]
 80153c0:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80153c4:	3204      	adds	r2, #4
 80153c6:	9201      	str	r2, [sp, #4]
 80153c8:	9a03      	ldr	r2, [sp, #12]
 80153ca:	43d5      	mvns	r5, r2
 80153cc:	b2ed      	uxtb	r5, r5
 80153ce:	9a02      	ldr	r2, [sp, #8]
 80153d0:	2a00      	cmp	r2, #0
 80153d2:	dc03      	bgt.n	80153dc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80153d4:	9a05      	ldr	r2, [sp, #20]
 80153d6:	2a00      	cmp	r2, #0
 80153d8:	f340 812c 	ble.w	8015634 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80153dc:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80153de:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80153e2:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80153e6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80153ea:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80153ec:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80153f0:	2b00      	cmp	r3, #0
 80153f2:	dd10      	ble.n	8015416 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80153f4:	140c      	asrs	r4, r1, #16
 80153f6:	d405      	bmi.n	8015404 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80153f8:	4574      	cmp	r4, lr
 80153fa:	da03      	bge.n	8015404 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80153fc:	1414      	asrs	r4, r2, #16
 80153fe:	d401      	bmi.n	8015404 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8015400:	42bc      	cmp	r4, r7
 8015402:	db09      	blt.n	8015418 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 8015404:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015406:	9800      	ldr	r0, [sp, #0]
 8015408:	4421      	add	r1, r4
 801540a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801540c:	3002      	adds	r0, #2
 801540e:	4422      	add	r2, r4
 8015410:	3b01      	subs	r3, #1
 8015412:	9000      	str	r0, [sp, #0]
 8015414:	e7ec      	b.n	80153f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8015416:	d071      	beq.n	80154fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8015418:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 801541a:	1e5c      	subs	r4, r3, #1
 801541c:	fb06 1604 	mla	r6, r6, r4, r1
 8015420:	1436      	asrs	r6, r6, #16
 8015422:	d45d      	bmi.n	80154e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015424:	4576      	cmp	r6, lr
 8015426:	da5b      	bge.n	80154e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015428:	9e14      	ldr	r6, [sp, #80]	; 0x50
 801542a:	fb06 2404 	mla	r4, r6, r4, r2
 801542e:	1424      	asrs	r4, r4, #16
 8015430:	d456      	bmi.n	80154e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015432:	42bc      	cmp	r4, r7
 8015434:	da54      	bge.n	80154e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8015436:	f8dd 9000 	ldr.w	r9, [sp]
 801543a:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 801543e:	4698      	mov	r8, r3
 8015440:	f1b8 0f00 	cmp.w	r8, #0
 8015444:	dd54      	ble.n	80154f0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8015446:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 801544a:	9804      	ldr	r0, [sp, #16]
 801544c:	1414      	asrs	r4, r2, #16
 801544e:	fb07 0404 	mla	r4, r7, r4, r0
 8015452:	140e      	asrs	r6, r1, #16
 8015454:	9801      	ldr	r0, [sp, #4]
 8015456:	f814 e006 	ldrb.w	lr, [r4, r6]
 801545a:	f8b9 4000 	ldrh.w	r4, [r9]
 801545e:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015462:	eb00 0b0e 	add.w	fp, r0, lr
 8015466:	1227      	asrs	r7, r4, #8
 8015468:	f89b 6002 	ldrb.w	r6, [fp, #2]
 801546c:	f89b b001 	ldrb.w	fp, [fp, #1]
 8015470:	f810 e00e 	ldrb.w	lr, [r0, lr]
 8015474:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015476:	fb16 f60a 	smulbb	r6, r6, sl
 801547a:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801547e:	fb07 6705 	mla	r7, r7, r5, r6
 8015482:	10e6      	asrs	r6, r4, #3
 8015484:	00e4      	lsls	r4, r4, #3
 8015486:	b2e4      	uxtb	r4, r4
 8015488:	fb1b fb0a 	smulbb	fp, fp, sl
 801548c:	fb14 f405 	smulbb	r4, r4, r5
 8015490:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015494:	b2bf      	uxth	r7, r7
 8015496:	fb06 b605 	mla	r6, r6, r5, fp
 801549a:	fb0e 4e0a 	mla	lr, lr, sl, r4
 801549e:	b2b6      	uxth	r6, r6
 80154a0:	fa1f fe8e 	uxth.w	lr, lr
 80154a4:	1c7c      	adds	r4, r7, #1
 80154a6:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80154aa:	f106 0b01 	add.w	fp, r6, #1
 80154ae:	f10e 0401 	add.w	r4, lr, #1
 80154b2:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80154b6:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80154ba:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80154be:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80154c2:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80154c6:	4327      	orrs	r7, r4
 80154c8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 80154cc:	4401      	add	r1, r0
 80154ce:	9814      	ldr	r0, [sp, #80]	; 0x50
 80154d0:	ea47 070b 	orr.w	r7, r7, fp
 80154d4:	f829 7b02 	strh.w	r7, [r9], #2
 80154d8:	4402      	add	r2, r0
 80154da:	f108 38ff 	add.w	r8, r8, #4294967295
 80154de:	e7af      	b.n	8015440 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80154e0:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80154e4:	f04f 0e00 	mov.w	lr, #0
 80154e8:	eb03 040e 	add.w	r4, r3, lr
 80154ec:	2c00      	cmp	r4, #0
 80154ee:	dc43      	bgt.n	8015578 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80154f0:	9a00      	ldr	r2, [sp, #0]
 80154f2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80154f6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80154fa:	9300      	str	r3, [sp, #0]
 80154fc:	9b02      	ldr	r3, [sp, #8]
 80154fe:	2b00      	cmp	r3, #0
 8015500:	f340 8098 	ble.w	8015634 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 8015504:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015508:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801550c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8015510:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015512:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015516:	ee31 1a05 	vadd.f32	s2, s2, s10
 801551a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801551e:	eef0 6a62 	vmov.f32	s13, s5
 8015522:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015526:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801552a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801552e:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 8015532:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015536:	eef0 6a43 	vmov.f32	s13, s6
 801553a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801553e:	ee12 2a90 	vmov	r2, s5
 8015542:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015546:	fb92 f3f3 	sdiv	r3, r2, r3
 801554a:	ee13 2a10 	vmov	r2, s6
 801554e:	9313      	str	r3, [sp, #76]	; 0x4c
 8015550:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015552:	fb92 f3f3 	sdiv	r3, r2, r3
 8015556:	9314      	str	r3, [sp, #80]	; 0x50
 8015558:	9b02      	ldr	r3, [sp, #8]
 801555a:	9a05      	ldr	r2, [sp, #20]
 801555c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015560:	3b01      	subs	r3, #1
 8015562:	9302      	str	r3, [sp, #8]
 8015564:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 8015568:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801556a:	eeb0 3a67 	vmov.f32	s6, s15
 801556e:	bf08      	it	eq
 8015570:	4613      	moveq	r3, r2
 8015572:	eef0 2a47 	vmov.f32	s5, s14
 8015576:	e72a      	b.n	80153ce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015578:	140f      	asrs	r7, r1, #16
 801557a:	d454      	bmi.n	8015626 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801557c:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8015580:	42be      	cmp	r6, r7
 8015582:	dd50      	ble.n	8015626 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015584:	ea5f 4822 	movs.w	r8, r2, asr #16
 8015588:	d44d      	bmi.n	8015626 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801558a:	f8dc 400c 	ldr.w	r4, [ip, #12]
 801558e:	4544      	cmp	r4, r8
 8015590:	dd49      	ble.n	8015626 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8015592:	9c04      	ldr	r4, [sp, #16]
 8015594:	b236      	sxth	r6, r6
 8015596:	fb08 4606 	mla	r6, r8, r6, r4
 801559a:	f06f 0001 	mvn.w	r0, #1
 801559e:	f816 8007 	ldrb.w	r8, [r6, r7]
 80155a2:	9c01      	ldr	r4, [sp, #4]
 80155a4:	fb00 fa0e 	mul.w	sl, r0, lr
 80155a8:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80155ac:	9800      	ldr	r0, [sp, #0]
 80155ae:	eb04 0b08 	add.w	fp, r4, r8
 80155b2:	f830 400a 	ldrh.w	r4, [r0, sl]
 80155b6:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80155ba:	9801      	ldr	r0, [sp, #4]
 80155bc:	f89b b001 	ldrb.w	fp, [fp, #1]
 80155c0:	f810 8008 	ldrb.w	r8, [r0, r8]
 80155c4:	9800      	ldr	r0, [sp, #0]
 80155c6:	1227      	asrs	r7, r4, #8
 80155c8:	fb16 f609 	smulbb	r6, r6, r9
 80155cc:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80155d0:	fb07 6705 	mla	r7, r7, r5, r6
 80155d4:	10e6      	asrs	r6, r4, #3
 80155d6:	00e4      	lsls	r4, r4, #3
 80155d8:	b2e4      	uxtb	r4, r4
 80155da:	fb1b fb09 	smulbb	fp, fp, r9
 80155de:	fb14 f405 	smulbb	r4, r4, r5
 80155e2:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80155e6:	b2bf      	uxth	r7, r7
 80155e8:	fb06 b605 	mla	r6, r6, r5, fp
 80155ec:	fb08 4809 	mla	r8, r8, r9, r4
 80155f0:	b2b6      	uxth	r6, r6
 80155f2:	fa1f f888 	uxth.w	r8, r8
 80155f6:	1c7c      	adds	r4, r7, #1
 80155f8:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80155fc:	f106 0b01 	add.w	fp, r6, #1
 8015600:	f108 0401 	add.w	r4, r8, #1
 8015604:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8015608:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 801560c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015610:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 8015614:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8015618:	4327      	orrs	r7, r4
 801561a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801561e:	ea47 070b 	orr.w	r7, r7, fp
 8015622:	f820 700a 	strh.w	r7, [r0, sl]
 8015626:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015628:	4401      	add	r1, r0
 801562a:	9814      	ldr	r0, [sp, #80]	; 0x50
 801562c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015630:	4402      	add	r2, r0
 8015632:	e759      	b.n	80154e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 8015634:	b007      	add	sp, #28
 8015636:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801563c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801563c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015640:	b085      	sub	sp, #20
 8015642:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015646:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 8015648:	9203      	str	r2, [sp, #12]
 801564a:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801564e:	6870      	ldr	r0, [r6, #4]
 8015650:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8015652:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 8015656:	686f      	ldr	r7, [r5, #4]
 8015658:	9101      	str	r1, [sp, #4]
 801565a:	fb00 2404 	mla	r4, r0, r4, r2
 801565e:	6832      	ldr	r2, [r6, #0]
 8015660:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015664:	682a      	ldr	r2, [r5, #0]
 8015666:	9202      	str	r2, [sp, #8]
 8015668:	3704      	adds	r7, #4
 801566a:	9a01      	ldr	r2, [sp, #4]
 801566c:	2a00      	cmp	r2, #0
 801566e:	dc03      	bgt.n	8015678 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8015670:	9a03      	ldr	r2, [sp, #12]
 8015672:	2a00      	cmp	r2, #0
 8015674:	f340 80cc 	ble.w	8015810 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8015678:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801567a:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801567e:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8015682:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015686:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015688:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 801568c:	2b00      	cmp	r3, #0
 801568e:	dd0d      	ble.n	80156ac <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8015690:	1406      	asrs	r6, r0, #16
 8015692:	d405      	bmi.n	80156a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015694:	454e      	cmp	r6, r9
 8015696:	da03      	bge.n	80156a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8015698:	1416      	asrs	r6, r2, #16
 801569a:	d401      	bmi.n	80156a0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801569c:	4546      	cmp	r6, r8
 801569e:	db06      	blt.n	80156ae <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80156a0:	9e12      	ldr	r6, [sp, #72]	; 0x48
 80156a2:	4460      	add	r0, ip
 80156a4:	4432      	add	r2, r6
 80156a6:	3b01      	subs	r3, #1
 80156a8:	3402      	adds	r4, #2
 80156aa:	e7ef      	b.n	801568c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80156ac:	d00f      	beq.n	80156ce <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80156ae:	1e5e      	subs	r6, r3, #1
 80156b0:	fb0c 0e06 	mla	lr, ip, r6, r0
 80156b4:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80156b8:	d543      	bpl.n	8015742 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80156ba:	4698      	mov	r8, r3
 80156bc:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80156c0:	f1b8 0f00 	cmp.w	r8, #0
 80156c4:	dc71      	bgt.n	80157aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80156c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80156ca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80156ce:	9b01      	ldr	r3, [sp, #4]
 80156d0:	2b00      	cmp	r3, #0
 80156d2:	f340 809d 	ble.w	8015810 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80156d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80156da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80156de:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80156e2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80156e4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80156e8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80156ec:	eeb0 6a62 	vmov.f32	s12, s5
 80156f0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80156f4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80156f8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80156fc:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015700:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015704:	eeb0 6a43 	vmov.f32	s12, s6
 8015708:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801570c:	ee12 2a90 	vmov	r2, s5
 8015710:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015714:	fb92 fcf3 	sdiv	ip, r2, r3
 8015718:	ee13 2a10 	vmov	r2, s6
 801571c:	fb92 f3f3 	sdiv	r3, r2, r3
 8015720:	9312      	str	r3, [sp, #72]	; 0x48
 8015722:	9b01      	ldr	r3, [sp, #4]
 8015724:	9a03      	ldr	r2, [sp, #12]
 8015726:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801572a:	3b01      	subs	r3, #1
 801572c:	9301      	str	r3, [sp, #4]
 801572e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015732:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015734:	eeb0 3a67 	vmov.f32	s6, s15
 8015738:	bf08      	it	eq
 801573a:	4613      	moveq	r3, r2
 801573c:	eef0 2a47 	vmov.f32	s5, s14
 8015740:	e793      	b.n	801566a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8015742:	45ce      	cmp	lr, r9
 8015744:	dab9      	bge.n	80156ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015746:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015748:	fb01 2606 	mla	r6, r1, r6, r2
 801574c:	1436      	asrs	r6, r6, #16
 801574e:	d4b4      	bmi.n	80156ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015750:	4546      	cmp	r6, r8
 8015752:	dab2      	bge.n	80156ba <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8015754:	4698      	mov	r8, r3
 8015756:	46a2      	mov	sl, r4
 8015758:	f1b8 0f00 	cmp.w	r8, #0
 801575c:	ddb3      	ble.n	80156c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801575e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8015762:	9902      	ldr	r1, [sp, #8]
 8015764:	1416      	asrs	r6, r2, #16
 8015766:	fb09 1606 	mla	r6, r9, r6, r1
 801576a:	ea4f 4e20 	mov.w	lr, r0, asr #16
 801576e:	492a      	ldr	r1, [pc, #168]	; (8015818 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8015770:	f816 e00e 	ldrb.w	lr, [r6, lr]
 8015774:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8015778:	eb07 0b0e 	add.w	fp, r7, lr
 801577c:	4460      	add	r0, ip
 801577e:	f89b 6001 	ldrb.w	r6, [fp, #1]
 8015782:	f89b 9002 	ldrb.w	r9, [fp, #2]
 8015786:	00f6      	lsls	r6, r6, #3
 8015788:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 801578c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015790:	ea49 0606 	orr.w	r6, r9, r6
 8015794:	f817 900e 	ldrb.w	r9, [r7, lr]
 8015798:	9912      	ldr	r1, [sp, #72]	; 0x48
 801579a:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 801579e:	f82a 6b02 	strh.w	r6, [sl], #2
 80157a2:	440a      	add	r2, r1
 80157a4:	f108 38ff 	add.w	r8, r8, #4294967295
 80157a8:	e7d6      	b.n	8015758 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80157aa:	ea5f 4920 	movs.w	r9, r0, asr #16
 80157ae:	d429      	bmi.n	8015804 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80157b0:	68ae      	ldr	r6, [r5, #8]
 80157b2:	454e      	cmp	r6, r9
 80157b4:	dd26      	ble.n	8015804 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80157b6:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80157ba:	d423      	bmi.n	8015804 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80157bc:	68e9      	ldr	r1, [r5, #12]
 80157be:	4559      	cmp	r1, fp
 80157c0:	dd20      	ble.n	8015804 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80157c2:	9902      	ldr	r1, [sp, #8]
 80157c4:	fa0f fe86 	sxth.w	lr, r6
 80157c8:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80157cc:	f06f 0101 	mvn.w	r1, #1
 80157d0:	f81e e009 	ldrb.w	lr, [lr, r9]
 80157d4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80157d8:	eb07 060e 	add.w	r6, r7, lr
 80157dc:	fb01 f908 	mul.w	r9, r1, r8
 80157e0:	f896 b002 	ldrb.w	fp, [r6, #2]
 80157e4:	7876      	ldrb	r6, [r6, #1]
 80157e6:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 80157ea:	00f6      	lsls	r6, r6, #3
 80157ec:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80157f0:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80157f4:	ea4b 0606 	orr.w	r6, fp, r6
 80157f8:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80157fc:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 8015800:	f82a 6009 	strh.w	r6, [sl, r9]
 8015804:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015806:	4460      	add	r0, ip
 8015808:	440a      	add	r2, r1
 801580a:	f108 38ff 	add.w	r8, r8, #4294967295
 801580e:	e757      	b.n	80156c0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8015810:	b005      	add	sp, #20
 8015812:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015816:	bf00      	nop
 8015818:	fffff800 	.word	0xfffff800

0801581c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801581c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015820:	b087      	sub	sp, #28
 8015822:	468b      	mov	fp, r1
 8015824:	9815      	ldr	r0, [sp, #84]	; 0x54
 8015826:	9204      	str	r2, [sp, #16]
 8015828:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 801582c:	9205      	str	r2, [sp, #20]
 801582e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8015832:	6841      	ldr	r1, [r0, #4]
 8015834:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 8015838:	fb01 2404 	mla	r4, r1, r4, r2
 801583c:	6802      	ldr	r2, [r0, #0]
 801583e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015842:	f8dc 2000 	ldr.w	r2, [ip]
 8015846:	9201      	str	r2, [sp, #4]
 8015848:	f8dc 2004 	ldr.w	r2, [ip, #4]
 801584c:	3204      	adds	r2, #4
 801584e:	9202      	str	r2, [sp, #8]
 8015850:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015854:	f1bb 0f00 	cmp.w	fp, #0
 8015858:	dc03      	bgt.n	8015862 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801585a:	9a04      	ldr	r2, [sp, #16]
 801585c:	2a00      	cmp	r2, #0
 801585e:	f340 8138 	ble.w	8015ad2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 8015862:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015864:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8015868:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 801586c:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8015870:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015872:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015876:	2b00      	cmp	r3, #0
 8015878:	dd0e      	ble.n	8015898 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801587a:	1402      	asrs	r2, r0, #16
 801587c:	d405      	bmi.n	801588a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801587e:	42ba      	cmp	r2, r7
 8015880:	da03      	bge.n	801588a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015882:	140a      	asrs	r2, r1, #16
 8015884:	d401      	bmi.n	801588a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8015886:	42b2      	cmp	r2, r6
 8015888:	db07      	blt.n	801589a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801588a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801588c:	4410      	add	r0, r2
 801588e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015890:	3b01      	subs	r3, #1
 8015892:	4411      	add	r1, r2
 8015894:	3402      	adds	r4, #2
 8015896:	e7ee      	b.n	8015876 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8015898:	d019      	beq.n	80158ce <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801589a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801589c:	1e5a      	subs	r2, r3, #1
 801589e:	fb05 0502 	mla	r5, r5, r2, r0
 80158a2:	142d      	asrs	r5, r5, #16
 80158a4:	d409      	bmi.n	80158ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80158a6:	42bd      	cmp	r5, r7
 80158a8:	da07      	bge.n	80158ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80158aa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80158ac:	fb05 1202 	mla	r2, r5, r2, r1
 80158b0:	1412      	asrs	r2, r2, #16
 80158b2:	d402      	bmi.n	80158ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80158b4:	42b2      	cmp	r2, r6
 80158b6:	f2c0 80ac 	blt.w	8015a12 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80158ba:	f04f 0e00 	mov.w	lr, #0
 80158be:	eb03 020e 	add.w	r2, r3, lr
 80158c2:	2a00      	cmp	r2, #0
 80158c4:	dc3e      	bgt.n	8015944 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80158c6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80158ca:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80158ce:	f1bb 0f00 	cmp.w	fp, #0
 80158d2:	f340 80fe 	ble.w	8015ad2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80158d6:	ee30 0a04 	vadd.f32	s0, s0, s8
 80158da:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80158de:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80158e2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80158e4:	f1bb 0b01 	subs.w	fp, fp, #1
 80158e8:	ee31 1a05 	vadd.f32	s2, s2, s10
 80158ec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80158f0:	eeb0 6a62 	vmov.f32	s12, s5
 80158f4:	ee61 7a27 	vmul.f32	s15, s2, s15
 80158f8:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80158fc:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015900:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015904:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015908:	eeb0 6a43 	vmov.f32	s12, s6
 801590c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015910:	ee12 2a90 	vmov	r2, s5
 8015914:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015918:	fb92 f3f3 	sdiv	r3, r2, r3
 801591c:	ee13 2a10 	vmov	r2, s6
 8015920:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015924:	9313      	str	r3, [sp, #76]	; 0x4c
 8015926:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015928:	fb92 f3f3 	sdiv	r3, r2, r3
 801592c:	9a04      	ldr	r2, [sp, #16]
 801592e:	9314      	str	r3, [sp, #80]	; 0x50
 8015930:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015934:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015936:	eeb0 3a67 	vmov.f32	s6, s15
 801593a:	bf08      	it	eq
 801593c:	4613      	moveq	r3, r2
 801593e:	eef0 2a47 	vmov.f32	s5, s14
 8015942:	e787      	b.n	8015854 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8015944:	1406      	asrs	r6, r0, #16
 8015946:	d45d      	bmi.n	8015a04 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015948:	f8dc 5008 	ldr.w	r5, [ip, #8]
 801594c:	42b5      	cmp	r5, r6
 801594e:	dd59      	ble.n	8015a04 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015950:	140f      	asrs	r7, r1, #16
 8015952:	d457      	bmi.n	8015a04 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015954:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8015958:	42ba      	cmp	r2, r7
 801595a:	dd53      	ble.n	8015a04 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801595c:	9a01      	ldr	r2, [sp, #4]
 801595e:	b22d      	sxth	r5, r5
 8015960:	fb07 2505 	mla	r5, r7, r5, r2
 8015964:	5daa      	ldrb	r2, [r5, r6]
 8015966:	9d02      	ldr	r5, [sp, #8]
 8015968:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801596c:	0e2e      	lsrs	r6, r5, #24
 801596e:	d049      	beq.n	8015a04 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8015970:	f06f 0201 	mvn.w	r2, #1
 8015974:	fb02 f20e 	mul.w	r2, r2, lr
 8015978:	9203      	str	r2, [sp, #12]
 801597a:	f834 8002 	ldrh.w	r8, [r4, r2]
 801597e:	9a05      	ldr	r2, [sp, #20]
 8015980:	4356      	muls	r6, r2
 8015982:	1c72      	adds	r2, r6, #1
 8015984:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015988:	1212      	asrs	r2, r2, #8
 801598a:	fa1f f982 	uxth.w	r9, r2
 801598e:	ea4f 2728 	mov.w	r7, r8, asr #8
 8015992:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015996:	43d2      	mvns	r2, r2
 8015998:	b2d2      	uxtb	r2, r2
 801599a:	fb16 f609 	smulbb	r6, r6, r9
 801599e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80159a2:	fb07 6702 	mla	r7, r7, r2, r6
 80159a6:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80159aa:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80159ae:	b2ed      	uxtb	r5, r5
 80159b0:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80159b4:	fa5f f888 	uxtb.w	r8, r8
 80159b8:	fb15 f509 	smulbb	r5, r5, r9
 80159bc:	fb08 5502 	mla	r5, r8, r2, r5
 80159c0:	b2bf      	uxth	r7, r7
 80159c2:	fb1a fa09 	smulbb	sl, sl, r9
 80159c6:	b2ad      	uxth	r5, r5
 80159c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80159cc:	fb06 a602 	mla	r6, r6, r2, sl
 80159d0:	1c7a      	adds	r2, r7, #1
 80159d2:	f105 0a01 	add.w	sl, r5, #1
 80159d6:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80159da:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80159de:	b2b6      	uxth	r6, r6
 80159e0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80159e4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 80159e8:	ea4a 0707 	orr.w	r7, sl, r7
 80159ec:	f106 0a01 	add.w	sl, r6, #1
 80159f0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80159f4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80159f8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80159fc:	9a03      	ldr	r2, [sp, #12]
 80159fe:	ea47 070a 	orr.w	r7, r7, sl
 8015a02:	52a7      	strh	r7, [r4, r2]
 8015a04:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015a06:	4410      	add	r0, r2
 8015a08:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015a0a:	f10e 3eff 	add.w	lr, lr, #4294967295
 8015a0e:	4411      	add	r1, r2
 8015a10:	e755      	b.n	80158be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8015a12:	f04f 0800 	mov.w	r8, #0
 8015a16:	eba3 0208 	sub.w	r2, r3, r8
 8015a1a:	2a00      	cmp	r2, #0
 8015a1c:	f77f af53 	ble.w	80158c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8015a20:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 8015a24:	9f01      	ldr	r7, [sp, #4]
 8015a26:	140a      	asrs	r2, r1, #16
 8015a28:	1405      	asrs	r5, r0, #16
 8015a2a:	fb06 7202 	mla	r2, r6, r2, r7
 8015a2e:	5d52      	ldrb	r2, [r2, r5]
 8015a30:	9d02      	ldr	r5, [sp, #8]
 8015a32:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8015a36:	0e2e      	lsrs	r6, r5, #24
 8015a38:	d044      	beq.n	8015ac4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8015a3a:	9a05      	ldr	r2, [sp, #20]
 8015a3c:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8015a40:	4356      	muls	r6, r2
 8015a42:	1c72      	adds	r2, r6, #1
 8015a44:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8015a48:	1212      	asrs	r2, r2, #8
 8015a4a:	fa1f f982 	uxth.w	r9, r2
 8015a4e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8015a52:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015a56:	43d2      	mvns	r2, r2
 8015a58:	b2d2      	uxtb	r2, r2
 8015a5a:	fb16 f609 	smulbb	r6, r6, r9
 8015a5e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015a62:	fb07 6702 	mla	r7, r7, r2, r6
 8015a66:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015a6a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8015a6e:	b2ed      	uxtb	r5, r5
 8015a70:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8015a74:	fa5f fe8e 	uxtb.w	lr, lr
 8015a78:	fb15 f509 	smulbb	r5, r5, r9
 8015a7c:	fb0e 5502 	mla	r5, lr, r2, r5
 8015a80:	b2bf      	uxth	r7, r7
 8015a82:	fb1a fa09 	smulbb	sl, sl, r9
 8015a86:	b2ad      	uxth	r5, r5
 8015a88:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015a8c:	fb06 a602 	mla	r6, r6, r2, sl
 8015a90:	1c7a      	adds	r2, r7, #1
 8015a92:	f105 0a01 	add.w	sl, r5, #1
 8015a96:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8015a9a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015a9e:	b2b6      	uxth	r6, r6
 8015aa0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015aa4:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015aa8:	ea4a 0707 	orr.w	r7, sl, r7
 8015aac:	f106 0a01 	add.w	sl, r6, #1
 8015ab0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015ab4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015ab8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015abc:	ea47 070a 	orr.w	r7, r7, sl
 8015ac0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8015ac4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8015ac6:	4410      	add	r0, r2
 8015ac8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8015aca:	f108 0801 	add.w	r8, r8, #1
 8015ace:	4411      	add	r1, r2
 8015ad0:	e7a1      	b.n	8015a16 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 8015ad2:	b007      	add	sp, #28
 8015ad4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08015ad8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015ad8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015adc:	b085      	sub	sp, #20
 8015ade:	468b      	mov	fp, r1
 8015ae0:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8015ae2:	9203      	str	r2, [sp, #12]
 8015ae4:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8015ae8:	6841      	ldr	r1, [r0, #4]
 8015aea:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8015aee:	fb01 2404 	mla	r4, r1, r4, r2
 8015af2:	6802      	ldr	r2, [r0, #0]
 8015af4:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8015af8:	f8de 2000 	ldr.w	r2, [lr]
 8015afc:	9200      	str	r2, [sp, #0]
 8015afe:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015b02:	3204      	adds	r2, #4
 8015b04:	9201      	str	r2, [sp, #4]
 8015b06:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015b0a:	f1bb 0f00 	cmp.w	fp, #0
 8015b0e:	dc03      	bgt.n	8015b18 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8015b10:	9a03      	ldr	r2, [sp, #12]
 8015b12:	2a00      	cmp	r2, #0
 8015b14:	f340 8153 	ble.w	8015dbe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015b18:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8015b1a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015b1e:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015b22:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015b26:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8015b28:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015b2c:	2b00      	cmp	r3, #0
 8015b2e:	dd0e      	ble.n	8015b4e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8015b30:	1408      	asrs	r0, r1, #16
 8015b32:	d405      	bmi.n	8015b40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015b34:	42b8      	cmp	r0, r7
 8015b36:	da03      	bge.n	8015b40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015b38:	1410      	asrs	r0, r2, #16
 8015b3a:	d401      	bmi.n	8015b40 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8015b3c:	42b0      	cmp	r0, r6
 8015b3e:	db07      	blt.n	8015b50 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8015b40:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015b42:	4401      	add	r1, r0
 8015b44:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015b46:	3b01      	subs	r3, #1
 8015b48:	4402      	add	r2, r0
 8015b4a:	3402      	adds	r4, #2
 8015b4c:	e7ee      	b.n	8015b2c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8015b4e:	d017      	beq.n	8015b80 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015b50:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8015b52:	1e58      	subs	r0, r3, #1
 8015b54:	fb05 1500 	mla	r5, r5, r0, r1
 8015b58:	142d      	asrs	r5, r5, #16
 8015b5a:	d409      	bmi.n	8015b70 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015b5c:	42bd      	cmp	r5, r7
 8015b5e:	da07      	bge.n	8015b70 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015b60:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8015b62:	fb05 2000 	mla	r0, r5, r0, r2
 8015b66:	1400      	asrs	r0, r0, #16
 8015b68:	d402      	bmi.n	8015b70 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8015b6a:	42b0      	cmp	r0, r6
 8015b6c:	f2c0 80bc 	blt.w	8015ce8 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8015b70:	2600      	movs	r6, #0
 8015b72:	1998      	adds	r0, r3, r6
 8015b74:	2800      	cmp	r0, #0
 8015b76:	dc3e      	bgt.n	8015bf6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8015b78:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015b7c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8015b80:	f1bb 0f00 	cmp.w	fp, #0
 8015b84:	f340 811b 	ble.w	8015dbe <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8015b88:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015b8c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015b90:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015b94:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015b96:	f1bb 0b01 	subs.w	fp, fp, #1
 8015b9a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015b9e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015ba2:	eeb0 6a62 	vmov.f32	s12, s5
 8015ba6:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015baa:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015bae:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015bb2:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8015bb6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015bba:	eeb0 6a43 	vmov.f32	s12, s6
 8015bbe:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015bc2:	ee12 2a90 	vmov	r2, s5
 8015bc6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015bca:	fb92 f3f3 	sdiv	r3, r2, r3
 8015bce:	ee13 2a10 	vmov	r2, s6
 8015bd2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015bd6:	9311      	str	r3, [sp, #68]	; 0x44
 8015bd8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015bda:	fb92 f3f3 	sdiv	r3, r2, r3
 8015bde:	9a03      	ldr	r2, [sp, #12]
 8015be0:	9312      	str	r3, [sp, #72]	; 0x48
 8015be2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8015be6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015be8:	eeb0 3a67 	vmov.f32	s6, s15
 8015bec:	bf08      	it	eq
 8015bee:	4613      	moveq	r3, r2
 8015bf0:	eef0 2a47 	vmov.f32	s5, s14
 8015bf4:	e789      	b.n	8015b0a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8015bf6:	140f      	asrs	r7, r1, #16
 8015bf8:	d426      	bmi.n	8015c48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015bfa:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015bfe:	42bd      	cmp	r5, r7
 8015c00:	dd22      	ble.n	8015c48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015c02:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8015c06:	d41f      	bmi.n	8015c48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015c08:	f8de 000c 	ldr.w	r0, [lr, #12]
 8015c0c:	4560      	cmp	r0, ip
 8015c0e:	dd1b      	ble.n	8015c48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015c10:	9800      	ldr	r0, [sp, #0]
 8015c12:	b22d      	sxth	r5, r5
 8015c14:	fb0c 0505 	mla	r5, ip, r5, r0
 8015c18:	5de8      	ldrb	r0, [r5, r7]
 8015c1a:	9d01      	ldr	r5, [sp, #4]
 8015c1c:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8015c20:	0e07      	lsrs	r7, r0, #24
 8015c22:	2fff      	cmp	r7, #255	; 0xff
 8015c24:	d116      	bne.n	8015c54 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8015c26:	f06f 0501 	mvn.w	r5, #1
 8015c2a:	fb05 f706 	mul.w	r7, r5, r6
 8015c2e:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8015c32:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8015c36:	0945      	lsrs	r5, r0, #5
 8015c38:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015c3c:	ea4c 0505 	orr.w	r5, ip, r5
 8015c40:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8015c44:	4305      	orrs	r5, r0
 8015c46:	53e5      	strh	r5, [r4, r7]
 8015c48:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015c4a:	4401      	add	r1, r0
 8015c4c:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015c4e:	3e01      	subs	r6, #1
 8015c50:	4402      	add	r2, r0
 8015c52:	e78e      	b.n	8015b72 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8015c54:	b2fd      	uxtb	r5, r7
 8015c56:	2f00      	cmp	r7, #0
 8015c58:	d0f6      	beq.n	8015c48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015c5a:	f06f 0701 	mvn.w	r7, #1
 8015c5e:	4377      	muls	r7, r6
 8015c60:	fa1f f985 	uxth.w	r9, r5
 8015c64:	f834 8007 	ldrh.w	r8, [r4, r7]
 8015c68:	9702      	str	r7, [sp, #8]
 8015c6a:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8015c6e:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8015c72:	43ed      	mvns	r5, r5
 8015c74:	b2ed      	uxtb	r5, r5
 8015c76:	fb17 f709 	smulbb	r7, r7, r9
 8015c7a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015c7e:	fb0c 7c05 	mla	ip, ip, r5, r7
 8015c82:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8015c86:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8015c8a:	b2c0      	uxtb	r0, r0
 8015c8c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8015c90:	fa5f f888 	uxtb.w	r8, r8
 8015c94:	fb10 f009 	smulbb	r0, r0, r9
 8015c98:	fb08 0005 	mla	r0, r8, r5, r0
 8015c9c:	b280      	uxth	r0, r0
 8015c9e:	fa1f fc8c 	uxth.w	ip, ip
 8015ca2:	fb1a fa09 	smulbb	sl, sl, r9
 8015ca6:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015caa:	fb07 a705 	mla	r7, r7, r5, sl
 8015cae:	f100 0a01 	add.w	sl, r0, #1
 8015cb2:	f10c 0501 	add.w	r5, ip, #1
 8015cb6:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8015cba:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8015cbe:	b2bf      	uxth	r7, r7
 8015cc0:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015cc4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015cc8:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015ccc:	f107 0a01 	add.w	sl, r7, #1
 8015cd0:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8015cd4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015cd8:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015cdc:	9802      	ldr	r0, [sp, #8]
 8015cde:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015ce2:	f824 c000 	strh.w	ip, [r4, r0]
 8015ce6:	e7af      	b.n	8015c48 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8015ce8:	f04f 0800 	mov.w	r8, #0
 8015cec:	eba3 0008 	sub.w	r0, r3, r8
 8015cf0:	2800      	cmp	r0, #0
 8015cf2:	f77f af41 	ble.w	8015b78 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015cf6:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8015cfa:	9f00      	ldr	r7, [sp, #0]
 8015cfc:	1410      	asrs	r0, r2, #16
 8015cfe:	140d      	asrs	r5, r1, #16
 8015d00:	fb06 7000 	mla	r0, r6, r0, r7
 8015d04:	5d40      	ldrb	r0, [r0, r5]
 8015d06:	9d01      	ldr	r5, [sp, #4]
 8015d08:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8015d0c:	0e2e      	lsrs	r6, r5, #24
 8015d0e:	2eff      	cmp	r6, #255	; 0xff
 8015d10:	d112      	bne.n	8015d38 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8015d12:	482c      	ldr	r0, [pc, #176]	; (8015dc4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8015d14:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8015d18:	0968      	lsrs	r0, r5, #5
 8015d1a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015d1e:	4330      	orrs	r0, r6
 8015d20:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8015d24:	4328      	orrs	r0, r5
 8015d26:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8015d2a:	9811      	ldr	r0, [sp, #68]	; 0x44
 8015d2c:	4401      	add	r1, r0
 8015d2e:	9812      	ldr	r0, [sp, #72]	; 0x48
 8015d30:	f108 0801 	add.w	r8, r8, #1
 8015d34:	4402      	add	r2, r0
 8015d36:	e7d9      	b.n	8015cec <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8015d38:	b2f0      	uxtb	r0, r6
 8015d3a:	2e00      	cmp	r6, #0
 8015d3c:	d0f5      	beq.n	8015d2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8015d3e:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8015d42:	fa1f f980 	uxth.w	r9, r0
 8015d46:	ea4f 272c 	mov.w	r7, ip, asr #8
 8015d4a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8015d4e:	43c0      	mvns	r0, r0
 8015d50:	b2c0      	uxtb	r0, r0
 8015d52:	fb16 f609 	smulbb	r6, r6, r9
 8015d56:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8015d5a:	fb07 6700 	mla	r7, r7, r0, r6
 8015d5e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8015d62:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8015d66:	b2ed      	uxtb	r5, r5
 8015d68:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8015d6c:	fa5f fc8c 	uxtb.w	ip, ip
 8015d70:	fb15 f509 	smulbb	r5, r5, r9
 8015d74:	fb0c 5500 	mla	r5, ip, r0, r5
 8015d78:	b2bf      	uxth	r7, r7
 8015d7a:	fb1a fa09 	smulbb	sl, sl, r9
 8015d7e:	b2ad      	uxth	r5, r5
 8015d80:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015d84:	fb06 a600 	mla	r6, r6, r0, sl
 8015d88:	1c78      	adds	r0, r7, #1
 8015d8a:	f105 0a01 	add.w	sl, r5, #1
 8015d8e:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8015d92:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015d96:	b2b6      	uxth	r6, r6
 8015d98:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015d9c:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8015da0:	ea4a 0707 	orr.w	r7, sl, r7
 8015da4:	f106 0a01 	add.w	sl, r6, #1
 8015da8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015dac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015db0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015db4:	ea47 070a 	orr.w	r7, r7, sl
 8015db8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8015dbc:	e7b5      	b.n	8015d2a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8015dbe:	b005      	add	sp, #20
 8015dc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015dc4:	fffff800 	.word	0xfffff800

08015dc8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015dc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015dcc:	b087      	sub	sp, #28
 8015dce:	468b      	mov	fp, r1
 8015dd0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8015dd2:	9204      	str	r2, [sp, #16]
 8015dd4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8015dd8:	9205      	str	r2, [sp, #20]
 8015dda:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 8015dde:	6861      	ldr	r1, [r4, #4]
 8015de0:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 8015de4:	fb01 2000 	mla	r0, r1, r0, r2
 8015de8:	6822      	ldr	r2, [r4, #0]
 8015dea:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8015dee:	f8de 2000 	ldr.w	r2, [lr]
 8015df2:	9201      	str	r2, [sp, #4]
 8015df4:	f8de 2004 	ldr.w	r2, [lr, #4]
 8015df8:	9202      	str	r2, [sp, #8]
 8015dfa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015dfe:	f1bb 0f00 	cmp.w	fp, #0
 8015e02:	dc03      	bgt.n	8015e0c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8015e04:	9a04      	ldr	r2, [sp, #16]
 8015e06:	2a00      	cmp	r2, #0
 8015e08:	f340 8142 	ble.w	8016090 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015e0c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8015e0e:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8015e12:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8015e16:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8015e1a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8015e1c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8015e20:	2b00      	cmp	r3, #0
 8015e22:	dd0e      	ble.n	8015e42 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015e24:	140c      	asrs	r4, r1, #16
 8015e26:	d405      	bmi.n	8015e34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015e28:	42bc      	cmp	r4, r7
 8015e2a:	da03      	bge.n	8015e34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015e2c:	1414      	asrs	r4, r2, #16
 8015e2e:	d401      	bmi.n	8015e34 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015e30:	42b4      	cmp	r4, r6
 8015e32:	db07      	blt.n	8015e44 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8015e34:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015e36:	4421      	add	r1, r4
 8015e38:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015e3a:	3b01      	subs	r3, #1
 8015e3c:	4422      	add	r2, r4
 8015e3e:	3002      	adds	r0, #2
 8015e40:	e7ee      	b.n	8015e20 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8015e42:	d019      	beq.n	8015e78 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8015e44:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8015e46:	1e5c      	subs	r4, r3, #1
 8015e48:	fb05 1504 	mla	r5, r5, r4, r1
 8015e4c:	142d      	asrs	r5, r5, #16
 8015e4e:	d409      	bmi.n	8015e64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015e50:	42bd      	cmp	r5, r7
 8015e52:	da07      	bge.n	8015e64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015e54:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8015e56:	fb05 2404 	mla	r4, r5, r4, r2
 8015e5a:	1424      	asrs	r4, r4, #16
 8015e5c:	d402      	bmi.n	8015e64 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015e5e:	42b4      	cmp	r4, r6
 8015e60:	f2c0 80b1 	blt.w	8015fc6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8015e64:	f04f 0800 	mov.w	r8, #0
 8015e68:	eb03 0408 	add.w	r4, r3, r8
 8015e6c:	2c00      	cmp	r4, #0
 8015e6e:	dc3e      	bgt.n	8015eee <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8015e70:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8015e74:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015e78:	f1bb 0f00 	cmp.w	fp, #0
 8015e7c:	f340 8108 	ble.w	8016090 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8015e80:	ee30 0a04 	vadd.f32	s0, s0, s8
 8015e84:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8015e88:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8015e8c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015e8e:	f1bb 0b01 	subs.w	fp, fp, #1
 8015e92:	ee31 1a05 	vadd.f32	s2, s2, s10
 8015e96:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8015e9a:	eeb0 6a62 	vmov.f32	s12, s5
 8015e9e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8015ea2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015ea6:	ee77 2a62 	vsub.f32	s5, s14, s5
 8015eaa:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8015eae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8015eb2:	eeb0 6a43 	vmov.f32	s12, s6
 8015eb6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8015eba:	ee12 2a90 	vmov	r2, s5
 8015ebe:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8015ec2:	fb92 f3f3 	sdiv	r3, r2, r3
 8015ec6:	ee13 2a10 	vmov	r2, s6
 8015eca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8015ece:	9313      	str	r3, [sp, #76]	; 0x4c
 8015ed0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015ed2:	fb92 f3f3 	sdiv	r3, r2, r3
 8015ed6:	9a04      	ldr	r2, [sp, #16]
 8015ed8:	9314      	str	r3, [sp, #80]	; 0x50
 8015eda:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8015ede:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015ee0:	eeb0 3a67 	vmov.f32	s6, s15
 8015ee4:	bf08      	it	eq
 8015ee6:	4613      	moveq	r3, r2
 8015ee8:	eef0 2a47 	vmov.f32	s5, s14
 8015eec:	e787      	b.n	8015dfe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8015eee:	140e      	asrs	r6, r1, #16
 8015ef0:	d462      	bmi.n	8015fb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015ef2:	f8de 5008 	ldr.w	r5, [lr, #8]
 8015ef6:	42b5      	cmp	r5, r6
 8015ef8:	dd5e      	ble.n	8015fb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015efa:	1417      	asrs	r7, r2, #16
 8015efc:	d45c      	bmi.n	8015fb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015efe:	f8de 400c 	ldr.w	r4, [lr, #12]
 8015f02:	42bc      	cmp	r4, r7
 8015f04:	dd58      	ble.n	8015fb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015f06:	b22d      	sxth	r5, r5
 8015f08:	fb07 6505 	mla	r5, r7, r5, r6
 8015f0c:	9c02      	ldr	r4, [sp, #8]
 8015f0e:	5d66      	ldrb	r6, [r4, r5]
 8015f10:	2e00      	cmp	r6, #0
 8015f12:	d051      	beq.n	8015fb8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8015f14:	9c01      	ldr	r4, [sp, #4]
 8015f16:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8015f1a:	f06f 0401 	mvn.w	r4, #1
 8015f1e:	fb04 f408 	mul.w	r4, r4, r8
 8015f22:	9403      	str	r4, [sp, #12]
 8015f24:	5b05      	ldrh	r5, [r0, r4]
 8015f26:	9c05      	ldr	r4, [sp, #20]
 8015f28:	4366      	muls	r6, r4
 8015f2a:	1c74      	adds	r4, r6, #1
 8015f2c:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015f30:	1224      	asrs	r4, r4, #8
 8015f32:	b2a7      	uxth	r7, r4
 8015f34:	122e      	asrs	r6, r5, #8
 8015f36:	43e4      	mvns	r4, r4
 8015f38:	b2e4      	uxtb	r4, r4
 8015f3a:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8015f3e:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8015f42:	fb16 f604 	smulbb	r6, r6, r4
 8015f46:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8015f4a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8015f4e:	00ed      	lsls	r5, r5, #3
 8015f50:	fb0c 6c07 	mla	ip, ip, r7, r6
 8015f54:	b2ed      	uxtb	r5, r5
 8015f56:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8015f5a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8015f5e:	fb15 f504 	smulbb	r5, r5, r4
 8015f62:	fa5f f989 	uxtb.w	r9, r9
 8015f66:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8015f6a:	fb09 5507 	mla	r5, r9, r7, r5
 8015f6e:	fb1a fa04 	smulbb	sl, sl, r4
 8015f72:	fa1f fc8c 	uxth.w	ip, ip
 8015f76:	b2ad      	uxth	r5, r5
 8015f78:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8015f7c:	fb06 a607 	mla	r6, r6, r7, sl
 8015f80:	f10c 0401 	add.w	r4, ip, #1
 8015f84:	f105 0a01 	add.w	sl, r5, #1
 8015f88:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8015f8c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8015f90:	b2b6      	uxth	r6, r6
 8015f92:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8015f96:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8015f9a:	ea4a 0c0c 	orr.w	ip, sl, ip
 8015f9e:	f106 0a01 	add.w	sl, r6, #1
 8015fa2:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8015fa6:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8015faa:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015fae:	9c03      	ldr	r4, [sp, #12]
 8015fb0:	ea4c 0c0a 	orr.w	ip, ip, sl
 8015fb4:	f820 c004 	strh.w	ip, [r0, r4]
 8015fb8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8015fba:	4421      	add	r1, r4
 8015fbc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8015fbe:	f108 38ff 	add.w	r8, r8, #4294967295
 8015fc2:	4422      	add	r2, r4
 8015fc4:	e750      	b.n	8015e68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8015fc6:	f04f 0900 	mov.w	r9, #0
 8015fca:	eba3 0409 	sub.w	r4, r3, r9
 8015fce:	2c00      	cmp	r4, #0
 8015fd0:	f77f af4e 	ble.w	8015e70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8015fd4:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8015fd8:	140d      	asrs	r5, r1, #16
 8015fda:	1414      	asrs	r4, r2, #16
 8015fdc:	fb06 5404 	mla	r4, r6, r4, r5
 8015fe0:	9d02      	ldr	r5, [sp, #8]
 8015fe2:	5d2e      	ldrb	r6, [r5, r4]
 8015fe4:	2e00      	cmp	r6, #0
 8015fe6:	d04c      	beq.n	8016082 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8015fe8:	9d01      	ldr	r5, [sp, #4]
 8015fea:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8015fee:	9c05      	ldr	r4, [sp, #20]
 8015ff0:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8015ff4:	4366      	muls	r6, r4
 8015ff6:	1c74      	adds	r4, r6, #1
 8015ff8:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8015ffc:	1224      	asrs	r4, r4, #8
 8015ffe:	b2a7      	uxth	r7, r4
 8016000:	122e      	asrs	r6, r5, #8
 8016002:	43e4      	mvns	r4, r4
 8016004:	b2e4      	uxtb	r4, r4
 8016006:	ea4f 2c28 	mov.w	ip, r8, asr #8
 801600a:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801600e:	fb16 f604 	smulbb	r6, r6, r4
 8016012:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016016:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801601a:	00ed      	lsls	r5, r5, #3
 801601c:	fb0c 6c07 	mla	ip, ip, r7, r6
 8016020:	b2ed      	uxtb	r5, r5
 8016022:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8016026:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 801602a:	fb15 f504 	smulbb	r5, r5, r4
 801602e:	fa5f f888 	uxtb.w	r8, r8
 8016032:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8016036:	fb08 5507 	mla	r5, r8, r7, r5
 801603a:	fb1a fa04 	smulbb	sl, sl, r4
 801603e:	fa1f fc8c 	uxth.w	ip, ip
 8016042:	b2ad      	uxth	r5, r5
 8016044:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016048:	fb06 a607 	mla	r6, r6, r7, sl
 801604c:	f10c 0401 	add.w	r4, ip, #1
 8016050:	f105 0a01 	add.w	sl, r5, #1
 8016054:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8016058:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801605c:	b2b6      	uxth	r6, r6
 801605e:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016062:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016066:	ea4a 0c0c 	orr.w	ip, sl, ip
 801606a:	f106 0a01 	add.w	sl, r6, #1
 801606e:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016072:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016076:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801607a:	ea4c 0c0a 	orr.w	ip, ip, sl
 801607e:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8016082:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8016084:	4421      	add	r1, r4
 8016086:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8016088:	f109 0901 	add.w	r9, r9, #1
 801608c:	4422      	add	r2, r4
 801608e:	e79c      	b.n	8015fca <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8016090:	b007      	add	sp, #28
 8016092:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016096 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016096:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801609a:	b085      	sub	sp, #20
 801609c:	468b      	mov	fp, r1
 801609e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80160a0:	9203      	str	r2, [sp, #12]
 80160a2:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 80160a6:	6861      	ldr	r1, [r4, #4]
 80160a8:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 80160ac:	fb01 2000 	mla	r0, r1, r0, r2
 80160b0:	6822      	ldr	r2, [r4, #0]
 80160b2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 80160b6:	f8d8 2000 	ldr.w	r2, [r8]
 80160ba:	9200      	str	r2, [sp, #0]
 80160bc:	f8d8 2004 	ldr.w	r2, [r8, #4]
 80160c0:	9201      	str	r2, [sp, #4]
 80160c2:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 80160c6:	f1bb 0f00 	cmp.w	fp, #0
 80160ca:	dc03      	bgt.n	80160d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 80160cc:	9a03      	ldr	r2, [sp, #12]
 80160ce:	2a00      	cmp	r2, #0
 80160d0:	f340 8146 	ble.w	8016360 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 80160d4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80160d6:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 80160da:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 80160de:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80160e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80160e4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80160e8:	2b00      	cmp	r3, #0
 80160ea:	dd0e      	ble.n	801610a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80160ec:	140c      	asrs	r4, r1, #16
 80160ee:	d405      	bmi.n	80160fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80160f0:	42bc      	cmp	r4, r7
 80160f2:	da03      	bge.n	80160fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80160f4:	1414      	asrs	r4, r2, #16
 80160f6:	d401      	bmi.n	80160fc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80160f8:	42b4      	cmp	r4, r6
 80160fa:	db07      	blt.n	801610c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80160fc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80160fe:	4421      	add	r1, r4
 8016100:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8016102:	3b01      	subs	r3, #1
 8016104:	4422      	add	r2, r4
 8016106:	3002      	adds	r0, #2
 8016108:	e7ee      	b.n	80160e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801610a:	d017      	beq.n	801613c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 801610c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801610e:	1e5c      	subs	r4, r3, #1
 8016110:	fb05 1504 	mla	r5, r5, r4, r1
 8016114:	142d      	asrs	r5, r5, #16
 8016116:	d409      	bmi.n	801612c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016118:	42bd      	cmp	r5, r7
 801611a:	da07      	bge.n	801612c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801611c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801611e:	fb05 2404 	mla	r4, r5, r4, r2
 8016122:	1424      	asrs	r4, r4, #16
 8016124:	d402      	bmi.n	801612c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8016126:	42b4      	cmp	r4, r6
 8016128:	f2c0 80b3 	blt.w	8016292 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 801612c:	2600      	movs	r6, #0
 801612e:	199c      	adds	r4, r3, r6
 8016130:	2c00      	cmp	r4, #0
 8016132:	dc3e      	bgt.n	80161b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016134:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016138:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801613c:	f1bb 0f00 	cmp.w	fp, #0
 8016140:	f340 810e 	ble.w	8016360 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8016144:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016148:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801614c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016150:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016152:	f1bb 0b01 	subs.w	fp, fp, #1
 8016156:	ee31 1a05 	vadd.f32	s2, s2, s10
 801615a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801615e:	eeb0 6a62 	vmov.f32	s12, s5
 8016162:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016166:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801616a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801616e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016172:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016176:	eeb0 6a43 	vmov.f32	s12, s6
 801617a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801617e:	ee12 2a90 	vmov	r2, s5
 8016182:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016186:	fb92 f3f3 	sdiv	r3, r2, r3
 801618a:	ee13 2a10 	vmov	r2, s6
 801618e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016192:	9311      	str	r3, [sp, #68]	; 0x44
 8016194:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016196:	fb92 f3f3 	sdiv	r3, r2, r3
 801619a:	9a03      	ldr	r2, [sp, #12]
 801619c:	9312      	str	r3, [sp, #72]	; 0x48
 801619e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80161a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80161a4:	eeb0 3a67 	vmov.f32	s6, s15
 80161a8:	bf08      	it	eq
 80161aa:	4613      	moveq	r3, r2
 80161ac:	eef0 2a47 	vmov.f32	s5, s14
 80161b0:	e789      	b.n	80160c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 80161b2:	140f      	asrs	r7, r1, #16
 80161b4:	d418      	bmi.n	80161e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80161b6:	f8d8 5008 	ldr.w	r5, [r8, #8]
 80161ba:	42bd      	cmp	r5, r7
 80161bc:	dd14      	ble.n	80161e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80161be:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80161c2:	d411      	bmi.n	80161e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80161c4:	f8d8 400c 	ldr.w	r4, [r8, #12]
 80161c8:	4564      	cmp	r4, ip
 80161ca:	dd0d      	ble.n	80161e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80161cc:	b22d      	sxth	r5, r5
 80161ce:	fb0c 7505 	mla	r5, ip, r5, r7
 80161d2:	9c01      	ldr	r4, [sp, #4]
 80161d4:	5d64      	ldrb	r4, [r4, r5]
 80161d6:	2cff      	cmp	r4, #255	; 0xff
 80161d8:	d10c      	bne.n	80161f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 80161da:	9c00      	ldr	r4, [sp, #0]
 80161dc:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 80161e0:	f06f 0401 	mvn.w	r4, #1
 80161e4:	4374      	muls	r4, r6
 80161e6:	5305      	strh	r5, [r0, r4]
 80161e8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80161ea:	4421      	add	r1, r4
 80161ec:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80161ee:	3e01      	subs	r6, #1
 80161f0:	4422      	add	r2, r4
 80161f2:	e79c      	b.n	801612e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80161f4:	2c00      	cmp	r4, #0
 80161f6:	d0f7      	beq.n	80161e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80161f8:	9f00      	ldr	r7, [sp, #0]
 80161fa:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 80161fe:	f06f 0501 	mvn.w	r5, #1
 8016202:	4375      	muls	r5, r6
 8016204:	9502      	str	r5, [sp, #8]
 8016206:	5b45      	ldrh	r5, [r0, r5]
 8016208:	fa1f fc84 	uxth.w	ip, r4
 801620c:	122f      	asrs	r7, r5, #8
 801620e:	43e4      	mvns	r4, r4
 8016210:	b2e4      	uxtb	r4, r4
 8016212:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8016216:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801621a:	fb17 f704 	smulbb	r7, r7, r4
 801621e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8016222:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016226:	00ed      	lsls	r5, r5, #3
 8016228:	fb0e 7e0c 	mla	lr, lr, ip, r7
 801622c:	b2ed      	uxtb	r5, r5
 801622e:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8016232:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8016236:	fb15 f504 	smulbb	r5, r5, r4
 801623a:	fa5f f989 	uxtb.w	r9, r9
 801623e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8016242:	fb09 550c 	mla	r5, r9, ip, r5
 8016246:	fb1a fa04 	smulbb	sl, sl, r4
 801624a:	fa1f fe8e 	uxth.w	lr, lr
 801624e:	b2ad      	uxth	r5, r5
 8016250:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016254:	fb07 a70c 	mla	r7, r7, ip, sl
 8016258:	f10e 0401 	add.w	r4, lr, #1
 801625c:	f105 0a01 	add.w	sl, r5, #1
 8016260:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8016264:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016268:	b2bf      	uxth	r7, r7
 801626a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801626e:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8016272:	ea4a 0e0e 	orr.w	lr, sl, lr
 8016276:	f107 0a01 	add.w	sl, r7, #1
 801627a:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801627e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016282:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016286:	9c02      	ldr	r4, [sp, #8]
 8016288:	ea4e 0e0a 	orr.w	lr, lr, sl
 801628c:	f820 e004 	strh.w	lr, [r0, r4]
 8016290:	e7aa      	b.n	80161e8 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8016292:	f04f 0900 	mov.w	r9, #0
 8016296:	eba3 0409 	sub.w	r4, r3, r9
 801629a:	2c00      	cmp	r4, #0
 801629c:	f77f af4a 	ble.w	8016134 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80162a0:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 80162a4:	1414      	asrs	r4, r2, #16
 80162a6:	140d      	asrs	r5, r1, #16
 80162a8:	fb06 5504 	mla	r5, r6, r4, r5
 80162ac:	9c01      	ldr	r4, [sp, #4]
 80162ae:	5d64      	ldrb	r4, [r4, r5]
 80162b0:	2cff      	cmp	r4, #255	; 0xff
 80162b2:	d10b      	bne.n	80162cc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80162b4:	9c00      	ldr	r4, [sp, #0]
 80162b6:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 80162ba:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 80162be:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80162c0:	4421      	add	r1, r4
 80162c2:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80162c4:	f109 0901 	add.w	r9, r9, #1
 80162c8:	4422      	add	r2, r4
 80162ca:	e7e4      	b.n	8016296 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 80162cc:	2c00      	cmp	r4, #0
 80162ce:	d0f6      	beq.n	80162be <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80162d0:	9e00      	ldr	r6, [sp, #0]
 80162d2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 80162d6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 80162da:	b2a7      	uxth	r7, r4
 80162dc:	122e      	asrs	r6, r5, #8
 80162de:	43e4      	mvns	r4, r4
 80162e0:	b2e4      	uxtb	r4, r4
 80162e2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80162e6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80162ea:	fb16 f604 	smulbb	r6, r6, r4
 80162ee:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80162f2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80162f6:	00ed      	lsls	r5, r5, #3
 80162f8:	fb0c 6c07 	mla	ip, ip, r7, r6
 80162fc:	b2ed      	uxtb	r5, r5
 80162fe:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8016302:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016306:	fb15 f504 	smulbb	r5, r5, r4
 801630a:	fa5f fe8e 	uxtb.w	lr, lr
 801630e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8016312:	fb0e 5507 	mla	r5, lr, r7, r5
 8016316:	fb1a fa04 	smulbb	sl, sl, r4
 801631a:	fa1f fc8c 	uxth.w	ip, ip
 801631e:	b2ad      	uxth	r5, r5
 8016320:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016324:	fb06 a607 	mla	r6, r6, r7, sl
 8016328:	f10c 0401 	add.w	r4, ip, #1
 801632c:	f105 0a01 	add.w	sl, r5, #1
 8016330:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8016334:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016338:	b2b6      	uxth	r6, r6
 801633a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801633e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016342:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016346:	f106 0a01 	add.w	sl, r6, #1
 801634a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 801634e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016352:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016356:	ea4c 0c0a 	orr.w	ip, ip, sl
 801635a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 801635e:	e7ae      	b.n	80162be <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8016360:	b005      	add	sp, #20
 8016362:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016366 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016366:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801636a:	b085      	sub	sp, #20
 801636c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801636e:	9203      	str	r2, [sp, #12]
 8016370:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 8016374:	9201      	str	r2, [sp, #4]
 8016376:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 801637a:	9100      	str	r1, [sp, #0]
 801637c:	6841      	ldr	r1, [r0, #4]
 801637e:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 8016382:	fb01 2404 	mla	r4, r1, r4, r2
 8016386:	6802      	ldr	r2, [r0, #0]
 8016388:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801638c:	f8de 2000 	ldr.w	r2, [lr]
 8016390:	9202      	str	r2, [sp, #8]
 8016392:	9a01      	ldr	r2, [sp, #4]
 8016394:	43d6      	mvns	r6, r2
 8016396:	b2f6      	uxtb	r6, r6
 8016398:	9a00      	ldr	r2, [sp, #0]
 801639a:	2a00      	cmp	r2, #0
 801639c:	dc03      	bgt.n	80163a6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801639e:	9a03      	ldr	r2, [sp, #12]
 80163a0:	2a00      	cmp	r2, #0
 80163a2:	f340 8124 	ble.w	80165ee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80163a6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80163a8:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80163ac:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80163b0:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80163b4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80163b6:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 80163ba:	2b00      	cmp	r3, #0
 80163bc:	dd0e      	ble.n	80163dc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80163be:	1408      	asrs	r0, r1, #16
 80163c0:	d405      	bmi.n	80163ce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80163c2:	4560      	cmp	r0, ip
 80163c4:	da03      	bge.n	80163ce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80163c6:	1410      	asrs	r0, r2, #16
 80163c8:	d401      	bmi.n	80163ce <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80163ca:	42b8      	cmp	r0, r7
 80163cc:	db07      	blt.n	80163de <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80163ce:	9811      	ldr	r0, [sp, #68]	; 0x44
 80163d0:	4401      	add	r1, r0
 80163d2:	9812      	ldr	r0, [sp, #72]	; 0x48
 80163d4:	3b01      	subs	r3, #1
 80163d6:	4402      	add	r2, r0
 80163d8:	3402      	adds	r4, #2
 80163da:	e7ee      	b.n	80163ba <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80163dc:	d06e      	beq.n	80164bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80163de:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80163e0:	1e58      	subs	r0, r3, #1
 80163e2:	fb05 1500 	mla	r5, r5, r0, r1
 80163e6:	142d      	asrs	r5, r5, #16
 80163e8:	d45c      	bmi.n	80164a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80163ea:	4565      	cmp	r5, ip
 80163ec:	da5a      	bge.n	80164a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80163ee:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80163f0:	fb05 2000 	mla	r0, r5, r0, r2
 80163f4:	1400      	asrs	r0, r0, #16
 80163f6:	d455      	bmi.n	80164a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80163f8:	42b8      	cmp	r0, r7
 80163fa:	da53      	bge.n	80164a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80163fc:	f8bd b004 	ldrh.w	fp, [sp, #4]
 8016400:	4699      	mov	r9, r3
 8016402:	46a2      	mov	sl, r4
 8016404:	f1b9 0f00 	cmp.w	r9, #0
 8016408:	dd54      	ble.n	80164b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801640a:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 801640e:	140d      	asrs	r5, r1, #16
 8016410:	1410      	asrs	r0, r2, #16
 8016412:	fb07 5000 	mla	r0, r7, r0, r5
 8016416:	9d02      	ldr	r5, [sp, #8]
 8016418:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 801641c:	f8ba 5000 	ldrh.w	r5, [sl]
 8016420:	122f      	asrs	r7, r5, #8
 8016422:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8016426:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 801642a:	fb17 f706 	smulbb	r7, r7, r6
 801642e:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8016432:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016436:	00ed      	lsls	r5, r5, #3
 8016438:	fb0c 7c0b 	mla	ip, ip, fp, r7
 801643c:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 8016440:	10c7      	asrs	r7, r0, #3
 8016442:	b2ed      	uxtb	r5, r5
 8016444:	00c0      	lsls	r0, r0, #3
 8016446:	fb18 f806 	smulbb	r8, r8, r6
 801644a:	fb15 f506 	smulbb	r5, r5, r6
 801644e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016452:	b2c0      	uxtb	r0, r0
 8016454:	fa1f fc8c 	uxth.w	ip, ip
 8016458:	fb07 870b 	mla	r7, r7, fp, r8
 801645c:	fb00 500b 	mla	r0, r0, fp, r5
 8016460:	b280      	uxth	r0, r0
 8016462:	b2bf      	uxth	r7, r7
 8016464:	f10c 0501 	add.w	r5, ip, #1
 8016468:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801646c:	f107 0801 	add.w	r8, r7, #1
 8016470:	1c45      	adds	r5, r0, #1
 8016472:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8016476:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 801647a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801647c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016480:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8016484:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8016488:	ea45 0c0c 	orr.w	ip, r5, ip
 801648c:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8016490:	4401      	add	r1, r0
 8016492:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016494:	ea4c 0c08 	orr.w	ip, ip, r8
 8016498:	f82a cb02 	strh.w	ip, [sl], #2
 801649c:	4402      	add	r2, r0
 801649e:	f109 39ff 	add.w	r9, r9, #4294967295
 80164a2:	e7af      	b.n	8016404 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80164a4:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80164a8:	f04f 0800 	mov.w	r8, #0
 80164ac:	eb03 0008 	add.w	r0, r3, r8
 80164b0:	2800      	cmp	r0, #0
 80164b2:	dc41      	bgt.n	8016538 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80164b4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80164b8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80164bc:	9b00      	ldr	r3, [sp, #0]
 80164be:	2b00      	cmp	r3, #0
 80164c0:	f340 8095 	ble.w	80165ee <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80164c4:	ee30 0a04 	vadd.f32	s0, s0, s8
 80164c8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80164cc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80164d0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80164d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80164d6:	ee31 1a05 	vadd.f32	s2, s2, s10
 80164da:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80164de:	eef0 6a62 	vmov.f32	s13, s5
 80164e2:	ee61 7a27 	vmul.f32	s15, s2, s15
 80164e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80164ea:	ee77 2a62 	vsub.f32	s5, s14, s5
 80164ee:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 80164f2:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80164f6:	eef0 6a43 	vmov.f32	s13, s6
 80164fa:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80164fe:	ee12 2a90 	vmov	r2, s5
 8016502:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016506:	fb92 f3f3 	sdiv	r3, r2, r3
 801650a:	ee13 2a10 	vmov	r2, s6
 801650e:	9311      	str	r3, [sp, #68]	; 0x44
 8016510:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016512:	fb92 f3f3 	sdiv	r3, r2, r3
 8016516:	9312      	str	r3, [sp, #72]	; 0x48
 8016518:	9b00      	ldr	r3, [sp, #0]
 801651a:	9a03      	ldr	r2, [sp, #12]
 801651c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016520:	3b01      	subs	r3, #1
 8016522:	9300      	str	r3, [sp, #0]
 8016524:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 8016528:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801652a:	eeb0 3a67 	vmov.f32	s6, s15
 801652e:	bf08      	it	eq
 8016530:	4613      	moveq	r3, r2
 8016532:	eef0 2a47 	vmov.f32	s5, s14
 8016536:	e72f      	b.n	8016398 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8016538:	140f      	asrs	r7, r1, #16
 801653a:	d451      	bmi.n	80165e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801653c:	f8de 5008 	ldr.w	r5, [lr, #8]
 8016540:	42bd      	cmp	r5, r7
 8016542:	dd4d      	ble.n	80165e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016544:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016548:	d44a      	bmi.n	80165e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801654a:	f8de 000c 	ldr.w	r0, [lr, #12]
 801654e:	4560      	cmp	r0, ip
 8016550:	dd46      	ble.n	80165e0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8016552:	b22d      	sxth	r5, r5
 8016554:	fb0c 7505 	mla	r5, ip, r5, r7
 8016558:	9802      	ldr	r0, [sp, #8]
 801655a:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 801655e:	f06f 0501 	mvn.w	r5, #1
 8016562:	fb05 fb08 	mul.w	fp, r5, r8
 8016566:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801656a:	f834 500b 	ldrh.w	r5, [r4, fp]
 801656e:	122f      	asrs	r7, r5, #8
 8016570:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016574:	fb17 f706 	smulbb	r7, r7, r6
 8016578:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801657c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016580:	00ed      	lsls	r5, r5, #3
 8016582:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8016586:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801658a:	10c7      	asrs	r7, r0, #3
 801658c:	b2ed      	uxtb	r5, r5
 801658e:	00c0      	lsls	r0, r0, #3
 8016590:	fb19 f906 	smulbb	r9, r9, r6
 8016594:	fb15 f506 	smulbb	r5, r5, r6
 8016598:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801659c:	b2c0      	uxtb	r0, r0
 801659e:	fa1f fc8c 	uxth.w	ip, ip
 80165a2:	fb07 970a 	mla	r7, r7, sl, r9
 80165a6:	fb00 500a 	mla	r0, r0, sl, r5
 80165aa:	b2bf      	uxth	r7, r7
 80165ac:	b280      	uxth	r0, r0
 80165ae:	f10c 0501 	add.w	r5, ip, #1
 80165b2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80165b6:	f107 0901 	add.w	r9, r7, #1
 80165ba:	1c45      	adds	r5, r0, #1
 80165bc:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80165c0:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80165c4:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80165c8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80165cc:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80165d0:	ea45 0c0c 	orr.w	ip, r5, ip
 80165d4:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80165d8:	ea4c 0c09 	orr.w	ip, ip, r9
 80165dc:	f824 c00b 	strh.w	ip, [r4, fp]
 80165e0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80165e2:	4401      	add	r1, r0
 80165e4:	9812      	ldr	r0, [sp, #72]	; 0x48
 80165e6:	f108 38ff 	add.w	r8, r8, #4294967295
 80165ea:	4402      	add	r2, r0
 80165ec:	e75e      	b.n	80164ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80165ee:	b005      	add	sp, #20
 80165f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080165f4 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80165f4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80165f8:	b085      	sub	sp, #20
 80165fa:	4693      	mov	fp, r2
 80165fc:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 80165fe:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8016600:	6870      	ldr	r0, [r6, #4]
 8016602:	9101      	str	r1, [sp, #4]
 8016604:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016608:	fb00 2404 	mla	r4, r0, r4, r2
 801660c:	6832      	ldr	r2, [r6, #0]
 801660e:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 8016612:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016616:	682a      	ldr	r2, [r5, #0]
 8016618:	9202      	str	r2, [sp, #8]
 801661a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801661e:	9a01      	ldr	r2, [sp, #4]
 8016620:	2a00      	cmp	r2, #0
 8016622:	dc03      	bgt.n	801662c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016624:	f1bb 0f00 	cmp.w	fp, #0
 8016628:	f340 809a 	ble.w	8016760 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801662c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801662e:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8016632:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8016636:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 801663a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801663c:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016640:	2b00      	cmp	r3, #0
 8016642:	dd0c      	ble.n	801665e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 8016644:	1406      	asrs	r6, r0, #16
 8016646:	d405      	bmi.n	8016654 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016648:	454e      	cmp	r6, r9
 801664a:	da03      	bge.n	8016654 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 801664c:	1416      	asrs	r6, r2, #16
 801664e:	d401      	bmi.n	8016654 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016650:	4546      	cmp	r6, r8
 8016652:	db05      	blt.n	8016660 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016654:	4470      	add	r0, lr
 8016656:	4462      	add	r2, ip
 8016658:	3b01      	subs	r3, #1
 801665a:	3402      	adds	r4, #2
 801665c:	e7f0      	b.n	8016640 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801665e:	d00f      	beq.n	8016680 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8016660:	1e5e      	subs	r6, r3, #1
 8016662:	fb0e 0706 	mla	r7, lr, r6, r0
 8016666:	143f      	asrs	r7, r7, #16
 8016668:	d541      	bpl.n	80166ee <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 801666a:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 801666e:	4698      	mov	r8, r3
 8016670:	9603      	str	r6, [sp, #12]
 8016672:	f1b8 0f00 	cmp.w	r8, #0
 8016676:	dc56      	bgt.n	8016726 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8016678:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801667c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016680:	9b01      	ldr	r3, [sp, #4]
 8016682:	2b00      	cmp	r3, #0
 8016684:	dd6c      	ble.n	8016760 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8016686:	ee30 0a04 	vadd.f32	s0, s0, s8
 801668a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801668e:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016692:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016694:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016698:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801669c:	eeb0 6a62 	vmov.f32	s12, s5
 80166a0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80166a4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80166a8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80166ac:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 80166b0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80166b4:	eeb0 6a43 	vmov.f32	s12, s6
 80166b8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80166bc:	ee12 2a90 	vmov	r2, s5
 80166c0:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80166c4:	fb92 fef3 	sdiv	lr, r2, r3
 80166c8:	ee13 2a10 	vmov	r2, s6
 80166cc:	fb92 fcf3 	sdiv	ip, r2, r3
 80166d0:	9b01      	ldr	r3, [sp, #4]
 80166d2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80166d6:	3b01      	subs	r3, #1
 80166d8:	9301      	str	r3, [sp, #4]
 80166da:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 80166de:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80166e0:	eeb0 3a67 	vmov.f32	s6, s15
 80166e4:	bf08      	it	eq
 80166e6:	465b      	moveq	r3, fp
 80166e8:	eef0 2a47 	vmov.f32	s5, s14
 80166ec:	e797      	b.n	801661e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80166ee:	454f      	cmp	r7, r9
 80166f0:	dabb      	bge.n	801666a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80166f2:	fb0c 2606 	mla	r6, ip, r6, r2
 80166f6:	1436      	asrs	r6, r6, #16
 80166f8:	d4b7      	bmi.n	801666a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80166fa:	4546      	cmp	r6, r8
 80166fc:	dab5      	bge.n	801666a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80166fe:	461e      	mov	r6, r3
 8016700:	46a0      	mov	r8, r4
 8016702:	2e00      	cmp	r6, #0
 8016704:	ddb8      	ble.n	8016678 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8016706:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 801670a:	9902      	ldr	r1, [sp, #8]
 801670c:	1417      	asrs	r7, r2, #16
 801670e:	ea4f 4920 	mov.w	r9, r0, asr #16
 8016712:	fb0a 9707 	mla	r7, sl, r7, r9
 8016716:	4470      	add	r0, lr
 8016718:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 801671c:	f828 7b02 	strh.w	r7, [r8], #2
 8016720:	4462      	add	r2, ip
 8016722:	3e01      	subs	r6, #1
 8016724:	e7ed      	b.n	8016702 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8016726:	ea5f 4920 	movs.w	r9, r0, asr #16
 801672a:	d414      	bmi.n	8016756 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801672c:	68ae      	ldr	r6, [r5, #8]
 801672e:	454e      	cmp	r6, r9
 8016730:	dd11      	ble.n	8016756 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016732:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8016736:	d40e      	bmi.n	8016756 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8016738:	68ef      	ldr	r7, [r5, #12]
 801673a:	4557      	cmp	r7, sl
 801673c:	dd0b      	ble.n	8016756 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801673e:	b236      	sxth	r6, r6
 8016740:	fb0a 9606 	mla	r6, sl, r6, r9
 8016744:	9f02      	ldr	r7, [sp, #8]
 8016746:	f06f 0101 	mvn.w	r1, #1
 801674a:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 801674e:	fb01 f608 	mul.w	r6, r1, r8
 8016752:	9903      	ldr	r1, [sp, #12]
 8016754:	538f      	strh	r7, [r1, r6]
 8016756:	4470      	add	r0, lr
 8016758:	4462      	add	r2, ip
 801675a:	f108 38ff 	add.w	r8, r8, #4294967295
 801675e:	e788      	b.n	8016672 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8016760:	b005      	add	sp, #20
 8016762:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016766 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016766:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801676a:	b087      	sub	sp, #28
 801676c:	468b      	mov	fp, r1
 801676e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016770:	9203      	str	r2, [sp, #12]
 8016772:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016776:	9204      	str	r2, [sp, #16]
 8016778:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	; 0x58
 801677c:	6841      	ldr	r1, [r0, #4]
 801677e:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016782:	fb01 2505 	mla	r5, r1, r5, r2
 8016786:	6802      	ldr	r2, [r0, #0]
 8016788:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801678c:	f8d9 2000 	ldr.w	r2, [r9]
 8016790:	9201      	str	r2, [sp, #4]
 8016792:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016796:	f1bb 0f00 	cmp.w	fp, #0
 801679a:	dc03      	bgt.n	80167a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801679c:	9a03      	ldr	r2, [sp, #12]
 801679e:	2a00      	cmp	r2, #0
 80167a0:	f340 8159 	ble.w	8016a56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80167a4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80167a6:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80167aa:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80167ae:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80167b2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80167b4:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80167b8:	2b00      	cmp	r3, #0
 80167ba:	dd0e      	ble.n	80167da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80167bc:	1402      	asrs	r2, r0, #16
 80167be:	d405      	bmi.n	80167cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80167c0:	42ba      	cmp	r2, r7
 80167c2:	da03      	bge.n	80167cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80167c4:	140a      	asrs	r2, r1, #16
 80167c6:	d401      	bmi.n	80167cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80167c8:	42b2      	cmp	r2, r6
 80167ca:	db07      	blt.n	80167dc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80167cc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80167ce:	4410      	add	r0, r2
 80167d0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80167d2:	3b01      	subs	r3, #1
 80167d4:	4411      	add	r1, r2
 80167d6:	3502      	adds	r5, #2
 80167d8:	e7ee      	b.n	80167b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80167da:	d017      	beq.n	801680c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80167dc:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80167de:	1e5a      	subs	r2, r3, #1
 80167e0:	fb04 0402 	mla	r4, r4, r2, r0
 80167e4:	1424      	asrs	r4, r4, #16
 80167e6:	d409      	bmi.n	80167fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80167e8:	42bc      	cmp	r4, r7
 80167ea:	da07      	bge.n	80167fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80167ec:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80167ee:	fb04 1202 	mla	r2, r4, r2, r1
 80167f2:	1412      	asrs	r2, r2, #16
 80167f4:	d402      	bmi.n	80167fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80167f6:	42b2      	cmp	r2, r6
 80167f8:	f2c0 80bf 	blt.w	801697a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80167fc:	2700      	movs	r7, #0
 80167fe:	19da      	adds	r2, r3, r7
 8016800:	2a00      	cmp	r2, #0
 8016802:	dc3e      	bgt.n	8016882 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8016804:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016808:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801680c:	f1bb 0f00 	cmp.w	fp, #0
 8016810:	f340 8121 	ble.w	8016a56 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8016814:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016818:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801681c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016820:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016822:	f1bb 0b01 	subs.w	fp, fp, #1
 8016826:	ee31 1a05 	vadd.f32	s2, s2, s10
 801682a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801682e:	eeb0 6a62 	vmov.f32	s12, s5
 8016832:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016836:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801683a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801683e:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016842:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016846:	eeb0 6a43 	vmov.f32	s12, s6
 801684a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801684e:	ee12 2a90 	vmov	r2, s5
 8016852:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016856:	fb92 f3f3 	sdiv	r3, r2, r3
 801685a:	ee13 2a10 	vmov	r2, s6
 801685e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016862:	9313      	str	r3, [sp, #76]	; 0x4c
 8016864:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016866:	fb92 f3f3 	sdiv	r3, r2, r3
 801686a:	9a03      	ldr	r2, [sp, #12]
 801686c:	9314      	str	r3, [sp, #80]	; 0x50
 801686e:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016872:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016874:	eeb0 3a67 	vmov.f32	s6, s15
 8016878:	bf08      	it	eq
 801687a:	4613      	moveq	r3, r2
 801687c:	eef0 2a47 	vmov.f32	s5, s14
 8016880:	e789      	b.n	8016796 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8016882:	1406      	asrs	r6, r0, #16
 8016884:	d42d      	bmi.n	80168e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016886:	f8d9 4008 	ldr.w	r4, [r9, #8]
 801688a:	42b4      	cmp	r4, r6
 801688c:	dd29      	ble.n	80168e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801688e:	ea5f 4c21 	movs.w	ip, r1, asr #16
 8016892:	d426      	bmi.n	80168e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8016894:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8016898:	4562      	cmp	r2, ip
 801689a:	dd22      	ble.n	80168e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801689c:	b224      	sxth	r4, r4
 801689e:	9a01      	ldr	r2, [sp, #4]
 80168a0:	fb0c 6404 	mla	r4, ip, r4, r6
 80168a4:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80168a8:	0e22      	lsrs	r2, r4, #24
 80168aa:	d01a      	beq.n	80168e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80168ac:	9e04      	ldr	r6, [sp, #16]
 80168ae:	4372      	muls	r2, r6
 80168b0:	1c56      	adds	r6, r2, #1
 80168b2:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80168b6:	1212      	asrs	r2, r2, #8
 80168b8:	0a26      	lsrs	r6, r4, #8
 80168ba:	2aff      	cmp	r2, #255	; 0xff
 80168bc:	9605      	str	r6, [sp, #20]
 80168be:	d116      	bne.n	80168ee <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80168c0:	f06f 0201 	mvn.w	r2, #1
 80168c4:	fb02 fc07 	mul.w	ip, r2, r7
 80168c8:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80168cc:	0962      	lsrs	r2, r4, #5
 80168ce:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80168d2:	f026 0607 	bic.w	r6, r6, #7
 80168d6:	4316      	orrs	r6, r2
 80168d8:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80168dc:	4326      	orrs	r6, r4
 80168de:	f825 600c 	strh.w	r6, [r5, ip]
 80168e2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80168e4:	4410      	add	r0, r2
 80168e6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80168e8:	3f01      	subs	r7, #1
 80168ea:	4411      	add	r1, r2
 80168ec:	e787      	b.n	80167fe <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80168ee:	f06f 0601 	mvn.w	r6, #1
 80168f2:	437e      	muls	r6, r7
 80168f4:	fa1f fa82 	uxth.w	sl, r2
 80168f8:	f835 8006 	ldrh.w	r8, [r5, r6]
 80168fc:	9602      	str	r6, [sp, #8]
 80168fe:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016902:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 8016906:	43d2      	mvns	r2, r2
 8016908:	b2d2      	uxtb	r2, r2
 801690a:	fb1c fc0a 	smulbb	ip, ip, sl
 801690e:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016912:	fb0e ce02 	mla	lr, lr, r2, ip
 8016916:	b2e4      	uxtb	r4, r4
 8016918:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 801691c:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016920:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016924:	fa5f f888 	uxtb.w	r8, r8
 8016928:	fb14 f40a 	smulbb	r4, r4, sl
 801692c:	fb08 4402 	mla	r4, r8, r2, r4
 8016930:	fa1f fe8e 	uxth.w	lr, lr
 8016934:	fb16 f60a 	smulbb	r6, r6, sl
 8016938:	b2a4      	uxth	r4, r4
 801693a:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801693e:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016942:	f10e 0201 	add.w	r2, lr, #1
 8016946:	1c66      	adds	r6, r4, #1
 8016948:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 801694c:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016950:	fa1f fc8c 	uxth.w	ip, ip
 8016954:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016958:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 801695c:	ea46 0e0e 	orr.w	lr, r6, lr
 8016960:	f10c 0601 	add.w	r6, ip, #1
 8016964:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016968:	0976      	lsrs	r6, r6, #5
 801696a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801696e:	9a02      	ldr	r2, [sp, #8]
 8016970:	ea4e 0e06 	orr.w	lr, lr, r6
 8016974:	f825 e002 	strh.w	lr, [r5, r2]
 8016978:	e7b3      	b.n	80168e2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801697a:	f04f 0800 	mov.w	r8, #0
 801697e:	eba3 0208 	sub.w	r2, r3, r8
 8016982:	2a00      	cmp	r2, #0
 8016984:	f77f af3e 	ble.w	8016804 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8016988:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 801698c:	1404      	asrs	r4, r0, #16
 801698e:	140a      	asrs	r2, r1, #16
 8016990:	fb06 4202 	mla	r2, r6, r2, r4
 8016994:	9c01      	ldr	r4, [sp, #4]
 8016996:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 801699a:	0e22      	lsrs	r2, r4, #24
 801699c:	d016      	beq.n	80169cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801699e:	9e04      	ldr	r6, [sp, #16]
 80169a0:	4372      	muls	r2, r6
 80169a2:	1c56      	adds	r6, r2, #1
 80169a4:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80169a8:	1212      	asrs	r2, r2, #8
 80169aa:	2aff      	cmp	r2, #255	; 0xff
 80169ac:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80169b0:	d113      	bne.n	80169da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80169b2:	0962      	lsrs	r2, r4, #5
 80169b4:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 80169b8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80169bc:	f026 0607 	bic.w	r6, r6, #7
 80169c0:	4316      	orrs	r6, r2
 80169c2:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80169c6:	4326      	orrs	r6, r4
 80169c8:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80169cc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80169ce:	4410      	add	r0, r2
 80169d0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80169d2:	f108 0801 	add.w	r8, r8, #1
 80169d6:	4411      	add	r1, r2
 80169d8:	e7d1      	b.n	801697e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80169da:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80169de:	fa1f fa82 	uxth.w	sl, r2
 80169e2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80169e6:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80169ea:	43d2      	mvns	r2, r2
 80169ec:	b2d2      	uxtb	r2, r2
 80169ee:	fb17 f70a 	smulbb	r7, r7, sl
 80169f2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80169f6:	fb0c 7c02 	mla	ip, ip, r2, r7
 80169fa:	b2e4      	uxtb	r4, r4
 80169fc:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016a00:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016a04:	fa5f fe8e 	uxtb.w	lr, lr
 8016a08:	fb14 f40a 	smulbb	r4, r4, sl
 8016a0c:	fb0e 4402 	mla	r4, lr, r2, r4
 8016a10:	b2f6      	uxtb	r6, r6
 8016a12:	fa1f fc8c 	uxth.w	ip, ip
 8016a16:	fb16 f60a 	smulbb	r6, r6, sl
 8016a1a:	b2a4      	uxth	r4, r4
 8016a1c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016a20:	fb07 6702 	mla	r7, r7, r2, r6
 8016a24:	f10c 0201 	add.w	r2, ip, #1
 8016a28:	1c66      	adds	r6, r4, #1
 8016a2a:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8016a2e:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8016a32:	b2bf      	uxth	r7, r7
 8016a34:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016a38:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016a3c:	ea46 0c0c 	orr.w	ip, r6, ip
 8016a40:	1c7e      	adds	r6, r7, #1
 8016a42:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8016a46:	0976      	lsrs	r6, r6, #5
 8016a48:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016a4c:	ea4c 0c06 	orr.w	ip, ip, r6
 8016a50:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 8016a54:	e7ba      	b.n	80169cc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8016a56:	b007      	add	sp, #28
 8016a58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016a5c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016a5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016a60:	b085      	sub	sp, #20
 8016a62:	468b      	mov	fp, r1
 8016a64:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8016a66:	9203      	str	r2, [sp, #12]
 8016a68:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 8016a6c:	6841      	ldr	r1, [r0, #4]
 8016a6e:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 8016a72:	fb01 2404 	mla	r4, r1, r4, r2
 8016a76:	6802      	ldr	r2, [r0, #0]
 8016a78:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016a7c:	f8d8 2000 	ldr.w	r2, [r8]
 8016a80:	9201      	str	r2, [sp, #4]
 8016a82:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016a86:	f1bb 0f00 	cmp.w	fp, #0
 8016a8a:	dc03      	bgt.n	8016a94 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8016a8c:	9a03      	ldr	r2, [sp, #12]
 8016a8e:	2a00      	cmp	r2, #0
 8016a90:	f340 814f 	ble.w	8016d32 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8016a94:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016a96:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8016a9a:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8016a9e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016aa2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016aa4:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 8016aa8:	2b00      	cmp	r3, #0
 8016aaa:	dd0e      	ble.n	8016aca <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8016aac:	1408      	asrs	r0, r1, #16
 8016aae:	d405      	bmi.n	8016abc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016ab0:	42b8      	cmp	r0, r7
 8016ab2:	da03      	bge.n	8016abc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016ab4:	1410      	asrs	r0, r2, #16
 8016ab6:	d401      	bmi.n	8016abc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8016ab8:	42b0      	cmp	r0, r6
 8016aba:	db07      	blt.n	8016acc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8016abc:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016abe:	4401      	add	r1, r0
 8016ac0:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016ac2:	3b01      	subs	r3, #1
 8016ac4:	4402      	add	r2, r0
 8016ac6:	3402      	adds	r4, #2
 8016ac8:	e7ee      	b.n	8016aa8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8016aca:	d017      	beq.n	8016afc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016acc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8016ace:	1e58      	subs	r0, r3, #1
 8016ad0:	fb05 1500 	mla	r5, r5, r0, r1
 8016ad4:	142d      	asrs	r5, r5, #16
 8016ad6:	d409      	bmi.n	8016aec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016ad8:	42bd      	cmp	r5, r7
 8016ada:	da07      	bge.n	8016aec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016adc:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8016ade:	fb05 2000 	mla	r0, r5, r0, r2
 8016ae2:	1400      	asrs	r0, r0, #16
 8016ae4:	d402      	bmi.n	8016aec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8016ae6:	42b0      	cmp	r0, r6
 8016ae8:	f2c0 80ba 	blt.w	8016c60 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8016aec:	2600      	movs	r6, #0
 8016aee:	1998      	adds	r0, r3, r6
 8016af0:	2800      	cmp	r0, #0
 8016af2:	dc3e      	bgt.n	8016b72 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8016af4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016af8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016afc:	f1bb 0f00 	cmp.w	fp, #0
 8016b00:	f340 8117 	ble.w	8016d32 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 8016b04:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016b08:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016b0c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016b10:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016b12:	f1bb 0b01 	subs.w	fp, fp, #1
 8016b16:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016b1a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016b1e:	eeb0 6a62 	vmov.f32	s12, s5
 8016b22:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016b26:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016b2a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016b2e:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 8016b32:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016b36:	eeb0 6a43 	vmov.f32	s12, s6
 8016b3a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016b3e:	ee12 2a90 	vmov	r2, s5
 8016b42:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016b46:	fb92 f3f3 	sdiv	r3, r2, r3
 8016b4a:	ee13 2a10 	vmov	r2, s6
 8016b4e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016b52:	9311      	str	r3, [sp, #68]	; 0x44
 8016b54:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016b56:	fb92 f3f3 	sdiv	r3, r2, r3
 8016b5a:	9a03      	ldr	r2, [sp, #12]
 8016b5c:	9312      	str	r3, [sp, #72]	; 0x48
 8016b5e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 8016b62:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016b64:	eeb0 3a67 	vmov.f32	s6, s15
 8016b68:	bf08      	it	eq
 8016b6a:	4613      	moveq	r3, r2
 8016b6c:	eef0 2a47 	vmov.f32	s5, s14
 8016b70:	e789      	b.n	8016a86 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8016b72:	140f      	asrs	r7, r1, #16
 8016b74:	d424      	bmi.n	8016bc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016b76:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8016b7a:	42bd      	cmp	r5, r7
 8016b7c:	dd20      	ble.n	8016bc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016b7e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8016b82:	d41d      	bmi.n	8016bc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016b84:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8016b88:	4560      	cmp	r0, ip
 8016b8a:	dd19      	ble.n	8016bc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016b8c:	b22d      	sxth	r5, r5
 8016b8e:	fb0c 7505 	mla	r5, ip, r5, r7
 8016b92:	9801      	ldr	r0, [sp, #4]
 8016b94:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8016b98:	0e07      	lsrs	r7, r0, #24
 8016b9a:	2fff      	cmp	r7, #255	; 0xff
 8016b9c:	d116      	bne.n	8016bcc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8016b9e:	f06f 0501 	mvn.w	r5, #1
 8016ba2:	fb05 f706 	mul.w	r7, r5, r6
 8016ba6:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 8016baa:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 8016bae:	0945      	lsrs	r5, r0, #5
 8016bb0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8016bb4:	ea4c 0505 	orr.w	r5, ip, r5
 8016bb8:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8016bbc:	4305      	orrs	r5, r0
 8016bbe:	53e5      	strh	r5, [r4, r7]
 8016bc0:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016bc2:	4401      	add	r1, r0
 8016bc4:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016bc6:	3e01      	subs	r6, #1
 8016bc8:	4402      	add	r2, r0
 8016bca:	e790      	b.n	8016aee <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8016bcc:	b2fd      	uxtb	r5, r7
 8016bce:	2f00      	cmp	r7, #0
 8016bd0:	d0f6      	beq.n	8016bc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016bd2:	f06f 0701 	mvn.w	r7, #1
 8016bd6:	4377      	muls	r7, r6
 8016bd8:	fa1f f985 	uxth.w	r9, r5
 8016bdc:	f834 e007 	ldrh.w	lr, [r4, r7]
 8016be0:	9702      	str	r7, [sp, #8]
 8016be2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016be6:	f3c0 4707 	ubfx	r7, r0, #16, #8
 8016bea:	43ed      	mvns	r5, r5
 8016bec:	b2ed      	uxtb	r5, r5
 8016bee:	fb17 f709 	smulbb	r7, r7, r9
 8016bf2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016bf6:	fb0c 7c05 	mla	ip, ip, r5, r7
 8016bfa:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8016bfe:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8016c02:	b2c0      	uxtb	r0, r0
 8016c04:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8016c08:	fa5f fe8e 	uxtb.w	lr, lr
 8016c0c:	fb10 f009 	smulbb	r0, r0, r9
 8016c10:	fb0e 0005 	mla	r0, lr, r5, r0
 8016c14:	b280      	uxth	r0, r0
 8016c16:	fa1f fc8c 	uxth.w	ip, ip
 8016c1a:	fb1a fa09 	smulbb	sl, sl, r9
 8016c1e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8016c22:	fb07 a705 	mla	r7, r7, r5, sl
 8016c26:	f100 0a01 	add.w	sl, r0, #1
 8016c2a:	f10c 0501 	add.w	r5, ip, #1
 8016c2e:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8016c32:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8016c36:	b2bf      	uxth	r7, r7
 8016c38:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016c3c:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8016c40:	ea4a 0c0c 	orr.w	ip, sl, ip
 8016c44:	f107 0a01 	add.w	sl, r7, #1
 8016c48:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8016c4c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016c50:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016c54:	9802      	ldr	r0, [sp, #8]
 8016c56:	ea4c 0c0a 	orr.w	ip, ip, sl
 8016c5a:	f824 c000 	strh.w	ip, [r4, r0]
 8016c5e:	e7af      	b.n	8016bc0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8016c60:	f04f 0e00 	mov.w	lr, #0
 8016c64:	eba3 000e 	sub.w	r0, r3, lr
 8016c68:	2800      	cmp	r0, #0
 8016c6a:	f77f af43 	ble.w	8016af4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8016c6e:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8016c72:	140d      	asrs	r5, r1, #16
 8016c74:	1410      	asrs	r0, r2, #16
 8016c76:	fb06 5000 	mla	r0, r6, r0, r5
 8016c7a:	9d01      	ldr	r5, [sp, #4]
 8016c7c:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8016c80:	0e2e      	lsrs	r6, r5, #24
 8016c82:	2eff      	cmp	r6, #255	; 0xff
 8016c84:	d112      	bne.n	8016cac <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8016c86:	482c      	ldr	r0, [pc, #176]	; (8016d38 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8016c88:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8016c8c:	0968      	lsrs	r0, r5, #5
 8016c8e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016c92:	4330      	orrs	r0, r6
 8016c94:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016c98:	4328      	orrs	r0, r5
 8016c9a:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8016c9e:	9811      	ldr	r0, [sp, #68]	; 0x44
 8016ca0:	4401      	add	r1, r0
 8016ca2:	9812      	ldr	r0, [sp, #72]	; 0x48
 8016ca4:	f10e 0e01 	add.w	lr, lr, #1
 8016ca8:	4402      	add	r2, r0
 8016caa:	e7db      	b.n	8016c64 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8016cac:	b2f0      	uxtb	r0, r6
 8016cae:	2e00      	cmp	r6, #0
 8016cb0:	d0f5      	beq.n	8016c9e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8016cb2:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8016cb6:	fa1f f980 	uxth.w	r9, r0
 8016cba:	ea4f 272c 	mov.w	r7, ip, asr #8
 8016cbe:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8016cc2:	43c0      	mvns	r0, r0
 8016cc4:	b2c0      	uxtb	r0, r0
 8016cc6:	fb16 f609 	smulbb	r6, r6, r9
 8016cca:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8016cce:	fb07 6700 	mla	r7, r7, r0, r6
 8016cd2:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8016cd6:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8016cda:	b2ed      	uxtb	r5, r5
 8016cdc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8016ce0:	fa5f fc8c 	uxtb.w	ip, ip
 8016ce4:	fb15 f509 	smulbb	r5, r5, r9
 8016ce8:	fb0c 5500 	mla	r5, ip, r0, r5
 8016cec:	b2bf      	uxth	r7, r7
 8016cee:	fb1a fa09 	smulbb	sl, sl, r9
 8016cf2:	b2ad      	uxth	r5, r5
 8016cf4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016cf8:	fb06 a600 	mla	r6, r6, r0, sl
 8016cfc:	1c78      	adds	r0, r7, #1
 8016cfe:	f105 0a01 	add.w	sl, r5, #1
 8016d02:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8016d06:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8016d0a:	b2b6      	uxth	r6, r6
 8016d0c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8016d10:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 8016d14:	ea4a 0707 	orr.w	r7, sl, r7
 8016d18:	f106 0a01 	add.w	sl, r6, #1
 8016d1c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8016d20:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8016d24:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8016d28:	ea47 070a 	orr.w	r7, r7, sl
 8016d2c:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8016d30:	e7b5      	b.n	8016c9e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8016d32:	b005      	add	sp, #20
 8016d34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016d38:	fffff800 	.word	0xfffff800

08016d3c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016d3c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016d40:	b087      	sub	sp, #28
 8016d42:	468b      	mov	fp, r1
 8016d44:	9815      	ldr	r0, [sp, #84]	; 0x54
 8016d46:	9203      	str	r2, [sp, #12]
 8016d48:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 8016d4c:	9204      	str	r2, [sp, #16]
 8016d4e:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8016d52:	6841      	ldr	r1, [r0, #4]
 8016d54:	f8dd 9060 	ldr.w	r9, [sp, #96]	; 0x60
 8016d58:	fb01 2404 	mla	r4, r1, r4, r2
 8016d5c:	6802      	ldr	r2, [r0, #0]
 8016d5e:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8016d62:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8016d66:	3201      	adds	r2, #1
 8016d68:	f022 0201 	bic.w	r2, r2, #1
 8016d6c:	9200      	str	r2, [sp, #0]
 8016d6e:	f8d9 2000 	ldr.w	r2, [r9]
 8016d72:	9201      	str	r2, [sp, #4]
 8016d74:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8016d78:	f1bb 0f00 	cmp.w	fp, #0
 8016d7c:	dc03      	bgt.n	8016d86 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8016d7e:	9a03      	ldr	r2, [sp, #12]
 8016d80:	2a00      	cmp	r2, #0
 8016d82:	f340 8169 	ble.w	8017058 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8016d86:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8016d88:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8016d8c:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8016d90:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 8016d94:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8016d96:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 8016d9a:	2b00      	cmp	r3, #0
 8016d9c:	dd0e      	ble.n	8016dbc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8016d9e:	1402      	asrs	r2, r0, #16
 8016da0:	d405      	bmi.n	8016dae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016da2:	42ba      	cmp	r2, r7
 8016da4:	da03      	bge.n	8016dae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016da6:	140a      	asrs	r2, r1, #16
 8016da8:	d401      	bmi.n	8016dae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8016daa:	42b2      	cmp	r2, r6
 8016dac:	db07      	blt.n	8016dbe <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8016dae:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016db0:	4410      	add	r0, r2
 8016db2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016db4:	3b01      	subs	r3, #1
 8016db6:	4411      	add	r1, r2
 8016db8:	3402      	adds	r4, #2
 8016dba:	e7ee      	b.n	8016d9a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8016dbc:	d017      	beq.n	8016dee <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8016dbe:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8016dc0:	1e5a      	subs	r2, r3, #1
 8016dc2:	fb05 0502 	mla	r5, r5, r2, r0
 8016dc6:	142d      	asrs	r5, r5, #16
 8016dc8:	d409      	bmi.n	8016dde <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016dca:	42bd      	cmp	r5, r7
 8016dcc:	da07      	bge.n	8016dde <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016dce:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8016dd0:	fb05 1202 	mla	r2, r5, r2, r1
 8016dd4:	1412      	asrs	r2, r2, #16
 8016dd6:	d402      	bmi.n	8016dde <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8016dd8:	42b2      	cmp	r2, r6
 8016dda:	f2c0 80c7 	blt.w	8016f6c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8016dde:	2700      	movs	r7, #0
 8016de0:	19da      	adds	r2, r3, r7
 8016de2:	2a00      	cmp	r2, #0
 8016de4:	dc3e      	bgt.n	8016e64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8016de6:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8016dea:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8016dee:	f1bb 0f00 	cmp.w	fp, #0
 8016df2:	f340 8131 	ble.w	8017058 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8016df6:	ee30 0a04 	vadd.f32	s0, s0, s8
 8016dfa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8016dfe:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8016e02:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016e04:	f1bb 0b01 	subs.w	fp, fp, #1
 8016e08:	ee31 1a05 	vadd.f32	s2, s2, s10
 8016e0c:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8016e10:	eeb0 6a62 	vmov.f32	s12, s5
 8016e14:	ee61 7a27 	vmul.f32	s15, s2, s15
 8016e18:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016e1c:	ee77 2a62 	vsub.f32	s5, s14, s5
 8016e20:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8016e24:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8016e28:	eeb0 6a43 	vmov.f32	s12, s6
 8016e2c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8016e30:	ee12 2a90 	vmov	r2, s5
 8016e34:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8016e38:	fb92 f3f3 	sdiv	r3, r2, r3
 8016e3c:	ee13 2a10 	vmov	r2, s6
 8016e40:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8016e44:	9313      	str	r3, [sp, #76]	; 0x4c
 8016e46:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016e48:	fb92 f3f3 	sdiv	r3, r2, r3
 8016e4c:	9a03      	ldr	r2, [sp, #12]
 8016e4e:	9314      	str	r3, [sp, #80]	; 0x50
 8016e50:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 8016e54:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8016e56:	eeb0 3a67 	vmov.f32	s6, s15
 8016e5a:	bf08      	it	eq
 8016e5c:	4613      	moveq	r3, r2
 8016e5e:	eef0 2a47 	vmov.f32	s5, s14
 8016e62:	e789      	b.n	8016d78 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8016e64:	1405      	asrs	r5, r0, #16
 8016e66:	d435      	bmi.n	8016ed4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016e68:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8016e6c:	42aa      	cmp	r2, r5
 8016e6e:	dd31      	ble.n	8016ed4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016e70:	140e      	asrs	r6, r1, #16
 8016e72:	d42f      	bmi.n	8016ed4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016e74:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8016e78:	42b2      	cmp	r2, r6
 8016e7a:	dd2b      	ble.n	8016ed4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016e7c:	9a00      	ldr	r2, [sp, #0]
 8016e7e:	fb06 5502 	mla	r5, r6, r2, r5
 8016e82:	086a      	lsrs	r2, r5, #1
 8016e84:	9e01      	ldr	r6, [sp, #4]
 8016e86:	5cb2      	ldrb	r2, [r6, r2]
 8016e88:	07ee      	lsls	r6, r5, #31
 8016e8a:	bf54      	ite	pl
 8016e8c:	f002 020f 	andpl.w	r2, r2, #15
 8016e90:	1112      	asrmi	r2, r2, #4
 8016e92:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016e96:	b2d2      	uxtb	r2, r2
 8016e98:	b1e2      	cbz	r2, 8016ed4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016e9a:	9d04      	ldr	r5, [sp, #16]
 8016e9c:	436a      	muls	r2, r5
 8016e9e:	1c55      	adds	r5, r2, #1
 8016ea0:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016ea4:	4d6e      	ldr	r5, [pc, #440]	; (8017060 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8016ea6:	682d      	ldr	r5, [r5, #0]
 8016ea8:	1212      	asrs	r2, r2, #8
 8016eaa:	0a2e      	lsrs	r6, r5, #8
 8016eac:	2aff      	cmp	r2, #255	; 0xff
 8016eae:	9605      	str	r6, [sp, #20]
 8016eb0:	d116      	bne.n	8016ee0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8016eb2:	f06f 0201 	mvn.w	r2, #1
 8016eb6:	fb02 fc07 	mul.w	ip, r2, r7
 8016eba:	f426 66ff 	bic.w	r6, r6, #2040	; 0x7f8
 8016ebe:	096a      	lsrs	r2, r5, #5
 8016ec0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016ec4:	f026 0607 	bic.w	r6, r6, #7
 8016ec8:	4316      	orrs	r6, r2
 8016eca:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8016ece:	432e      	orrs	r6, r5
 8016ed0:	f824 600c 	strh.w	r6, [r4, ip]
 8016ed4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016ed6:	4410      	add	r0, r2
 8016ed8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016eda:	3f01      	subs	r7, #1
 8016edc:	4411      	add	r1, r2
 8016ede:	e77f      	b.n	8016de0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8016ee0:	f06f 0601 	mvn.w	r6, #1
 8016ee4:	437e      	muls	r6, r7
 8016ee6:	fa1f fa82 	uxth.w	sl, r2
 8016eea:	f834 8006 	ldrh.w	r8, [r4, r6]
 8016eee:	9602      	str	r6, [sp, #8]
 8016ef0:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8016ef4:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8016ef8:	43d2      	mvns	r2, r2
 8016efa:	b2d2      	uxtb	r2, r2
 8016efc:	fb1c fc0a 	smulbb	ip, ip, sl
 8016f00:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8016f04:	fb0e ce02 	mla	lr, lr, r2, ip
 8016f08:	b2ed      	uxtb	r5, r5
 8016f0a:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8016f0e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8016f12:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8016f16:	fa5f f888 	uxtb.w	r8, r8
 8016f1a:	fb15 f50a 	smulbb	r5, r5, sl
 8016f1e:	fb08 5502 	mla	r5, r8, r2, r5
 8016f22:	fa1f fe8e 	uxth.w	lr, lr
 8016f26:	fb16 f60a 	smulbb	r6, r6, sl
 8016f2a:	b2ad      	uxth	r5, r5
 8016f2c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016f30:	fb0c 6c02 	mla	ip, ip, r2, r6
 8016f34:	f10e 0201 	add.w	r2, lr, #1
 8016f38:	1c6e      	adds	r6, r5, #1
 8016f3a:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8016f3e:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8016f42:	fa1f fc8c 	uxth.w	ip, ip
 8016f46:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8016f4a:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 8016f4e:	ea46 0e0e 	orr.w	lr, r6, lr
 8016f52:	f10c 0601 	add.w	r6, ip, #1
 8016f56:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8016f5a:	0976      	lsrs	r6, r6, #5
 8016f5c:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8016f60:	9a02      	ldr	r2, [sp, #8]
 8016f62:	ea4e 0e06 	orr.w	lr, lr, r6
 8016f66:	f824 e002 	strh.w	lr, [r4, r2]
 8016f6a:	e7b3      	b.n	8016ed4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8016f6c:	f04f 0800 	mov.w	r8, #0
 8016f70:	eba3 0208 	sub.w	r2, r3, r8
 8016f74:	2a00      	cmp	r2, #0
 8016f76:	f77f af36 	ble.w	8016de6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8016f7a:	9e00      	ldr	r6, [sp, #0]
 8016f7c:	1402      	asrs	r2, r0, #16
 8016f7e:	140d      	asrs	r5, r1, #16
 8016f80:	fb06 2505 	mla	r5, r6, r5, r2
 8016f84:	086a      	lsrs	r2, r5, #1
 8016f86:	9e01      	ldr	r6, [sp, #4]
 8016f88:	5cb2      	ldrb	r2, [r6, r2]
 8016f8a:	07ed      	lsls	r5, r5, #31
 8016f8c:	bf54      	ite	pl
 8016f8e:	f002 020f 	andpl.w	r2, r2, #15
 8016f92:	1112      	asrmi	r2, r2, #4
 8016f94:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8016f98:	b2d2      	uxtb	r2, r2
 8016f9a:	b1c2      	cbz	r2, 8016fce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8016f9c:	9d04      	ldr	r5, [sp, #16]
 8016f9e:	436a      	muls	r2, r5
 8016fa0:	1c55      	adds	r5, r2, #1
 8016fa2:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8016fa6:	4d2e      	ldr	r5, [pc, #184]	; (8017060 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8016fa8:	1212      	asrs	r2, r2, #8
 8016faa:	682e      	ldr	r6, [r5, #0]
 8016fac:	2aff      	cmp	r2, #255	; 0xff
 8016fae:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8016fb2:	d113      	bne.n	8016fdc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8016fb4:	0972      	lsrs	r2, r6, #5
 8016fb6:	f425 65ff 	bic.w	r5, r5, #2040	; 0x7f8
 8016fba:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016fbe:	f025 0507 	bic.w	r5, r5, #7
 8016fc2:	4315      	orrs	r5, r2
 8016fc4:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8016fc8:	4335      	orrs	r5, r6
 8016fca:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8016fce:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8016fd0:	4410      	add	r0, r2
 8016fd2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8016fd4:	f108 0801 	add.w	r8, r8, #1
 8016fd8:	4411      	add	r1, r2
 8016fda:	e7c9      	b.n	8016f70 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8016fdc:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8016fe0:	fa1f fa82 	uxth.w	sl, r2
 8016fe4:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8016fe8:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8016fec:	43d2      	mvns	r2, r2
 8016fee:	b2d2      	uxtb	r2, r2
 8016ff0:	fb17 f70a 	smulbb	r7, r7, sl
 8016ff4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016ff8:	fb0c 7c02 	mla	ip, ip, r2, r7
 8016ffc:	b2f6      	uxtb	r6, r6
 8016ffe:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8017002:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017006:	fa5f fe8e 	uxtb.w	lr, lr
 801700a:	fb16 f60a 	smulbb	r6, r6, sl
 801700e:	fb0e 6602 	mla	r6, lr, r2, r6
 8017012:	b2ed      	uxtb	r5, r5
 8017014:	fa1f fc8c 	uxth.w	ip, ip
 8017018:	fb15 f50a 	smulbb	r5, r5, sl
 801701c:	b2b6      	uxth	r6, r6
 801701e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8017022:	fb07 5702 	mla	r7, r7, r2, r5
 8017026:	f10c 0201 	add.w	r2, ip, #1
 801702a:	1c75      	adds	r5, r6, #1
 801702c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8017030:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8017034:	b2bf      	uxth	r7, r7
 8017036:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801703a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801703e:	ea45 0c0c 	orr.w	ip, r5, ip
 8017042:	1c7d      	adds	r5, r7, #1
 8017044:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8017048:	096d      	lsrs	r5, r5, #5
 801704a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801704e:	ea4c 0c05 	orr.w	ip, ip, r5
 8017052:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8017056:	e7ba      	b.n	8016fce <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8017058:	b007      	add	sp, #28
 801705a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801705e:	bf00      	nop
 8017060:	20011e50 	.word	0x20011e50

08017064 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017064:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017068:	b087      	sub	sp, #28
 801706a:	f8df 830c 	ldr.w	r8, [pc, #780]	; 8017378 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 801706e:	9815      	ldr	r0, [sp, #84]	; 0x54
 8017070:	9205      	str	r2, [sp, #20]
 8017072:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 8017076:	9101      	str	r1, [sp, #4]
 8017078:	6841      	ldr	r1, [r0, #4]
 801707a:	f8dd b060 	ldr.w	fp, [sp, #96]	; 0x60
 801707e:	fb01 2404 	mla	r4, r1, r4, r2
 8017082:	6802      	ldr	r2, [r0, #0]
 8017084:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017088:	f8db 2008 	ldr.w	r2, [fp, #8]
 801708c:	3201      	adds	r2, #1
 801708e:	f022 0201 	bic.w	r2, r2, #1
 8017092:	9202      	str	r2, [sp, #8]
 8017094:	f8db 2000 	ldr.w	r2, [fp]
 8017098:	9203      	str	r2, [sp, #12]
 801709a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801709e:	9a01      	ldr	r2, [sp, #4]
 80170a0:	2a00      	cmp	r2, #0
 80170a2:	dc03      	bgt.n	80170ac <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80170a4:	9a05      	ldr	r2, [sp, #20]
 80170a6:	2a00      	cmp	r2, #0
 80170a8:	f340 8162 	ble.w	8017370 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 80170ac:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80170ae:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 80170b2:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 80170b6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 80170ba:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80170bc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 80170c0:	2b00      	cmp	r3, #0
 80170c2:	dd0e      	ble.n	80170e2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80170c4:	1402      	asrs	r2, r0, #16
 80170c6:	d405      	bmi.n	80170d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80170c8:	42ba      	cmp	r2, r7
 80170ca:	da03      	bge.n	80170d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80170cc:	140a      	asrs	r2, r1, #16
 80170ce:	d401      	bmi.n	80170d4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80170d0:	42b2      	cmp	r2, r6
 80170d2:	db07      	blt.n	80170e4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 80170d4:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80170d6:	4410      	add	r0, r2
 80170d8:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80170da:	3b01      	subs	r3, #1
 80170dc:	4411      	add	r1, r2
 80170de:	3402      	adds	r4, #2
 80170e0:	e7ee      	b.n	80170c0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80170e2:	d017      	beq.n	8017114 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 80170e4:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 80170e6:	1e5a      	subs	r2, r3, #1
 80170e8:	fb05 0502 	mla	r5, r5, r2, r0
 80170ec:	142d      	asrs	r5, r5, #16
 80170ee:	d409      	bmi.n	8017104 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80170f0:	42bd      	cmp	r5, r7
 80170f2:	da07      	bge.n	8017104 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80170f4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80170f6:	fb05 1202 	mla	r2, r5, r2, r1
 80170fa:	1412      	asrs	r2, r2, #16
 80170fc:	d402      	bmi.n	8017104 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80170fe:	42b2      	cmp	r2, r6
 8017100:	f2c0 80c3 	blt.w	801728a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8017104:	2500      	movs	r5, #0
 8017106:	195a      	adds	r2, r3, r5
 8017108:	2a00      	cmp	r2, #0
 801710a:	dc3f      	bgt.n	801718c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 801710c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017110:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017114:	9b01      	ldr	r3, [sp, #4]
 8017116:	2b00      	cmp	r3, #0
 8017118:	f340 812a 	ble.w	8017370 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801711c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017120:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017124:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017128:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801712a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801712e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017132:	eeb0 6a62 	vmov.f32	s12, s5
 8017136:	ee61 7a27 	vmul.f32	s15, s2, s15
 801713a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801713e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017142:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 8017146:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801714a:	eeb0 6a43 	vmov.f32	s12, s6
 801714e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017152:	ee12 2a90 	vmov	r2, s5
 8017156:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801715a:	fb92 f3f3 	sdiv	r3, r2, r3
 801715e:	ee13 2a10 	vmov	r2, s6
 8017162:	9313      	str	r3, [sp, #76]	; 0x4c
 8017164:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8017166:	fb92 f3f3 	sdiv	r3, r2, r3
 801716a:	9314      	str	r3, [sp, #80]	; 0x50
 801716c:	9b01      	ldr	r3, [sp, #4]
 801716e:	9a05      	ldr	r2, [sp, #20]
 8017170:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017174:	3b01      	subs	r3, #1
 8017176:	9301      	str	r3, [sp, #4]
 8017178:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 801717c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801717e:	eeb0 3a67 	vmov.f32	s6, s15
 8017182:	bf08      	it	eq
 8017184:	4613      	moveq	r3, r2
 8017186:	eef0 2a47 	vmov.f32	s5, s14
 801718a:	e788      	b.n	801709e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801718c:	1406      	asrs	r6, r0, #16
 801718e:	d42c      	bmi.n	80171ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017190:	f8db 2008 	ldr.w	r2, [fp, #8]
 8017194:	42b2      	cmp	r2, r6
 8017196:	dd28      	ble.n	80171ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8017198:	140f      	asrs	r7, r1, #16
 801719a:	d426      	bmi.n	80171ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801719c:	f8db 200c 	ldr.w	r2, [fp, #12]
 80171a0:	42ba      	cmp	r2, r7
 80171a2:	dd22      	ble.n	80171ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80171a4:	9a02      	ldr	r2, [sp, #8]
 80171a6:	fb07 6602 	mla	r6, r7, r2, r6
 80171aa:	0872      	lsrs	r2, r6, #1
 80171ac:	9f03      	ldr	r7, [sp, #12]
 80171ae:	5cba      	ldrb	r2, [r7, r2]
 80171b0:	07f6      	lsls	r6, r6, #31
 80171b2:	bf54      	ite	pl
 80171b4:	f002 020f 	andpl.w	r2, r2, #15
 80171b8:	1112      	asrmi	r2, r2, #4
 80171ba:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80171be:	b2d2      	uxtb	r2, r2
 80171c0:	2aff      	cmp	r2, #255	; 0xff
 80171c2:	d118      	bne.n	80171f6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 80171c4:	f8d8 2000 	ldr.w	r2, [r8]
 80171c8:	f06f 0601 	mvn.w	r6, #1
 80171cc:	fb06 f705 	mul.w	r7, r6, r5
 80171d0:	f2a6 76fe 	subw	r6, r6, #2046	; 0x7fe
 80171d4:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 80171d8:	0956      	lsrs	r6, r2, #5
 80171da:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80171de:	ea4c 0606 	orr.w	r6, ip, r6
 80171e2:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80171e6:	4316      	orrs	r6, r2
 80171e8:	53e6      	strh	r6, [r4, r7]
 80171ea:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80171ec:	4410      	add	r0, r2
 80171ee:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80171f0:	3d01      	subs	r5, #1
 80171f2:	4411      	add	r1, r2
 80171f4:	e787      	b.n	8017106 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 80171f6:	2a00      	cmp	r2, #0
 80171f8:	d0f7      	beq.n	80171ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 80171fa:	f06f 0601 	mvn.w	r6, #1
 80171fe:	436e      	muls	r6, r5
 8017200:	f8d8 c000 	ldr.w	ip, [r8]
 8017204:	f834 e006 	ldrh.w	lr, [r4, r6]
 8017208:	9604      	str	r6, [sp, #16]
 801720a:	fa1f f982 	uxth.w	r9, r2
 801720e:	ea4f 272e 	mov.w	r7, lr, asr #8
 8017212:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8017216:	43d2      	mvns	r2, r2
 8017218:	b2d2      	uxtb	r2, r2
 801721a:	fb16 f609 	smulbb	r6, r6, r9
 801721e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8017222:	fb07 6702 	mla	r7, r7, r2, r6
 8017226:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 801722a:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801722e:	fa5f fc8c 	uxtb.w	ip, ip
 8017232:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8017236:	fa5f fe8e 	uxtb.w	lr, lr
 801723a:	fb1c fc09 	smulbb	ip, ip, r9
 801723e:	fb0e cc02 	mla	ip, lr, r2, ip
 8017242:	b2bf      	uxth	r7, r7
 8017244:	fb1a fa09 	smulbb	sl, sl, r9
 8017248:	fa1f fc8c 	uxth.w	ip, ip
 801724c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017250:	fb06 a602 	mla	r6, r6, r2, sl
 8017254:	1c7a      	adds	r2, r7, #1
 8017256:	f10c 0a01 	add.w	sl, ip, #1
 801725a:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801725e:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8017262:	b2b6      	uxth	r6, r6
 8017264:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8017268:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 801726c:	ea4a 0707 	orr.w	r7, sl, r7
 8017270:	f106 0a01 	add.w	sl, r6, #1
 8017274:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8017278:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801727c:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017280:	9a04      	ldr	r2, [sp, #16]
 8017282:	ea47 070a 	orr.w	r7, r7, sl
 8017286:	52a7      	strh	r7, [r4, r2]
 8017288:	e7af      	b.n	80171ea <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801728a:	f04f 0e00 	mov.w	lr, #0
 801728e:	eba3 020e 	sub.w	r2, r3, lr
 8017292:	2a00      	cmp	r2, #0
 8017294:	f77f af3a 	ble.w	801710c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8017298:	9e02      	ldr	r6, [sp, #8]
 801729a:	1402      	asrs	r2, r0, #16
 801729c:	140d      	asrs	r5, r1, #16
 801729e:	fb06 2505 	mla	r5, r6, r5, r2
 80172a2:	086a      	lsrs	r2, r5, #1
 80172a4:	9e03      	ldr	r6, [sp, #12]
 80172a6:	5cb2      	ldrb	r2, [r6, r2]
 80172a8:	07ed      	lsls	r5, r5, #31
 80172aa:	bf54      	ite	pl
 80172ac:	f002 020f 	andpl.w	r2, r2, #15
 80172b0:	1112      	asrmi	r2, r2, #4
 80172b2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80172b6:	b2d2      	uxtb	r2, r2
 80172b8:	2aff      	cmp	r2, #255	; 0xff
 80172ba:	d115      	bne.n	80172e8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 80172bc:	f8d8 5000 	ldr.w	r5, [r8]
 80172c0:	f6a2 02ff 	subw	r2, r2, #2303	; 0x8ff
 80172c4:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 80172c8:	096a      	lsrs	r2, r5, #5
 80172ca:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80172ce:	4332      	orrs	r2, r6
 80172d0:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 80172d4:	432a      	orrs	r2, r5
 80172d6:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 80172da:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80172dc:	4410      	add	r0, r2
 80172de:	9a14      	ldr	r2, [sp, #80]	; 0x50
 80172e0:	f10e 0e01 	add.w	lr, lr, #1
 80172e4:	4411      	add	r1, r2
 80172e6:	e7d2      	b.n	801728e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 80172e8:	2a00      	cmp	r2, #0
 80172ea:	d0f6      	beq.n	80172da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80172ec:	f8d8 7000 	ldr.w	r7, [r8]
 80172f0:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80172f4:	fa1f f982 	uxth.w	r9, r2
 80172f8:	ea4f 262c 	mov.w	r6, ip, asr #8
 80172fc:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8017300:	43d2      	mvns	r2, r2
 8017302:	b2d2      	uxtb	r2, r2
 8017304:	fb15 f509 	smulbb	r5, r5, r9
 8017308:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801730c:	fb06 5602 	mla	r6, r6, r2, r5
 8017310:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 8017314:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8017318:	b2ff      	uxtb	r7, r7
 801731a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801731e:	fa5f fc8c 	uxtb.w	ip, ip
 8017322:	fb17 f709 	smulbb	r7, r7, r9
 8017326:	fb0c 7702 	mla	r7, ip, r2, r7
 801732a:	b2b6      	uxth	r6, r6
 801732c:	fb1a fa09 	smulbb	sl, sl, r9
 8017330:	b2bf      	uxth	r7, r7
 8017332:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017336:	fb05 a502 	mla	r5, r5, r2, sl
 801733a:	1c72      	adds	r2, r6, #1
 801733c:	f107 0a01 	add.w	sl, r7, #1
 8017340:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8017344:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8017348:	b2ad      	uxth	r5, r5
 801734a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801734e:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 8017352:	ea4a 0606 	orr.w	r6, sl, r6
 8017356:	f105 0a01 	add.w	sl, r5, #1
 801735a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801735e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8017362:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8017366:	ea46 060a 	orr.w	r6, r6, sl
 801736a:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801736e:	e7b4      	b.n	80172da <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8017370:	b007      	add	sp, #28
 8017372:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017376:	bf00      	nop
 8017378:	20011e50 	.word	0x20011e50

0801737c <_ZN8touchgfx8LCD16bppD1Ev>:
 801737c:	4770      	bx	lr

0801737e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801737e:	4770      	bx	lr

08017380 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 8017380:	4770      	bx	lr

08017382 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 8017382:	4770      	bx	lr

08017384 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 8017384:	4770      	bx	lr

08017386 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8017386:	4770      	bx	lr

08017388 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8017388:	4770      	bx	lr

0801738a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801738a:	4770      	bx	lr

0801738c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801738c:	4770      	bx	lr

0801738e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801738e:	4770      	bx	lr

08017390 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 8017390:	4770      	bx	lr

08017392 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 8017392:	4770      	bx	lr

08017394 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 8017394:	4770      	bx	lr

08017396 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 8017396:	4770      	bx	lr

08017398 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 8017398:	4770      	bx	lr

0801739a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801739a:	4770      	bx	lr

0801739c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801739c:	4770      	bx	lr

0801739e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801739e:	4770      	bx	lr

080173a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 80173a0:	4770      	bx	lr

080173a2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 80173a2:	4770      	bx	lr

080173a4 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 80173a4:	4770      	bx	lr

080173a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80173a6:	4770      	bx	lr

080173a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 80173a8:	4770      	bx	lr

080173aa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 80173aa:	4770      	bx	lr

080173ac <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 80173ac:	4770      	bx	lr

080173ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 80173ae:	4770      	bx	lr

080173b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 80173b0:	4770      	bx	lr

080173b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 80173b2:	4770      	bx	lr

080173b4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 80173b4:	4770      	bx	lr

080173b6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80173b6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80173ba:	b088      	sub	sp, #32
 80173bc:	ac08      	add	r4, sp, #32
 80173be:	4606      	mov	r6, r0
 80173c0:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 80173c4:	4620      	mov	r0, r4
 80173c6:	4688      	mov	r8, r1
 80173c8:	4691      	mov	r9, r2
 80173ca:	f7fd fc65 	bl	8014c98 <_ZNK8touchgfx6Bitmap7getDataEv>
 80173ce:	6833      	ldr	r3, [r6, #0]
 80173d0:	4605      	mov	r5, r0
 80173d2:	4620      	mov	r0, r4
 80173d4:	699f      	ldr	r7, [r3, #24]
 80173d6:	f7fd fb73 	bl	8014ac0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80173da:	4682      	mov	sl, r0
 80173dc:	4620      	mov	r0, r4
 80173de:	f7fd fba3 	bl	8014b28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80173e2:	9500      	str	r5, [sp, #0]
 80173e4:	e9cd a001 	strd	sl, r0, [sp, #4]
 80173e8:	464b      	mov	r3, r9
 80173ea:	a806      	add	r0, sp, #24
 80173ec:	4642      	mov	r2, r8
 80173ee:	4631      	mov	r1, r6
 80173f0:	47b8      	blx	r7
 80173f2:	4628      	mov	r0, r5
 80173f4:	b008      	add	sp, #32
 80173f6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	...

080173fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 80173fc:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8017400:	2300      	movs	r3, #0
 8017402:	9300      	str	r3, [sp, #0]
 8017404:	4b3d      	ldr	r3, [pc, #244]	; (80174fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 8017406:	781b      	ldrb	r3, [r3, #0]
 8017408:	2b00      	cmp	r3, #0
 801740a:	d137      	bne.n	801747c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801740c:	4a3c      	ldr	r2, [pc, #240]	; (8017500 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801740e:	f9b2 2000 	ldrsh.w	r2, [r2]
 8017412:	f8ad 2004 	strh.w	r2, [sp, #4]
 8017416:	2b00      	cmp	r3, #0
 8017418:	d132      	bne.n	8017480 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801741a:	4b3a      	ldr	r3, [pc, #232]	; (8017504 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801741c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8017420:	6808      	ldr	r0, [r1, #0]
 8017422:	6849      	ldr	r1, [r1, #4]
 8017424:	f8ad 3006 	strh.w	r3, [sp, #6]
 8017428:	ac02      	add	r4, sp, #8
 801742a:	ab02      	add	r3, sp, #8
 801742c:	c303      	stmia	r3!, {r0, r1}
 801742e:	4669      	mov	r1, sp
 8017430:	4620      	mov	r0, r4
 8017432:	f7fa f8ef 	bl	8011614 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017436:	4668      	mov	r0, sp
 8017438:	f7fa f8a8 	bl	801158c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801743c:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8017440:	f8bd 2000 	ldrh.w	r2, [sp]
 8017444:	4d30      	ldr	r5, [pc, #192]	; (8017508 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 8017446:	4413      	add	r3, r2
 8017448:	f8ad 3008 	strh.w	r3, [sp, #8]
 801744c:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017450:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8017454:	6828      	ldr	r0, [r5, #0]
 8017456:	4413      	add	r3, r2
 8017458:	f8ad 300a 	strh.w	r3, [sp, #10]
 801745c:	6803      	ldr	r3, [r0, #0]
 801745e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017460:	4798      	blx	r3
 8017462:	f010 0f01 	tst.w	r0, #1
 8017466:	462f      	mov	r7, r5
 8017468:	d00c      	beq.n	8017484 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801746a:	6828      	ldr	r0, [r5, #0]
 801746c:	6803      	ldr	r3, [r0, #0]
 801746e:	e894 0006 	ldmia.w	r4, {r1, r2}
 8017472:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8017474:	4798      	blx	r3
 8017476:	b004      	add	sp, #16
 8017478:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801747c:	4a21      	ldr	r2, [pc, #132]	; (8017504 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801747e:	e7c6      	b.n	801740e <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 8017480:	4b1f      	ldr	r3, [pc, #124]	; (8017500 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 8017482:	e7cb      	b.n	801741c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 8017484:	6838      	ldr	r0, [r7, #0]
 8017486:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801748a:	6803      	ldr	r3, [r0, #0]
 801748c:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 8017490:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8017492:	4798      	blx	r3
 8017494:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 8017498:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801749c:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 80174a0:	fb16 3602 	smlabb	r6, r6, r2, r3
 80174a4:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 80174a8:	6838      	ldr	r0, [r7, #0]
 80174aa:	6803      	ldr	r3, [r0, #0]
 80174ac:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80174ae:	4798      	blx	r3
 80174b0:	4a13      	ldr	r2, [pc, #76]	; (8017500 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 80174b2:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 80174b6:	8813      	ldrh	r3, [r2, #0]
 80174b8:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 80174bc:	fb03 1404 	mla	r4, r3, r4, r1
 80174c0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80174c4:	435d      	muls	r5, r3
 80174c6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80174ca:	ea4f 0848 	mov.w	r8, r8, lsl #1
 80174ce:	4691      	mov	r9, r2
 80174d0:	6838      	ldr	r0, [r7, #0]
 80174d2:	42ac      	cmp	r4, r5
 80174d4:	6803      	ldr	r3, [r0, #0]
 80174d6:	d20e      	bcs.n	80174f6 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 80174d8:	f8d3 a034 	ldr.w	sl, [r3, #52]	; 0x34
 80174dc:	4632      	mov	r2, r6
 80174de:	4643      	mov	r3, r8
 80174e0:	4621      	mov	r1, r4
 80174e2:	47d0      	blx	sl
 80174e4:	f8b9 3000 	ldrh.w	r3, [r9]
 80174e8:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80174ec:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 80174f0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80174f4:	e7ec      	b.n	80174d0 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 80174f6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80174f8:	4798      	blx	r3
 80174fa:	e7bc      	b.n	8017476 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 80174fc:	20011e38 	.word	0x20011e38
 8017500:	20011e3a 	.word	0x20011e3a
 8017504:	20011e3c 	.word	0x20011e3c
 8017508:	20011e40 	.word	0x20011e40

0801750c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801750c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017510:	b08b      	sub	sp, #44	; 0x2c
 8017512:	460f      	mov	r7, r1
 8017514:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 8017518:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 801751c:	4616      	mov	r6, r2
 801751e:	f1bb 0f00 	cmp.w	fp, #0
 8017522:	d049      	beq.n	80175b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 8017524:	6810      	ldr	r0, [r2, #0]
 8017526:	6851      	ldr	r1, [r2, #4]
 8017528:	ad06      	add	r5, sp, #24
 801752a:	c503      	stmia	r5!, {r0, r1}
 801752c:	6818      	ldr	r0, [r3, #0]
 801752e:	6859      	ldr	r1, [r3, #4]
 8017530:	ad08      	add	r5, sp, #32
 8017532:	c503      	stmia	r5!, {r0, r1}
 8017534:	a806      	add	r0, sp, #24
 8017536:	f7fa f829 	bl	801158c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801753a:	4631      	mov	r1, r6
 801753c:	a808      	add	r0, sp, #32
 801753e:	f7fa f869 	bl	8011614 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017542:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 8017546:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 801754a:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801754e:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8017552:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8017556:	fb16 2103 	smlabb	r1, r6, r3, r2
 801755a:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801755e:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 8017562:	4f5f      	ldr	r7, [pc, #380]	; (80176e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8017564:	440a      	add	r2, r1
 8017566:	f8ad 2020 	strh.w	r2, [sp, #32]
 801756a:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801756e:	6838      	ldr	r0, [r7, #0]
 8017570:	4413      	add	r3, r2
 8017572:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8017576:	6803      	ldr	r3, [r0, #0]
 8017578:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801757a:	4798      	blx	r3
 801757c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017580:	46b9      	mov	r9, r7
 8017582:	d01c      	beq.n	80175be <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb2>
 8017584:	f010 0f04 	tst.w	r0, #4
 8017588:	d01d      	beq.n	80175c6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801758a:	f8d9 0000 	ldr.w	r0, [r9]
 801758e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8017592:	6801      	ldr	r1, [r0, #0]
 8017594:	f8cd b00c 	str.w	fp, [sp, #12]
 8017598:	2700      	movs	r7, #0
 801759a:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801759e:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 80175a2:	9402      	str	r4, [sp, #8]
 80175a4:	b2ad      	uxth	r5, r5
 80175a6:	fa1f f488 	uxth.w	r4, r8
 80175aa:	9501      	str	r5, [sp, #4]
 80175ac:	9400      	str	r4, [sp, #0]
 80175ae:	6c4c      	ldr	r4, [r1, #68]	; 0x44
 80175b0:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 80175b4:	4631      	mov	r1, r6
 80175b6:	47a0      	blx	r4
 80175b8:	b00b      	add	sp, #44	; 0x2c
 80175ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80175be:	b914      	cbnz	r4, 80175c6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 80175c0:	f010 0f01 	tst.w	r0, #1
 80175c4:	e7e0      	b.n	8017588 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 80175c6:	f8d9 0000 	ldr.w	r0, [r9]
 80175ca:	6803      	ldr	r3, [r0, #0]
 80175cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80175ce:	4798      	blx	r3
 80175d0:	4b44      	ldr	r3, [pc, #272]	; (80176e4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 80175d2:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 80175d6:	881a      	ldrh	r2, [r3, #0]
 80175d8:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 80175dc:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 80175e0:	fb02 1404 	mla	r4, r2, r4, r1
 80175e4:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80175e8:	469a      	mov	sl, r3
 80175ea:	fb05 f502 	mul.w	r5, r5, r2
 80175ee:	ea4f 0748 	mov.w	r7, r8, lsl #1
 80175f2:	d059      	beq.n	80176a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 80175f4:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 80175f8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80175fc:	fa1f f28b 	uxth.w	r2, fp
 8017600:	fa1f f989 	uxth.w	r9, r9
 8017604:	469e      	mov	lr, r3
 8017606:	42ac      	cmp	r4, r5
 8017608:	d264      	bcs.n	80176d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801760a:	eb04 0a07 	add.w	sl, r4, r7
 801760e:	4554      	cmp	r4, sl
 8017610:	d23d      	bcs.n	801768e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 8017612:	8821      	ldrh	r1, [r4, #0]
 8017614:	f836 3b02 	ldrh.w	r3, [r6], #2
 8017618:	1208      	asrs	r0, r1, #8
 801761a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801761e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8017622:	fb10 f009 	smulbb	r0, r0, r9
 8017626:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801762a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801762e:	00c9      	lsls	r1, r1, #3
 8017630:	fb0c 0c02 	mla	ip, ip, r2, r0
 8017634:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8017638:	10d8      	asrs	r0, r3, #3
 801763a:	b2c9      	uxtb	r1, r1
 801763c:	00db      	lsls	r3, r3, #3
 801763e:	fa1f fc8c 	uxth.w	ip, ip
 8017642:	fb1b fb09 	smulbb	fp, fp, r9
 8017646:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801764a:	b2db      	uxtb	r3, r3
 801764c:	fb11 f109 	smulbb	r1, r1, r9
 8017650:	fb00 b002 	mla	r0, r0, r2, fp
 8017654:	fb03 1302 	mla	r3, r3, r2, r1
 8017658:	f10c 0b01 	add.w	fp, ip, #1
 801765c:	b29b      	uxth	r3, r3
 801765e:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 8017662:	b280      	uxth	r0, r0
 8017664:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 8017668:	f103 0c01 	add.w	ip, r3, #1
 801766c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017670:	1c43      	adds	r3, r0, #1
 8017672:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8017676:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801767a:	0940      	lsrs	r0, r0, #5
 801767c:	ea4c 0c0b 	orr.w	ip, ip, fp
 8017680:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8017684:	ea4c 0c00 	orr.w	ip, ip, r0
 8017688:	f824 cb02 	strh.w	ip, [r4], #2
 801768c:	e7bf      	b.n	801760e <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801768e:	f8be 3000 	ldrh.w	r3, [lr]
 8017692:	eba3 0308 	sub.w	r3, r3, r8
 8017696:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801769a:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801769e:	eba3 0308 	sub.w	r3, r3, r8
 80176a2:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80176a6:	e7ae      	b.n	8017606 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 80176a8:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80176ac:	f8d9 0000 	ldr.w	r0, [r9]
 80176b0:	42ac      	cmp	r4, r5
 80176b2:	6803      	ldr	r3, [r0, #0]
 80176b4:	d20e      	bcs.n	80176d4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 80176b6:	f8d3 8034 	ldr.w	r8, [r3, #52]	; 0x34
 80176ba:	4632      	mov	r2, r6
 80176bc:	463b      	mov	r3, r7
 80176be:	4621      	mov	r1, r4
 80176c0:	47c0      	blx	r8
 80176c2:	f8ba 3000 	ldrh.w	r3, [sl]
 80176c6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80176ca:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80176ce:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80176d2:	e7eb      	b.n	80176ac <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 80176d4:	4b02      	ldr	r3, [pc, #8]	; (80176e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 80176d6:	6818      	ldr	r0, [r3, #0]
 80176d8:	6803      	ldr	r3, [r0, #0]
 80176da:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80176dc:	4798      	blx	r3
 80176de:	e76b      	b.n	80175b8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 80176e0:	20011e40 	.word	0x20011e40
 80176e4:	20011e3a 	.word	0x20011e3a

080176e8 <_ZN8touchgfx8LCD16bppD0Ev>:
 80176e8:	b510      	push	{r4, lr}
 80176ea:	2178      	movs	r1, #120	; 0x78
 80176ec:	4604      	mov	r4, r0
 80176ee:	f008 ffdf 	bl	80206b0 <_ZdlPvj>
 80176f2:	4620      	mov	r0, r4
 80176f4:	bd10      	pop	{r4, pc}

080176f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80176f6:	b510      	push	{r4, lr}
 80176f8:	2104      	movs	r1, #4
 80176fa:	4604      	mov	r4, r0
 80176fc:	f008 ffd8 	bl	80206b0 <_ZdlPvj>
 8017700:	4620      	mov	r0, r4
 8017702:	bd10      	pop	{r4, pc}

08017704 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8017704:	b510      	push	{r4, lr}
 8017706:	2104      	movs	r1, #4
 8017708:	4604      	mov	r4, r0
 801770a:	f008 ffd1 	bl	80206b0 <_ZdlPvj>
 801770e:	4620      	mov	r0, r4
 8017710:	bd10      	pop	{r4, pc}

08017712 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8017712:	b510      	push	{r4, lr}
 8017714:	2104      	movs	r1, #4
 8017716:	4604      	mov	r4, r0
 8017718:	f008 ffca 	bl	80206b0 <_ZdlPvj>
 801771c:	4620      	mov	r0, r4
 801771e:	bd10      	pop	{r4, pc}

08017720 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8017720:	b510      	push	{r4, lr}
 8017722:	2104      	movs	r1, #4
 8017724:	4604      	mov	r4, r0
 8017726:	f008 ffc3 	bl	80206b0 <_ZdlPvj>
 801772a:	4620      	mov	r0, r4
 801772c:	bd10      	pop	{r4, pc}

0801772e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801772e:	b510      	push	{r4, lr}
 8017730:	2104      	movs	r1, #4
 8017732:	4604      	mov	r4, r0
 8017734:	f008 ffbc 	bl	80206b0 <_ZdlPvj>
 8017738:	4620      	mov	r0, r4
 801773a:	bd10      	pop	{r4, pc}

0801773c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801773c:	b510      	push	{r4, lr}
 801773e:	2104      	movs	r1, #4
 8017740:	4604      	mov	r4, r0
 8017742:	f008 ffb5 	bl	80206b0 <_ZdlPvj>
 8017746:	4620      	mov	r0, r4
 8017748:	bd10      	pop	{r4, pc}

0801774a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801774a:	b510      	push	{r4, lr}
 801774c:	2104      	movs	r1, #4
 801774e:	4604      	mov	r4, r0
 8017750:	f008 ffae 	bl	80206b0 <_ZdlPvj>
 8017754:	4620      	mov	r0, r4
 8017756:	bd10      	pop	{r4, pc}

08017758 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8017758:	b510      	push	{r4, lr}
 801775a:	2104      	movs	r1, #4
 801775c:	4604      	mov	r4, r0
 801775e:	f008 ffa7 	bl	80206b0 <_ZdlPvj>
 8017762:	4620      	mov	r0, r4
 8017764:	bd10      	pop	{r4, pc}

08017766 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 8017766:	b510      	push	{r4, lr}
 8017768:	2104      	movs	r1, #4
 801776a:	4604      	mov	r4, r0
 801776c:	f008 ffa0 	bl	80206b0 <_ZdlPvj>
 8017770:	4620      	mov	r0, r4
 8017772:	bd10      	pop	{r4, pc}

08017774 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8017774:	b510      	push	{r4, lr}
 8017776:	2104      	movs	r1, #4
 8017778:	4604      	mov	r4, r0
 801777a:	f008 ff99 	bl	80206b0 <_ZdlPvj>
 801777e:	4620      	mov	r0, r4
 8017780:	bd10      	pop	{r4, pc}

08017782 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8017782:	b510      	push	{r4, lr}
 8017784:	2104      	movs	r1, #4
 8017786:	4604      	mov	r4, r0
 8017788:	f008 ff92 	bl	80206b0 <_ZdlPvj>
 801778c:	4620      	mov	r0, r4
 801778e:	bd10      	pop	{r4, pc}

08017790 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017790:	b510      	push	{r4, lr}
 8017792:	2104      	movs	r1, #4
 8017794:	4604      	mov	r4, r0
 8017796:	f008 ff8b 	bl	80206b0 <_ZdlPvj>
 801779a:	4620      	mov	r0, r4
 801779c:	bd10      	pop	{r4, pc}

0801779e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801779e:	b510      	push	{r4, lr}
 80177a0:	2104      	movs	r1, #4
 80177a2:	4604      	mov	r4, r0
 80177a4:	f008 ff84 	bl	80206b0 <_ZdlPvj>
 80177a8:	4620      	mov	r0, r4
 80177aa:	bd10      	pop	{r4, pc}

080177ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80177ac:	b510      	push	{r4, lr}
 80177ae:	2104      	movs	r1, #4
 80177b0:	4604      	mov	r4, r0
 80177b2:	f008 ff7d 	bl	80206b0 <_ZdlPvj>
 80177b6:	4620      	mov	r0, r4
 80177b8:	bd10      	pop	{r4, pc}

080177ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80177ba:	b510      	push	{r4, lr}
 80177bc:	2104      	movs	r1, #4
 80177be:	4604      	mov	r4, r0
 80177c0:	f008 ff76 	bl	80206b0 <_ZdlPvj>
 80177c4:	4620      	mov	r0, r4
 80177c6:	bd10      	pop	{r4, pc}

080177c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80177c8:	b510      	push	{r4, lr}
 80177ca:	2104      	movs	r1, #4
 80177cc:	4604      	mov	r4, r0
 80177ce:	f008 ff6f 	bl	80206b0 <_ZdlPvj>
 80177d2:	4620      	mov	r0, r4
 80177d4:	bd10      	pop	{r4, pc}

080177d6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 80177d6:	b510      	push	{r4, lr}
 80177d8:	2104      	movs	r1, #4
 80177da:	4604      	mov	r4, r0
 80177dc:	f008 ff68 	bl	80206b0 <_ZdlPvj>
 80177e0:	4620      	mov	r0, r4
 80177e2:	bd10      	pop	{r4, pc}

080177e4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 80177e4:	b510      	push	{r4, lr}
 80177e6:	2104      	movs	r1, #4
 80177e8:	4604      	mov	r4, r0
 80177ea:	f008 ff61 	bl	80206b0 <_ZdlPvj>
 80177ee:	4620      	mov	r0, r4
 80177f0:	bd10      	pop	{r4, pc}

080177f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80177f2:	b510      	push	{r4, lr}
 80177f4:	2104      	movs	r1, #4
 80177f6:	4604      	mov	r4, r0
 80177f8:	f008 ff5a 	bl	80206b0 <_ZdlPvj>
 80177fc:	4620      	mov	r0, r4
 80177fe:	bd10      	pop	{r4, pc}

08017800 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017800:	b510      	push	{r4, lr}
 8017802:	2104      	movs	r1, #4
 8017804:	4604      	mov	r4, r0
 8017806:	f008 ff53 	bl	80206b0 <_ZdlPvj>
 801780a:	4620      	mov	r0, r4
 801780c:	bd10      	pop	{r4, pc}

0801780e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801780e:	b510      	push	{r4, lr}
 8017810:	2104      	movs	r1, #4
 8017812:	4604      	mov	r4, r0
 8017814:	f008 ff4c 	bl	80206b0 <_ZdlPvj>
 8017818:	4620      	mov	r0, r4
 801781a:	bd10      	pop	{r4, pc}

0801781c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801781c:	b510      	push	{r4, lr}
 801781e:	2104      	movs	r1, #4
 8017820:	4604      	mov	r4, r0
 8017822:	f008 ff45 	bl	80206b0 <_ZdlPvj>
 8017826:	4620      	mov	r0, r4
 8017828:	bd10      	pop	{r4, pc}

0801782a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801782a:	b510      	push	{r4, lr}
 801782c:	2104      	movs	r1, #4
 801782e:	4604      	mov	r4, r0
 8017830:	f008 ff3e 	bl	80206b0 <_ZdlPvj>
 8017834:	4620      	mov	r0, r4
 8017836:	bd10      	pop	{r4, pc}

08017838 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8017838:	b510      	push	{r4, lr}
 801783a:	2104      	movs	r1, #4
 801783c:	4604      	mov	r4, r0
 801783e:	f008 ff37 	bl	80206b0 <_ZdlPvj>
 8017842:	4620      	mov	r0, r4
 8017844:	bd10      	pop	{r4, pc}

08017846 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8017846:	b510      	push	{r4, lr}
 8017848:	2104      	movs	r1, #4
 801784a:	4604      	mov	r4, r0
 801784c:	f008 ff30 	bl	80206b0 <_ZdlPvj>
 8017850:	4620      	mov	r0, r4
 8017852:	bd10      	pop	{r4, pc}

08017854 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8017854:	b510      	push	{r4, lr}
 8017856:	2104      	movs	r1, #4
 8017858:	4604      	mov	r4, r0
 801785a:	f008 ff29 	bl	80206b0 <_ZdlPvj>
 801785e:	4620      	mov	r0, r4
 8017860:	bd10      	pop	{r4, pc}

08017862 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 8017862:	b510      	push	{r4, lr}
 8017864:	2104      	movs	r1, #4
 8017866:	4604      	mov	r4, r0
 8017868:	f008 ff22 	bl	80206b0 <_ZdlPvj>
 801786c:	4620      	mov	r0, r4
 801786e:	bd10      	pop	{r4, pc}

08017870 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 8017870:	b510      	push	{r4, lr}
 8017872:	2104      	movs	r1, #4
 8017874:	4604      	mov	r4, r0
 8017876:	f008 ff1b 	bl	80206b0 <_ZdlPvj>
 801787a:	4620      	mov	r0, r4
 801787c:	bd10      	pop	{r4, pc}
	...

08017880 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 8017880:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017884:	b091      	sub	sp, #68	; 0x44
 8017886:	469b      	mov	fp, r3
 8017888:	f10d 0828 	add.w	r8, sp, #40	; 0x28
 801788c:	4616      	mov	r6, r2
 801788e:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	; 0x6c
 8017892:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017896:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	; 0x70
 801789a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801789e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 80178a2:	4604      	mov	r4, r0
 80178a4:	460d      	mov	r5, r1
 80178a6:	4640      	mov	r0, r8
 80178a8:	4659      	mov	r1, fp
 80178aa:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 80178ae:	f8ad 902c 	strh.w	r9, [sp, #44]	; 0x2c
 80178b2:	f8ad 702e 	strh.w	r7, [sp, #46]	; 0x2e
 80178b6:	f7f4 fa31 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 80178ba:	4631      	mov	r1, r6
 80178bc:	4640      	mov	r0, r8
 80178be:	f7f4 fa2d 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 80178c2:	4b74      	ldr	r3, [pc, #464]	; (8017a94 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 80178c4:	8818      	ldrh	r0, [r3, #0]
 80178c6:	4b74      	ldr	r3, [pc, #464]	; (8017a98 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 80178c8:	8819      	ldrh	r1, [r3, #0]
 80178ca:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80178ce:	2b00      	cmp	r3, #0
 80178d0:	b202      	sxth	r2, r0
 80178d2:	b20e      	sxth	r6, r1
 80178d4:	da07      	bge.n	80178e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 80178d6:	f8bd c02c 	ldrh.w	ip, [sp, #44]	; 0x2c
 80178da:	4463      	add	r3, ip
 80178dc:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 80178e0:	2300      	movs	r3, #0
 80178e2:	f8ad 3028 	strh.w	r3, [sp, #40]	; 0x28
 80178e6:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 80178ea:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 80178ee:	1ad2      	subs	r2, r2, r3
 80178f0:	4594      	cmp	ip, r2
 80178f2:	bfc4      	itt	gt
 80178f4:	1ac2      	subgt	r2, r0, r3
 80178f6:	f8ad 202c 	strhgt.w	r2, [sp, #44]	; 0x2c
 80178fa:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 80178fe:	2a00      	cmp	r2, #0
 8017900:	da07      	bge.n	8017912 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 8017902:	f8bd c02e 	ldrh.w	ip, [sp, #46]	; 0x2e
 8017906:	4462      	add	r2, ip
 8017908:	f8ad 202e 	strh.w	r2, [sp, #46]	; 0x2e
 801790c:	2200      	movs	r2, #0
 801790e:	f8ad 202a 	strh.w	r2, [sp, #42]	; 0x2a
 8017912:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	; 0x2a
 8017916:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801791a:	eba6 060a 	sub.w	r6, r6, sl
 801791e:	42b2      	cmp	r2, r6
 8017920:	bfc4      	itt	gt
 8017922:	eba1 020a 	subgt.w	r2, r1, sl
 8017926:	f8ad 202e 	strhgt.w	r2, [sp, #46]	; 0x2e
 801792a:	4a5c      	ldr	r2, [pc, #368]	; (8017a9c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801792c:	7812      	ldrb	r2, [r2, #0]
 801792e:	b9a2      	cbnz	r2, 801795a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 8017930:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8017934:	4286      	cmp	r6, r0
 8017936:	4640      	mov	r0, r8
 8017938:	9303      	str	r3, [sp, #12]
 801793a:	bf14      	ite	ne
 801793c:	2600      	movne	r6, #0
 801793e:	2601      	moveq	r6, #1
 8017940:	f7f4 fa2f 	bl	800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017944:	9b03      	ldr	r3, [sp, #12]
 8017946:	b160      	cbz	r0, 8017962 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 8017948:	2300      	movs	r3, #0
 801794a:	8023      	strh	r3, [r4, #0]
 801794c:	8063      	strh	r3, [r4, #2]
 801794e:	80a3      	strh	r3, [r4, #4]
 8017950:	4620      	mov	r0, r4
 8017952:	80e3      	strh	r3, [r4, #6]
 8017954:	b011      	add	sp, #68	; 0x44
 8017956:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801795a:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 801795e:	428e      	cmp	r6, r1
 8017960:	e7e9      	b.n	8017936 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 8017962:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 8017966:	9205      	str	r2, [sp, #20]
 8017968:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	; 0x2e
 801796c:	9206      	str	r2, [sp, #24]
 801796e:	f8bb 2000 	ldrh.w	r2, [fp]
 8017972:	900e      	str	r0, [sp, #56]	; 0x38
 8017974:	1a9b      	subs	r3, r3, r2
 8017976:	b21b      	sxth	r3, r3
 8017978:	9303      	str	r3, [sp, #12]
 801797a:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801797e:	f8ad 903c 	strh.w	r9, [sp, #60]	; 0x3c
 8017982:	ebaa 0a03 	sub.w	sl, sl, r3
 8017986:	fa0f f38a 	sxth.w	r3, sl
 801798a:	9304      	str	r3, [sp, #16]
 801798c:	9b03      	ldr	r3, [sp, #12]
 801798e:	f8ad 3030 	strh.w	r3, [sp, #48]	; 0x30
 8017992:	9b04      	ldr	r3, [sp, #16]
 8017994:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8017998:	9b05      	ldr	r3, [sp, #20]
 801799a:	f8ad 3034 	strh.w	r3, [sp, #52]	; 0x34
 801799e:	a90e      	add	r1, sp, #56	; 0x38
 80179a0:	9b06      	ldr	r3, [sp, #24]
 80179a2:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80179a6:	a80c      	add	r0, sp, #48	; 0x30
 80179a8:	f8ad 703e 	strh.w	r7, [sp, #62]	; 0x3e
 80179ac:	f7f9 fe32 	bl	8011614 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80179b0:	4640      	mov	r0, r8
 80179b2:	f7f9 fdeb 	bl	801158c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80179b6:	a80e      	add	r0, sp, #56	; 0x38
 80179b8:	f7f9 fde8 	bl	801158c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80179bc:	4b38      	ldr	r3, [pc, #224]	; (8017aa0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 80179be:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	; 0x3c
 80179c2:	881b      	ldrh	r3, [r3, #0]
 80179c4:	9307      	str	r3, [sp, #28]
 80179c6:	682b      	ldr	r3, [r5, #0]
 80179c8:	f8df b0d8 	ldr.w	fp, [pc, #216]	; 8017aa4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 80179cc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80179ce:	4628      	mov	r0, r5
 80179d0:	4798      	blx	r3
 80179d2:	f8bd 5032 	ldrh.w	r5, [sp, #50]	; 0x32
 80179d6:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	; 0x30
 80179da:	4681      	mov	r9, r0
 80179dc:	fb1a 3305 	smlabb	r3, sl, r5, r3
 80179e0:	f8db 0000 	ldr.w	r0, [fp]
 80179e4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80179e6:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 80179ea:	6803      	ldr	r3, [r0, #0]
 80179ec:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80179ee:	4798      	blx	r3
 80179f0:	4607      	mov	r7, r0
 80179f2:	f8db 0000 	ldr.w	r0, [fp]
 80179f6:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80179fa:	6803      	ldr	r3, [r0, #0]
 80179fc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017a00:	9109      	str	r1, [sp, #36]	; 0x24
 8017a02:	9208      	str	r2, [sp, #32]
 8017a04:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017a06:	4798      	blx	r3
 8017a08:	f010 0f01 	tst.w	r0, #1
 8017a0c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017a10:	d012      	beq.n	8017a38 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 8017a12:	f8db 0000 	ldr.w	r0, [fp]
 8017a16:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 8017a1a:	6803      	ldr	r3, [r0, #0]
 8017a1c:	9200      	str	r2, [sp, #0]
 8017a1e:	6ede      	ldr	r6, [r3, #108]	; 0x6c
 8017a20:	e898 0006 	ldmia.w	r8, {r1, r2}
 8017a24:	462b      	mov	r3, r5
 8017a26:	47b0      	blx	r6
 8017a28:	9b03      	ldr	r3, [sp, #12]
 8017a2a:	8023      	strh	r3, [r4, #0]
 8017a2c:	9b04      	ldr	r3, [sp, #16]
 8017a2e:	8063      	strh	r3, [r4, #2]
 8017a30:	9b05      	ldr	r3, [sp, #20]
 8017a32:	80a3      	strh	r3, [r4, #4]
 8017a34:	9b06      	ldr	r3, [sp, #24]
 8017a36:	e78b      	b.n	8017950 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 8017a38:	fb09 f202 	mul.w	r2, r9, r2
 8017a3c:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 8017a40:	440f      	add	r7, r1
 8017a42:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 8017a46:	b166      	cbz	r6, 8017a62 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017a48:	9a07      	ldr	r2, [sp, #28]
 8017a4a:	4592      	cmp	sl, r2
 8017a4c:	d109      	bne.n	8017a62 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 8017a4e:	f8db 0000 	ldr.w	r0, [fp]
 8017a52:	6802      	ldr	r2, [r0, #0]
 8017a54:	fb09 f303 	mul.w	r3, r9, r3
 8017a58:	6b56      	ldr	r6, [r2, #52]	; 0x34
 8017a5a:	4629      	mov	r1, r5
 8017a5c:	463a      	mov	r2, r7
 8017a5e:	47b0      	blx	r6
 8017a60:	e7e2      	b.n	8017a28 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017a62:	fb0a f303 	mul.w	r3, sl, r3
 8017a66:	f8df b03c 	ldr.w	fp, [pc, #60]	; 8017aa4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 8017a6a:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 8017a6e:	ea4f 064a 	mov.w	r6, sl, lsl #1
 8017a72:	4545      	cmp	r5, r8
 8017a74:	d2d8      	bcs.n	8017a28 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 8017a76:	f8db 0000 	ldr.w	r0, [fp]
 8017a7a:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8017a7e:	6802      	ldr	r2, [r0, #0]
 8017a80:	4629      	mov	r1, r5
 8017a82:	f8d2 a034 	ldr.w	sl, [r2, #52]	; 0x34
 8017a86:	005b      	lsls	r3, r3, #1
 8017a88:	463a      	mov	r2, r7
 8017a8a:	47d0      	blx	sl
 8017a8c:	444f      	add	r7, r9
 8017a8e:	4435      	add	r5, r6
 8017a90:	e7ef      	b.n	8017a72 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 8017a92:	bf00      	nop
 8017a94:	20011e34 	.word	0x20011e34
 8017a98:	20011e36 	.word	0x20011e36
 8017a9c:	20011e38 	.word	0x20011e38
 8017aa0:	20011e3a 	.word	0x20011e3a
 8017aa4:	20011e40 	.word	0x20011e40

08017aa8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8017aa8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8017aaa:	4606      	mov	r6, r0
 8017aac:	b087      	sub	sp, #28
 8017aae:	460c      	mov	r4, r1
 8017ab0:	4617      	mov	r7, r2
 8017ab2:	461d      	mov	r5, r3
 8017ab4:	b333      	cbz	r3, 8017b04 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017ab6:	4608      	mov	r0, r1
 8017ab8:	f7f4 f973 	bl	800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017abc:	bb10      	cbnz	r0, 8017b04 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017abe:	6820      	ldr	r0, [r4, #0]
 8017ac0:	6861      	ldr	r1, [r4, #4]
 8017ac2:	4c1c      	ldr	r4, [pc, #112]	; (8017b34 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 8017ac4:	ab04      	add	r3, sp, #16
 8017ac6:	c303      	stmia	r3!, {r0, r1}
 8017ac8:	a804      	add	r0, sp, #16
 8017aca:	f7f9 fd5f 	bl	801158c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017ace:	6820      	ldr	r0, [r4, #0]
 8017ad0:	6803      	ldr	r3, [r0, #0]
 8017ad2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017ad4:	4798      	blx	r3
 8017ad6:	2dff      	cmp	r5, #255	; 0xff
 8017ad8:	d016      	beq.n	8017b08 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 8017ada:	f010 0f08 	tst.w	r0, #8
 8017ade:	6820      	ldr	r0, [r4, #0]
 8017ae0:	d015      	beq.n	8017b0e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 8017ae2:	2400      	movs	r4, #0
 8017ae4:	6801      	ldr	r1, [r0, #0]
 8017ae6:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8017aea:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8017aee:	e9cd 5402 	strd	r5, r4, [sp, #8]
 8017af2:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 8017af6:	9401      	str	r4, [sp, #4]
 8017af8:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 8017afc:	9400      	str	r4, [sp, #0]
 8017afe:	6e0c      	ldr	r4, [r1, #96]	; 0x60
 8017b00:	4639      	mov	r1, r7
 8017b02:	47a0      	blx	r4
 8017b04:	b007      	add	sp, #28
 8017b06:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8017b08:	f010 0f02 	tst.w	r0, #2
 8017b0c:	e7e7      	b.n	8017ade <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 8017b0e:	6803      	ldr	r3, [r0, #0]
 8017b10:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017b12:	4798      	blx	r3
 8017b14:	4b08      	ldr	r3, [pc, #32]	; (8017b38 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 8017b16:	881a      	ldrh	r2, [r3, #0]
 8017b18:	6833      	ldr	r3, [r6, #0]
 8017b1a:	e9cd 7500 	strd	r7, r5, [sp]
 8017b1e:	4601      	mov	r1, r0
 8017b20:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8017b22:	4630      	mov	r0, r6
 8017b24:	ab04      	add	r3, sp, #16
 8017b26:	47a8      	blx	r5
 8017b28:	6820      	ldr	r0, [r4, #0]
 8017b2a:	6803      	ldr	r3, [r0, #0]
 8017b2c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017b2e:	4798      	blx	r3
 8017b30:	e7e8      	b.n	8017b04 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 8017b32:	bf00      	nop
 8017b34:	20011e40 	.word	0x20011e40
 8017b38:	20011e3a 	.word	0x20011e3a

08017b3c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 8017b3c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017b40:	f89d 7024 	ldrb.w	r7, [sp, #36]	; 0x24
 8017b44:	9e08      	ldr	r6, [sp, #32]
 8017b46:	4688      	mov	r8, r1
 8017b48:	4614      	mov	r4, r2
 8017b4a:	461d      	mov	r5, r3
 8017b4c:	2f00      	cmp	r7, #0
 8017b4e:	f000 80a9 	beq.w	8017ca4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017b52:	4618      	mov	r0, r3
 8017b54:	f7f4 f925 	bl	800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8017b58:	2800      	cmp	r0, #0
 8017b5a:	f040 80a3 	bne.w	8017ca4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017b5e:	f9b5 1000 	ldrsh.w	r1, [r5]
 8017b62:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8017b66:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 8017b6a:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8017b6e:	fb04 1303 	mla	r3, r4, r3, r1
 8017b72:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 8017b76:	4365      	muls	r5, r4
 8017b78:	2fff      	cmp	r7, #255	; 0xff
 8017b7a:	eba4 0200 	sub.w	r2, r4, r0
 8017b7e:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8017b82:	ea4f 2816 	mov.w	r8, r6, lsr #8
 8017b86:	d04a      	beq.n	8017c1e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 8017b88:	b2bc      	uxth	r4, r7
 8017b8a:	f1c7 0cff 	rsb	ip, r7, #255	; 0xff
 8017b8e:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 8017b92:	fa5f f788 	uxtb.w	r7, r8
 8017b96:	b2f3      	uxtb	r3, r6
 8017b98:	0040      	lsls	r0, r0, #1
 8017b9a:	fb0e fe04 	mul.w	lr, lr, r4
 8017b9e:	4367      	muls	r7, r4
 8017ba0:	4363      	muls	r3, r4
 8017ba2:	ea4f 0842 	mov.w	r8, r2, lsl #1
 8017ba6:	fa1f fc8c 	uxth.w	ip, ip
 8017baa:	42a9      	cmp	r1, r5
 8017bac:	d27a      	bcs.n	8017ca4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017bae:	eb01 0900 	add.w	r9, r1, r0
 8017bb2:	4549      	cmp	r1, r9
 8017bb4:	d231      	bcs.n	8017c1a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 8017bb6:	880a      	ldrh	r2, [r1, #0]
 8017bb8:	1214      	asrs	r4, r2, #8
 8017bba:	10d6      	asrs	r6, r2, #3
 8017bbc:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8017bc0:	00d2      	lsls	r2, r2, #3
 8017bc2:	b2d2      	uxtb	r2, r2
 8017bc4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8017bc8:	fb14 f40c 	smulbb	r4, r4, ip
 8017bcc:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8017bd0:	4474      	add	r4, lr
 8017bd2:	fb12 f20c 	smulbb	r2, r2, ip
 8017bd6:	b2a4      	uxth	r4, r4
 8017bd8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8017bdc:	441a      	add	r2, r3
 8017bde:	b292      	uxth	r2, r2
 8017be0:	f104 0a01 	add.w	sl, r4, #1
 8017be4:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 8017be8:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 8017bec:	fb16 f60c 	smulbb	r6, r6, ip
 8017bf0:	f102 0a01 	add.w	sl, r2, #1
 8017bf4:	443e      	add	r6, r7
 8017bf6:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8017bfa:	b2b6      	uxth	r6, r6
 8017bfc:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8017c00:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8017c04:	4322      	orrs	r2, r4
 8017c06:	1c74      	adds	r4, r6, #1
 8017c08:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 8017c0c:	0976      	lsrs	r6, r6, #5
 8017c0e:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8017c12:	4332      	orrs	r2, r6
 8017c14:	f821 2b02 	strh.w	r2, [r1], #2
 8017c18:	e7cb      	b.n	8017bb2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 8017c1a:	4441      	add	r1, r8
 8017c1c:	e7c5      	b.n	8017baa <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 8017c1e:	4f22      	ldr	r7, [pc, #136]	; (8017ca8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 8017c20:	0973      	lsrs	r3, r6, #5
 8017c22:	ea08 0707 	and.w	r7, r8, r7
 8017c26:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017c2a:	433b      	orrs	r3, r7
 8017c2c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8017c30:	4333      	orrs	r3, r6
 8017c32:	07e7      	lsls	r7, r4, #31
 8017c34:	b29b      	uxth	r3, r3
 8017c36:	d50b      	bpl.n	8017c50 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 8017c38:	0040      	lsls	r0, r0, #1
 8017c3a:	0052      	lsls	r2, r2, #1
 8017c3c:	42a9      	cmp	r1, r5
 8017c3e:	d231      	bcs.n	8017ca4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017c40:	180c      	adds	r4, r1, r0
 8017c42:	42a1      	cmp	r1, r4
 8017c44:	d202      	bcs.n	8017c4c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8017c46:	f821 3b02 	strh.w	r3, [r1], #2
 8017c4a:	e7fa      	b.n	8017c42 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 8017c4c:	4411      	add	r1, r2
 8017c4e:	e7f5      	b.n	8017c3c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 8017c50:	078e      	lsls	r6, r1, #30
 8017c52:	d008      	beq.n	8017c66 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 8017c54:	0066      	lsls	r6, r4, #1
 8017c56:	460a      	mov	r2, r1
 8017c58:	42aa      	cmp	r2, r5
 8017c5a:	d202      	bcs.n	8017c62 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 8017c5c:	8013      	strh	r3, [r2, #0]
 8017c5e:	4432      	add	r2, r6
 8017c60:	e7fa      	b.n	8017c58 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 8017c62:	3102      	adds	r1, #2
 8017c64:	3801      	subs	r0, #1
 8017c66:	07c2      	lsls	r2, r0, #31
 8017c68:	d50b      	bpl.n	8017c82 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 8017c6a:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8017c6e:	3a01      	subs	r2, #1
 8017c70:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 8017c74:	0066      	lsls	r6, r4, #1
 8017c76:	42aa      	cmp	r2, r5
 8017c78:	d202      	bcs.n	8017c80 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 8017c7a:	8013      	strh	r3, [r2, #0]
 8017c7c:	4432      	add	r2, r6
 8017c7e:	e7fa      	b.n	8017c76 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 8017c80:	3801      	subs	r0, #1
 8017c82:	b178      	cbz	r0, 8017ca4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017c84:	1040      	asrs	r0, r0, #1
 8017c86:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8017c8a:	0080      	lsls	r0, r0, #2
 8017c8c:	0064      	lsls	r4, r4, #1
 8017c8e:	42a9      	cmp	r1, r5
 8017c90:	d208      	bcs.n	8017ca4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 8017c92:	180e      	adds	r6, r1, r0
 8017c94:	460a      	mov	r2, r1
 8017c96:	42b2      	cmp	r2, r6
 8017c98:	d202      	bcs.n	8017ca0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 8017c9a:	f842 3b04 	str.w	r3, [r2], #4
 8017c9e:	e7fa      	b.n	8017c96 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 8017ca0:	4421      	add	r1, r4
 8017ca2:	e7f4      	b.n	8017c8e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 8017ca4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8017ca8:	00fff800 	.word	0x00fff800

08017cac <_ZN8touchgfx8LCD16bppC1Ev>:
 8017cac:	2200      	movs	r2, #0
 8017cae:	4910      	ldr	r1, [pc, #64]	; (8017cf0 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8017cb0:	6042      	str	r2, [r0, #4]
 8017cb2:	6001      	str	r1, [r0, #0]
 8017cb4:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8017cb8:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8017cbc:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8017cc0:	e9c0 2208 	strd	r2, r2, [r0, #32]
 8017cc4:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 8017cc8:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 8017ccc:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 8017cd0:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 8017cd4:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 8017cd8:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 8017cdc:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 8017ce0:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 8017ce4:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 8017ce8:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 8017cec:	4770      	bx	lr
 8017cee:	bf00      	nop
 8017cf0:	08024174 	.word	0x08024174

08017cf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 8017cf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017cf8:	460d      	mov	r5, r1
 8017cfa:	b08d      	sub	sp, #52	; 0x34
 8017cfc:	4604      	mov	r4, r0
 8017cfe:	6808      	ldr	r0, [r1, #0]
 8017d00:	6849      	ldr	r1, [r1, #4]
 8017d02:	4699      	mov	r9, r3
 8017d04:	ab08      	add	r3, sp, #32
 8017d06:	c303      	stmia	r3!, {r0, r1}
 8017d08:	6810      	ldr	r0, [r2, #0]
 8017d0a:	6851      	ldr	r1, [r2, #4]
 8017d0c:	ab0a      	add	r3, sp, #40	; 0x28
 8017d0e:	c303      	stmia	r3!, {r0, r1}
 8017d10:	a808      	add	r0, sp, #32
 8017d12:	f7f9 fc3b 	bl	801158c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017d16:	4629      	mov	r1, r5
 8017d18:	a80a      	add	r0, sp, #40	; 0x28
 8017d1a:	f7f9 fc7b 	bl	8011614 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017d1e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8017d22:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8017d26:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8017d2a:	4d63      	ldr	r5, [pc, #396]	; (8017eb8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017d2c:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	; 0x2c
 8017d30:	6828      	ldr	r0, [r5, #0]
 8017d32:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8017d36:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017d3a:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017d3e:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8017d42:	440a      	add	r2, r1
 8017d44:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8017d48:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8017d4c:	4413      	add	r3, r2
 8017d4e:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8017d52:	6803      	ldr	r3, [r0, #0]
 8017d54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8017d56:	4798      	blx	r3
 8017d58:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017d5c:	d119      	bne.n	8017d92 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 8017d5e:	f010 0f20 	tst.w	r0, #32
 8017d62:	6828      	ldr	r0, [r5, #0]
 8017d64:	d018      	beq.n	8017d98 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 8017d66:	2500      	movs	r5, #0
 8017d68:	6801      	ldr	r1, [r0, #0]
 8017d6a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8017d6e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8017d72:	e9cd 9503 	strd	r9, r5, [sp, #12]
 8017d76:	f8bd 5024 	ldrh.w	r5, [sp, #36]	; 0x24
 8017d7a:	9502      	str	r5, [sp, #8]
 8017d7c:	b2b6      	uxth	r6, r6
 8017d7e:	fa1f f588 	uxth.w	r5, r8
 8017d82:	9601      	str	r6, [sp, #4]
 8017d84:	9500      	str	r5, [sp, #0]
 8017d86:	6d0d      	ldr	r5, [r1, #80]	; 0x50
 8017d88:	4621      	mov	r1, r4
 8017d8a:	47a8      	blx	r5
 8017d8c:	b00d      	add	sp, #52	; 0x34
 8017d8e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017d92:	f010 0f40 	tst.w	r0, #64	; 0x40
 8017d96:	e7e4      	b.n	8017d62 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 8017d98:	6803      	ldr	r3, [r0, #0]
 8017d9a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017d9c:	4798      	blx	r3
 8017d9e:	4947      	ldr	r1, [pc, #284]	; (8017ebc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 8017da0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8017da4:	880b      	ldrh	r3, [r1, #0]
 8017da6:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	; 0x28
 8017daa:	fb03 5202 	mla	r2, r3, r2, r5
 8017dae:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017db2:	4373      	muls	r3, r6
 8017db4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017db8:	9307      	str	r3, [sp, #28]
 8017dba:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8017dbe:	9306      	str	r3, [sp, #24]
 8017dc0:	468a      	mov	sl, r1
 8017dc2:	9b07      	ldr	r3, [sp, #28]
 8017dc4:	4298      	cmp	r0, r3
 8017dc6:	d270      	bcs.n	8017eaa <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 8017dc8:	9b06      	ldr	r3, [sp, #24]
 8017dca:	4621      	mov	r1, r4
 8017dcc:	eb00 0b03 	add.w	fp, r0, r3
 8017dd0:	4558      	cmp	r0, fp
 8017dd2:	d25d      	bcs.n	8017e90 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 8017dd4:	f851 4b04 	ldr.w	r4, [r1], #4
 8017dd8:	0e23      	lsrs	r3, r4, #24
 8017dda:	d014      	beq.n	8017e06 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017ddc:	2bff      	cmp	r3, #255	; 0xff
 8017dde:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 8017de2:	d112      	bne.n	8017e0a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017de4:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017de8:	d10f      	bne.n	8017e0a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 8017dea:	0963      	lsrs	r3, r4, #5
 8017dec:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 8017df0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017df4:	f02c 0c07 	bic.w	ip, ip, #7
 8017df8:	ea43 0c0c 	orr.w	ip, r3, ip
 8017dfc:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 8017e00:	ea4c 0404 	orr.w	r4, ip, r4
 8017e04:	8004      	strh	r4, [r0, #0]
 8017e06:	3002      	adds	r0, #2
 8017e08:	e7e2      	b.n	8017dd0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 8017e0a:	fb09 f303 	mul.w	r3, r9, r3
 8017e0e:	8807      	ldrh	r7, [r0, #0]
 8017e10:	1c5a      	adds	r2, r3, #1
 8017e12:	eb02 2223 	add.w	r2, r2, r3, asr #8
 8017e16:	1212      	asrs	r2, r2, #8
 8017e18:	123e      	asrs	r6, r7, #8
 8017e1a:	b293      	uxth	r3, r2
 8017e1c:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 8017e20:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8017e24:	43d2      	mvns	r2, r2
 8017e26:	b2d2      	uxtb	r2, r2
 8017e28:	10fd      	asrs	r5, r7, #3
 8017e2a:	fb1e fe03 	smulbb	lr, lr, r3
 8017e2e:	00ff      	lsls	r7, r7, #3
 8017e30:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8017e34:	fb06 e602 	mla	r6, r6, r2, lr
 8017e38:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8017e3c:	b2ff      	uxtb	r7, r7
 8017e3e:	fa5f fc8c 	uxtb.w	ip, ip
 8017e42:	b2e4      	uxtb	r4, r4
 8017e44:	b2b6      	uxth	r6, r6
 8017e46:	fb1c fc03 	smulbb	ip, ip, r3
 8017e4a:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8017e4e:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 8017e52:	fb14 f403 	smulbb	r4, r4, r3
 8017e56:	fb05 c502 	mla	r5, r5, r2, ip
 8017e5a:	f106 0e01 	add.w	lr, r6, #1
 8017e5e:	fb07 4702 	mla	r7, r7, r2, r4
 8017e62:	b2ad      	uxth	r5, r5
 8017e64:	b2bf      	uxth	r7, r7
 8017e66:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 8017e6a:	f406 4e78 	and.w	lr, r6, #63488	; 0xf800
 8017e6e:	f105 0c01 	add.w	ip, r5, #1
 8017e72:	1c7e      	adds	r6, r7, #1
 8017e74:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8017e78:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8017e7c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8017e80:	096d      	lsrs	r5, r5, #5
 8017e82:	ea46 060e 	orr.w	r6, r6, lr
 8017e86:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8017e8a:	432e      	orrs	r6, r5
 8017e8c:	8006      	strh	r6, [r0, #0]
 8017e8e:	e7ba      	b.n	8017e06 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 8017e90:	f8ba 3000 	ldrh.w	r3, [sl]
 8017e94:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	; 0x24
 8017e98:	eba3 0308 	sub.w	r3, r3, r8
 8017e9c:	eba4 0408 	sub.w	r4, r4, r8
 8017ea0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8017ea4:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 8017ea8:	e78b      	b.n	8017dc2 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 8017eaa:	4b03      	ldr	r3, [pc, #12]	; (8017eb8 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8017eac:	6818      	ldr	r0, [r3, #0]
 8017eae:	6803      	ldr	r3, [r0, #0]
 8017eb0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017eb2:	4798      	blx	r3
 8017eb4:	e76a      	b.n	8017d8c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 8017eb6:	bf00      	nop
 8017eb8:	20011e40 	.word	0x20011e40
 8017ebc:	20011e3a 	.word	0x20011e3a

08017ec0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 8017ec0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8017ec4:	460c      	mov	r4, r1
 8017ec6:	b085      	sub	sp, #20
 8017ec8:	6810      	ldr	r0, [r2, #0]
 8017eca:	6851      	ldr	r1, [r2, #4]
 8017ecc:	466d      	mov	r5, sp
 8017ece:	c503      	stmia	r5!, {r0, r1}
 8017ed0:	6818      	ldr	r0, [r3, #0]
 8017ed2:	6859      	ldr	r1, [r3, #4]
 8017ed4:	4616      	mov	r6, r2
 8017ed6:	c503      	stmia	r5!, {r0, r1}
 8017ed8:	4668      	mov	r0, sp
 8017eda:	f7f9 fb57 	bl	801158c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017ede:	4631      	mov	r1, r6
 8017ee0:	a802      	add	r0, sp, #8
 8017ee2:	f7f9 fb97 	bl	8011614 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017ee6:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 8017eea:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 8017eee:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 8017ef2:	4d28      	ldr	r5, [pc, #160]	; (8017f94 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 8017ef4:	4e28      	ldr	r6, [pc, #160]	; (8017f98 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 8017ef6:	6828      	ldr	r0, [r5, #0]
 8017ef8:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8017efc:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 8017f00:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017f04:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8017f08:	f8bd 1000 	ldrh.w	r1, [sp]
 8017f0c:	440a      	add	r2, r1
 8017f0e:	f8ad 2008 	strh.w	r2, [sp, #8]
 8017f12:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 8017f16:	4413      	add	r3, r2
 8017f18:	f8ad 300a 	strh.w	r3, [sp, #10]
 8017f1c:	6803      	ldr	r3, [r0, #0]
 8017f1e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8017f20:	4798      	blx	r3
 8017f22:	8833      	ldrh	r3, [r6, #0]
 8017f24:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 8017f28:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 8017f2c:	f8df e06c 	ldr.w	lr, [pc, #108]	; 8017f9c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 8017f30:	fb03 1202 	mla	r2, r3, r2, r1
 8017f34:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017f38:	fb08 f303 	mul.w	r3, r8, r3
 8017f3c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8017f40:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 8017f44:	4298      	cmp	r0, r3
 8017f46:	d21d      	bcs.n	8017f84 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 8017f48:	eb00 080c 	add.w	r8, r0, ip
 8017f4c:	4540      	cmp	r0, r8
 8017f4e:	d20f      	bcs.n	8017f70 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 8017f50:	f854 1b04 	ldr.w	r1, [r4], #4
 8017f54:	ea4f 1951 	mov.w	r9, r1, lsr #5
 8017f58:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 8017f5c:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8017f60:	ea42 0209 	orr.w	r2, r2, r9
 8017f64:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8017f68:	430a      	orrs	r2, r1
 8017f6a:	f820 2b02 	strh.w	r2, [r0], #2
 8017f6e:	e7ed      	b.n	8017f4c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 8017f70:	8832      	ldrh	r2, [r6, #0]
 8017f72:	1bd2      	subs	r2, r2, r7
 8017f74:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8017f78:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 8017f7c:	1bd2      	subs	r2, r2, r7
 8017f7e:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 8017f82:	e7df      	b.n	8017f44 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 8017f84:	6828      	ldr	r0, [r5, #0]
 8017f86:	6803      	ldr	r3, [r0, #0]
 8017f88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8017f8a:	4798      	blx	r3
 8017f8c:	b005      	add	sp, #20
 8017f8e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8017f92:	bf00      	nop
 8017f94:	20011e40 	.word	0x20011e40
 8017f98:	20011e3a 	.word	0x20011e3a
 8017f9c:	fffff800 	.word	0xfffff800

08017fa0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 8017fa0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8017fa4:	460e      	mov	r6, r1
 8017fa6:	b08e      	sub	sp, #56	; 0x38
 8017fa8:	4604      	mov	r4, r0
 8017faa:	6808      	ldr	r0, [r1, #0]
 8017fac:	6849      	ldr	r1, [r1, #4]
 8017fae:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 8018188 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 8017fb2:	f8df 91d8 	ldr.w	r9, [pc, #472]	; 801818c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 8017fb6:	461d      	mov	r5, r3
 8017fb8:	ab0a      	add	r3, sp, #40	; 0x28
 8017fba:	c303      	stmia	r3!, {r0, r1}
 8017fbc:	6810      	ldr	r0, [r2, #0]
 8017fbe:	6851      	ldr	r1, [r2, #4]
 8017fc0:	ab0c      	add	r3, sp, #48	; 0x30
 8017fc2:	c303      	stmia	r3!, {r0, r1}
 8017fc4:	a80a      	add	r0, sp, #40	; 0x28
 8017fc6:	f7f9 fae1 	bl	801158c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8017fca:	4631      	mov	r1, r6
 8017fcc:	a80c      	add	r0, sp, #48	; 0x30
 8017fce:	f7f9 fb21 	bl	8011614 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8017fd2:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	; 0x30
 8017fd6:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	; 0x32
 8017fda:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8017fde:	f8d8 0000 	ldr.w	r0, [r8]
 8017fe2:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	; 0x34
 8017fe6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	; 0x36
 8017fea:	fb11 2103 	smlabb	r1, r1, r3, r2
 8017fee:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8017ff2:	440c      	add	r4, r1
 8017ff4:	f8bd 1028 	ldrh.w	r1, [sp, #40]	; 0x28
 8017ff8:	440a      	add	r2, r1
 8017ffa:	f8ad 2030 	strh.w	r2, [sp, #48]	; 0x30
 8017ffe:	f8bd 202a 	ldrh.w	r2, [sp, #42]	; 0x2a
 8018002:	4413      	add	r3, r2
 8018004:	f8ad 3032 	strh.w	r3, [sp, #50]	; 0x32
 8018008:	6803      	ldr	r3, [r0, #0]
 801800a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801800c:	4798      	blx	r3
 801800e:	2dff      	cmp	r5, #255	; 0xff
 8018010:	d124      	bne.n	801805c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 8018012:	f010 0f01 	tst.w	r0, #1
 8018016:	f8d8 0000 	ldr.w	r0, [r8]
 801801a:	d022      	beq.n	8018062 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801801c:	2100      	movs	r1, #0
 801801e:	f8d0 c000 	ldr.w	ip, [r0]
 8018022:	f8bd 3032 	ldrh.w	r3, [sp, #50]	; 0x32
 8018026:	f8bd 2030 	ldrh.w	r2, [sp, #48]	; 0x30
 801802a:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801802e:	f04f 0e01 	mov.w	lr, #1
 8018032:	f8cd e018 	str.w	lr, [sp, #24]
 8018036:	f8b9 e000 	ldrh.w	lr, [r9]
 801803a:	9503      	str	r5, [sp, #12]
 801803c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8018040:	b2b6      	uxth	r6, r6
 8018042:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 8018046:	9102      	str	r1, [sp, #8]
 8018048:	b2bf      	uxth	r7, r7
 801804a:	9601      	str	r6, [sp, #4]
 801804c:	9700      	str	r7, [sp, #0]
 801804e:	f8dc 5040 	ldr.w	r5, [ip, #64]	; 0x40
 8018052:	4621      	mov	r1, r4
 8018054:	47a8      	blx	r5
 8018056:	b00e      	add	sp, #56	; 0x38
 8018058:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801805c:	f010 0f04 	tst.w	r0, #4
 8018060:	e7d9      	b.n	8018016 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 8018062:	6803      	ldr	r3, [r0, #0]
 8018064:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018066:	4798      	blx	r3
 8018068:	f8b9 3000 	ldrh.w	r3, [r9]
 801806c:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	; 0x32
 8018070:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 8018074:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	; 0x2c
 8018078:	fb03 1202 	mla	r2, r3, r2, r1
 801807c:	ebac 0c07 	sub.w	ip, ip, r7
 8018080:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8018084:	435e      	muls	r6, r3
 8018086:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801808a:	2dff      	cmp	r5, #255	; 0xff
 801808c:	eba3 0707 	sub.w	r7, r3, r7
 8018090:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8018094:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8018098:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801809c:	d049      	beq.n	8018132 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801809e:	43eb      	mvns	r3, r5
 80180a0:	fa1f f985 	uxth.w	r9, r5
 80180a4:	b2db      	uxtb	r3, r3
 80180a6:	42b0      	cmp	r0, r6
 80180a8:	d266      	bcs.n	8018178 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 80180aa:	eb00 0a0e 	add.w	sl, r0, lr
 80180ae:	4550      	cmp	r0, sl
 80180b0:	4621      	mov	r1, r4
 80180b2:	f104 0403 	add.w	r4, r4, #3
 80180b6:	d25b      	bcs.n	8018170 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 80180b8:	8802      	ldrh	r2, [r0, #0]
 80180ba:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 80180be:	ea4f 2822 	mov.w	r8, r2, asr #8
 80180c2:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 80180c6:	fb11 f109 	smulbb	r1, r1, r9
 80180ca:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 80180ce:	10d5      	asrs	r5, r2, #3
 80180d0:	fb08 1803 	mla	r8, r8, r3, r1
 80180d4:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 80180d8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80180dc:	fb11 f109 	smulbb	r1, r1, r9
 80180e0:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 80180e4:	fb05 1503 	mla	r5, r5, r3, r1
 80180e8:	00d2      	lsls	r2, r2, #3
 80180ea:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 80180ee:	b2d2      	uxtb	r2, r2
 80180f0:	fb11 f109 	smulbb	r1, r1, r9
 80180f4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80180f8:	fa1f f888 	uxth.w	r8, r8
 80180fc:	fb02 1203 	mla	r2, r2, r3, r1
 8018100:	b292      	uxth	r2, r2
 8018102:	f108 0101 	add.w	r1, r8, #1
 8018106:	b2ad      	uxth	r5, r5
 8018108:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801810c:	1c51      	adds	r1, r2, #1
 801810e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018112:	1c69      	adds	r1, r5, #1
 8018114:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8018118:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 801811c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018120:	096d      	lsrs	r5, r5, #5
 8018122:	ea42 0208 	orr.w	r2, r2, r8
 8018126:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801812a:	432a      	orrs	r2, r5
 801812c:	f820 2b02 	strh.w	r2, [r0], #2
 8018130:	e7bd      	b.n	80180ae <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 8018132:	4a14      	ldr	r2, [pc, #80]	; (8018184 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 8018134:	42b0      	cmp	r0, r6
 8018136:	d21f      	bcs.n	8018178 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 8018138:	eb00 050e 	add.w	r5, r0, lr
 801813c:	42a8      	cmp	r0, r5
 801813e:	4621      	mov	r1, r4
 8018140:	f104 0403 	add.w	r4, r4, #3
 8018144:	d210      	bcs.n	8018168 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8018146:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801814a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801814e:	00db      	lsls	r3, r3, #3
 8018150:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8018154:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018158:	430b      	orrs	r3, r1
 801815a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801815e:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8018162:	f820 3b02 	strh.w	r3, [r0], #2
 8018166:	e7e9      	b.n	801813c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 8018168:	4438      	add	r0, r7
 801816a:	eb01 040c 	add.w	r4, r1, ip
 801816e:	e7e1      	b.n	8018134 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8018170:	4438      	add	r0, r7
 8018172:	eb01 040c 	add.w	r4, r1, ip
 8018176:	e796      	b.n	80180a6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8018178:	4b03      	ldr	r3, [pc, #12]	; (8018188 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801817a:	6818      	ldr	r0, [r3, #0]
 801817c:	6803      	ldr	r3, [r0, #0]
 801817e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018180:	4798      	blx	r3
 8018182:	e768      	b.n	8018056 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 8018184:	fffff800 	.word	0xfffff800
 8018188:	20011e40 	.word	0x20011e40
 801818c:	20011e3a 	.word	0x20011e3a

08018190 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8018190:	b4f0      	push	{r4, r5, r6, r7}
 8018192:	4616      	mov	r6, r2
 8018194:	2e01      	cmp	r6, #1
 8018196:	461c      	mov	r4, r3
 8018198:	460d      	mov	r5, r1
 801819a:	9a04      	ldr	r2, [sp, #16]
 801819c:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80181a0:	f89d 7018 	ldrb.w	r7, [sp, #24]
 80181a4:	d012      	beq.n	80181cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 80181a6:	d303      	bcc.n	80181b0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 80181a8:	2e02      	cmp	r6, #2
 80181aa:	d00a      	beq.n	80181c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 80181ac:	bcf0      	pop	{r4, r5, r6, r7}
 80181ae:	4770      	bx	lr
 80181b0:	6805      	ldr	r5, [r0, #0]
 80181b2:	e9cd 3704 	strd	r3, r7, [sp, #16]
 80181b6:	68ed      	ldr	r5, [r5, #12]
 80181b8:	4613      	mov	r3, r2
 80181ba:	46ac      	mov	ip, r5
 80181bc:	4622      	mov	r2, r4
 80181be:	bcf0      	pop	{r4, r5, r6, r7}
 80181c0:	4760      	bx	ip
 80181c2:	4621      	mov	r1, r4
 80181c4:	4628      	mov	r0, r5
 80181c6:	bcf0      	pop	{r4, r5, r6, r7}
 80181c8:	f7ff bd94 	b.w	8017cf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80181cc:	4621      	mov	r1, r4
 80181ce:	4628      	mov	r0, r5
 80181d0:	bcf0      	pop	{r4, r5, r6, r7}
 80181d2:	f7ff bee5 	b.w	8017fa0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

080181d8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 80181d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80181dc:	4681      	mov	r9, r0
 80181de:	b093      	sub	sp, #76	; 0x4c
 80181e0:	6810      	ldr	r0, [r2, #0]
 80181e2:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 80181e6:	4f6d      	ldr	r7, [pc, #436]	; (801839c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 80181e8:	4688      	mov	r8, r1
 80181ea:	6851      	ldr	r1, [r2, #4]
 80181ec:	ac0e      	add	r4, sp, #56	; 0x38
 80181ee:	c403      	stmia	r4!, {r0, r1}
 80181f0:	6818      	ldr	r0, [r3, #0]
 80181f2:	6859      	ldr	r1, [r3, #4]
 80181f4:	ac10      	add	r4, sp, #64	; 0x40
 80181f6:	4616      	mov	r6, r2
 80181f8:	c403      	stmia	r4!, {r0, r1}
 80181fa:	a80e      	add	r0, sp, #56	; 0x38
 80181fc:	f7f9 f9c6 	bl	801158c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8018200:	4631      	mov	r1, r6
 8018202:	a810      	add	r0, sp, #64	; 0x40
 8018204:	f7f9 fa06 	bl	8011614 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018208:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 801820c:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8018210:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8018214:	4e62      	ldr	r6, [pc, #392]	; (80183a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8018216:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 801821a:	6830      	ldr	r0, [r6, #0]
 801821c:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8018220:	fb11 2103 	smlabb	r1, r1, r3, r2
 8018224:	4489      	add	r9, r1
 8018226:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 801822a:	440a      	add	r2, r1
 801822c:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8018230:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8018234:	4413      	add	r3, r2
 8018236:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 801823a:	6803      	ldr	r3, [r0, #0]
 801823c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 801823e:	4798      	blx	r3
 8018240:	f010 0f80 	tst.w	r0, #128	; 0x80
 8018244:	6830      	ldr	r0, [r6, #0]
 8018246:	d01d      	beq.n	8018284 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 8018248:	2200      	movs	r2, #0
 801824a:	6801      	ldr	r1, [r0, #0]
 801824c:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8018250:	e9cd 2208 	strd	r2, r2, [sp, #32]
 8018254:	220b      	movs	r2, #11
 8018256:	9207      	str	r2, [sp, #28]
 8018258:	883a      	ldrh	r2, [r7, #0]
 801825a:	9206      	str	r2, [sp, #24]
 801825c:	2201      	movs	r2, #1
 801825e:	e9cd a204 	strd	sl, r2, [sp, #16]
 8018262:	f8bd 203c 	ldrh.w	r2, [sp, #60]	; 0x3c
 8018266:	9203      	str	r2, [sp, #12]
 8018268:	b2a4      	uxth	r4, r4
 801826a:	f8bd 2042 	ldrh.w	r2, [sp, #66]	; 0x42
 801826e:	9200      	str	r2, [sp, #0]
 8018270:	b2ad      	uxth	r5, r5
 8018272:	9502      	str	r5, [sp, #8]
 8018274:	9401      	str	r4, [sp, #4]
 8018276:	6bcc      	ldr	r4, [r1, #60]	; 0x3c
 8018278:	4642      	mov	r2, r8
 801827a:	4649      	mov	r1, r9
 801827c:	47a0      	blx	r4
 801827e:	b013      	add	sp, #76	; 0x4c
 8018280:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018284:	6803      	ldr	r3, [r0, #0]
 8018286:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018288:	4798      	blx	r3
 801828a:	883b      	ldrh	r3, [r7, #0]
 801828c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8018290:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8018294:	fb03 1202 	mla	r2, r3, r2, r1
 8018298:	435d      	muls	r5, r3
 801829a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801829e:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 80182a2:	920c      	str	r2, [sp, #48]	; 0x30
 80182a4:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 80182a8:	1b12      	subs	r2, r2, r4
 80182aa:	920d      	str	r2, [sp, #52]	; 0x34
 80182ac:	0062      	lsls	r2, r4, #1
 80182ae:	1b1c      	subs	r4, r3, r4
 80182b0:	0063      	lsls	r3, r4, #1
 80182b2:	920a      	str	r2, [sp, #40]	; 0x28
 80182b4:	930b      	str	r3, [sp, #44]	; 0x2c
 80182b6:	f04f 0e04 	mov.w	lr, #4
 80182ba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80182bc:	4298      	cmp	r0, r3
 80182be:	d266      	bcs.n	801838e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 80182c0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80182c2:	eb00 0b03 	add.w	fp, r0, r3
 80182c6:	4558      	cmp	r0, fp
 80182c8:	d25c      	bcs.n	8018384 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 80182ca:	f819 3b01 	ldrb.w	r3, [r9], #1
 80182ce:	fb1e e303 	smlabb	r3, lr, r3, lr
 80182d2:	f858 2003 	ldr.w	r2, [r8, r3]
 80182d6:	0e11      	lsrs	r1, r2, #24
 80182d8:	d012      	beq.n	8018300 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 80182da:	29ff      	cmp	r1, #255	; 0xff
 80182dc:	ea4f 2712 	mov.w	r7, r2, lsr #8
 80182e0:	d110      	bne.n	8018304 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80182e2:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80182e6:	d10d      	bne.n	8018304 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 80182e8:	0953      	lsrs	r3, r2, #5
 80182ea:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 80182ee:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80182f2:	f027 0707 	bic.w	r7, r7, #7
 80182f6:	431f      	orrs	r7, r3
 80182f8:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80182fc:	433a      	orrs	r2, r7
 80182fe:	8002      	strh	r2, [r0, #0]
 8018300:	3002      	adds	r0, #2
 8018302:	e7e0      	b.n	80182c6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 8018304:	fb0a f101 	mul.w	r1, sl, r1
 8018308:	8806      	ldrh	r6, [r0, #0]
 801830a:	1c4b      	adds	r3, r1, #1
 801830c:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8018310:	1235      	asrs	r5, r6, #8
 8018312:	10f4      	asrs	r4, r6, #3
 8018314:	121b      	asrs	r3, r3, #8
 8018316:	00f6      	lsls	r6, r6, #3
 8018318:	b299      	uxth	r1, r3
 801831a:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801831e:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018322:	b2f6      	uxtb	r6, r6
 8018324:	43db      	mvns	r3, r3
 8018326:	b2d2      	uxtb	r2, r2
 8018328:	b2db      	uxtb	r3, r3
 801832a:	fb1c fc01 	smulbb	ip, ip, r1
 801832e:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8018332:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8018336:	fb12 f201 	smulbb	r2, r2, r1
 801833a:	fb05 c503 	mla	r5, r5, r3, ip
 801833e:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8018342:	b2ff      	uxtb	r7, r7
 8018344:	fb06 2203 	mla	r2, r6, r3, r2
 8018348:	b2ad      	uxth	r5, r5
 801834a:	fb17 f701 	smulbb	r7, r7, r1
 801834e:	b292      	uxth	r2, r2
 8018350:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8018354:	fb04 7403 	mla	r4, r4, r3, r7
 8018358:	f105 0c01 	add.w	ip, r5, #1
 801835c:	1c57      	adds	r7, r2, #1
 801835e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8018362:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8018366:	b2a4      	uxth	r4, r4
 8018368:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801836c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8018370:	433d      	orrs	r5, r7
 8018372:	1c67      	adds	r7, r4, #1
 8018374:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8018378:	0964      	lsrs	r4, r4, #5
 801837a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801837e:	4325      	orrs	r5, r4
 8018380:	8005      	strh	r5, [r0, #0]
 8018382:	e7bd      	b.n	8018300 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 8018384:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018386:	4418      	add	r0, r3
 8018388:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801838a:	4499      	add	r9, r3
 801838c:	e795      	b.n	80182ba <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801838e:	4b04      	ldr	r3, [pc, #16]	; (80183a0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 8018390:	6818      	ldr	r0, [r3, #0]
 8018392:	6803      	ldr	r3, [r0, #0]
 8018394:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8018396:	4798      	blx	r3
 8018398:	e771      	b.n	801827e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801839a:	bf00      	nop
 801839c:	20011e3a 	.word	0x20011e3a
 80183a0:	20011e40 	.word	0x20011e40

080183a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 80183a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80183a8:	b087      	sub	sp, #28
 80183aa:	4680      	mov	r8, r0
 80183ac:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 80183b0:	460d      	mov	r5, r1
 80183b2:	4614      	mov	r4, r2
 80183b4:	2e00      	cmp	r6, #0
 80183b6:	f000 80b9 	beq.w	801852c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 80183ba:	6810      	ldr	r0, [r2, #0]
 80183bc:	6851      	ldr	r1, [r2, #4]
 80183be:	af02      	add	r7, sp, #8
 80183c0:	c703      	stmia	r7!, {r0, r1}
 80183c2:	6818      	ldr	r0, [r3, #0]
 80183c4:	6859      	ldr	r1, [r3, #4]
 80183c6:	af04      	add	r7, sp, #16
 80183c8:	c703      	stmia	r7!, {r0, r1}
 80183ca:	a802      	add	r0, sp, #8
 80183cc:	f7f9 f8de 	bl	801158c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80183d0:	4621      	mov	r1, r4
 80183d2:	a804      	add	r0, sp, #16
 80183d4:	f7f9 f91e 	bl	8011614 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80183d8:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80183dc:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80183e0:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 80183e4:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 80183e8:	fb14 2103 	smlabb	r1, r4, r3, r2
 80183ec:	eb08 0401 	add.w	r4, r8, r1
 80183f0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80183f4:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80183f8:	440a      	add	r2, r1
 80183fa:	f8ad 2010 	strh.w	r2, [sp, #16]
 80183fe:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8018402:	4413      	add	r3, r2
 8018404:	f8ad 3012 	strh.w	r3, [sp, #18]
 8018408:	4b4a      	ldr	r3, [pc, #296]	; (8018534 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801840a:	6818      	ldr	r0, [r3, #0]
 801840c:	6803      	ldr	r3, [r0, #0]
 801840e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018410:	4798      	blx	r3
 8018412:	4b49      	ldr	r3, [pc, #292]	; (8018538 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 8018414:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8018418:	881a      	ldrh	r2, [r3, #0]
 801841a:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801841e:	2eff      	cmp	r6, #255	; 0xff
 8018420:	fb02 c101 	mla	r1, r2, r1, ip
 8018424:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8018428:	fb02 f207 	mul.w	r2, r2, r7
 801842c:	f105 0104 	add.w	r1, r5, #4
 8018430:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8018434:	461d      	mov	r5, r3
 8018436:	d05a      	beq.n	80184ee <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 8018438:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 801843c:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8018440:	b2b6      	uxth	r6, r6
 8018442:	fa1f fe8e 	uxth.w	lr, lr
 8018446:	9301      	str	r3, [sp, #4]
 8018448:	4282      	cmp	r2, r0
 801844a:	d96a      	bls.n	8018522 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801844c:	eb00 0b0a 	add.w	fp, r0, sl
 8018450:	4583      	cmp	fp, r0
 8018452:	d940      	bls.n	80184d6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 8018454:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018458:	8805      	ldrh	r5, [r0, #0]
 801845a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801845e:	122f      	asrs	r7, r5, #8
 8018460:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8018464:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018468:	fb17 f70e 	smulbb	r7, r7, lr
 801846c:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8018470:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018474:	00ed      	lsls	r5, r5, #3
 8018476:	fb0c 7c06 	mla	ip, ip, r6, r7
 801847a:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 801847e:	10df      	asrs	r7, r3, #3
 8018480:	b2ed      	uxtb	r5, r5
 8018482:	00db      	lsls	r3, r3, #3
 8018484:	fa1f fc8c 	uxth.w	ip, ip
 8018488:	fb19 f90e 	smulbb	r9, r9, lr
 801848c:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8018490:	b2db      	uxtb	r3, r3
 8018492:	fb15 f50e 	smulbb	r5, r5, lr
 8018496:	fb07 9706 	mla	r7, r7, r6, r9
 801849a:	fb03 5306 	mla	r3, r3, r6, r5
 801849e:	f10c 0901 	add.w	r9, ip, #1
 80184a2:	b29b      	uxth	r3, r3
 80184a4:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 80184a8:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 80184ac:	f103 0c01 	add.w	ip, r3, #1
 80184b0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80184b4:	b2bf      	uxth	r7, r7
 80184b6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80184ba:	ea4c 0c09 	orr.w	ip, ip, r9
 80184be:	f107 0901 	add.w	r9, r7, #1
 80184c2:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 80184c6:	097f      	lsrs	r7, r7, #5
 80184c8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80184cc:	ea4c 0c07 	orr.w	ip, ip, r7
 80184d0:	f820 cb02 	strh.w	ip, [r0], #2
 80184d4:	e7bc      	b.n	8018450 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 80184d6:	9b01      	ldr	r3, [sp, #4]
 80184d8:	881b      	ldrh	r3, [r3, #0]
 80184da:	eba3 0308 	sub.w	r3, r3, r8
 80184de:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80184e2:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 80184e6:	eba3 0308 	sub.w	r3, r3, r8
 80184ea:	441c      	add	r4, r3
 80184ec:	e7ac      	b.n	8018448 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 80184ee:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80184f2:	4282      	cmp	r2, r0
 80184f4:	d915      	bls.n	8018522 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 80184f6:	eb00 060a 	add.w	r6, r0, sl
 80184fa:	4286      	cmp	r6, r0
 80184fc:	d906      	bls.n	801850c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 80184fe:	f814 3b01 	ldrb.w	r3, [r4], #1
 8018502:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8018506:	f820 3b02 	strh.w	r3, [r0], #2
 801850a:	e7f6      	b.n	80184fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801850c:	882b      	ldrh	r3, [r5, #0]
 801850e:	eba3 0308 	sub.w	r3, r3, r8
 8018512:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018516:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801851a:	eba3 0308 	sub.w	r3, r3, r8
 801851e:	441c      	add	r4, r3
 8018520:	e7e7      	b.n	80184f2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 8018522:	4b04      	ldr	r3, [pc, #16]	; (8018534 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 8018524:	6818      	ldr	r0, [r3, #0]
 8018526:	6803      	ldr	r3, [r0, #0]
 8018528:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801852a:	4798      	blx	r3
 801852c:	b007      	add	sp, #28
 801852e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018532:	bf00      	nop
 8018534:	20011e40 	.word	0x20011e40
 8018538:	20011e3a 	.word	0x20011e3a

0801853c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801853c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018540:	b091      	sub	sp, #68	; 0x44
 8018542:	4680      	mov	r8, r0
 8018544:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8018548:	460f      	mov	r7, r1
 801854a:	4614      	mov	r4, r2
 801854c:	2d00      	cmp	r5, #0
 801854e:	d051      	beq.n	80185f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018550:	6810      	ldr	r0, [r2, #0]
 8018552:	6851      	ldr	r1, [r2, #4]
 8018554:	f8df 9200 	ldr.w	r9, [pc, #512]	; 8018758 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 8018558:	ae0c      	add	r6, sp, #48	; 0x30
 801855a:	c603      	stmia	r6!, {r0, r1}
 801855c:	6818      	ldr	r0, [r3, #0]
 801855e:	6859      	ldr	r1, [r3, #4]
 8018560:	ae0e      	add	r6, sp, #56	; 0x38
 8018562:	c603      	stmia	r6!, {r0, r1}
 8018564:	a80c      	add	r0, sp, #48	; 0x30
 8018566:	f7f9 f811 	bl	801158c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801856a:	4621      	mov	r1, r4
 801856c:	a80e      	add	r0, sp, #56	; 0x38
 801856e:	f7f9 f851 	bl	8011614 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8018572:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8018576:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 801857a:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 801857e:	f8d9 0000 	ldr.w	r0, [r9]
 8018582:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8018586:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 801858a:	fb11 2103 	smlabb	r1, r1, r3, r2
 801858e:	eb08 0401 	add.w	r4, r8, r1
 8018592:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8018596:	f8df 81c4 	ldr.w	r8, [pc, #452]	; 801875c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801859a:	440a      	add	r2, r1
 801859c:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 80185a0:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 80185a4:	4413      	add	r3, r2
 80185a6:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 80185aa:	6803      	ldr	r3, [r0, #0]
 80185ac:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80185ae:	4798      	blx	r3
 80185b0:	f010 0f80 	tst.w	r0, #128	; 0x80
 80185b4:	f8d9 0000 	ldr.w	r0, [r9]
 80185b8:	d01f      	beq.n	80185fa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 80185ba:	2200      	movs	r2, #0
 80185bc:	6801      	ldr	r1, [r0, #0]
 80185be:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80185c2:	e9cd 2208 	strd	r2, r2, [sp, #32]
 80185c6:	220b      	movs	r2, #11
 80185c8:	9207      	str	r2, [sp, #28]
 80185ca:	f8b8 2000 	ldrh.w	r2, [r8]
 80185ce:	9206      	str	r2, [sp, #24]
 80185d0:	2201      	movs	r2, #1
 80185d2:	e9cd 5204 	strd	r5, r2, [sp, #16]
 80185d6:	f8bd 2034 	ldrh.w	r2, [sp, #52]	; 0x34
 80185da:	9203      	str	r2, [sp, #12]
 80185dc:	fa1f f28a 	uxth.w	r2, sl
 80185e0:	9202      	str	r2, [sp, #8]
 80185e2:	b2b6      	uxth	r6, r6
 80185e4:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 80185e8:	9200      	str	r2, [sp, #0]
 80185ea:	9601      	str	r6, [sp, #4]
 80185ec:	6bcd      	ldr	r5, [r1, #60]	; 0x3c
 80185ee:	463a      	mov	r2, r7
 80185f0:	4621      	mov	r1, r4
 80185f2:	47a8      	blx	r5
 80185f4:	b011      	add	sp, #68	; 0x44
 80185f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80185fa:	6803      	ldr	r3, [r0, #0]
 80185fc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80185fe:	4798      	blx	r3
 8018600:	f8b8 2000 	ldrh.w	r2, [r8]
 8018604:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8018608:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 801860c:	2dff      	cmp	r5, #255	; 0xff
 801860e:	fb02 1303 	mla	r3, r2, r3, r1
 8018612:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018616:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801861a:	fb0a fa02 	mul.w	sl, sl, r2
 801861e:	d062      	beq.n	80186e6 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 8018620:	ea6f 0c05 	mvn.w	ip, r5
 8018624:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8018628:	930a      	str	r3, [sp, #40]	; 0x28
 801862a:	b2ad      	uxth	r5, r5
 801862c:	fa5f fc8c 	uxtb.w	ip, ip
 8018630:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8018634:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018636:	4298      	cmp	r0, r3
 8018638:	f080 8085 	bcs.w	8018746 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801863c:	eb00 0b09 	add.w	fp, r0, r9
 8018640:	4558      	cmp	r0, fp
 8018642:	d246      	bcs.n	80186d2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 8018644:	f814 eb01 	ldrb.w	lr, [r4], #1
 8018648:	2303      	movs	r3, #3
 801864a:	2204      	movs	r2, #4
 801864c:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 8018650:	eb07 0a0e 	add.w	sl, r7, lr
 8018654:	8803      	ldrh	r3, [r0, #0]
 8018656:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801865a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801865e:	1219      	asrs	r1, r3, #8
 8018660:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018664:	fb18 f805 	smulbb	r8, r8, r5
 8018668:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801866c:	10da      	asrs	r2, r3, #3
 801866e:	fb01 810c 	mla	r1, r1, ip, r8
 8018672:	00db      	lsls	r3, r3, #3
 8018674:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8018678:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801867c:	b2db      	uxtb	r3, r3
 801867e:	fb18 f805 	smulbb	r8, r8, r5
 8018682:	fb1e fe05 	smulbb	lr, lr, r5
 8018686:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801868a:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801868e:	b289      	uxth	r1, r1
 8018690:	fb02 820c 	mla	r2, r2, ip, r8
 8018694:	fb03 e30c 	mla	r3, r3, ip, lr
 8018698:	b292      	uxth	r2, r2
 801869a:	b29b      	uxth	r3, r3
 801869c:	f101 0801 	add.w	r8, r1, #1
 80186a0:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 80186a4:	f103 0e01 	add.w	lr, r3, #1
 80186a8:	f102 0801 	add.w	r8, r2, #1
 80186ac:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 80186b0:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 80186b4:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80186b8:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 80186bc:	ea4f 1858 	mov.w	r8, r8, lsr #5
 80186c0:	ea4e 0101 	orr.w	r1, lr, r1
 80186c4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 80186c8:	ea41 0108 	orr.w	r1, r1, r8
 80186cc:	f820 1b02 	strh.w	r1, [r0], #2
 80186d0:	e7b6      	b.n	8018640 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 80186d2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80186d4:	881b      	ldrh	r3, [r3, #0]
 80186d6:	1b9b      	subs	r3, r3, r6
 80186d8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80186dc:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 80186e0:	1b9b      	subs	r3, r3, r6
 80186e2:	441c      	add	r4, r3
 80186e4:	e7a6      	b.n	8018634 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 80186e6:	491b      	ldr	r1, [pc, #108]	; (8018754 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 80186e8:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 80186ec:	2203      	movs	r2, #3
 80186ee:	2504      	movs	r5, #4
 80186f0:	4550      	cmp	r0, sl
 80186f2:	d228      	bcs.n	8018746 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 80186f4:	eb00 0c09 	add.w	ip, r0, r9
 80186f8:	4560      	cmp	r0, ip
 80186fa:	4623      	mov	r3, r4
 80186fc:	d219      	bcs.n	8018732 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 80186fe:	f893 e000 	ldrb.w	lr, [r3]
 8018702:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8018706:	eb07 0b0e 	add.w	fp, r7, lr
 801870a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801870e:	f89b 3002 	ldrb.w	r3, [fp, #2]
 8018712:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018716:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801871a:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801871e:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8018722:	ea43 030b 	orr.w	r3, r3, fp
 8018726:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801872a:	3401      	adds	r4, #1
 801872c:	f820 3b02 	strh.w	r3, [r0], #2
 8018730:	e7e2      	b.n	80186f8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 8018732:	f8b8 3000 	ldrh.w	r3, [r8]
 8018736:	1b9b      	subs	r3, r3, r6
 8018738:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801873c:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 8018740:	1b9b      	subs	r3, r3, r6
 8018742:	441c      	add	r4, r3
 8018744:	e7d4      	b.n	80186f0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 8018746:	4b04      	ldr	r3, [pc, #16]	; (8018758 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 8018748:	6818      	ldr	r0, [r3, #0]
 801874a:	6803      	ldr	r3, [r0, #0]
 801874c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801874e:	4798      	blx	r3
 8018750:	e750      	b.n	80185f4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 8018752:	bf00      	nop
 8018754:	fffff800 	.word	0xfffff800
 8018758:	20011e40 	.word	0x20011e40
 801875c:	20011e3a 	.word	0x20011e3a

08018760 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 8018760:	b430      	push	{r4, r5}
 8018762:	780d      	ldrb	r5, [r1, #0]
 8018764:	f89d 4008 	ldrb.w	r4, [sp, #8]
 8018768:	2d01      	cmp	r5, #1
 801876a:	d00a      	beq.n	8018782 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 801876c:	d305      	bcc.n	801877a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 801876e:	2d02      	cmp	r5, #2
 8018770:	d10b      	bne.n	801878a <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 8018772:	9402      	str	r4, [sp, #8]
 8018774:	bc30      	pop	{r4, r5}
 8018776:	f7ff be15 	b.w	80183a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801877a:	9402      	str	r4, [sp, #8]
 801877c:	bc30      	pop	{r4, r5}
 801877e:	f7ff bd2b 	b.w	80181d8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 8018782:	9402      	str	r4, [sp, #8]
 8018784:	bc30      	pop	{r4, r5}
 8018786:	f7ff bed9 	b.w	801853c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801878a:	bc30      	pop	{r4, r5}
 801878c:	4770      	bx	lr
	...

08018790 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 8018790:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018794:	4604      	mov	r4, r0
 8018796:	b087      	sub	sp, #28
 8018798:	6810      	ldr	r0, [r2, #0]
 801879a:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 801879e:	f8df 9238 	ldr.w	r9, [pc, #568]	; 80189d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 80187a2:	460e      	mov	r6, r1
 80187a4:	6851      	ldr	r1, [r2, #4]
 80187a6:	ad02      	add	r5, sp, #8
 80187a8:	c503      	stmia	r5!, {r0, r1}
 80187aa:	6818      	ldr	r0, [r3, #0]
 80187ac:	6859      	ldr	r1, [r3, #4]
 80187ae:	ad04      	add	r5, sp, #16
 80187b0:	4617      	mov	r7, r2
 80187b2:	c503      	stmia	r5!, {r0, r1}
 80187b4:	a802      	add	r0, sp, #8
 80187b6:	f7f8 fee9 	bl	801158c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80187ba:	4639      	mov	r1, r7
 80187bc:	a804      	add	r0, sp, #16
 80187be:	f7f8 ff29 	bl	8011614 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80187c2:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 80187c6:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 80187ca:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 80187ce:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 80187d2:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 80187d6:	fb11 2103 	smlabb	r1, r1, r3, r2
 80187da:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 80187de:	440e      	add	r6, r1
 80187e0:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80187e4:	440a      	add	r2, r1
 80187e6:	f8ad 2010 	strh.w	r2, [sp, #16]
 80187ea:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 80187ee:	4413      	add	r3, r2
 80187f0:	f8ad 3012 	strh.w	r3, [sp, #18]
 80187f4:	4b77      	ldr	r3, [pc, #476]	; (80189d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80187f6:	6818      	ldr	r0, [r3, #0]
 80187f8:	6803      	ldr	r3, [r0, #0]
 80187fa:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80187fc:	4798      	blx	r3
 80187fe:	f8b9 b000 	ldrh.w	fp, [r9]
 8018802:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018806:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801880a:	fb0b 2303 	mla	r3, fp, r3, r2
 801880e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018812:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8018816:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801881a:	fb05 f50b 	mul.w	r5, r5, fp
 801881e:	9300      	str	r3, [sp, #0]
 8018820:	d069      	beq.n	80188f6 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 8018822:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 8018826:	4558      	cmp	r0, fp
 8018828:	f080 80cc 	bcs.w	80189c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801882c:	9b00      	ldr	r3, [sp, #0]
 801882e:	18c3      	adds	r3, r0, r3
 8018830:	9301      	str	r3, [sp, #4]
 8018832:	4631      	mov	r1, r6
 8018834:	9b01      	ldr	r3, [sp, #4]
 8018836:	4298      	cmp	r0, r3
 8018838:	d24f      	bcs.n	80188da <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801883a:	f811 2b01 	ldrb.w	r2, [r1], #1
 801883e:	2a00      	cmp	r2, #0
 8018840:	d048      	beq.n	80188d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018842:	fb0a f202 	mul.w	r2, sl, r2
 8018846:	1c53      	adds	r3, r2, #1
 8018848:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801884c:	121b      	asrs	r3, r3, #8
 801884e:	d041      	beq.n	80188d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 8018850:	8802      	ldrh	r2, [r0, #0]
 8018852:	f8b4 c000 	ldrh.w	ip, [r4]
 8018856:	b29e      	uxth	r6, r3
 8018858:	1215      	asrs	r5, r2, #8
 801885a:	43db      	mvns	r3, r3
 801885c:	b2db      	uxtb	r3, r3
 801885e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018862:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8018866:	fb15 f503 	smulbb	r5, r5, r3
 801886a:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801886e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8018872:	00d2      	lsls	r2, r2, #3
 8018874:	fb07 5706 	mla	r7, r7, r6, r5
 8018878:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801887c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 8018880:	b2d2      	uxtb	r2, r2
 8018882:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018886:	b2bf      	uxth	r7, r7
 8018888:	fb1e fe03 	smulbb	lr, lr, r3
 801888c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8018890:	fa5f fc8c 	uxtb.w	ip, ip
 8018894:	fb12 f203 	smulbb	r2, r2, r3
 8018898:	fb05 e506 	mla	r5, r5, r6, lr
 801889c:	fb0c 2c06 	mla	ip, ip, r6, r2
 80188a0:	f107 0e01 	add.w	lr, r7, #1
 80188a4:	fa1f fc8c 	uxth.w	ip, ip
 80188a8:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 80188ac:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 80188b0:	f10c 0701 	add.w	r7, ip, #1
 80188b4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80188b8:	b2ad      	uxth	r5, r5
 80188ba:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80188be:	ea47 070e 	orr.w	r7, r7, lr
 80188c2:	f105 0e01 	add.w	lr, r5, #1
 80188c6:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 80188ca:	096d      	lsrs	r5, r5, #5
 80188cc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 80188d0:	432f      	orrs	r7, r5
 80188d2:	8007      	strh	r7, [r0, #0]
 80188d4:	3002      	adds	r0, #2
 80188d6:	3402      	adds	r4, #2
 80188d8:	e7ac      	b.n	8018834 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 80188da:	f8b9 3000 	ldrh.w	r3, [r9]
 80188de:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80188e2:	eba3 0308 	sub.w	r3, r3, r8
 80188e6:	eba6 0608 	sub.w	r6, r6, r8
 80188ea:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80188ee:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80188f2:	440e      	add	r6, r1
 80188f4:	e797      	b.n	8018826 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 80188f6:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 80188fa:	42a8      	cmp	r0, r5
 80188fc:	d262      	bcs.n	80189c4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 80188fe:	9b00      	ldr	r3, [sp, #0]
 8018900:	4631      	mov	r1, r6
 8018902:	eb00 0b03 	add.w	fp, r0, r3
 8018906:	4558      	cmp	r0, fp
 8018908:	d24e      	bcs.n	80189a8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801890a:	f811 3b01 	ldrb.w	r3, [r1], #1
 801890e:	b12b      	cbz	r3, 801891c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8018910:	2bff      	cmp	r3, #255	; 0xff
 8018912:	f8b4 e000 	ldrh.w	lr, [r4]
 8018916:	d104      	bne.n	8018922 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8018918:	f8a0 e000 	strh.w	lr, [r0]
 801891c:	3002      	adds	r0, #2
 801891e:	3402      	adds	r4, #2
 8018920:	e7f1      	b.n	8018906 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 8018922:	8802      	ldrh	r2, [r0, #0]
 8018924:	b29f      	uxth	r7, r3
 8018926:	1216      	asrs	r6, r2, #8
 8018928:	43db      	mvns	r3, r3
 801892a:	b2db      	uxtb	r3, r3
 801892c:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018930:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 8018934:	fb16 f603 	smulbb	r6, r6, r3
 8018938:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801893c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8018940:	00d2      	lsls	r2, r2, #3
 8018942:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018946:	b2d2      	uxtb	r2, r2
 8018948:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801894c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 8018950:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018954:	fb1a fa03 	smulbb	sl, sl, r3
 8018958:	fa1f fc8c 	uxth.w	ip, ip
 801895c:	fb12 f303 	smulbb	r3, r2, r3
 8018960:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8018964:	fa5f fe8e 	uxtb.w	lr, lr
 8018968:	fb06 a607 	mla	r6, r6, r7, sl
 801896c:	f10c 0201 	add.w	r2, ip, #1
 8018970:	fb0e 3307 	mla	r3, lr, r7, r3
 8018974:	b2b6      	uxth	r6, r6
 8018976:	b29b      	uxth	r3, r3
 8018978:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801897c:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 8018980:	f106 0a01 	add.w	sl, r6, #1
 8018984:	f103 0c01 	add.w	ip, r3, #1
 8018988:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801898c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 8018990:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8018994:	0976      	lsrs	r6, r6, #5
 8018996:	ea4c 0c02 	orr.w	ip, ip, r2
 801899a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 801899e:	ea4c 0c06 	orr.w	ip, ip, r6
 80189a2:	f8a0 c000 	strh.w	ip, [r0]
 80189a6:	e7b9      	b.n	801891c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 80189a8:	f8b9 3000 	ldrh.w	r3, [r9]
 80189ac:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 80189b0:	eba3 0308 	sub.w	r3, r3, r8
 80189b4:	eba6 0608 	sub.w	r6, r6, r8
 80189b8:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 80189bc:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 80189c0:	440e      	add	r6, r1
 80189c2:	e79a      	b.n	80188fa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 80189c4:	4b03      	ldr	r3, [pc, #12]	; (80189d4 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 80189c6:	6818      	ldr	r0, [r3, #0]
 80189c8:	6803      	ldr	r3, [r0, #0]
 80189ca:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80189cc:	4798      	blx	r3
 80189ce:	b007      	add	sp, #28
 80189d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80189d4:	20011e40 	.word	0x20011e40
 80189d8:	20011e3a 	.word	0x20011e3a

080189dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 80189dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80189e0:	b089      	sub	sp, #36	; 0x24
 80189e2:	4682      	mov	sl, r0
 80189e4:	f89d 604c 	ldrb.w	r6, [sp, #76]	; 0x4c
 80189e8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80189ea:	460f      	mov	r7, r1
 80189ec:	4691      	mov	r9, r2
 80189ee:	4698      	mov	r8, r3
 80189f0:	2e00      	cmp	r6, #0
 80189f2:	d036      	beq.n	8018a62 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 80189f4:	4608      	mov	r0, r1
 80189f6:	f7fc f863 	bl	8014ac0 <_ZNK8touchgfx6Bitmap8getWidthEv>
 80189fa:	4605      	mov	r5, r0
 80189fc:	4638      	mov	r0, r7
 80189fe:	f7fc f893 	bl	8014b28 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8018a02:	f8ad 000e 	strh.w	r0, [sp, #14]
 8018a06:	4638      	mov	r0, r7
 8018a08:	f8ad 9008 	strh.w	r9, [sp, #8]
 8018a0c:	f8ad 500c 	strh.w	r5, [sp, #12]
 8018a10:	f8ad 800a 	strh.w	r8, [sp, #10]
 8018a14:	f7fc f940 	bl	8014c98 <_ZNK8touchgfx6Bitmap7getDataEv>
 8018a18:	4605      	mov	r5, r0
 8018a1a:	4638      	mov	r0, r7
 8018a1c:	f7fc f96c 	bl	8014cf8 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8018a20:	4681      	mov	r9, r0
 8018a22:	4638      	mov	r0, r7
 8018a24:	f7fc f9bc 	bl	8014da0 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8018a28:	280b      	cmp	r0, #11
 8018a2a:	d81a      	bhi.n	8018a62 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018a2c:	e8df f000 	tbb	[pc, r0]
 8018a30:	1906aebd 	.word	0x1906aebd
 8018a34:	19191919 	.word	0x19191919
 8018a38:	b5191919 	.word	0xb5191919
 8018a3c:	4bb0      	ldr	r3, [pc, #704]	; (8018d00 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x324>)
 8018a3e:	6818      	ldr	r0, [r3, #0]
 8018a40:	6803      	ldr	r3, [r0, #0]
 8018a42:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8018a44:	4798      	blx	r3
 8018a46:	2eff      	cmp	r6, #255	; 0xff
 8018a48:	d121      	bne.n	8018a8e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 8018a4a:	0683      	lsls	r3, r0, #26
 8018a4c:	d41f      	bmi.n	8018a8e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb2>
 8018a4e:	4638      	mov	r0, r7
 8018a50:	f7fc f8ea 	bl	8014c28 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018a54:	b940      	cbnz	r0, 8018a68 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 8018a56:	4623      	mov	r3, r4
 8018a58:	aa02      	add	r2, sp, #8
 8018a5a:	4629      	mov	r1, r5
 8018a5c:	4650      	mov	r0, sl
 8018a5e:	f7ff fa2f 	bl	8017ec0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018a62:	b009      	add	sp, #36	; 0x24
 8018a64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018a68:	f10d 0818 	add.w	r8, sp, #24
 8018a6c:	4639      	mov	r1, r7
 8018a6e:	4640      	mov	r0, r8
 8018a70:	f7fc f88e 	bl	8014b90 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018a74:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018a78:	af04      	add	r7, sp, #16
 8018a7a:	e887 0003 	stmia.w	r7, {r0, r1}
 8018a7e:	4638      	mov	r0, r7
 8018a80:	4621      	mov	r1, r4
 8018a82:	f7f3 f94b 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 8018a86:	4638      	mov	r0, r7
 8018a88:	f7f3 f98b 	bl	800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018a8c:	b130      	cbz	r0, 8018a9c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xc0>
 8018a8e:	4633      	mov	r3, r6
 8018a90:	4622      	mov	r2, r4
 8018a92:	a902      	add	r1, sp, #8
 8018a94:	4628      	mov	r0, r5
 8018a96:	f7ff f92d 	bl	8017cf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018a9a:	e7e2      	b.n	8018a62 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018a9c:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018aa0:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018aa4:	4293      	cmp	r3, r2
 8018aa6:	dd12      	ble.n	8018ace <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xf2>
 8018aa8:	1a9b      	subs	r3, r3, r2
 8018aaa:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018aae:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018ab2:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018ab6:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018aba:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018abe:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018ac2:	4642      	mov	r2, r8
 8018ac4:	4633      	mov	r3, r6
 8018ac6:	a902      	add	r1, sp, #8
 8018ac8:	4628      	mov	r0, r5
 8018aca:	f7ff f913 	bl	8017cf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018ace:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018ad2:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018ad6:	4293      	cmp	r3, r2
 8018ad8:	dd12      	ble.n	8018b00 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x124>
 8018ada:	1a9b      	subs	r3, r3, r2
 8018adc:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018ae0:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018ae4:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018ae8:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018aec:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018af0:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018af4:	23ff      	movs	r3, #255	; 0xff
 8018af6:	4642      	mov	r2, r8
 8018af8:	a902      	add	r1, sp, #8
 8018afa:	4628      	mov	r0, r5
 8018afc:	f7ff f8fa 	bl	8017cf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018b00:	463b      	mov	r3, r7
 8018b02:	aa02      	add	r2, sp, #8
 8018b04:	4629      	mov	r1, r5
 8018b06:	4650      	mov	r0, sl
 8018b08:	f7ff f9da 	bl	8017ec0 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 8018b0c:	88a2      	ldrh	r2, [r4, #4]
 8018b0e:	8823      	ldrh	r3, [r4, #0]
 8018b10:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018b14:	4413      	add	r3, r2
 8018b16:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018b1a:	440a      	add	r2, r1
 8018b1c:	b29b      	uxth	r3, r3
 8018b1e:	b292      	uxth	r2, r2
 8018b20:	b211      	sxth	r1, r2
 8018b22:	b218      	sxth	r0, r3
 8018b24:	4288      	cmp	r0, r1
 8018b26:	dd12      	ble.n	8018b4e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x172>
 8018b28:	1a9b      	subs	r3, r3, r2
 8018b2a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8018b2e:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 8018b32:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018b36:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018b3a:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018b3e:	23ff      	movs	r3, #255	; 0xff
 8018b40:	4642      	mov	r2, r8
 8018b42:	a902      	add	r1, sp, #8
 8018b44:	4628      	mov	r0, r5
 8018b46:	f8ad 601a 	strh.w	r6, [sp, #26]
 8018b4a:	f7ff f8d3 	bl	8017cf4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 8018b4e:	88e2      	ldrh	r2, [r4, #6]
 8018b50:	8863      	ldrh	r3, [r4, #2]
 8018b52:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018b56:	4413      	add	r3, r2
 8018b58:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8018b5c:	440a      	add	r2, r1
 8018b5e:	b29b      	uxth	r3, r3
 8018b60:	b292      	uxth	r2, r2
 8018b62:	b211      	sxth	r1, r2
 8018b64:	b218      	sxth	r0, r3
 8018b66:	4288      	cmp	r0, r1
 8018b68:	f77f af7b 	ble.w	8018a62 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018b6c:	1a9b      	subs	r3, r3, r2
 8018b6e:	f9b4 6000 	ldrsh.w	r6, [r4]
 8018b72:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018b76:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018b7a:	f8ad 6018 	strh.w	r6, [sp, #24]
 8018b7e:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018b82:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018b86:	23ff      	movs	r3, #255	; 0xff
 8018b88:	4642      	mov	r2, r8
 8018b8a:	e782      	b.n	8018a92 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb6>
 8018b8c:	4633      	mov	r3, r6
 8018b8e:	4622      	mov	r2, r4
 8018b90:	a902      	add	r1, sp, #8
 8018b92:	4628      	mov	r0, r5
 8018b94:	f7ff fa04 	bl	8017fa0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 8018b98:	e763      	b.n	8018a62 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018b9a:	9600      	str	r6, [sp, #0]
 8018b9c:	4623      	mov	r3, r4
 8018b9e:	aa02      	add	r2, sp, #8
 8018ba0:	4649      	mov	r1, r9
 8018ba2:	4628      	mov	r0, r5
 8018ba4:	f7ff fddc 	bl	8018760 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 8018ba8:	e75b      	b.n	8018a62 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018baa:	4638      	mov	r0, r7
 8018bac:	f7fc f83c 	bl	8014c28 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 8018bb0:	b950      	cbnz	r0, 8018bc8 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1ec>
 8018bb2:	e9cd 6000 	strd	r6, r0, [sp]
 8018bb6:	f8da 3000 	ldr.w	r3, [sl]
 8018bba:	aa02      	add	r2, sp, #8
 8018bbc:	68de      	ldr	r6, [r3, #12]
 8018bbe:	4629      	mov	r1, r5
 8018bc0:	4623      	mov	r3, r4
 8018bc2:	4650      	mov	r0, sl
 8018bc4:	47b0      	blx	r6
 8018bc6:	e74c      	b.n	8018a62 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018bc8:	f10d 0818 	add.w	r8, sp, #24
 8018bcc:	4639      	mov	r1, r7
 8018bce:	4640      	mov	r0, r8
 8018bd0:	f7fb ffde 	bl	8014b90 <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8018bd4:	e898 0003 	ldmia.w	r8, {r0, r1}
 8018bd8:	af04      	add	r7, sp, #16
 8018bda:	e887 0003 	stmia.w	r7, {r0, r1}
 8018bde:	4638      	mov	r0, r7
 8018be0:	4621      	mov	r1, r4
 8018be2:	f7f3 f89b 	bl	800bd1c <_ZN8touchgfx4RectaNERKS0_>
 8018be6:	4638      	mov	r0, r7
 8018be8:	f7f3 f8db 	bl	800bda2 <_ZNK8touchgfx4Rect7isEmptyEv>
 8018bec:	b138      	cbz	r0, 8018bfe <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x222>
 8018bee:	9600      	str	r6, [sp, #0]
 8018bf0:	4623      	mov	r3, r4
 8018bf2:	aa02      	add	r2, sp, #8
 8018bf4:	4649      	mov	r1, r9
 8018bf6:	4628      	mov	r0, r5
 8018bf8:	f7ff fdca 	bl	8018790 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018bfc:	e731      	b.n	8018a62 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018bfe:	e9cd 6000 	strd	r6, r0, [sp]
 8018c02:	f8da 3000 	ldr.w	r3, [sl]
 8018c06:	aa02      	add	r2, sp, #8
 8018c08:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8018c0c:	4629      	mov	r1, r5
 8018c0e:	463b      	mov	r3, r7
 8018c10:	4650      	mov	r0, sl
 8018c12:	47d8      	blx	fp
 8018c14:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8018c18:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8018c1c:	4293      	cmp	r3, r2
 8018c1e:	dd13      	ble.n	8018c48 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x26c>
 8018c20:	f9b4 0000 	ldrsh.w	r0, [r4]
 8018c24:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8018c28:	f8ad 0018 	strh.w	r0, [sp, #24]
 8018c2c:	1a9b      	subs	r3, r3, r2
 8018c2e:	f8ad 201a 	strh.w	r2, [sp, #26]
 8018c32:	f8ad 101c 	strh.w	r1, [sp, #28]
 8018c36:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018c3a:	9600      	str	r6, [sp, #0]
 8018c3c:	4643      	mov	r3, r8
 8018c3e:	aa02      	add	r2, sp, #8
 8018c40:	4649      	mov	r1, r9
 8018c42:	4628      	mov	r0, r5
 8018c44:	f7ff fda4 	bl	8018790 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018c48:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8018c4c:	f9b4 2000 	ldrsh.w	r2, [r4]
 8018c50:	4293      	cmp	r3, r2
 8018c52:	dd13      	ble.n	8018c7c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2a0>
 8018c54:	1a9b      	subs	r3, r3, r2
 8018c56:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8018c5a:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8018c5e:	f8ad 2018 	strh.w	r2, [sp, #24]
 8018c62:	f8ad 001a 	strh.w	r0, [sp, #26]
 8018c66:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018c6a:	f8ad 101e 	strh.w	r1, [sp, #30]
 8018c6e:	9600      	str	r6, [sp, #0]
 8018c70:	4643      	mov	r3, r8
 8018c72:	aa02      	add	r2, sp, #8
 8018c74:	4649      	mov	r1, r9
 8018c76:	4628      	mov	r0, r5
 8018c78:	f7ff fd8a 	bl	8018790 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018c7c:	88a2      	ldrh	r2, [r4, #4]
 8018c7e:	8823      	ldrh	r3, [r4, #0]
 8018c80:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 8018c84:	4413      	add	r3, r2
 8018c86:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 8018c8a:	440a      	add	r2, r1
 8018c8c:	b29b      	uxth	r3, r3
 8018c8e:	b292      	uxth	r2, r2
 8018c90:	b211      	sxth	r1, r2
 8018c92:	b218      	sxth	r0, r3
 8018c94:	4288      	cmp	r0, r1
 8018c96:	dd13      	ble.n	8018cc0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2e4>
 8018c98:	1a9b      	subs	r3, r3, r2
 8018c9a:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 8018c9e:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 8018ca2:	f8ad 1018 	strh.w	r1, [sp, #24]
 8018ca6:	f8ad 301c 	strh.w	r3, [sp, #28]
 8018caa:	f8ad 001e 	strh.w	r0, [sp, #30]
 8018cae:	9600      	str	r6, [sp, #0]
 8018cb0:	4643      	mov	r3, r8
 8018cb2:	aa02      	add	r2, sp, #8
 8018cb4:	4649      	mov	r1, r9
 8018cb6:	4628      	mov	r0, r5
 8018cb8:	f8ad 701a 	strh.w	r7, [sp, #26]
 8018cbc:	f7ff fd68 	bl	8018790 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8018cc0:	88e2      	ldrh	r2, [r4, #6]
 8018cc2:	8863      	ldrh	r3, [r4, #2]
 8018cc4:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 8018cc8:	4413      	add	r3, r2
 8018cca:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 8018cce:	440a      	add	r2, r1
 8018cd0:	b29b      	uxth	r3, r3
 8018cd2:	b292      	uxth	r2, r2
 8018cd4:	b211      	sxth	r1, r2
 8018cd6:	b218      	sxth	r0, r3
 8018cd8:	4288      	cmp	r0, r1
 8018cda:	f77f aec2 	ble.w	8018a62 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x86>
 8018cde:	f9b4 7000 	ldrsh.w	r7, [r4]
 8018ce2:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8018ce6:	f8ad 7018 	strh.w	r7, [sp, #24]
 8018cea:	1a9b      	subs	r3, r3, r2
 8018cec:	f8ad 301e 	strh.w	r3, [sp, #30]
 8018cf0:	f8ad 101a 	strh.w	r1, [sp, #26]
 8018cf4:	f8ad 001c 	strh.w	r0, [sp, #28]
 8018cf8:	9600      	str	r6, [sp, #0]
 8018cfa:	4643      	mov	r3, r8
 8018cfc:	e779      	b.n	8018bf2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x216>
 8018cfe:	bf00      	nop
 8018d00:	20011e40 	.word	0x20011e40

08018d04 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8018d04:	b180      	cbz	r0, 8018d28 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 8018d06:	2903      	cmp	r1, #3
 8018d08:	d81c      	bhi.n	8018d44 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018d0a:	e8df f001 	tbb	[pc, r1]
 8018d0e:	1d02      	.short	0x1d02
 8018d10:	1f08      	.short	0x1f08
 8018d12:	4b10      	ldr	r3, [pc, #64]	; (8018d54 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018d14:	8818      	ldrh	r0, [r3, #0]
 8018d16:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018d1a:	4240      	negs	r0, r0
 8018d1c:	4770      	bx	lr
 8018d1e:	4b0d      	ldr	r3, [pc, #52]	; (8018d54 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8018d20:	8818      	ldrh	r0, [r3, #0]
 8018d22:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018d26:	4770      	bx	lr
 8018d28:	2903      	cmp	r1, #3
 8018d2a:	d80b      	bhi.n	8018d44 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 8018d2c:	a301      	add	r3, pc, #4	; (adr r3, 8018d34 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 8018d2e:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018d32:	bf00      	nop
 8018d34:	08018d49 	.word	0x08018d49
 8018d38:	08018d1f 	.word	0x08018d1f
 8018d3c:	08018d4d 	.word	0x08018d4d
 8018d40:	08018d13 	.word	0x08018d13
 8018d44:	2000      	movs	r0, #0
 8018d46:	4770      	bx	lr
 8018d48:	2001      	movs	r0, #1
 8018d4a:	4770      	bx	lr
 8018d4c:	f04f 30ff 	mov.w	r0, #4294967295
 8018d50:	4770      	bx	lr
 8018d52:	bf00      	nop
 8018d54:	20011e3a 	.word	0x20011e3a

08018d58 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 8018d58:	b180      	cbz	r0, 8018d7c <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 8018d5a:	2903      	cmp	r1, #3
 8018d5c:	d81c      	bhi.n	8018d98 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018d5e:	e8df f001 	tbb	[pc, r1]
 8018d62:	021d      	.short	0x021d
 8018d64:	071f      	.short	0x071f
 8018d66:	4b10      	ldr	r3, [pc, #64]	; (8018da8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018d68:	8818      	ldrh	r0, [r3, #0]
 8018d6a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018d6e:	4770      	bx	lr
 8018d70:	4b0d      	ldr	r3, [pc, #52]	; (8018da8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 8018d72:	8818      	ldrh	r0, [r3, #0]
 8018d74:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8018d78:	4240      	negs	r0, r0
 8018d7a:	4770      	bx	lr
 8018d7c:	2903      	cmp	r1, #3
 8018d7e:	d80b      	bhi.n	8018d98 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 8018d80:	a301      	add	r3, pc, #4	; (adr r3, 8018d88 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 8018d82:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 8018d86:	bf00      	nop
 8018d88:	08018d67 	.word	0x08018d67
 8018d8c:	08018da1 	.word	0x08018da1
 8018d90:	08018d71 	.word	0x08018d71
 8018d94:	08018d9d 	.word	0x08018d9d
 8018d98:	2000      	movs	r0, #0
 8018d9a:	4770      	bx	lr
 8018d9c:	2001      	movs	r0, #1
 8018d9e:	4770      	bx	lr
 8018da0:	f04f 30ff 	mov.w	r0, #4294967295
 8018da4:	4770      	bx	lr
 8018da6:	bf00      	nop
 8018da8:	20011e3a 	.word	0x20011e3a

08018dac <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8018dac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018db0:	b099      	sub	sp, #100	; 0x64
 8018db2:	910b      	str	r1, [sp, #44]	; 0x2c
 8018db4:	a914      	add	r1, sp, #80	; 0x50
 8018db6:	e881 000c 	stmia.w	r1, {r2, r3}
 8018dba:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	; 0x98
 8018dbe:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	; 0x8c
 8018dc2:	f891 900d 	ldrb.w	r9, [r1, #13]
 8018dc6:	9309      	str	r3, [sp, #36]	; 0x24
 8018dc8:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 8018dcc:	9310      	str	r3, [sp, #64]	; 0x40
 8018dce:	ea4f 1749 	mov.w	r7, r9, lsl #5
 8018dd2:	f89d 30b0 	ldrb.w	r3, [sp, #176]	; 0xb0
 8018dd6:	930c      	str	r3, [sp, #48]	; 0x30
 8018dd8:	f407 7380 	and.w	r3, r7, #256	; 0x100
 8018ddc:	798f      	ldrb	r7, [r1, #6]
 8018dde:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	; 0x88
 8018de2:	f8bd 5090 	ldrh.w	r5, [sp, #144]	; 0x90
 8018de6:	f8bd 6094 	ldrh.w	r6, [sp, #148]	; 0x94
 8018dea:	f89d 80ac 	ldrb.w	r8, [sp, #172]	; 0xac
 8018dee:	f89d a0b4 	ldrb.w	sl, [sp, #180]	; 0xb4
 8018df2:	431f      	orrs	r7, r3
 8018df4:	f000 8195 	beq.w	8019122 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018df8:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8018dfc:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8018e00:	f891 9007 	ldrb.w	r9, [r1, #7]
 8018e04:	ea59 0903 	orrs.w	r9, r9, r3
 8018e08:	f000 818b 	beq.w	8019122 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018e0c:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8018e10:	b29b      	uxth	r3, r3
 8018e12:	2d00      	cmp	r5, #0
 8018e14:	f000 812e 	beq.w	8019074 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 8018e18:	1aed      	subs	r5, r5, r3
 8018e1a:	b2ad      	uxth	r5, r5
 8018e1c:	042b      	lsls	r3, r5, #16
 8018e1e:	d502      	bpl.n	8018e26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 8018e20:	1b64      	subs	r4, r4, r5
 8018e22:	b224      	sxth	r4, r4
 8018e24:	2500      	movs	r5, #0
 8018e26:	f9b2 1000 	ldrsh.w	r1, [r2]
 8018e2a:	f8cd 9028 	str.w	r9, [sp, #40]	; 0x28
 8018e2e:	428c      	cmp	r4, r1
 8018e30:	b28b      	uxth	r3, r1
 8018e32:	bfbf      	itttt	lt
 8018e34:	18ed      	addlt	r5, r5, r3
 8018e36:	1b2c      	sublt	r4, r5, r4
 8018e38:	b2a5      	uxthlt	r5, r4
 8018e3a:	460c      	movlt	r4, r1
 8018e3c:	8891      	ldrh	r1, [r2, #4]
 8018e3e:	440b      	add	r3, r1
 8018e40:	b21b      	sxth	r3, r3
 8018e42:	930f      	str	r3, [sp, #60]	; 0x3c
 8018e44:	88d3      	ldrh	r3, [r2, #6]
 8018e46:	8852      	ldrh	r2, [r2, #2]
 8018e48:	4413      	add	r3, r2
 8018e4a:	b21b      	sxth	r3, r3
 8018e4c:	930d      	str	r3, [sp, #52]	; 0x34
 8018e4e:	4bbe      	ldr	r3, [pc, #760]	; (8019148 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 8018e50:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018e52:	f893 b000 	ldrb.w	fp, [r3]
 8018e56:	f10b 3cff 	add.w	ip, fp, #4294967295
 8018e5a:	f1dc 0300 	rsbs	r3, ip, #0
 8018e5e:	eb43 030c 	adc.w	r3, r3, ip
 8018e62:	930e      	str	r3, [sp, #56]	; 0x38
 8018e64:	4621      	mov	r1, r4
 8018e66:	4653      	mov	r3, sl
 8018e68:	a814      	add	r0, sp, #80	; 0x50
 8018e6a:	f7f8 fa09 	bl	8011280 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 8018e6e:	4621      	mov	r1, r4
 8018e70:	f8ad 005c 	strh.w	r0, [sp, #92]	; 0x5c
 8018e74:	4653      	mov	r3, sl
 8018e76:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8018e78:	a814      	add	r0, sp, #80	; 0x50
 8018e7a:	f7f8 fa1e 	bl	80112ba <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 8018e7e:	a918      	add	r1, sp, #96	; 0x60
 8018e80:	f821 0d02 	strh.w	r0, [r1, #-2]!
 8018e84:	a817      	add	r0, sp, #92	; 0x5c
 8018e86:	f7f8 fb3f 	bl	8011508 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 8018e8a:	f1ba 0f00 	cmp.w	sl, #0
 8018e8e:	f040 80f4 	bne.w	801907a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 8018e92:	f1bb 0f01 	cmp.w	fp, #1
 8018e96:	f040 80f8 	bne.w	801908a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 8018e9a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8018e9c:	2b00      	cmp	r3, #0
 8018e9e:	f040 8145 	bne.w	801912c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 8018ea2:	b2ba      	uxth	r2, r7
 8018ea4:	b905      	cbnz	r5, 8018ea8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 8018ea6:	b16e      	cbz	r6, 8018ec4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 8018ea8:	fb06 5302 	mla	r3, r6, r2, r5
 8018eac:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8018eae:	fb08 f303 	mul.w	r3, r8, r3
 8018eb2:	4631      	mov	r1, r6
 8018eb4:	f003 0607 	and.w	r6, r3, #7
 8018eb8:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 8018ebc:	9328      	str	r3, [sp, #160]	; 0xa0
 8018ebe:	eba9 0301 	sub.w	r3, r9, r1
 8018ec2:	930a      	str	r3, [sp, #40]	; 0x28
 8018ec4:	4651      	mov	r1, sl
 8018ec6:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018ec8:	f7ff ff1c 	bl	8018d04 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8018ecc:	4681      	mov	r9, r0
 8018ece:	980e      	ldr	r0, [sp, #56]	; 0x38
 8018ed0:	f7ff ff42 	bl	8018d58 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 8018ed4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8018ed6:	9909      	ldr	r1, [sp, #36]	; 0x24
 8018ed8:	eba3 0a01 	sub.w	sl, r3, r1
 8018edc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018ede:	459a      	cmp	sl, r3
 8018ee0:	bfa8      	it	ge
 8018ee2:	469a      	movge	sl, r3
 8018ee4:	f1ba 0f00 	cmp.w	sl, #0
 8018ee8:	4683      	mov	fp, r0
 8018eea:	f340 811a 	ble.w	8019122 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018eee:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8018ef0:	1b64      	subs	r4, r4, r5
 8018ef2:	1b1c      	subs	r4, r3, r4
 8018ef4:	42bc      	cmp	r4, r7
 8018ef6:	bfd4      	ite	le
 8018ef8:	ebc5 0504 	rsble	r5, r5, r4
 8018efc:	ebc5 0507 	rsbgt	r5, r5, r7
 8018f00:	2d00      	cmp	r5, #0
 8018f02:	f340 810e 	ble.w	8019122 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8018f06:	1b52      	subs	r2, r2, r5
 8018f08:	fb08 f302 	mul.w	r3, r8, r2
 8018f0c:	930f      	str	r3, [sp, #60]	; 0x3c
 8018f0e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8018f10:	2b00      	cmp	r3, #0
 8018f12:	f040 8116 	bne.w	8019142 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 8018f16:	4b8d      	ldr	r3, [pc, #564]	; (801914c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 8018f18:	6818      	ldr	r0, [r3, #0]
 8018f1a:	6803      	ldr	r3, [r0, #0]
 8018f1c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8018f1e:	4798      	blx	r3
 8018f20:	2301      	movs	r3, #1
 8018f22:	fa03 f308 	lsl.w	r3, r3, r8
 8018f26:	4a8a      	ldr	r2, [pc, #552]	; (8019150 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 8018f28:	3b01      	subs	r3, #1
 8018f2a:	b2db      	uxtb	r3, r3
 8018f2c:	8811      	ldrh	r1, [r2, #0]
 8018f2e:	930e      	str	r3, [sp, #56]	; 0x38
 8018f30:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	; 0x5c
 8018f34:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	; 0x5e
 8018f38:	fb01 2303 	mla	r3, r1, r3, r2
 8018f3c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 8018f40:	930a      	str	r3, [sp, #40]	; 0x28
 8018f42:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018f44:	f3c3 4307 	ubfx	r3, r3, #16, #8
 8018f48:	9313      	str	r3, [sp, #76]	; 0x4c
 8018f4a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018f4c:	0a19      	lsrs	r1, r3, #8
 8018f4e:	b2cb      	uxtb	r3, r1
 8018f50:	9312      	str	r3, [sp, #72]	; 0x48
 8018f52:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018f54:	b2db      	uxtb	r3, r3
 8018f56:	9311      	str	r3, [sp, #68]	; 0x44
 8018f58:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8018f5a:	095a      	lsrs	r2, r3, #5
 8018f5c:	4b7d      	ldr	r3, [pc, #500]	; (8019154 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 8018f5e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018f62:	400b      	ands	r3, r1
 8018f64:	4313      	orrs	r3, r2
 8018f66:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8018f68:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8018f6c:	4313      	orrs	r3, r2
 8018f6e:	b29b      	uxth	r3, r3
 8018f70:	9310      	str	r3, [sp, #64]	; 0x40
 8018f72:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018f74:	781a      	ldrb	r2, [r3, #0]
 8018f76:	ea4f 0349 	mov.w	r3, r9, lsl #1
 8018f7a:	4132      	asrs	r2, r6
 8018f7c:	fb05 b919 	mls	r9, r5, r9, fp
 8018f80:	fb03 fb05 	mul.w	fp, r3, r5
 8018f84:	b2d2      	uxtb	r2, r2
 8018f86:	930d      	str	r3, [sp, #52]	; 0x34
 8018f88:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 8018f8c:	f11a 3aff 	adds.w	sl, sl, #4294967295
 8018f90:	f0c0 80f5 	bcc.w	801917e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 8018f94:	f8dd c028 	ldr.w	ip, [sp, #40]	; 0x28
 8018f98:	46ae      	mov	lr, r5
 8018f9a:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8018f9e:	f0c0 80dd 	bcc.w	801915c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 8018fa2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018fa4:	4013      	ands	r3, r2
 8018fa6:	d055      	beq.n	8019054 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 8018fa8:	20ff      	movs	r0, #255	; 0xff
 8018faa:	990e      	ldr	r1, [sp, #56]	; 0x38
 8018fac:	fb90 f1f1 	sdiv	r1, r0, r1
 8018fb0:	434b      	muls	r3, r1
 8018fb2:	2bfe      	cmp	r3, #254	; 0xfe
 8018fb4:	dd03      	ble.n	8018fbe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 8018fb6:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018fb8:	4281      	cmp	r1, r0
 8018fba:	f000 80cd 	beq.w	8019158 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 8018fbe:	990c      	ldr	r1, [sp, #48]	; 0x30
 8018fc0:	f8bc 4000 	ldrh.w	r4, [ip]
 8018fc4:	fb11 f303 	smulbb	r3, r1, r3
 8018fc8:	b29b      	uxth	r3, r3
 8018fca:	1c59      	adds	r1, r3, #1
 8018fcc:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8018fd0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018fd4:	b29f      	uxth	r7, r3
 8018fd6:	43db      	mvns	r3, r3
 8018fd8:	b2db      	uxtb	r3, r3
 8018fda:	9309      	str	r3, [sp, #36]	; 0x24
 8018fdc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8018fde:	1220      	asrs	r0, r4, #8
 8018fe0:	fb13 f907 	smulbb	r9, r3, r7
 8018fe4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018fe8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018fea:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8018fee:	fb00 9003 	mla	r0, r0, r3, r9
 8018ff2:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8018ff4:	10e1      	asrs	r1, r4, #3
 8018ff6:	fb13 f907 	smulbb	r9, r3, r7
 8018ffa:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8018ffe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019000:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 8019004:	fb01 9103 	mla	r1, r1, r3, r9
 8019008:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801900a:	00e4      	lsls	r4, r4, #3
 801900c:	fb13 f707 	smulbb	r7, r3, r7
 8019010:	b2e4      	uxtb	r4, r4
 8019012:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019014:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8019018:	fb04 7403 	mla	r4, r4, r3, r7
 801901c:	b280      	uxth	r0, r0
 801901e:	b2a4      	uxth	r4, r4
 8019020:	1c43      	adds	r3, r0, #1
 8019022:	f104 0901 	add.w	r9, r4, #1
 8019026:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801902a:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801902e:	b289      	uxth	r1, r1
 8019030:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 8019034:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019038:	ea49 0000 	orr.w	r0, r9, r0
 801903c:	f101 0901 	add.w	r9, r1, #1
 8019040:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 8019044:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8019048:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801904c:	ea40 0009 	orr.w	r0, r0, r9
 8019050:	f8ac 0000 	strh.w	r0, [ip]
 8019054:	4446      	add	r6, r8
 8019056:	b2b6      	uxth	r6, r6
 8019058:	2e07      	cmp	r6, #7
 801905a:	bf81      	itttt	hi
 801905c:	9b28      	ldrhi	r3, [sp, #160]	; 0xa0
 801905e:	785a      	ldrbhi	r2, [r3, #1]
 8019060:	3301      	addhi	r3, #1
 8019062:	9328      	strhi	r3, [sp, #160]	; 0xa0
 8019064:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019066:	bf9a      	itte	ls
 8019068:	fa42 f208 	asrls.w	r2, r2, r8
 801906c:	b2d2      	uxtbls	r2, r2
 801906e:	2600      	movhi	r6, #0
 8019070:	449c      	add	ip, r3
 8019072:	e792      	b.n	8018f9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 8019074:	441c      	add	r4, r3
 8019076:	b224      	sxth	r4, r4
 8019078:	e6d5      	b.n	8018e26 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801907a:	f1ba 0f01 	cmp.w	sl, #1
 801907e:	f47f af0c 	bne.w	8018e9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8019082:	f1bb 0f01 	cmp.w	fp, #1
 8019086:	f47f af08 	bne.w	8018e9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801908a:	f8df b0c0 	ldr.w	fp, [pc, #192]	; 801914c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801908e:	f8db 0000 	ldr.w	r0, [fp]
 8019092:	6803      	ldr	r3, [r0, #0]
 8019094:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8019096:	4798      	blx	r3
 8019098:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 801909c:	465a      	mov	r2, fp
 801909e:	d006      	beq.n	80190ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 80190a0:	f1b8 0f04 	cmp.w	r8, #4
 80190a4:	d140      	bne.n	8019128 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 80190a6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80190a8:	3300      	adds	r3, #0
 80190aa:	bf18      	it	ne
 80190ac:	2301      	movne	r3, #1
 80190ae:	0580      	lsls	r0, r0, #22
 80190b0:	d56e      	bpl.n	8019190 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 80190b2:	f1b8 0f08 	cmp.w	r8, #8
 80190b6:	d16b      	bne.n	8019190 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 80190b8:	2b00      	cmp	r3, #0
 80190ba:	bf0c      	ite	eq
 80190bc:	f44f 7100 	moveq.w	r1, #512	; 0x200
 80190c0:	f44f 7180 	movne.w	r1, #256	; 0x100
 80190c4:	2d00      	cmp	r5, #0
 80190c6:	f47f aee8 	bne.w	8018e9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80190ca:	2e00      	cmp	r6, #0
 80190cc:	f47f aee5 	bne.w	8018e9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80190d0:	980f      	ldr	r0, [sp, #60]	; 0x3c
 80190d2:	19e3      	adds	r3, r4, r7
 80190d4:	4283      	cmp	r3, r0
 80190d6:	f73f aee0 	bgt.w	8018e9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80190da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80190dc:	980d      	ldr	r0, [sp, #52]	; 0x34
 80190de:	444b      	add	r3, r9
 80190e0:	4283      	cmp	r3, r0
 80190e2:	f73f aeda 	bgt.w	8018e9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 80190e6:	6810      	ldr	r0, [r2, #0]
 80190e8:	f8bd 305e 	ldrh.w	r3, [sp, #94]	; 0x5e
 80190ec:	6804      	ldr	r4, [r0, #0]
 80190ee:	f8bd 205c 	ldrh.w	r2, [sp, #92]	; 0x5c
 80190f2:	b2bf      	uxth	r7, r7
 80190f4:	f1b8 0f08 	cmp.w	r8, #8
 80190f8:	f04f 0500 	mov.w	r5, #0
 80190fc:	bf18      	it	ne
 80190fe:	3701      	addne	r7, #1
 8019100:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8019104:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019106:	9104      	str	r1, [sp, #16]
 8019108:	bf18      	it	ne
 801910a:	f027 0701 	bicne.w	r7, r7, #1
 801910e:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8019110:	bf18      	it	ne
 8019112:	b2bf      	uxthne	r7, r7
 8019114:	e9cd 7102 	strd	r7, r1, [sp, #8]
 8019118:	e9cd 7900 	strd	r7, r9, [sp]
 801911c:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801911e:	6d64      	ldr	r4, [r4, #84]	; 0x54
 8019120:	47a0      	blx	r4
 8019122:	b019      	add	sp, #100	; 0x64
 8019124:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019128:	2300      	movs	r3, #0
 801912a:	e7c0      	b.n	80190ae <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801912c:	2208      	movs	r2, #8
 801912e:	fb92 f3f8 	sdiv	r3, r2, r8
 8019132:	1e5a      	subs	r2, r3, #1
 8019134:	443a      	add	r2, r7
 8019136:	fb92 f2f3 	sdiv	r2, r2, r3
 801913a:	fb12 f203 	smulbb	r2, r2, r3
 801913e:	b292      	uxth	r2, r2
 8019140:	e6b0      	b.n	8018ea4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 8019142:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8019144:	e6ec      	b.n	8018f20 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 8019146:	bf00      	nop
 8019148:	20011e38 	.word	0x20011e38
 801914c:	20011e40 	.word	0x20011e40
 8019150:	20011e3a 	.word	0x20011e3a
 8019154:	00fff800 	.word	0x00fff800
 8019158:	9810      	ldr	r0, [sp, #64]	; 0x40
 801915a:	e779      	b.n	8019050 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801915c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801915e:	b153      	cbz	r3, 8019176 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 8019160:	441e      	add	r6, r3
 8019162:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8019164:	b2b6      	uxth	r6, r6
 8019166:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801916a:	f006 0607 	and.w	r6, r6, #7
 801916e:	781a      	ldrb	r2, [r3, #0]
 8019170:	9328      	str	r3, [sp, #160]	; 0xa0
 8019172:	4132      	asrs	r2, r6
 8019174:	b2d2      	uxtb	r2, r2
 8019176:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8019178:	445b      	add	r3, fp
 801917a:	930a      	str	r3, [sp, #40]	; 0x28
 801917c:	e706      	b.n	8018f8c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801917e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8019180:	2b00      	cmp	r3, #0
 8019182:	d1ce      	bne.n	8019122 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8019184:	4b05      	ldr	r3, [pc, #20]	; (801919c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 8019186:	6818      	ldr	r0, [r3, #0]
 8019188:	6803      	ldr	r3, [r0, #0]
 801918a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801918c:	4798      	blx	r3
 801918e:	e7c8      	b.n	8019122 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 8019190:	2b00      	cmp	r3, #0
 8019192:	f43f ae82 	beq.w	8018e9a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 8019196:	f44f 7180 	mov.w	r1, #256	; 0x100
 801919a:	e793      	b.n	80190c4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801919c:	20011e40 	.word	0x20011e40

080191a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 80191a0:	b538      	push	{r3, r4, r5, lr}
 80191a2:	4c15      	ldr	r4, [pc, #84]	; (80191f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 80191a4:	7823      	ldrb	r3, [r4, #0]
 80191a6:	f3bf 8f5b 	dmb	ish
 80191aa:	07da      	lsls	r2, r3, #31
 80191ac:	4605      	mov	r5, r0
 80191ae:	d40b      	bmi.n	80191c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80191b0:	4620      	mov	r0, r4
 80191b2:	f007 fa7f 	bl	80206b4 <__cxa_guard_acquire>
 80191b6:	b138      	cbz	r0, 80191c8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 80191b8:	4620      	mov	r0, r4
 80191ba:	f007 fa87 	bl	80206cc <__cxa_guard_release>
 80191be:	4a0f      	ldr	r2, [pc, #60]	; (80191fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80191c0:	490f      	ldr	r1, [pc, #60]	; (8019200 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 80191c2:	4810      	ldr	r0, [pc, #64]	; (8019204 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80191c4:	f007 fa6f 	bl	80206a6 <__aeabi_atexit>
 80191c8:	4c0f      	ldr	r4, [pc, #60]	; (8019208 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 80191ca:	7823      	ldrb	r3, [r4, #0]
 80191cc:	f3bf 8f5b 	dmb	ish
 80191d0:	07db      	lsls	r3, r3, #31
 80191d2:	d40b      	bmi.n	80191ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80191d4:	4620      	mov	r0, r4
 80191d6:	f007 fa6d 	bl	80206b4 <__cxa_guard_acquire>
 80191da:	b138      	cbz	r0, 80191ec <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 80191dc:	4620      	mov	r0, r4
 80191de:	f007 fa75 	bl	80206cc <__cxa_guard_release>
 80191e2:	4a06      	ldr	r2, [pc, #24]	; (80191fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 80191e4:	4909      	ldr	r1, [pc, #36]	; (801920c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 80191e6:	480a      	ldr	r0, [pc, #40]	; (8019210 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80191e8:	f007 fa5d 	bl	80206a6 <__aeabi_atexit>
 80191ec:	4b05      	ldr	r3, [pc, #20]	; (8019204 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 80191ee:	612b      	str	r3, [r5, #16]
 80191f0:	4b07      	ldr	r3, [pc, #28]	; (8019210 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 80191f2:	616b      	str	r3, [r5, #20]
 80191f4:	bd38      	pop	{r3, r4, r5, pc}
 80191f6:	bf00      	nop
 80191f8:	20011f14 	.word	0x20011f14
 80191fc:	20000000 	.word	0x20000000
 8019200:	080173b1 	.word	0x080173b1
 8019204:	200000a4 	.word	0x200000a4
 8019208:	20011f18 	.word	0x20011f18
 801920c:	080173af 	.word	0x080173af
 8019210:	200000a8 	.word	0x200000a8

08019214 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8019214:	b538      	push	{r3, r4, r5, lr}
 8019216:	4c15      	ldr	r4, [pc, #84]	; (801926c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8019218:	7823      	ldrb	r3, [r4, #0]
 801921a:	f3bf 8f5b 	dmb	ish
 801921e:	07da      	lsls	r2, r3, #31
 8019220:	4605      	mov	r5, r0
 8019222:	d40b      	bmi.n	801923c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8019224:	4620      	mov	r0, r4
 8019226:	f007 fa45 	bl	80206b4 <__cxa_guard_acquire>
 801922a:	b138      	cbz	r0, 801923c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801922c:	4620      	mov	r0, r4
 801922e:	f007 fa4d 	bl	80206cc <__cxa_guard_release>
 8019232:	4a0f      	ldr	r2, [pc, #60]	; (8019270 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019234:	490f      	ldr	r1, [pc, #60]	; (8019274 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8019236:	4810      	ldr	r0, [pc, #64]	; (8019278 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019238:	f007 fa35 	bl	80206a6 <__aeabi_atexit>
 801923c:	4c0f      	ldr	r4, [pc, #60]	; (801927c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801923e:	7823      	ldrb	r3, [r4, #0]
 8019240:	f3bf 8f5b 	dmb	ish
 8019244:	07db      	lsls	r3, r3, #31
 8019246:	d40b      	bmi.n	8019260 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8019248:	4620      	mov	r0, r4
 801924a:	f007 fa33 	bl	80206b4 <__cxa_guard_acquire>
 801924e:	b138      	cbz	r0, 8019260 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8019250:	4620      	mov	r0, r4
 8019252:	f007 fa3b 	bl	80206cc <__cxa_guard_release>
 8019256:	4a06      	ldr	r2, [pc, #24]	; (8019270 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8019258:	4909      	ldr	r1, [pc, #36]	; (8019280 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801925a:	480a      	ldr	r0, [pc, #40]	; (8019284 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801925c:	f007 fa23 	bl	80206a6 <__aeabi_atexit>
 8019260:	4b05      	ldr	r3, [pc, #20]	; (8019278 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8019262:	60ab      	str	r3, [r5, #8]
 8019264:	4b07      	ldr	r3, [pc, #28]	; (8019284 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8019266:	60eb      	str	r3, [r5, #12]
 8019268:	bd38      	pop	{r3, r4, r5, pc}
 801926a:	bf00      	nop
 801926c:	20011eec 	.word	0x20011eec
 8019270:	20000000 	.word	0x20000000
 8019274:	080173b5 	.word	0x080173b5
 8019278:	2000007c 	.word	0x2000007c
 801927c:	20011ef0 	.word	0x20011ef0
 8019280:	080173b3 	.word	0x080173b3
 8019284:	20000080 	.word	0x20000080

08019288 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8019288:	b510      	push	{r4, lr}
 801928a:	4604      	mov	r4, r0
 801928c:	f7ff ff88 	bl	80191a0 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8019290:	4620      	mov	r0, r4
 8019292:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019296:	f7ff bfbd 	b.w	8019214 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801929c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801929c:	b538      	push	{r3, r4, r5, lr}
 801929e:	4c15      	ldr	r4, [pc, #84]	; (80192f4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 80192a0:	7823      	ldrb	r3, [r4, #0]
 80192a2:	f3bf 8f5b 	dmb	ish
 80192a6:	07da      	lsls	r2, r3, #31
 80192a8:	4605      	mov	r5, r0
 80192aa:	d40b      	bmi.n	80192c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80192ac:	4620      	mov	r0, r4
 80192ae:	f007 fa01 	bl	80206b4 <__cxa_guard_acquire>
 80192b2:	b138      	cbz	r0, 80192c4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 80192b4:	4620      	mov	r0, r4
 80192b6:	f007 fa09 	bl	80206cc <__cxa_guard_release>
 80192ba:	4a0f      	ldr	r2, [pc, #60]	; (80192f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80192bc:	490f      	ldr	r1, [pc, #60]	; (80192fc <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 80192be:	4810      	ldr	r0, [pc, #64]	; (8019300 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80192c0:	f007 f9f1 	bl	80206a6 <__aeabi_atexit>
 80192c4:	4c0f      	ldr	r4, [pc, #60]	; (8019304 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 80192c6:	7823      	ldrb	r3, [r4, #0]
 80192c8:	f3bf 8f5b 	dmb	ish
 80192cc:	07db      	lsls	r3, r3, #31
 80192ce:	d40b      	bmi.n	80192e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80192d0:	4620      	mov	r0, r4
 80192d2:	f007 f9ef 	bl	80206b4 <__cxa_guard_acquire>
 80192d6:	b138      	cbz	r0, 80192e8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 80192d8:	4620      	mov	r0, r4
 80192da:	f007 f9f7 	bl	80206cc <__cxa_guard_release>
 80192de:	4a06      	ldr	r2, [pc, #24]	; (80192f8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 80192e0:	4909      	ldr	r1, [pc, #36]	; (8019308 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 80192e2:	480a      	ldr	r0, [pc, #40]	; (801930c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80192e4:	f007 f9df 	bl	80206a6 <__aeabi_atexit>
 80192e8:	4b05      	ldr	r3, [pc, #20]	; (8019300 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 80192ea:	622b      	str	r3, [r5, #32]
 80192ec:	4b07      	ldr	r3, [pc, #28]	; (801930c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 80192ee:	626b      	str	r3, [r5, #36]	; 0x24
 80192f0:	bd38      	pop	{r3, r4, r5, pc}
 80192f2:	bf00      	nop
 80192f4:	20011f1c 	.word	0x20011f1c
 80192f8:	20000000 	.word	0x20000000
 80192fc:	080173a9 	.word	0x080173a9
 8019300:	200000ac 	.word	0x200000ac
 8019304:	20011f20 	.word	0x20011f20
 8019308:	080173a7 	.word	0x080173a7
 801930c:	200000b0 	.word	0x200000b0

08019310 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8019310:	b538      	push	{r3, r4, r5, lr}
 8019312:	4c15      	ldr	r4, [pc, #84]	; (8019368 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8019314:	7823      	ldrb	r3, [r4, #0]
 8019316:	f3bf 8f5b 	dmb	ish
 801931a:	07da      	lsls	r2, r3, #31
 801931c:	4605      	mov	r5, r0
 801931e:	d40b      	bmi.n	8019338 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019320:	4620      	mov	r0, r4
 8019322:	f007 f9c7 	bl	80206b4 <__cxa_guard_acquire>
 8019326:	b138      	cbz	r0, 8019338 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8019328:	4620      	mov	r0, r4
 801932a:	f007 f9cf 	bl	80206cc <__cxa_guard_release>
 801932e:	4a0f      	ldr	r2, [pc, #60]	; (801936c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019330:	490f      	ldr	r1, [pc, #60]	; (8019370 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8019332:	4810      	ldr	r0, [pc, #64]	; (8019374 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8019334:	f007 f9b7 	bl	80206a6 <__aeabi_atexit>
 8019338:	4c0f      	ldr	r4, [pc, #60]	; (8019378 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801933a:	7823      	ldrb	r3, [r4, #0]
 801933c:	f3bf 8f5b 	dmb	ish
 8019340:	07db      	lsls	r3, r3, #31
 8019342:	d40b      	bmi.n	801935c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8019344:	4620      	mov	r0, r4
 8019346:	f007 f9b5 	bl	80206b4 <__cxa_guard_acquire>
 801934a:	b138      	cbz	r0, 801935c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801934c:	4620      	mov	r0, r4
 801934e:	f007 f9bd 	bl	80206cc <__cxa_guard_release>
 8019352:	4a06      	ldr	r2, [pc, #24]	; (801936c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8019354:	4909      	ldr	r1, [pc, #36]	; (801937c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8019356:	480a      	ldr	r0, [pc, #40]	; (8019380 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8019358:	f007 f9a5 	bl	80206a6 <__aeabi_atexit>
 801935c:	4b05      	ldr	r3, [pc, #20]	; (8019374 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801935e:	61ab      	str	r3, [r5, #24]
 8019360:	4b07      	ldr	r3, [pc, #28]	; (8019380 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8019362:	61eb      	str	r3, [r5, #28]
 8019364:	bd38      	pop	{r3, r4, r5, pc}
 8019366:	bf00      	nop
 8019368:	20011ef4 	.word	0x20011ef4
 801936c:	20000000 	.word	0x20000000
 8019370:	080173ad 	.word	0x080173ad
 8019374:	20000084 	.word	0x20000084
 8019378:	20011ef8 	.word	0x20011ef8
 801937c:	080173ab 	.word	0x080173ab
 8019380:	20000088 	.word	0x20000088

08019384 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8019384:	b510      	push	{r4, lr}
 8019386:	4604      	mov	r4, r0
 8019388:	f7ff ff88 	bl	801929c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801938c:	4620      	mov	r0, r4
 801938e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019392:	f7ff bfbd 	b.w	8019310 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08019398 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8019398:	b538      	push	{r3, r4, r5, lr}
 801939a:	4c15      	ldr	r4, [pc, #84]	; (80193f0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801939c:	7823      	ldrb	r3, [r4, #0]
 801939e:	f3bf 8f5b 	dmb	ish
 80193a2:	07da      	lsls	r2, r3, #31
 80193a4:	4605      	mov	r5, r0
 80193a6:	d40b      	bmi.n	80193c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80193a8:	4620      	mov	r0, r4
 80193aa:	f007 f983 	bl	80206b4 <__cxa_guard_acquire>
 80193ae:	b138      	cbz	r0, 80193c0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 80193b0:	4620      	mov	r0, r4
 80193b2:	f007 f98b 	bl	80206cc <__cxa_guard_release>
 80193b6:	4a0f      	ldr	r2, [pc, #60]	; (80193f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80193b8:	490f      	ldr	r1, [pc, #60]	; (80193f8 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 80193ba:	4810      	ldr	r0, [pc, #64]	; (80193fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80193bc:	f007 f973 	bl	80206a6 <__aeabi_atexit>
 80193c0:	4c0f      	ldr	r4, [pc, #60]	; (8019400 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 80193c2:	7823      	ldrb	r3, [r4, #0]
 80193c4:	f3bf 8f5b 	dmb	ish
 80193c8:	07db      	lsls	r3, r3, #31
 80193ca:	d40b      	bmi.n	80193e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80193cc:	4620      	mov	r0, r4
 80193ce:	f007 f971 	bl	80206b4 <__cxa_guard_acquire>
 80193d2:	b138      	cbz	r0, 80193e4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 80193d4:	4620      	mov	r0, r4
 80193d6:	f007 f979 	bl	80206cc <__cxa_guard_release>
 80193da:	4a06      	ldr	r2, [pc, #24]	; (80193f4 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 80193dc:	4909      	ldr	r1, [pc, #36]	; (8019404 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 80193de:	480a      	ldr	r0, [pc, #40]	; (8019408 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80193e0:	f007 f961 	bl	80206a6 <__aeabi_atexit>
 80193e4:	4b05      	ldr	r3, [pc, #20]	; (80193fc <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 80193e6:	632b      	str	r3, [r5, #48]	; 0x30
 80193e8:	4b07      	ldr	r3, [pc, #28]	; (8019408 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 80193ea:	636b      	str	r3, [r5, #52]	; 0x34
 80193ec:	bd38      	pop	{r3, r4, r5, pc}
 80193ee:	bf00      	nop
 80193f0:	20011f2c 	.word	0x20011f2c
 80193f4:	20000000 	.word	0x20000000
 80193f8:	080173a1 	.word	0x080173a1
 80193fc:	200000bc 	.word	0x200000bc
 8019400:	20011f30 	.word	0x20011f30
 8019404:	0801739f 	.word	0x0801739f
 8019408:	200000c0 	.word	0x200000c0

0801940c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801940c:	b538      	push	{r3, r4, r5, lr}
 801940e:	4c15      	ldr	r4, [pc, #84]	; (8019464 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8019410:	7823      	ldrb	r3, [r4, #0]
 8019412:	f3bf 8f5b 	dmb	ish
 8019416:	07da      	lsls	r2, r3, #31
 8019418:	4605      	mov	r5, r0
 801941a:	d40b      	bmi.n	8019434 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801941c:	4620      	mov	r0, r4
 801941e:	f007 f949 	bl	80206b4 <__cxa_guard_acquire>
 8019422:	b138      	cbz	r0, 8019434 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8019424:	4620      	mov	r0, r4
 8019426:	f007 f951 	bl	80206cc <__cxa_guard_release>
 801942a:	4a0f      	ldr	r2, [pc, #60]	; (8019468 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801942c:	490f      	ldr	r1, [pc, #60]	; (801946c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801942e:	4810      	ldr	r0, [pc, #64]	; (8019470 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8019430:	f007 f939 	bl	80206a6 <__aeabi_atexit>
 8019434:	4c0f      	ldr	r4, [pc, #60]	; (8019474 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8019436:	7823      	ldrb	r3, [r4, #0]
 8019438:	f3bf 8f5b 	dmb	ish
 801943c:	07db      	lsls	r3, r3, #31
 801943e:	d40b      	bmi.n	8019458 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019440:	4620      	mov	r0, r4
 8019442:	f007 f937 	bl	80206b4 <__cxa_guard_acquire>
 8019446:	b138      	cbz	r0, 8019458 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8019448:	4620      	mov	r0, r4
 801944a:	f007 f93f 	bl	80206cc <__cxa_guard_release>
 801944e:	4a06      	ldr	r2, [pc, #24]	; (8019468 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8019450:	4909      	ldr	r1, [pc, #36]	; (8019478 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8019452:	480a      	ldr	r0, [pc, #40]	; (801947c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8019454:	f007 f927 	bl	80206a6 <__aeabi_atexit>
 8019458:	4b05      	ldr	r3, [pc, #20]	; (8019470 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801945a:	62ab      	str	r3, [r5, #40]	; 0x28
 801945c:	4b07      	ldr	r3, [pc, #28]	; (801947c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801945e:	62eb      	str	r3, [r5, #44]	; 0x2c
 8019460:	bd38      	pop	{r3, r4, r5, pc}
 8019462:	bf00      	nop
 8019464:	20011efc 	.word	0x20011efc
 8019468:	20000000 	.word	0x20000000
 801946c:	080173a5 	.word	0x080173a5
 8019470:	2000008c 	.word	0x2000008c
 8019474:	20011f00 	.word	0x20011f00
 8019478:	080173a3 	.word	0x080173a3
 801947c:	20000090 	.word	0x20000090

08019480 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8019480:	b510      	push	{r4, lr}
 8019482:	4604      	mov	r4, r0
 8019484:	f7ff ff88 	bl	8019398 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8019488:	4620      	mov	r0, r4
 801948a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801948e:	f7ff bfbd 	b.w	801940c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08019494 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8019494:	b538      	push	{r3, r4, r5, lr}
 8019496:	4c15      	ldr	r4, [pc, #84]	; (80194ec <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8019498:	7823      	ldrb	r3, [r4, #0]
 801949a:	f3bf 8f5b 	dmb	ish
 801949e:	07da      	lsls	r2, r3, #31
 80194a0:	4605      	mov	r5, r0
 80194a2:	d40b      	bmi.n	80194bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80194a4:	4620      	mov	r0, r4
 80194a6:	f007 f905 	bl	80206b4 <__cxa_guard_acquire>
 80194aa:	b138      	cbz	r0, 80194bc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 80194ac:	4620      	mov	r0, r4
 80194ae:	f007 f90d 	bl	80206cc <__cxa_guard_release>
 80194b2:	4a0f      	ldr	r2, [pc, #60]	; (80194f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80194b4:	490f      	ldr	r1, [pc, #60]	; (80194f4 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 80194b6:	4810      	ldr	r0, [pc, #64]	; (80194f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80194b8:	f007 f8f5 	bl	80206a6 <__aeabi_atexit>
 80194bc:	4c0f      	ldr	r4, [pc, #60]	; (80194fc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 80194be:	7823      	ldrb	r3, [r4, #0]
 80194c0:	f3bf 8f5b 	dmb	ish
 80194c4:	07db      	lsls	r3, r3, #31
 80194c6:	d40b      	bmi.n	80194e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80194c8:	4620      	mov	r0, r4
 80194ca:	f007 f8f3 	bl	80206b4 <__cxa_guard_acquire>
 80194ce:	b138      	cbz	r0, 80194e0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 80194d0:	4620      	mov	r0, r4
 80194d2:	f007 f8fb 	bl	80206cc <__cxa_guard_release>
 80194d6:	4a06      	ldr	r2, [pc, #24]	; (80194f0 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 80194d8:	4909      	ldr	r1, [pc, #36]	; (8019500 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 80194da:	480a      	ldr	r0, [pc, #40]	; (8019504 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80194dc:	f007 f8e3 	bl	80206a6 <__aeabi_atexit>
 80194e0:	4b05      	ldr	r3, [pc, #20]	; (80194f8 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 80194e2:	652b      	str	r3, [r5, #80]	; 0x50
 80194e4:	4b07      	ldr	r3, [pc, #28]	; (8019504 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 80194e6:	656b      	str	r3, [r5, #84]	; 0x54
 80194e8:	bd38      	pop	{r3, r4, r5, pc}
 80194ea:	bf00      	nop
 80194ec:	20011f34 	.word	0x20011f34
 80194f0:	20000000 	.word	0x20000000
 80194f4:	08017391 	.word	0x08017391
 80194f8:	200000c4 	.word	0x200000c4
 80194fc:	20011f38 	.word	0x20011f38
 8019500:	0801738f 	.word	0x0801738f
 8019504:	200000c8 	.word	0x200000c8

08019508 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8019508:	b538      	push	{r3, r4, r5, lr}
 801950a:	4c15      	ldr	r4, [pc, #84]	; (8019560 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801950c:	7823      	ldrb	r3, [r4, #0]
 801950e:	f3bf 8f5b 	dmb	ish
 8019512:	07da      	lsls	r2, r3, #31
 8019514:	4605      	mov	r5, r0
 8019516:	d40b      	bmi.n	8019530 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019518:	4620      	mov	r0, r4
 801951a:	f007 f8cb 	bl	80206b4 <__cxa_guard_acquire>
 801951e:	b138      	cbz	r0, 8019530 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8019520:	4620      	mov	r0, r4
 8019522:	f007 f8d3 	bl	80206cc <__cxa_guard_release>
 8019526:	4a0f      	ldr	r2, [pc, #60]	; (8019564 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8019528:	490f      	ldr	r1, [pc, #60]	; (8019568 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801952a:	4810      	ldr	r0, [pc, #64]	; (801956c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801952c:	f007 f8bb 	bl	80206a6 <__aeabi_atexit>
 8019530:	4c0f      	ldr	r4, [pc, #60]	; (8019570 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8019532:	7823      	ldrb	r3, [r4, #0]
 8019534:	f3bf 8f5b 	dmb	ish
 8019538:	07db      	lsls	r3, r3, #31
 801953a:	d40b      	bmi.n	8019554 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801953c:	4620      	mov	r0, r4
 801953e:	f007 f8b9 	bl	80206b4 <__cxa_guard_acquire>
 8019542:	b138      	cbz	r0, 8019554 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8019544:	4620      	mov	r0, r4
 8019546:	f007 f8c1 	bl	80206cc <__cxa_guard_release>
 801954a:	4a06      	ldr	r2, [pc, #24]	; (8019564 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801954c:	4909      	ldr	r1, [pc, #36]	; (8019574 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801954e:	480a      	ldr	r0, [pc, #40]	; (8019578 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8019550:	f007 f8a9 	bl	80206a6 <__aeabi_atexit>
 8019554:	4b05      	ldr	r3, [pc, #20]	; (801956c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8019556:	64ab      	str	r3, [r5, #72]	; 0x48
 8019558:	4b07      	ldr	r3, [pc, #28]	; (8019578 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801955a:	64eb      	str	r3, [r5, #76]	; 0x4c
 801955c:	bd38      	pop	{r3, r4, r5, pc}
 801955e:	bf00      	nop
 8019560:	20011f3c 	.word	0x20011f3c
 8019564:	20000000 	.word	0x20000000
 8019568:	08017395 	.word	0x08017395
 801956c:	200000cc 	.word	0x200000cc
 8019570:	20011f40 	.word	0x20011f40
 8019574:	08017393 	.word	0x08017393
 8019578:	200000d0 	.word	0x200000d0

0801957c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801957c:	b538      	push	{r3, r4, r5, lr}
 801957e:	4c15      	ldr	r4, [pc, #84]	; (80195d4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8019580:	7823      	ldrb	r3, [r4, #0]
 8019582:	f3bf 8f5b 	dmb	ish
 8019586:	07da      	lsls	r2, r3, #31
 8019588:	4605      	mov	r5, r0
 801958a:	d40b      	bmi.n	80195a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801958c:	4620      	mov	r0, r4
 801958e:	f007 f891 	bl	80206b4 <__cxa_guard_acquire>
 8019592:	b138      	cbz	r0, 80195a4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8019594:	4620      	mov	r0, r4
 8019596:	f007 f899 	bl	80206cc <__cxa_guard_release>
 801959a:	4a0f      	ldr	r2, [pc, #60]	; (80195d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801959c:	490f      	ldr	r1, [pc, #60]	; (80195dc <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801959e:	4810      	ldr	r0, [pc, #64]	; (80195e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80195a0:	f007 f881 	bl	80206a6 <__aeabi_atexit>
 80195a4:	4c0f      	ldr	r4, [pc, #60]	; (80195e4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 80195a6:	7823      	ldrb	r3, [r4, #0]
 80195a8:	f3bf 8f5b 	dmb	ish
 80195ac:	07db      	lsls	r3, r3, #31
 80195ae:	d40b      	bmi.n	80195c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80195b0:	4620      	mov	r0, r4
 80195b2:	f007 f87f 	bl	80206b4 <__cxa_guard_acquire>
 80195b6:	b138      	cbz	r0, 80195c8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 80195b8:	4620      	mov	r0, r4
 80195ba:	f007 f887 	bl	80206cc <__cxa_guard_release>
 80195be:	4a06      	ldr	r2, [pc, #24]	; (80195d8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 80195c0:	4909      	ldr	r1, [pc, #36]	; (80195e8 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 80195c2:	480a      	ldr	r0, [pc, #40]	; (80195ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80195c4:	f007 f86f 	bl	80206a6 <__aeabi_atexit>
 80195c8:	4b05      	ldr	r3, [pc, #20]	; (80195e0 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 80195ca:	642b      	str	r3, [r5, #64]	; 0x40
 80195cc:	4b07      	ldr	r3, [pc, #28]	; (80195ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 80195ce:	646b      	str	r3, [r5, #68]	; 0x44
 80195d0:	bd38      	pop	{r3, r4, r5, pc}
 80195d2:	bf00      	nop
 80195d4:	20011f04 	.word	0x20011f04
 80195d8:	20000000 	.word	0x20000000
 80195dc:	08017399 	.word	0x08017399
 80195e0:	20000094 	.word	0x20000094
 80195e4:	20011f08 	.word	0x20011f08
 80195e8:	08017397 	.word	0x08017397
 80195ec:	20000098 	.word	0x20000098

080195f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 80195f0:	b538      	push	{r3, r4, r5, lr}
 80195f2:	4c15      	ldr	r4, [pc, #84]	; (8019648 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 80195f4:	7823      	ldrb	r3, [r4, #0]
 80195f6:	f3bf 8f5b 	dmb	ish
 80195fa:	07da      	lsls	r2, r3, #31
 80195fc:	4605      	mov	r5, r0
 80195fe:	d40b      	bmi.n	8019618 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019600:	4620      	mov	r0, r4
 8019602:	f007 f857 	bl	80206b4 <__cxa_guard_acquire>
 8019606:	b138      	cbz	r0, 8019618 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8019608:	4620      	mov	r0, r4
 801960a:	f007 f85f 	bl	80206cc <__cxa_guard_release>
 801960e:	4a0f      	ldr	r2, [pc, #60]	; (801964c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019610:	490f      	ldr	r1, [pc, #60]	; (8019650 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8019612:	4810      	ldr	r0, [pc, #64]	; (8019654 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8019614:	f007 f847 	bl	80206a6 <__aeabi_atexit>
 8019618:	4c0f      	ldr	r4, [pc, #60]	; (8019658 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801961a:	7823      	ldrb	r3, [r4, #0]
 801961c:	f3bf 8f5b 	dmb	ish
 8019620:	07db      	lsls	r3, r3, #31
 8019622:	d40b      	bmi.n	801963c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8019624:	4620      	mov	r0, r4
 8019626:	f007 f845 	bl	80206b4 <__cxa_guard_acquire>
 801962a:	b138      	cbz	r0, 801963c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801962c:	4620      	mov	r0, r4
 801962e:	f007 f84d 	bl	80206cc <__cxa_guard_release>
 8019632:	4a06      	ldr	r2, [pc, #24]	; (801964c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8019634:	4909      	ldr	r1, [pc, #36]	; (801965c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8019636:	480a      	ldr	r0, [pc, #40]	; (8019660 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019638:	f007 f835 	bl	80206a6 <__aeabi_atexit>
 801963c:	4b05      	ldr	r3, [pc, #20]	; (8019654 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801963e:	63ab      	str	r3, [r5, #56]	; 0x38
 8019640:	4b07      	ldr	r3, [pc, #28]	; (8019660 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8019642:	63eb      	str	r3, [r5, #60]	; 0x3c
 8019644:	bd38      	pop	{r3, r4, r5, pc}
 8019646:	bf00      	nop
 8019648:	20011f24 	.word	0x20011f24
 801964c:	20000000 	.word	0x20000000
 8019650:	0801739d 	.word	0x0801739d
 8019654:	200000b4 	.word	0x200000b4
 8019658:	20011f28 	.word	0x20011f28
 801965c:	0801739b 	.word	0x0801739b
 8019660:	200000b8 	.word	0x200000b8

08019664 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8019664:	b510      	push	{r4, lr}
 8019666:	4604      	mov	r4, r0
 8019668:	f7ff ff14 	bl	8019494 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801966c:	4620      	mov	r0, r4
 801966e:	f7ff ff85 	bl	801957c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8019672:	4620      	mov	r0, r4
 8019674:	f7ff ff48 	bl	8019508 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8019678:	4620      	mov	r0, r4
 801967a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801967e:	f7ff bfb7 	b.w	80195f0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08019684 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8019684:	b538      	push	{r3, r4, r5, lr}
 8019686:	4c15      	ldr	r4, [pc, #84]	; (80196dc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8019688:	7823      	ldrb	r3, [r4, #0]
 801968a:	f3bf 8f5b 	dmb	ish
 801968e:	07da      	lsls	r2, r3, #31
 8019690:	4605      	mov	r5, r0
 8019692:	d40b      	bmi.n	80196ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8019694:	4620      	mov	r0, r4
 8019696:	f007 f80d 	bl	80206b4 <__cxa_guard_acquire>
 801969a:	b138      	cbz	r0, 80196ac <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801969c:	4620      	mov	r0, r4
 801969e:	f007 f815 	bl	80206cc <__cxa_guard_release>
 80196a2:	4a0f      	ldr	r2, [pc, #60]	; (80196e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80196a4:	490f      	ldr	r1, [pc, #60]	; (80196e4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 80196a6:	4810      	ldr	r0, [pc, #64]	; (80196e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80196a8:	f006 fffd 	bl	80206a6 <__aeabi_atexit>
 80196ac:	4c0f      	ldr	r4, [pc, #60]	; (80196ec <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 80196ae:	7823      	ldrb	r3, [r4, #0]
 80196b0:	f3bf 8f5b 	dmb	ish
 80196b4:	07db      	lsls	r3, r3, #31
 80196b6:	d40b      	bmi.n	80196d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80196b8:	4620      	mov	r0, r4
 80196ba:	f006 fffb 	bl	80206b4 <__cxa_guard_acquire>
 80196be:	b138      	cbz	r0, 80196d0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 80196c0:	4620      	mov	r0, r4
 80196c2:	f007 f803 	bl	80206cc <__cxa_guard_release>
 80196c6:	4a06      	ldr	r2, [pc, #24]	; (80196e0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 80196c8:	4909      	ldr	r1, [pc, #36]	; (80196f0 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 80196ca:	480a      	ldr	r0, [pc, #40]	; (80196f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80196cc:	f006 ffeb 	bl	80206a6 <__aeabi_atexit>
 80196d0:	4b05      	ldr	r3, [pc, #20]	; (80196e8 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 80196d2:	662b      	str	r3, [r5, #96]	; 0x60
 80196d4:	4b07      	ldr	r3, [pc, #28]	; (80196f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 80196d6:	666b      	str	r3, [r5, #100]	; 0x64
 80196d8:	bd38      	pop	{r3, r4, r5, pc}
 80196da:	bf00      	nop
 80196dc:	20011f0c 	.word	0x20011f0c
 80196e0:	20000000 	.word	0x20000000
 80196e4:	08017389 	.word	0x08017389
 80196e8:	2000009c 	.word	0x2000009c
 80196ec:	20011f10 	.word	0x20011f10
 80196f0:	08017387 	.word	0x08017387
 80196f4:	200000a0 	.word	0x200000a0

080196f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 80196f8:	b538      	push	{r3, r4, r5, lr}
 80196fa:	4c15      	ldr	r4, [pc, #84]	; (8019750 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 80196fc:	7823      	ldrb	r3, [r4, #0]
 80196fe:	f3bf 8f5b 	dmb	ish
 8019702:	07da      	lsls	r2, r3, #31
 8019704:	4605      	mov	r5, r0
 8019706:	d40b      	bmi.n	8019720 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019708:	4620      	mov	r0, r4
 801970a:	f006 ffd3 	bl	80206b4 <__cxa_guard_acquire>
 801970e:	b138      	cbz	r0, 8019720 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8019710:	4620      	mov	r0, r4
 8019712:	f006 ffdb 	bl	80206cc <__cxa_guard_release>
 8019716:	4a0f      	ldr	r2, [pc, #60]	; (8019754 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8019718:	490f      	ldr	r1, [pc, #60]	; (8019758 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801971a:	4810      	ldr	r0, [pc, #64]	; (801975c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801971c:	f006 ffc3 	bl	80206a6 <__aeabi_atexit>
 8019720:	4c0f      	ldr	r4, [pc, #60]	; (8019760 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8019722:	7823      	ldrb	r3, [r4, #0]
 8019724:	f3bf 8f5b 	dmb	ish
 8019728:	07db      	lsls	r3, r3, #31
 801972a:	d40b      	bmi.n	8019744 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801972c:	4620      	mov	r0, r4
 801972e:	f006 ffc1 	bl	80206b4 <__cxa_guard_acquire>
 8019732:	b138      	cbz	r0, 8019744 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 8019734:	4620      	mov	r0, r4
 8019736:	f006 ffc9 	bl	80206cc <__cxa_guard_release>
 801973a:	4a06      	ldr	r2, [pc, #24]	; (8019754 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801973c:	4909      	ldr	r1, [pc, #36]	; (8019764 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801973e:	480a      	ldr	r0, [pc, #40]	; (8019768 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 8019740:	f006 ffb1 	bl	80206a6 <__aeabi_atexit>
 8019744:	4b05      	ldr	r3, [pc, #20]	; (801975c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 8019746:	65ab      	str	r3, [r5, #88]	; 0x58
 8019748:	4b07      	ldr	r3, [pc, #28]	; (8019768 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801974a:	65eb      	str	r3, [r5, #92]	; 0x5c
 801974c:	bd38      	pop	{r3, r4, r5, pc}
 801974e:	bf00      	nop
 8019750:	20011ee4 	.word	0x20011ee4
 8019754:	20000000 	.word	0x20000000
 8019758:	0801738d 	.word	0x0801738d
 801975c:	20000074 	.word	0x20000074
 8019760:	20011ee8 	.word	0x20011ee8
 8019764:	0801738b 	.word	0x0801738b
 8019768:	20000078 	.word	0x20000078

0801976c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801976c:	b510      	push	{r4, lr}
 801976e:	4604      	mov	r4, r0
 8019770:	f7ff ff88 	bl	8019684 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 8019774:	4620      	mov	r0, r4
 8019776:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801977a:	f7ff bfbd 	b.w	80196f8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

08019780 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 8019780:	b538      	push	{r3, r4, r5, lr}
 8019782:	4c15      	ldr	r4, [pc, #84]	; (80197d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 8019784:	7823      	ldrb	r3, [r4, #0]
 8019786:	f3bf 8f5b 	dmb	ish
 801978a:	07da      	lsls	r2, r3, #31
 801978c:	4605      	mov	r5, r0
 801978e:	d40b      	bmi.n	80197a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019790:	4620      	mov	r0, r4
 8019792:	f006 ff8f 	bl	80206b4 <__cxa_guard_acquire>
 8019796:	b138      	cbz	r0, 80197a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8019798:	4620      	mov	r0, r4
 801979a:	f006 ff97 	bl	80206cc <__cxa_guard_release>
 801979e:	4a0f      	ldr	r2, [pc, #60]	; (80197dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80197a0:	490f      	ldr	r1, [pc, #60]	; (80197e0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 80197a2:	4810      	ldr	r0, [pc, #64]	; (80197e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80197a4:	f006 ff7f 	bl	80206a6 <__aeabi_atexit>
 80197a8:	4c0f      	ldr	r4, [pc, #60]	; (80197e8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 80197aa:	7823      	ldrb	r3, [r4, #0]
 80197ac:	f3bf 8f5b 	dmb	ish
 80197b0:	07db      	lsls	r3, r3, #31
 80197b2:	d40b      	bmi.n	80197cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80197b4:	4620      	mov	r0, r4
 80197b6:	f006 ff7d 	bl	80206b4 <__cxa_guard_acquire>
 80197ba:	b138      	cbz	r0, 80197cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 80197bc:	4620      	mov	r0, r4
 80197be:	f006 ff85 	bl	80206cc <__cxa_guard_release>
 80197c2:	4a06      	ldr	r2, [pc, #24]	; (80197dc <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 80197c4:	4909      	ldr	r1, [pc, #36]	; (80197ec <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 80197c6:	480a      	ldr	r0, [pc, #40]	; (80197f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80197c8:	f006 ff6d 	bl	80206a6 <__aeabi_atexit>
 80197cc:	4b05      	ldr	r3, [pc, #20]	; (80197e4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 80197ce:	672b      	str	r3, [r5, #112]	; 0x70
 80197d0:	4b07      	ldr	r3, [pc, #28]	; (80197f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 80197d2:	676b      	str	r3, [r5, #116]	; 0x74
 80197d4:	bd38      	pop	{r3, r4, r5, pc}
 80197d6:	bf00      	nop
 80197d8:	20011edc 	.word	0x20011edc
 80197dc:	20000000 	.word	0x20000000
 80197e0:	08017381 	.word	0x08017381
 80197e4:	2000006c 	.word	0x2000006c
 80197e8:	20011ee0 	.word	0x20011ee0
 80197ec:	0801737f 	.word	0x0801737f
 80197f0:	20000070 	.word	0x20000070

080197f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 80197f4:	b538      	push	{r3, r4, r5, lr}
 80197f6:	4c15      	ldr	r4, [pc, #84]	; (801984c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 80197f8:	7823      	ldrb	r3, [r4, #0]
 80197fa:	f3bf 8f5b 	dmb	ish
 80197fe:	07da      	lsls	r2, r3, #31
 8019800:	4605      	mov	r5, r0
 8019802:	d40b      	bmi.n	801981c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8019804:	4620      	mov	r0, r4
 8019806:	f006 ff55 	bl	80206b4 <__cxa_guard_acquire>
 801980a:	b138      	cbz	r0, 801981c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801980c:	4620      	mov	r0, r4
 801980e:	f006 ff5d 	bl	80206cc <__cxa_guard_release>
 8019812:	4a0f      	ldr	r2, [pc, #60]	; (8019850 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019814:	490f      	ldr	r1, [pc, #60]	; (8019854 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8019816:	4810      	ldr	r0, [pc, #64]	; (8019858 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019818:	f006 ff45 	bl	80206a6 <__aeabi_atexit>
 801981c:	4c0f      	ldr	r4, [pc, #60]	; (801985c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801981e:	7823      	ldrb	r3, [r4, #0]
 8019820:	f3bf 8f5b 	dmb	ish
 8019824:	07db      	lsls	r3, r3, #31
 8019826:	d40b      	bmi.n	8019840 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019828:	4620      	mov	r0, r4
 801982a:	f006 ff43 	bl	80206b4 <__cxa_guard_acquire>
 801982e:	b138      	cbz	r0, 8019840 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8019830:	4620      	mov	r0, r4
 8019832:	f006 ff4b 	bl	80206cc <__cxa_guard_release>
 8019836:	4a06      	ldr	r2, [pc, #24]	; (8019850 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8019838:	4909      	ldr	r1, [pc, #36]	; (8019860 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801983a:	480a      	ldr	r0, [pc, #40]	; (8019864 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801983c:	f006 ff33 	bl	80206a6 <__aeabi_atexit>
 8019840:	4b05      	ldr	r3, [pc, #20]	; (8019858 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8019842:	66ab      	str	r3, [r5, #104]	; 0x68
 8019844:	4b07      	ldr	r3, [pc, #28]	; (8019864 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 8019846:	66eb      	str	r3, [r5, #108]	; 0x6c
 8019848:	bd38      	pop	{r3, r4, r5, pc}
 801984a:	bf00      	nop
 801984c:	20011ed4 	.word	0x20011ed4
 8019850:	20000000 	.word	0x20000000
 8019854:	08017385 	.word	0x08017385
 8019858:	20000064 	.word	0x20000064
 801985c:	20011ed8 	.word	0x20011ed8
 8019860:	08017383 	.word	0x08017383
 8019864:	20000068 	.word	0x20000068

08019868 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 8019868:	b510      	push	{r4, lr}
 801986a:	4604      	mov	r4, r0
 801986c:	f7ff ff88 	bl	8019780 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 8019870:	4620      	mov	r0, r4
 8019872:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019876:	f7ff bfbd 	b.w	80197f4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801987a <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801987a:	b510      	push	{r4, lr}
 801987c:	4604      	mov	r4, r0
 801987e:	f7ff fff3 	bl	8019868 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 8019882:	4620      	mov	r0, r4
 8019884:	f7ff ff72 	bl	801976c <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 8019888:	4620      	mov	r0, r4
 801988a:	f7ff fdf9 	bl	8019480 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801988e:	4620      	mov	r0, r4
 8019890:	f7ff fcfa 	bl	8019288 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8019894:	4620      	mov	r0, r4
 8019896:	f7ff fd75 	bl	8019384 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801989a:	4620      	mov	r0, r4
 801989c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80198a0:	f7ff bee0 	b.w	8019664 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

080198a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 80198a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80198a8:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	; 0x2c
 80198ac:	f9bd e024 	ldrsh.w	lr, [sp, #36]	; 0x24
 80198b0:	f9bd b028 	ldrsh.w	fp, [sp, #40]	; 0x28
 80198b4:	f89d 9034 	ldrb.w	r9, [sp, #52]	; 0x34
 80198b8:	f89d 7038 	ldrb.w	r7, [sp, #56]	; 0x38
 80198bc:	f89d 603c 	ldrb.w	r6, [sp, #60]	; 0x3c
 80198c0:	8808      	ldrh	r0, [r1, #0]
 80198c2:	fb05 4c0e 	mla	ip, r5, lr, r4
 80198c6:	2d00      	cmp	r5, #0
 80198c8:	eb02 0a0c 	add.w	sl, r2, ip
 80198cc:	f2c0 80b0 	blt.w	8019a30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80198d0:	45ab      	cmp	fp, r5
 80198d2:	f340 80ad 	ble.w	8019a30 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 80198d6:	2c00      	cmp	r4, #0
 80198d8:	f2c0 80a8 	blt.w	8019a2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80198dc:	45a6      	cmp	lr, r4
 80198de:	f340 80a5 	ble.w	8019a2c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 80198e2:	f812 200c 	ldrb.w	r2, [r2, ip]
 80198e6:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 80198ea:	1c62      	adds	r2, r4, #1
 80198ec:	f100 80a3 	bmi.w	8019a36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80198f0:	4596      	cmp	lr, r2
 80198f2:	f340 80a0 	ble.w	8019a36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80198f6:	f1b9 0f00 	cmp.w	r9, #0
 80198fa:	f000 809c 	beq.w	8019a36 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 80198fe:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8019902:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019906:	3501      	adds	r5, #1
 8019908:	f100 8099 	bmi.w	8019a3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801990c:	45ab      	cmp	fp, r5
 801990e:	f340 8096 	ble.w	8019a3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019912:	2f00      	cmp	r7, #0
 8019914:	f000 8093 	beq.w	8019a3e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 8019918:	2c00      	cmp	r4, #0
 801991a:	f2c0 808e 	blt.w	8019a3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801991e:	45a6      	cmp	lr, r4
 8019920:	f340 808b 	ble.w	8019a3a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 8019924:	f81a 200e 	ldrb.w	r2, [sl, lr]
 8019928:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801992c:	3401      	adds	r4, #1
 801992e:	f100 8089 	bmi.w	8019a44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019932:	45a6      	cmp	lr, r4
 8019934:	f340 8086 	ble.w	8019a44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019938:	f1b9 0f00 	cmp.w	r9, #0
 801993c:	f000 8082 	beq.w	8019a44 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 8019940:	44d6      	add	lr, sl
 8019942:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8019946:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801994a:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801994e:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8019952:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 8019956:	fb19 fe07 	smulbb	lr, r9, r7
 801995a:	ea44 0808 	orr.w	r8, r4, r8
 801995e:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8019962:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8019966:	f1c7 0210 	rsb	r2, r7, #16
 801996a:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801996e:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019972:	ea44 0c0c 	orr.w	ip, r4, ip
 8019976:	eba2 0209 	sub.w	r2, r2, r9
 801997a:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801997e:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8019982:	fb04 f40c 	mul.w	r4, r4, ip
 8019986:	fb02 4808 	mla	r8, r2, r8, r4
 801998a:	041a      	lsls	r2, r3, #16
 801998c:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8019990:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019994:	4313      	orrs	r3, r2
 8019996:	042a      	lsls	r2, r5, #16
 8019998:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801999c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80199a0:	fb0e 8303 	mla	r3, lr, r3, r8
 80199a4:	432a      	orrs	r2, r5
 80199a6:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 80199aa:	fb07 3202 	mla	r2, r7, r2, r3
 80199ae:	0d53      	lsrs	r3, r2, #21
 80199b0:	0952      	lsrs	r2, r2, #5
 80199b2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80199b6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80199ba:	431a      	orrs	r2, r3
 80199bc:	b293      	uxth	r3, r2
 80199be:	b2b4      	uxth	r4, r6
 80199c0:	1202      	asrs	r2, r0, #8
 80199c2:	43f6      	mvns	r6, r6
 80199c4:	b2f6      	uxtb	r6, r6
 80199c6:	121d      	asrs	r5, r3, #8
 80199c8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80199cc:	fb12 f206 	smulbb	r2, r2, r6
 80199d0:	10c7      	asrs	r7, r0, #3
 80199d2:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80199d6:	00c0      	lsls	r0, r0, #3
 80199d8:	fb05 2504 	mla	r5, r5, r4, r2
 80199dc:	b2c0      	uxtb	r0, r0
 80199de:	10da      	asrs	r2, r3, #3
 80199e0:	00db      	lsls	r3, r3, #3
 80199e2:	b2db      	uxtb	r3, r3
 80199e4:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 80199e8:	fb10 f006 	smulbb	r0, r0, r6
 80199ec:	b2ad      	uxth	r5, r5
 80199ee:	fb03 0004 	mla	r0, r3, r4, r0
 80199f2:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80199f6:	fb17 f706 	smulbb	r7, r7, r6
 80199fa:	b280      	uxth	r0, r0
 80199fc:	1c6b      	adds	r3, r5, #1
 80199fe:	fb02 7204 	mla	r2, r2, r4, r7
 8019a02:	b292      	uxth	r2, r2
 8019a04:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8019a08:	1c43      	adds	r3, r0, #1
 8019a0a:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8019a0e:	1c50      	adds	r0, r2, #1
 8019a10:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8019a14:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8019a18:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019a1c:	0952      	lsrs	r2, r2, #5
 8019a1e:	432b      	orrs	r3, r5
 8019a20:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8019a24:	4313      	orrs	r3, r2
 8019a26:	800b      	strh	r3, [r1, #0]
 8019a28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019a2c:	4680      	mov	r8, r0
 8019a2e:	e75c      	b.n	80198ea <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 8019a30:	4684      	mov	ip, r0
 8019a32:	4680      	mov	r8, r0
 8019a34:	e767      	b.n	8019906 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019a36:	4684      	mov	ip, r0
 8019a38:	e765      	b.n	8019906 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 8019a3a:	4605      	mov	r5, r0
 8019a3c:	e776      	b.n	801992c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 8019a3e:	4603      	mov	r3, r0
 8019a40:	4605      	mov	r5, r0
 8019a42:	e782      	b.n	801994a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 8019a44:	4603      	mov	r3, r0
 8019a46:	e780      	b.n	801994a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

08019a48 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019a48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a4c:	b099      	sub	sp, #100	; 0x64
 8019a4e:	e9dd a523 	ldrd	sl, r5, [sp, #140]	; 0x8c
 8019a52:	9215      	str	r2, [sp, #84]	; 0x54
 8019a54:	9309      	str	r3, [sp, #36]	; 0x24
 8019a56:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8019a58:	f89d 30ac 	ldrb.w	r3, [sp, #172]	; 0xac
 8019a5c:	930d      	str	r3, [sp, #52]	; 0x34
 8019a5e:	910c      	str	r1, [sp, #48]	; 0x30
 8019a60:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	; 0xa0
 8019a64:	9016      	str	r0, [sp, #88]	; 0x58
 8019a66:	6850      	ldr	r0, [r2, #4]
 8019a68:	6812      	ldr	r2, [r2, #0]
 8019a6a:	fb00 1303 	mla	r3, r0, r3, r1
 8019a6e:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 8019a72:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019a74:	681b      	ldr	r3, [r3, #0]
 8019a76:	930b      	str	r3, [sp, #44]	; 0x2c
 8019a78:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019a7a:	685e      	ldr	r6, [r3, #4]
 8019a7c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8019a7e:	43db      	mvns	r3, r3
 8019a80:	b2db      	uxtb	r3, r3
 8019a82:	3604      	adds	r6, #4
 8019a84:	930a      	str	r3, [sp, #40]	; 0x28
 8019a86:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019a88:	2b00      	cmp	r3, #0
 8019a8a:	dc03      	bgt.n	8019a94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019a8c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8019a8e:	2b00      	cmp	r3, #0
 8019a90:	f340 8225 	ble.w	8019ede <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019a94:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019a96:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8019a9a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8019a9e:	1e48      	subs	r0, r1, #1
 8019aa0:	1e57      	subs	r7, r2, #1
 8019aa2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019aa4:	2b00      	cmp	r3, #0
 8019aa6:	f340 80e3 	ble.w	8019c70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019aaa:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 8019aae:	ea4f 4325 	mov.w	r3, r5, asr #16
 8019ab2:	d406      	bmi.n	8019ac2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019ab4:	4584      	cmp	ip, r0
 8019ab6:	da04      	bge.n	8019ac2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019ab8:	2b00      	cmp	r3, #0
 8019aba:	db02      	blt.n	8019ac2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8019abc:	42bb      	cmp	r3, r7
 8019abe:	f2c0 80d8 	blt.w	8019c72 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019ac2:	f11c 0c01 	adds.w	ip, ip, #1
 8019ac6:	f100 80c9 	bmi.w	8019c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019aca:	4561      	cmp	r1, ip
 8019acc:	f2c0 80c6 	blt.w	8019c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019ad0:	3301      	adds	r3, #1
 8019ad2:	f100 80c3 	bmi.w	8019c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019ad6:	429a      	cmp	r2, r3
 8019ad8:	f2c0 80c0 	blt.w	8019c5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8019adc:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 8019ae0:	4647      	mov	r7, r8
 8019ae2:	f1bb 0f00 	cmp.w	fp, #0
 8019ae6:	f340 80e3 	ble.w	8019cb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 8019aea:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8019aec:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019aee:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8019af2:	689b      	ldr	r3, [r3, #8]
 8019af4:	ea5f 422a 	movs.w	r2, sl, asr #16
 8019af8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8019afc:	f3ca 3003 	ubfx	r0, sl, #12, #4
 8019b00:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8019b04:	f100 8121 	bmi.w	8019d4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019b08:	f103 39ff 	add.w	r9, r3, #4294967295
 8019b0c:	454a      	cmp	r2, r9
 8019b0e:	f280 811c 	bge.w	8019d4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019b12:	f1bc 0f00 	cmp.w	ip, #0
 8019b16:	f2c0 8118 	blt.w	8019d4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019b1a:	f10e 39ff 	add.w	r9, lr, #4294967295
 8019b1e:	45cc      	cmp	ip, r9
 8019b20:	f280 8113 	bge.w	8019d4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 8019b24:	b21b      	sxth	r3, r3
 8019b26:	fb0c 2203 	mla	r2, ip, r3, r2
 8019b2a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019b2c:	eb04 0902 	add.w	r9, r4, r2
 8019b30:	5ca2      	ldrb	r2, [r4, r2]
 8019b32:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 8019b36:	2800      	cmp	r0, #0
 8019b38:	f000 80fe 	beq.w	8019d38 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 8019b3c:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019b40:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 8019b44:	9211      	str	r2, [sp, #68]	; 0x44
 8019b46:	b151      	cbz	r1, 8019b5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019b48:	eb09 0203 	add.w	r2, r9, r3
 8019b4c:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019b50:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019b54:	930f      	str	r3, [sp, #60]	; 0x3c
 8019b56:	7853      	ldrb	r3, [r2, #1]
 8019b58:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019b5c:	9312      	str	r3, [sp, #72]	; 0x48
 8019b5e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8019b60:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8019b62:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019b66:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019b6a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019b6e:	ea4c 0c03 	orr.w	ip, ip, r3
 8019b72:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8019b74:	041b      	lsls	r3, r3, #16
 8019b76:	fb10 f201 	smulbb	r2, r0, r1
 8019b7a:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 8019b7e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019b82:	10d2      	asrs	r2, r2, #3
 8019b84:	4323      	orrs	r3, r4
 8019b86:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8019b8a:	4353      	muls	r3, r2
 8019b8c:	fb09 330c 	mla	r3, r9, ip, r3
 8019b90:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8019b94:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019b98:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8019b9c:	ea4c 0e0e 	orr.w	lr, ip, lr
 8019ba0:	f1c1 0c10 	rsb	ip, r1, #16
 8019ba4:	ebac 0c00 	sub.w	ip, ip, r0
 8019ba8:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019bac:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8019bb0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8019bb2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019bb4:	0418      	lsls	r0, r3, #16
 8019bb6:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8019bba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019bbe:	4318      	orrs	r0, r3
 8019bc0:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8019bc4:	fb02 c200 	mla	r2, r2, r0, ip
 8019bc8:	0d53      	lsrs	r3, r2, #21
 8019bca:	0952      	lsrs	r2, r2, #5
 8019bcc:	8838      	ldrh	r0, [r7, #0]
 8019bce:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019bd2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019bd6:	431a      	orrs	r2, r3
 8019bd8:	b292      	uxth	r2, r2
 8019bda:	1201      	asrs	r1, r0, #8
 8019bdc:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 8019be0:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8019be4:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019be8:	fb11 f104 	smulbb	r1, r1, r4
 8019bec:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8019bf0:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8019bf4:	00c0      	lsls	r0, r0, #3
 8019bf6:	fb0c 1c03 	mla	ip, ip, r3, r1
 8019bfa:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8019bfe:	10d1      	asrs	r1, r2, #3
 8019c00:	b2c0      	uxtb	r0, r0
 8019c02:	00d2      	lsls	r2, r2, #3
 8019c04:	b2d2      	uxtb	r2, r2
 8019c06:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019c0a:	fb1e fe04 	smulbb	lr, lr, r4
 8019c0e:	fb10 f004 	smulbb	r0, r0, r4
 8019c12:	fa1f fc8c 	uxth.w	ip, ip
 8019c16:	fb01 e103 	mla	r1, r1, r3, lr
 8019c1a:	fb02 0303 	mla	r3, r2, r3, r0
 8019c1e:	b29a      	uxth	r2, r3
 8019c20:	f10c 0301 	add.w	r3, ip, #1
 8019c24:	b289      	uxth	r1, r1
 8019c26:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8019c2a:	1c53      	adds	r3, r2, #1
 8019c2c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8019c30:	1c4a      	adds	r2, r1, #1
 8019c32:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8019c36:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 8019c3a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8019c3e:	0949      	lsrs	r1, r1, #5
 8019c40:	ea43 030c 	orr.w	r3, r3, ip
 8019c44:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019c48:	430b      	orrs	r3, r1
 8019c4a:	803b      	strh	r3, [r7, #0]
 8019c4c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019c4e:	449a      	add	sl, r3
 8019c50:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019c52:	3702      	adds	r7, #2
 8019c54:	441d      	add	r5, r3
 8019c56:	f10b 3bff 	add.w	fp, fp, #4294967295
 8019c5a:	e742      	b.n	8019ae2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8019c5c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019c5e:	449a      	add	sl, r3
 8019c60:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019c62:	441d      	add	r5, r3
 8019c64:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019c66:	3b01      	subs	r3, #1
 8019c68:	9309      	str	r3, [sp, #36]	; 0x24
 8019c6a:	f108 0802 	add.w	r8, r8, #2
 8019c6e:	e718      	b.n	8019aa2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8019c70:	d023      	beq.n	8019cba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 8019c72:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019c74:	9825      	ldr	r0, [sp, #148]	; 0x94
 8019c76:	3b01      	subs	r3, #1
 8019c78:	fb00 a003 	mla	r0, r0, r3, sl
 8019c7c:	1400      	asrs	r0, r0, #16
 8019c7e:	f53f af2d 	bmi.w	8019adc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019c82:	3901      	subs	r1, #1
 8019c84:	4288      	cmp	r0, r1
 8019c86:	f6bf af29 	bge.w	8019adc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019c8a:	9926      	ldr	r1, [sp, #152]	; 0x98
 8019c8c:	fb01 5303 	mla	r3, r1, r3, r5
 8019c90:	141b      	asrs	r3, r3, #16
 8019c92:	f53f af23 	bmi.w	8019adc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019c96:	3a01      	subs	r2, #1
 8019c98:	4293      	cmp	r3, r2
 8019c9a:	f6bf af1f 	bge.w	8019adc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8019c9e:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 8019ca2:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8019ca6:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8019caa:	f1be 0f00 	cmp.w	lr, #0
 8019cae:	dc6c      	bgt.n	8019d8a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 8019cb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019cb2:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8019cb6:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8019cba:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019cbc:	2b00      	cmp	r3, #0
 8019cbe:	f340 810e 	ble.w	8019ede <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 8019cc2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019cc6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8019cca:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8019cce:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019cd0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019cd4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019cd8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019cdc:	eef0 6a62 	vmov.f32	s13, s5
 8019ce0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019ce4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019ce8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019cec:	ee16 aa90 	vmov	sl, s13
 8019cf0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019cf4:	eef0 6a43 	vmov.f32	s13, s6
 8019cf8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019cfc:	ee12 2a90 	vmov	r2, s5
 8019d00:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019d04:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d08:	ee13 2a10 	vmov	r2, s6
 8019d0c:	9325      	str	r3, [sp, #148]	; 0x94
 8019d0e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019d10:	fb92 f3f3 	sdiv	r3, r2, r3
 8019d14:	9326      	str	r3, [sp, #152]	; 0x98
 8019d16:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8019d18:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8019d1a:	3b01      	subs	r3, #1
 8019d1c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019d20:	930c      	str	r3, [sp, #48]	; 0x30
 8019d22:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8019d24:	bf08      	it	eq
 8019d26:	4613      	moveq	r3, r2
 8019d28:	ee16 5a90 	vmov	r5, s13
 8019d2c:	9309      	str	r3, [sp, #36]	; 0x24
 8019d2e:	eeb0 3a67 	vmov.f32	s6, s15
 8019d32:	eef0 2a47 	vmov.f32	s5, s14
 8019d36:	e6a6      	b.n	8019a86 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019d38:	2900      	cmp	r1, #0
 8019d3a:	f43f af10 	beq.w	8019b5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019d3e:	f819 3003 	ldrb.w	r3, [r9, r3]
 8019d42:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019d46:	930f      	str	r3, [sp, #60]	; 0x3c
 8019d48:	e709      	b.n	8019b5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 8019d4a:	f112 0901 	adds.w	r9, r2, #1
 8019d4e:	f53f af7d 	bmi.w	8019c4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019d52:	454b      	cmp	r3, r9
 8019d54:	f6ff af7a 	blt.w	8019c4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019d58:	f11c 0901 	adds.w	r9, ip, #1
 8019d5c:	f53f af76 	bmi.w	8019c4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019d60:	45ce      	cmp	lr, r9
 8019d62:	f6ff af73 	blt.w	8019c4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019d66:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8019d68:	9202      	str	r2, [sp, #8]
 8019d6a:	b21b      	sxth	r3, r3
 8019d6c:	fa0f f28e 	sxth.w	r2, lr
 8019d70:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8019d74:	e9cd c003 	strd	ip, r0, [sp, #12]
 8019d78:	9201      	str	r2, [sp, #4]
 8019d7a:	9300      	str	r3, [sp, #0]
 8019d7c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019d7e:	9816      	ldr	r0, [sp, #88]	; 0x58
 8019d80:	4633      	mov	r3, r6
 8019d82:	4639      	mov	r1, r7
 8019d84:	f7ff fd8e 	bl	80198a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8019d88:	e760      	b.n	8019c4c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8019d8a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8019d8c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8019d8e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8019d92:	ea4f 422a 	mov.w	r2, sl, asr #16
 8019d96:	1429      	asrs	r1, r5, #16
 8019d98:	fb03 2101 	mla	r1, r3, r1, r2
 8019d9c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8019d9e:	440a      	add	r2, r1
 8019da0:	5c61      	ldrb	r1, [r4, r1]
 8019da2:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8019da6:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8019daa:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 8019dae:	f1bc 0f00 	cmp.w	ip, #0
 8019db2:	f000 808c 	beq.w	8019ece <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8019db6:	7857      	ldrb	r7, [r2, #1]
 8019db8:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8019dbc:	9413      	str	r4, [sp, #76]	; 0x4c
 8019dbe:	b140      	cbz	r0, 8019dd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019dc0:	18d7      	adds	r7, r2, r3
 8019dc2:	5cd3      	ldrb	r3, [r2, r3]
 8019dc4:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019dc8:	9310      	str	r3, [sp, #64]	; 0x40
 8019dca:	787b      	ldrb	r3, [r7, #1]
 8019dcc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019dd0:	9314      	str	r3, [sp, #80]	; 0x50
 8019dd2:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8019dd4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8019dd6:	fb1c f200 	smulbb	r2, ip, r0
 8019dda:	041f      	lsls	r7, r3, #16
 8019ddc:	10d2      	asrs	r2, r2, #3
 8019dde:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8019de2:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8019de6:	431f      	orrs	r7, r3
 8019de8:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8019dec:	9317      	str	r3, [sp, #92]	; 0x5c
 8019dee:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8019df0:	041b      	lsls	r3, r3, #16
 8019df2:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 8019df6:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019dfa:	ea43 030b 	orr.w	r3, r3, fp
 8019dfe:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8019e00:	4353      	muls	r3, r2
 8019e02:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8019e06:	fb04 3707 	mla	r7, r4, r7, r3
 8019e0a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8019e0e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8019e12:	ea43 0b01 	orr.w	fp, r3, r1
 8019e16:	f1c0 0110 	rsb	r1, r0, #16
 8019e1a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8019e1c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8019e1e:	eba1 0c0c 	sub.w	ip, r1, ip
 8019e22:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8019e26:	fb0c 770b 	mla	r7, ip, fp, r7
 8019e2a:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8019e2e:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 8019e32:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8019e36:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8019e3a:	ea4c 0c0b 	orr.w	ip, ip, fp
 8019e3e:	fb02 770c 	mla	r7, r2, ip, r7
 8019e42:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8019e44:	0d79      	lsrs	r1, r7, #21
 8019e46:	097f      	lsrs	r7, r7, #5
 8019e48:	8812      	ldrh	r2, [r2, #0]
 8019e4a:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019e4e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019e52:	430f      	orrs	r7, r1
 8019e54:	b2bb      	uxth	r3, r7
 8019e56:	1211      	asrs	r1, r2, #8
 8019e58:	1218      	asrs	r0, r3, #8
 8019e5a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8019e5e:	fb11 f104 	smulbb	r1, r1, r4
 8019e62:	10d7      	asrs	r7, r2, #3
 8019e64:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8019e68:	00d2      	lsls	r2, r2, #3
 8019e6a:	fb00 1009 	mla	r0, r0, r9, r1
 8019e6e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8019e72:	10d9      	asrs	r1, r3, #3
 8019e74:	b2d2      	uxtb	r2, r2
 8019e76:	00db      	lsls	r3, r3, #3
 8019e78:	fb17 f704 	smulbb	r7, r7, r4
 8019e7c:	fb12 f204 	smulbb	r2, r2, r4
 8019e80:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8019e84:	b2db      	uxtb	r3, r3
 8019e86:	b280      	uxth	r0, r0
 8019e88:	fb01 7109 	mla	r1, r1, r9, r7
 8019e8c:	fb03 2309 	mla	r3, r3, r9, r2
 8019e90:	b29b      	uxth	r3, r3
 8019e92:	b289      	uxth	r1, r1
 8019e94:	1c42      	adds	r2, r0, #1
 8019e96:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8019e9a:	1c4f      	adds	r7, r1, #1
 8019e9c:	1c5a      	adds	r2, r3, #1
 8019e9e:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8019ea2:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8019ea6:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8019eaa:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8019eae:	0949      	lsrs	r1, r1, #5
 8019eb0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8019eb2:	4310      	orrs	r0, r2
 8019eb4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8019eb8:	4308      	orrs	r0, r1
 8019eba:	f823 0b02 	strh.w	r0, [r3], #2
 8019ebe:	930e      	str	r3, [sp, #56]	; 0x38
 8019ec0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8019ec2:	449a      	add	sl, r3
 8019ec4:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8019ec6:	f10e 3eff 	add.w	lr, lr, #4294967295
 8019eca:	441d      	add	r5, r3
 8019ecc:	e6ed      	b.n	8019caa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 8019ece:	2800      	cmp	r0, #0
 8019ed0:	f43f af7f 	beq.w	8019dd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019ed4:	5cd3      	ldrb	r3, [r2, r3]
 8019ed6:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8019eda:	9310      	str	r3, [sp, #64]	; 0x40
 8019edc:	e779      	b.n	8019dd2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8019ede:	b019      	add	sp, #100	; 0x64
 8019ee0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019ee4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8019ee4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019ee8:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	; 0x28
 8019eec:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 8019ef0:	f9bd a024 	ldrsh.w	sl, [sp, #36]	; 0x24
 8019ef4:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8019ef8:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 8019efc:	8808      	ldrh	r0, [r1, #0]
 8019efe:	fb08 470e 	mla	r7, r8, lr, r4
 8019f02:	f1b8 0f00 	cmp.w	r8, #0
 8019f06:	eb02 0907 	add.w	r9, r2, r7
 8019f0a:	db67      	blt.n	8019fdc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019f0c:	45c2      	cmp	sl, r8
 8019f0e:	dd65      	ble.n	8019fdc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 8019f10:	2c00      	cmp	r4, #0
 8019f12:	db61      	blt.n	8019fd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019f14:	45a6      	cmp	lr, r4
 8019f16:	dd5f      	ble.n	8019fd8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 8019f18:	5dd2      	ldrb	r2, [r2, r7]
 8019f1a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 8019f1e:	1c62      	adds	r2, r4, #1
 8019f20:	d45f      	bmi.n	8019fe2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019f22:	4596      	cmp	lr, r2
 8019f24:	dd5d      	ble.n	8019fe2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019f26:	2d00      	cmp	r5, #0
 8019f28:	d05b      	beq.n	8019fe2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 8019f2a:	f899 2001 	ldrb.w	r2, [r9, #1]
 8019f2e:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8019f32:	f118 0801 	adds.w	r8, r8, #1
 8019f36:	d458      	bmi.n	8019fea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019f38:	45c2      	cmp	sl, r8
 8019f3a:	dd56      	ble.n	8019fea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019f3c:	2e00      	cmp	r6, #0
 8019f3e:	d054      	beq.n	8019fea <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 8019f40:	2c00      	cmp	r4, #0
 8019f42:	db50      	blt.n	8019fe6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019f44:	45a6      	cmp	lr, r4
 8019f46:	dd4e      	ble.n	8019fe6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 8019f48:	f819 200e 	ldrb.w	r2, [r9, lr]
 8019f4c:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8019f50:	3401      	adds	r4, #1
 8019f52:	d407      	bmi.n	8019f64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019f54:	45a6      	cmp	lr, r4
 8019f56:	dd05      	ble.n	8019f64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019f58:	b125      	cbz	r5, 8019f64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8019f5a:	44ce      	add	lr, r9
 8019f5c:	f89e 0001 	ldrb.w	r0, [lr, #1]
 8019f60:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8019f64:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8019f68:	fb15 f406 	smulbb	r4, r5, r6
 8019f6c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019f70:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8019f74:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8019f78:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8019f7c:	ea43 0c0c 	orr.w	ip, r3, ip
 8019f80:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8019f84:	f1c6 0310 	rsb	r3, r6, #16
 8019f88:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8019f8c:	1b5b      	subs	r3, r3, r5
 8019f8e:	ea4e 0707 	orr.w	r7, lr, r7
 8019f92:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8019f96:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8019f9a:	437d      	muls	r5, r7
 8019f9c:	fb03 5c0c 	mla	ip, r3, ip, r5
 8019fa0:	0403      	lsls	r3, r0, #16
 8019fa2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019fa6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019faa:	4318      	orrs	r0, r3
 8019fac:	0413      	lsls	r3, r2, #16
 8019fae:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8019fb2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8019fb6:	4313      	orrs	r3, r2
 8019fb8:	fb04 c000 	mla	r0, r4, r0, ip
 8019fbc:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8019fc0:	fb06 0003 	mla	r0, r6, r3, r0
 8019fc4:	0d43      	lsrs	r3, r0, #21
 8019fc6:	0940      	lsrs	r0, r0, #5
 8019fc8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8019fcc:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8019fd0:	4318      	orrs	r0, r3
 8019fd2:	8008      	strh	r0, [r1, #0]
 8019fd4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019fd8:	4684      	mov	ip, r0
 8019fda:	e7a0      	b.n	8019f1e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 8019fdc:	4607      	mov	r7, r0
 8019fde:	4684      	mov	ip, r0
 8019fe0:	e7a7      	b.n	8019f32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019fe2:	4607      	mov	r7, r0
 8019fe4:	e7a5      	b.n	8019f32 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 8019fe6:	4602      	mov	r2, r0
 8019fe8:	e7b2      	b.n	8019f50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 8019fea:	4602      	mov	r2, r0
 8019fec:	e7ba      	b.n	8019f64 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

08019fee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019fee:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019ff2:	b093      	sub	sp, #76	; 0x4c
 8019ff4:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 8019ff8:	920f      	str	r2, [sp, #60]	; 0x3c
 8019ffa:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8019ffc:	9108      	str	r1, [sp, #32]
 8019ffe:	9306      	str	r3, [sp, #24]
 801a000:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801a004:	9010      	str	r0, [sp, #64]	; 0x40
 801a006:	6850      	ldr	r0, [r2, #4]
 801a008:	6812      	ldr	r2, [r2, #0]
 801a00a:	fb00 1303 	mla	r3, r0, r3, r1
 801a00e:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801a012:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a014:	681b      	ldr	r3, [r3, #0]
 801a016:	9307      	str	r3, [sp, #28]
 801a018:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a01a:	685f      	ldr	r7, [r3, #4]
 801a01c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 801a020:	3704      	adds	r7, #4
 801a022:	9b08      	ldr	r3, [sp, #32]
 801a024:	2b00      	cmp	r3, #0
 801a026:	dc03      	bgt.n	801a030 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801a028:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a02a:	2b00      	cmp	r3, #0
 801a02c:	f340 81b2 	ble.w	801a394 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801a030:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a032:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a036:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a03a:	1e48      	subs	r0, r1, #1
 801a03c:	f102 3cff 	add.w	ip, r2, #4294967295
 801a040:	9b06      	ldr	r3, [sp, #24]
 801a042:	2b00      	cmp	r3, #0
 801a044:	f340 80a9 	ble.w	801a19a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801a048:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801a04c:	ea4f 4326 	mov.w	r3, r6, asr #16
 801a050:	d406      	bmi.n	801a060 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a052:	4586      	cmp	lr, r0
 801a054:	da04      	bge.n	801a060 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a056:	2b00      	cmp	r3, #0
 801a058:	db02      	blt.n	801a060 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801a05a:	4563      	cmp	r3, ip
 801a05c:	f2c0 809e 	blt.w	801a19c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801a060:	f11e 0e01 	adds.w	lr, lr, #1
 801a064:	f100 808f 	bmi.w	801a186 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a068:	4571      	cmp	r1, lr
 801a06a:	f2c0 808c 	blt.w	801a186 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a06e:	3301      	adds	r3, #1
 801a070:	f100 8089 	bmi.w	801a186 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a074:	429a      	cmp	r2, r3
 801a076:	f2c0 8086 	blt.w	801a186 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801a07a:	f8dd b018 	ldr.w	fp, [sp, #24]
 801a07e:	46c8      	mov	r8, r9
 801a080:	f1bb 0f00 	cmp.w	fp, #0
 801a084:	f340 80a6 	ble.w	801a1d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801a088:	9a24      	ldr	r2, [sp, #144]	; 0x90
 801a08a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a08c:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801a090:	689b      	ldr	r3, [r3, #8]
 801a092:	1422      	asrs	r2, r4, #16
 801a094:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801a098:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801a09c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801a0a0:	f100 80e3 	bmi.w	801a26a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a0a4:	f103 3aff 	add.w	sl, r3, #4294967295
 801a0a8:	4552      	cmp	r2, sl
 801a0aa:	f280 80de 	bge.w	801a26a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a0ae:	f1bc 0f00 	cmp.w	ip, #0
 801a0b2:	f2c0 80da 	blt.w	801a26a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a0b6:	f10e 3aff 	add.w	sl, lr, #4294967295
 801a0ba:	45d4      	cmp	ip, sl
 801a0bc:	f280 80d5 	bge.w	801a26a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801a0c0:	b21b      	sxth	r3, r3
 801a0c2:	fb0c 2203 	mla	r2, ip, r3, r2
 801a0c6:	9d07      	ldr	r5, [sp, #28]
 801a0c8:	eb05 0a02 	add.w	sl, r5, r2
 801a0cc:	5caa      	ldrb	r2, [r5, r2]
 801a0ce:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801a0d2:	2800      	cmp	r0, #0
 801a0d4:	f000 80c0 	beq.w	801a258 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801a0d8:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801a0dc:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801a0e0:	920b      	str	r2, [sp, #44]	; 0x2c
 801a0e2:	b151      	cbz	r1, 801a0fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a0e4:	eb0a 0203 	add.w	r2, sl, r3
 801a0e8:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a0ec:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a0f0:	9309      	str	r3, [sp, #36]	; 0x24
 801a0f2:	7853      	ldrb	r3, [r2, #1]
 801a0f4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a0f8:	930c      	str	r3, [sp, #48]	; 0x30
 801a0fa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a0fc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801a0fe:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a102:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a106:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a10a:	ea4c 0c03 	orr.w	ip, ip, r3
 801a10e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a110:	041b      	lsls	r3, r3, #16
 801a112:	fb10 f201 	smulbb	r2, r0, r1
 801a116:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a11a:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801a11e:	10d2      	asrs	r2, r2, #3
 801a120:	432b      	orrs	r3, r5
 801a122:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801a126:	4353      	muls	r3, r2
 801a128:	fb0a 330c 	mla	r3, sl, ip, r3
 801a12c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801a130:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a134:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801a138:	ea4c 0e0e 	orr.w	lr, ip, lr
 801a13c:	f1c1 0c10 	rsb	ip, r1, #16
 801a140:	ebac 0c00 	sub.w	ip, ip, r0
 801a144:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801a148:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801a14c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a14e:	0418      	lsls	r0, r3, #16
 801a150:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801a154:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a158:	4318      	orrs	r0, r3
 801a15a:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801a15e:	fb02 c200 	mla	r2, r2, r0, ip
 801a162:	0d53      	lsrs	r3, r2, #21
 801a164:	0952      	lsrs	r2, r2, #5
 801a166:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a16a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801a16e:	431a      	orrs	r2, r3
 801a170:	f8a8 2000 	strh.w	r2, [r8]
 801a174:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a176:	441c      	add	r4, r3
 801a178:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a17a:	f108 0802 	add.w	r8, r8, #2
 801a17e:	441e      	add	r6, r3
 801a180:	f10b 3bff 	add.w	fp, fp, #4294967295
 801a184:	e77c      	b.n	801a080 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a186:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a188:	441c      	add	r4, r3
 801a18a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a18c:	441e      	add	r6, r3
 801a18e:	9b06      	ldr	r3, [sp, #24]
 801a190:	3b01      	subs	r3, #1
 801a192:	9306      	str	r3, [sp, #24]
 801a194:	f109 0902 	add.w	r9, r9, #2
 801a198:	e752      	b.n	801a040 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801a19a:	d020      	beq.n	801a1de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801a19c:	9b06      	ldr	r3, [sp, #24]
 801a19e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801a1a0:	3b01      	subs	r3, #1
 801a1a2:	fb00 4003 	mla	r0, r0, r3, r4
 801a1a6:	1400      	asrs	r0, r0, #16
 801a1a8:	f53f af67 	bmi.w	801a07a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a1ac:	3901      	subs	r1, #1
 801a1ae:	4288      	cmp	r0, r1
 801a1b0:	f6bf af63 	bge.w	801a07a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a1b4:	9920      	ldr	r1, [sp, #128]	; 0x80
 801a1b6:	fb01 6303 	mla	r3, r1, r3, r6
 801a1ba:	141b      	asrs	r3, r3, #16
 801a1bc:	f53f af5d 	bmi.w	801a07a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a1c0:	3a01      	subs	r2, #1
 801a1c2:	4293      	cmp	r3, r2
 801a1c4:	f6bf af59 	bge.w	801a07a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801a1c8:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801a1cc:	46ca      	mov	sl, r9
 801a1ce:	f1b8 0f00 	cmp.w	r8, #0
 801a1d2:	dc67      	bgt.n	801a2a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801a1d4:	9b06      	ldr	r3, [sp, #24]
 801a1d6:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801a1da:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801a1de:	9b08      	ldr	r3, [sp, #32]
 801a1e0:	2b00      	cmp	r3, #0
 801a1e2:	f340 80d7 	ble.w	801a394 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801a1e6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a1ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a1ee:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801a1f2:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a1f4:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a1f8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a1fc:	eeb0 6a62 	vmov.f32	s12, s5
 801a200:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a204:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a208:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a20c:	ee16 4a10 	vmov	r4, s12
 801a210:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a214:	eeb0 6a43 	vmov.f32	s12, s6
 801a218:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a21c:	ee12 2a90 	vmov	r2, s5
 801a220:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a224:	fb92 f3f3 	sdiv	r3, r2, r3
 801a228:	ee13 2a10 	vmov	r2, s6
 801a22c:	931f      	str	r3, [sp, #124]	; 0x7c
 801a22e:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a230:	fb92 f3f3 	sdiv	r3, r2, r3
 801a234:	9320      	str	r3, [sp, #128]	; 0x80
 801a236:	9b08      	ldr	r3, [sp, #32]
 801a238:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801a23a:	3b01      	subs	r3, #1
 801a23c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801a240:	9308      	str	r3, [sp, #32]
 801a242:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801a244:	bf08      	it	eq
 801a246:	4613      	moveq	r3, r2
 801a248:	ee16 6a10 	vmov	r6, s12
 801a24c:	9306      	str	r3, [sp, #24]
 801a24e:	eeb0 3a67 	vmov.f32	s6, s15
 801a252:	eef0 2a47 	vmov.f32	s5, s14
 801a256:	e6e4      	b.n	801a022 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801a258:	2900      	cmp	r1, #0
 801a25a:	f43f af4e 	beq.w	801a0fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a25e:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801a262:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a266:	9309      	str	r3, [sp, #36]	; 0x24
 801a268:	e747      	b.n	801a0fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801a26a:	f112 0a01 	adds.w	sl, r2, #1
 801a26e:	d481      	bmi.n	801a174 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a270:	4553      	cmp	r3, sl
 801a272:	f6ff af7f 	blt.w	801a174 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a276:	f11c 0a01 	adds.w	sl, ip, #1
 801a27a:	f53f af7b 	bmi.w	801a174 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a27e:	45d6      	cmp	lr, sl
 801a280:	f6ff af78 	blt.w	801a174 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a284:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801a288:	b21b      	sxth	r3, r3
 801a28a:	fa0f f28e 	sxth.w	r2, lr
 801a28e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801a292:	9201      	str	r2, [sp, #4]
 801a294:	9300      	str	r3, [sp, #0]
 801a296:	9a07      	ldr	r2, [sp, #28]
 801a298:	9810      	ldr	r0, [sp, #64]	; 0x40
 801a29a:	463b      	mov	r3, r7
 801a29c:	4641      	mov	r1, r8
 801a29e:	f7ff fe21 	bl	8019ee4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801a2a2:	e767      	b.n	801a174 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801a2a4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801a2a6:	9d07      	ldr	r5, [sp, #28]
 801a2a8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801a2ac:	1422      	asrs	r2, r4, #16
 801a2ae:	1431      	asrs	r1, r6, #16
 801a2b0:	fb03 2101 	mla	r1, r3, r1, r2
 801a2b4:	9a07      	ldr	r2, [sp, #28]
 801a2b6:	440a      	add	r2, r1
 801a2b8:	5c69      	ldrb	r1, [r5, r1]
 801a2ba:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801a2be:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801a2c2:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801a2c6:	f1be 0f00 	cmp.w	lr, #0
 801a2ca:	d05c      	beq.n	801a386 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801a2cc:	f892 c001 	ldrb.w	ip, [r2, #1]
 801a2d0:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801a2d4:	950d      	str	r5, [sp, #52]	; 0x34
 801a2d6:	b150      	cbz	r0, 801a2ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a2d8:	eb02 0c03 	add.w	ip, r2, r3
 801a2dc:	5cd3      	ldrb	r3, [r2, r3]
 801a2de:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a2e2:	930a      	str	r3, [sp, #40]	; 0x28
 801a2e4:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801a2e8:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a2ec:	930e      	str	r3, [sp, #56]	; 0x38
 801a2ee:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801a2f0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801a2f2:	fb1e f200 	smulbb	r2, lr, r0
 801a2f6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801a2fa:	10d2      	asrs	r2, r2, #3
 801a2fc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801a300:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801a304:	ea4c 0c03 	orr.w	ip, ip, r3
 801a308:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801a30c:	9311      	str	r3, [sp, #68]	; 0x44
 801a30e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a310:	041b      	lsls	r3, r3, #16
 801a312:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 801a316:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801a31a:	ea43 030b 	orr.w	r3, r3, fp
 801a31e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801a320:	4353      	muls	r3, r2
 801a322:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801a326:	fb05 3c0c 	mla	ip, r5, ip, r3
 801a32a:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801a32e:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 801a332:	ea43 0b01 	orr.w	fp, r3, r1
 801a336:	f1c0 0110 	rsb	r1, r0, #16
 801a33a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a33c:	eba1 0e0e 	sub.w	lr, r1, lr
 801a340:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801a344:	fb0e cc0b 	mla	ip, lr, fp, ip
 801a348:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801a34c:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 801a350:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801a354:	ea4b 0e0e 	orr.w	lr, fp, lr
 801a358:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801a35c:	fb02 cc0e 	mla	ip, r2, lr, ip
 801a360:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801a364:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801a368:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801a36c:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801a370:	ea43 0c0c 	orr.w	ip, r3, ip
 801a374:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a376:	f82a cb02 	strh.w	ip, [sl], #2
 801a37a:	441c      	add	r4, r3
 801a37c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a37e:	f108 38ff 	add.w	r8, r8, #4294967295
 801a382:	441e      	add	r6, r3
 801a384:	e723      	b.n	801a1ce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801a386:	2800      	cmp	r0, #0
 801a388:	d0b1      	beq.n	801a2ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a38a:	5cd3      	ldrb	r3, [r2, r3]
 801a38c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801a390:	930a      	str	r3, [sp, #40]	; 0x28
 801a392:	e7ac      	b.n	801a2ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801a394:	b013      	add	sp, #76	; 0x4c
 801a396:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801a39a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801a39a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a39e:	880d      	ldrh	r5, [r1, #0]
 801a3a0:	b087      	sub	sp, #28
 801a3a2:	10ef      	asrs	r7, r5, #3
 801a3a4:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801a3a8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801a3ac:	00ed      	lsls	r5, r5, #3
 801a3ae:	9701      	str	r7, [sp, #4]
 801a3b0:	b2ed      	uxtb	r5, r5
 801a3b2:	9502      	str	r5, [sp, #8]
 801a3b4:	9d01      	ldr	r5, [sp, #4]
 801a3b6:	9103      	str	r1, [sp, #12]
 801a3b8:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	; 0x48
 801a3bc:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	; 0x40
 801a3c0:	9902      	ldr	r1, [sp, #8]
 801a3c2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	; 0x44
 801a3c6:	f89d 4050 	ldrb.w	r4, [sp, #80]	; 0x50
 801a3ca:	f89d e054 	ldrb.w	lr, [sp, #84]	; 0x54
 801a3ce:	f89d 8058 	ldrb.w	r8, [sp, #88]	; 0x58
 801a3d2:	f00a 0af8 	and.w	sl, sl, #248	; 0xf8
 801a3d6:	022d      	lsls	r5, r5, #8
 801a3d8:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801a3dc:	fb06 0709 	mla	r7, r6, r9, r0
 801a3e0:	430d      	orrs	r5, r1
 801a3e2:	2e00      	cmp	r6, #0
 801a3e4:	eb02 0c07 	add.w	ip, r2, r7
 801a3e8:	9505      	str	r5, [sp, #20]
 801a3ea:	f2c0 80b6 	blt.w	801a55a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a3ee:	45b3      	cmp	fp, r6
 801a3f0:	f340 80b3 	ble.w	801a55a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801a3f4:	2800      	cmp	r0, #0
 801a3f6:	f2c0 80ae 	blt.w	801a556 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a3fa:	4581      	cmp	r9, r0
 801a3fc:	f340 80ab 	ble.w	801a556 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801a400:	5dd7      	ldrb	r7, [r2, r7]
 801a402:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a406:	441f      	add	r7, r3
 801a408:	1c42      	adds	r2, r0, #1
 801a40a:	f100 80a9 	bmi.w	801a560 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a40e:	4591      	cmp	r9, r2
 801a410:	f340 80a6 	ble.w	801a560 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a414:	2c00      	cmp	r4, #0
 801a416:	f000 80a3 	beq.w	801a560 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801a41a:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a41e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801a422:	441d      	add	r5, r3
 801a424:	3601      	adds	r6, #1
 801a426:	f100 809f 	bmi.w	801a568 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a42a:	45b3      	cmp	fp, r6
 801a42c:	f340 809c 	ble.w	801a568 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a430:	f1be 0f00 	cmp.w	lr, #0
 801a434:	f000 8098 	beq.w	801a568 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801a438:	2800      	cmp	r0, #0
 801a43a:	f2c0 8093 	blt.w	801a564 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a43e:	4581      	cmp	r9, r0
 801a440:	f340 8090 	ble.w	801a564 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801a444:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801a448:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801a44c:	441e      	add	r6, r3
 801a44e:	3001      	adds	r0, #1
 801a450:	f100 808d 	bmi.w	801a56e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a454:	4581      	cmp	r9, r0
 801a456:	f340 808a 	ble.w	801a56e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a45a:	2c00      	cmp	r4, #0
 801a45c:	f000 8087 	beq.w	801a56e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801a460:	44e1      	add	r9, ip
 801a462:	f899 2001 	ldrb.w	r2, [r9, #1]
 801a466:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a46a:	4413      	add	r3, r2
 801a46c:	b2a4      	uxth	r4, r4
 801a46e:	fa1f fe8e 	uxth.w	lr, lr
 801a472:	fb04 fb0e 	mul.w	fp, r4, lr
 801a476:	0124      	lsls	r4, r4, #4
 801a478:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801a47c:	f5c4 7980 	rsb	r9, r4, #256	; 0x100
 801a480:	eba4 040b 	sub.w	r4, r4, fp
 801a484:	fa1f f08e 	uxth.w	r0, lr
 801a488:	b2a2      	uxth	r2, r4
 801a48a:	78ac      	ldrb	r4, [r5, #2]
 801a48c:	f897 c002 	ldrb.w	ip, [r7, #2]
 801a490:	9901      	ldr	r1, [sp, #4]
 801a492:	eba9 0900 	sub.w	r9, r9, r0
 801a496:	fa1f f989 	uxth.w	r9, r9
 801a49a:	4354      	muls	r4, r2
 801a49c:	fb09 440c 	mla	r4, r9, ip, r4
 801a4a0:	f896 c002 	ldrb.w	ip, [r6, #2]
 801a4a4:	fb00 440c 	mla	r4, r0, ip, r4
 801a4a8:	f893 c002 	ldrb.w	ip, [r3, #2]
 801a4ac:	fa1f fe88 	uxth.w	lr, r8
 801a4b0:	ea6f 0808 	mvn.w	r8, r8
 801a4b4:	fa5f f888 	uxtb.w	r8, r8
 801a4b8:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801a4bc:	fb1a fa08 	smulbb	sl, sl, r8
 801a4c0:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a4c4:	fb0c ac0e 	mla	ip, ip, lr, sl
 801a4c8:	f895 a001 	ldrb.w	sl, [r5, #1]
 801a4cc:	787c      	ldrb	r4, [r7, #1]
 801a4ce:	782d      	ldrb	r5, [r5, #0]
 801a4d0:	783f      	ldrb	r7, [r7, #0]
 801a4d2:	fb02 fa0a 	mul.w	sl, r2, sl
 801a4d6:	fb09 aa04 	mla	sl, r9, r4, sl
 801a4da:	7874      	ldrb	r4, [r6, #1]
 801a4dc:	436a      	muls	r2, r5
 801a4de:	7835      	ldrb	r5, [r6, #0]
 801a4e0:	fb00 aa04 	mla	sl, r0, r4, sl
 801a4e4:	fb09 2207 	mla	r2, r9, r7, r2
 801a4e8:	785c      	ldrb	r4, [r3, #1]
 801a4ea:	781b      	ldrb	r3, [r3, #0]
 801a4ec:	fb00 2005 	mla	r0, r0, r5, r2
 801a4f0:	fb0b a404 	mla	r4, fp, r4, sl
 801a4f4:	fb0b 0b03 	mla	fp, fp, r3, r0
 801a4f8:	9b02      	ldr	r3, [sp, #8]
 801a4fa:	fb11 fa08 	smulbb	sl, r1, r8
 801a4fe:	fa1f fc8c 	uxth.w	ip, ip
 801a502:	fb13 f808 	smulbb	r8, r3, r8
 801a506:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801a50a:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801a50e:	fb04 a40e 	mla	r4, r4, lr, sl
 801a512:	f10c 0301 	add.w	r3, ip, #1
 801a516:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801a51a:	fa1f fe8e 	uxth.w	lr, lr
 801a51e:	b2a4      	uxth	r4, r4
 801a520:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801a524:	f40c 4378 	and.w	r3, ip, #63488	; 0xf800
 801a528:	f104 0a01 	add.w	sl, r4, #1
 801a52c:	f10e 0c01 	add.w	ip, lr, #1
 801a530:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801a534:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801a538:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a53c:	0964      	lsrs	r4, r4, #5
 801a53e:	ea4c 0c03 	orr.w	ip, ip, r3
 801a542:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801a546:	9b03      	ldr	r3, [sp, #12]
 801a548:	ea4c 0c04 	orr.w	ip, ip, r4
 801a54c:	f8a3 c000 	strh.w	ip, [r3]
 801a550:	b007      	add	sp, #28
 801a552:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a556:	af05      	add	r7, sp, #20
 801a558:	e756      	b.n	801a408 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801a55a:	ad05      	add	r5, sp, #20
 801a55c:	462f      	mov	r7, r5
 801a55e:	e761      	b.n	801a424 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a560:	ad05      	add	r5, sp, #20
 801a562:	e75f      	b.n	801a424 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801a564:	ae05      	add	r6, sp, #20
 801a566:	e772      	b.n	801a44e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801a568:	ab05      	add	r3, sp, #20
 801a56a:	461e      	mov	r6, r3
 801a56c:	e77e      	b.n	801a46c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801a56e:	ab05      	add	r3, sp, #20
 801a570:	e77c      	b.n	801a46c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801a572 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801a572:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a576:	b095      	sub	sp, #84	; 0x54
 801a578:	9212      	str	r2, [sp, #72]	; 0x48
 801a57a:	9309      	str	r3, [sp, #36]	; 0x24
 801a57c:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801a57e:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 801a582:	930f      	str	r3, [sp, #60]	; 0x3c
 801a584:	910e      	str	r1, [sp, #56]	; 0x38
 801a586:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	; 0x90
 801a58a:	9013      	str	r0, [sp, #76]	; 0x4c
 801a58c:	6850      	ldr	r0, [r2, #4]
 801a58e:	6812      	ldr	r2, [r2, #0]
 801a590:	fb00 1303 	mla	r3, r0, r3, r1
 801a594:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a598:	930a      	str	r3, [sp, #40]	; 0x28
 801a59a:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a59c:	681b      	ldr	r3, [r3, #0]
 801a59e:	930d      	str	r3, [sp, #52]	; 0x34
 801a5a0:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a5a2:	685c      	ldr	r4, [r3, #4]
 801a5a4:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801a5a6:	43db      	mvns	r3, r3
 801a5a8:	b2db      	uxtb	r3, r3
 801a5aa:	3404      	adds	r4, #4
 801a5ac:	930b      	str	r3, [sp, #44]	; 0x2c
 801a5ae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a5b0:	2b00      	cmp	r3, #0
 801a5b2:	dc03      	bgt.n	801a5bc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801a5b4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801a5b6:	2b00      	cmp	r3, #0
 801a5b8:	f340 8255 	ble.w	801aa66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a5bc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801a5be:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801a5c2:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801a5c6:	1e48      	subs	r0, r1, #1
 801a5c8:	1e55      	subs	r5, r2, #1
 801a5ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a5cc:	2b00      	cmp	r3, #0
 801a5ce:	f340 80f9 	ble.w	801a7c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801a5d2:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801a5d4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a5d6:	1436      	asrs	r6, r6, #16
 801a5d8:	ea4f 4323 	mov.w	r3, r3, asr #16
 801a5dc:	d406      	bmi.n	801a5ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a5de:	4286      	cmp	r6, r0
 801a5e0:	da04      	bge.n	801a5ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a5e2:	2b00      	cmp	r3, #0
 801a5e4:	db02      	blt.n	801a5ec <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801a5e6:	42ab      	cmp	r3, r5
 801a5e8:	f2c0 80ed 	blt.w	801a7c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801a5ec:	3601      	adds	r6, #1
 801a5ee:	f100 80da 	bmi.w	801a7a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a5f2:	42b1      	cmp	r1, r6
 801a5f4:	f2c0 80d7 	blt.w	801a7a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a5f8:	3301      	adds	r3, #1
 801a5fa:	f100 80d4 	bmi.w	801a7a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a5fe:	429a      	cmp	r2, r3
 801a600:	f2c0 80d1 	blt.w	801a7a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801a604:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a606:	9311      	str	r3, [sp, #68]	; 0x44
 801a608:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a60a:	930c      	str	r3, [sp, #48]	; 0x30
 801a60c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a60e:	2b00      	cmp	r3, #0
 801a610:	f340 80fa 	ble.w	801a808 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801a614:	9826      	ldr	r0, [sp, #152]	; 0x98
 801a616:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a618:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a61a:	68c6      	ldr	r6, [r0, #12]
 801a61c:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801a61e:	141d      	asrs	r5, r3, #16
 801a620:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a624:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a626:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a628:	1400      	asrs	r0, r0, #16
 801a62a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a62e:	6892      	ldr	r2, [r2, #8]
 801a630:	f100 813e 	bmi.w	801a8b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a634:	1e57      	subs	r7, r2, #1
 801a636:	42b8      	cmp	r0, r7
 801a638:	f280 813a 	bge.w	801a8b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a63c:	2d00      	cmp	r5, #0
 801a63e:	f2c0 8137 	blt.w	801a8b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a642:	1e77      	subs	r7, r6, #1
 801a644:	42bd      	cmp	r5, r7
 801a646:	f280 8133 	bge.w	801a8b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801a64a:	b212      	sxth	r2, r2
 801a64c:	fb05 0002 	mla	r0, r5, r2, r0
 801a650:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a652:	f815 a000 	ldrb.w	sl, [r5, r0]
 801a656:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801a65a:	182e      	adds	r6, r5, r0
 801a65c:	eb04 050a 	add.w	r5, r4, sl
 801a660:	2b00      	cmp	r3, #0
 801a662:	f000 8117 	beq.w	801a894 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801a666:	f896 c001 	ldrb.w	ip, [r6, #1]
 801a66a:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801a66e:	44a4      	add	ip, r4
 801a670:	2900      	cmp	r1, #0
 801a672:	f000 8117 	beq.w	801a8a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801a676:	18b0      	adds	r0, r6, r2
 801a678:	5cb2      	ldrb	r2, [r6, r2]
 801a67a:	7840      	ldrb	r0, [r0, #1]
 801a67c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a680:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a684:	4422      	add	r2, r4
 801a686:	4420      	add	r0, r4
 801a688:	b29b      	uxth	r3, r3
 801a68a:	b289      	uxth	r1, r1
 801a68c:	fb03 f901 	mul.w	r9, r3, r1
 801a690:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801a694:	011b      	lsls	r3, r3, #4
 801a696:	b289      	uxth	r1, r1
 801a698:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801a69c:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a6a0:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a6a2:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801a6a6:	f8b6 e000 	ldrh.w	lr, [r6]
 801a6aa:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 801a6ae:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 801a6b2:	eba3 0309 	sub.w	r3, r3, r9
 801a6b6:	b29b      	uxth	r3, r3
 801a6b8:	eba8 0801 	sub.w	r8, r8, r1
 801a6bc:	fa1f f888 	uxth.w	r8, r8
 801a6c0:	435f      	muls	r7, r3
 801a6c2:	fb08 770b 	mla	r7, r8, fp, r7
 801a6c6:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a6ca:	9310      	str	r3, [sp, #64]	; 0x40
 801a6cc:	fb01 770b 	mla	r7, r1, fp, r7
 801a6d0:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a6d4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a6d6:	fb09 770b 	mla	r7, r9, fp, r7
 801a6da:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801a6de:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a6e2:	fb1b fb03 	smulbb	fp, fp, r3
 801a6e6:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a6ea:	fb07 b706 	mla	r7, r7, r6, fp
 801a6ee:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a6f0:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a6f4:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801a6f8:	f89c c000 	ldrb.w	ip, [ip]
 801a6fc:	435d      	muls	r5, r3
 801a6fe:	fb08 550b 	mla	r5, r8, fp, r5
 801a702:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a706:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a708:	fb01 550b 	mla	r5, r1, fp, r5
 801a70c:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a710:	fb09 550b 	mla	r5, r9, fp, r5
 801a714:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801a718:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a71c:	fb1b fb03 	smulbb	fp, fp, r3
 801a720:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a722:	fb03 f30c 	mul.w	r3, r3, ip
 801a726:	f892 c000 	ldrb.w	ip, [r2]
 801a72a:	fb08 330a 	mla	r3, r8, sl, r3
 801a72e:	fb01 330c 	mla	r3, r1, ip, r3
 801a732:	f890 c000 	ldrb.w	ip, [r0]
 801a736:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801a73a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801a73e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a740:	fa5f fe8e 	uxtb.w	lr, lr
 801a744:	b2bf      	uxth	r7, r7
 801a746:	fb1e fe03 	smulbb	lr, lr, r3
 801a74a:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a74e:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801a752:	fb05 b506 	mla	r5, r5, r6, fp
 801a756:	1c7b      	adds	r3, r7, #1
 801a758:	fb0c e606 	mla	r6, ip, r6, lr
 801a75c:	b2ad      	uxth	r5, r5
 801a75e:	b2b6      	uxth	r6, r6
 801a760:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801a764:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 801a768:	f105 0b01 	add.w	fp, r5, #1
 801a76c:	1c77      	adds	r7, r6, #1
 801a76e:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801a772:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801a776:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801a77a:	096d      	lsrs	r5, r5, #5
 801a77c:	431f      	orrs	r7, r3
 801a77e:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801a782:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a784:	433d      	orrs	r5, r7
 801a786:	801d      	strh	r5, [r3, #0]
 801a788:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801a78a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801a78c:	3302      	adds	r3, #2
 801a78e:	930c      	str	r3, [sp, #48]	; 0x30
 801a790:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a792:	4413      	add	r3, r2
 801a794:	931f      	str	r3, [sp, #124]	; 0x7c
 801a796:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801a798:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a79a:	4413      	add	r3, r2
 801a79c:	9320      	str	r3, [sp, #128]	; 0x80
 801a79e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a7a0:	3b01      	subs	r3, #1
 801a7a2:	9311      	str	r3, [sp, #68]	; 0x44
 801a7a4:	e732      	b.n	801a60c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801a7a6:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a7a8:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801a7aa:	4433      	add	r3, r6
 801a7ac:	931f      	str	r3, [sp, #124]	; 0x7c
 801a7ae:	9e22      	ldr	r6, [sp, #136]	; 0x88
 801a7b0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801a7b2:	4433      	add	r3, r6
 801a7b4:	9320      	str	r3, [sp, #128]	; 0x80
 801a7b6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a7b8:	3b01      	subs	r3, #1
 801a7ba:	9309      	str	r3, [sp, #36]	; 0x24
 801a7bc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a7be:	3302      	adds	r3, #2
 801a7c0:	930a      	str	r3, [sp, #40]	; 0x28
 801a7c2:	e702      	b.n	801a5ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801a7c4:	d027      	beq.n	801a816 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801a7c6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a7c8:	9821      	ldr	r0, [sp, #132]	; 0x84
 801a7ca:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a7cc:	3b01      	subs	r3, #1
 801a7ce:	fb00 5003 	mla	r0, r0, r3, r5
 801a7d2:	1400      	asrs	r0, r0, #16
 801a7d4:	f53f af16 	bmi.w	801a604 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a7d8:	3901      	subs	r1, #1
 801a7da:	4288      	cmp	r0, r1
 801a7dc:	f6bf af12 	bge.w	801a604 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a7e0:	9922      	ldr	r1, [sp, #136]	; 0x88
 801a7e2:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a7e4:	fb01 0303 	mla	r3, r1, r3, r0
 801a7e8:	141b      	asrs	r3, r3, #16
 801a7ea:	f53f af0b 	bmi.w	801a604 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a7ee:	3a01      	subs	r2, #1
 801a7f0:	4293      	cmp	r3, r2
 801a7f2:	f6bf af07 	bge.w	801a604 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801a7f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a7f8:	9311      	str	r3, [sp, #68]	; 0x44
 801a7fa:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 801a7fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801a800:	930c      	str	r3, [sp, #48]	; 0x30
 801a802:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801a804:	2b00      	cmp	r3, #0
 801a806:	dc70      	bgt.n	801a8ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801a808:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801a80a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801a80c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801a810:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801a814:	930a      	str	r3, [sp, #40]	; 0x28
 801a816:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a818:	2b00      	cmp	r3, #0
 801a81a:	f340 8124 	ble.w	801aa66 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801a81e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801a822:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801a826:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801a82a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a82c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801a830:	ee31 1a05 	vadd.f32	s2, s2, s10
 801a834:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801a838:	eef0 6a62 	vmov.f32	s13, s5
 801a83c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801a840:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a844:	ee77 2a62 	vsub.f32	s5, s14, s5
 801a848:	edcd 6a1f 	vstr	s13, [sp, #124]	; 0x7c
 801a84c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801a850:	eef0 6a43 	vmov.f32	s13, s6
 801a854:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801a858:	ee12 2a90 	vmov	r2, s5
 801a85c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801a860:	fb92 f3f3 	sdiv	r3, r2, r3
 801a864:	ee13 2a10 	vmov	r2, s6
 801a868:	9321      	str	r3, [sp, #132]	; 0x84
 801a86a:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a86c:	fb92 f3f3 	sdiv	r3, r2, r3
 801a870:	9322      	str	r3, [sp, #136]	; 0x88
 801a872:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801a874:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801a876:	3b01      	subs	r3, #1
 801a878:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801a87c:	930e      	str	r3, [sp, #56]	; 0x38
 801a87e:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801a880:	edcd 6a20 	vstr	s13, [sp, #128]	; 0x80
 801a884:	bf08      	it	eq
 801a886:	4613      	moveq	r3, r2
 801a888:	9309      	str	r3, [sp, #36]	; 0x24
 801a88a:	eeb0 3a67 	vmov.f32	s6, s15
 801a88e:	eef0 2a47 	vmov.f32	s5, s14
 801a892:	e68c      	b.n	801a5ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801a894:	b149      	cbz	r1, 801a8aa <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801a896:	5cb2      	ldrb	r2, [r6, r2]
 801a898:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a89c:	4422      	add	r2, r4
 801a89e:	4628      	mov	r0, r5
 801a8a0:	46ac      	mov	ip, r5
 801a8a2:	e6f1      	b.n	801a688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a8a4:	4628      	mov	r0, r5
 801a8a6:	462a      	mov	r2, r5
 801a8a8:	e6ee      	b.n	801a688 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801a8aa:	4628      	mov	r0, r5
 801a8ac:	462a      	mov	r2, r5
 801a8ae:	e7f7      	b.n	801a8a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801a8b0:	1c47      	adds	r7, r0, #1
 801a8b2:	f53f af69 	bmi.w	801a788 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a8b6:	42ba      	cmp	r2, r7
 801a8b8:	f6ff af66 	blt.w	801a788 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a8bc:	1c6f      	adds	r7, r5, #1
 801a8be:	f53f af63 	bmi.w	801a788 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a8c2:	42be      	cmp	r6, r7
 801a8c4:	f6ff af60 	blt.w	801a788 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a8c8:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 801a8ca:	9002      	str	r0, [sp, #8]
 801a8cc:	b236      	sxth	r6, r6
 801a8ce:	b212      	sxth	r2, r2
 801a8d0:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801a8d4:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801a8d8:	9200      	str	r2, [sp, #0]
 801a8da:	9601      	str	r6, [sp, #4]
 801a8dc:	4623      	mov	r3, r4
 801a8de:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 801a8e2:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801a8e4:	f7ff fd59 	bl	801a39a <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801a8e8:	e74e      	b.n	801a788 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801a8ea:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801a8ec:	9820      	ldr	r0, [sp, #128]	; 0x80
 801a8ee:	9d1f      	ldr	r5, [sp, #124]	; 0x7c
 801a8f0:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801a8f2:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801a8f6:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801a8f8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801a8fc:	142d      	asrs	r5, r5, #16
 801a8fe:	1400      	asrs	r0, r0, #16
 801a900:	fb02 5000 	mla	r0, r2, r0, r5
 801a904:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801a906:	f815 9000 	ldrb.w	r9, [r5, r0]
 801a90a:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801a90e:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801a912:	182e      	adds	r6, r5, r0
 801a914:	eb04 0509 	add.w	r5, r4, r9
 801a918:	2b00      	cmp	r3, #0
 801a91a:	f000 8096 	beq.w	801aa4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801a91e:	7877      	ldrb	r7, [r6, #1]
 801a920:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801a924:	4427      	add	r7, r4
 801a926:	2900      	cmp	r1, #0
 801a928:	f000 8097 	beq.w	801aa5a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801a92c:	18b0      	adds	r0, r6, r2
 801a92e:	5cb2      	ldrb	r2, [r6, r2]
 801a930:	7840      	ldrb	r0, [r0, #1]
 801a932:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801a936:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801a93a:	4422      	add	r2, r4
 801a93c:	4420      	add	r0, r4
 801a93e:	b29b      	uxth	r3, r3
 801a940:	b289      	uxth	r1, r1
 801a942:	fb03 f801 	mul.w	r8, r3, r1
 801a946:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 801a948:	f895 b002 	ldrb.w	fp, [r5, #2]
 801a94c:	f8b6 c000 	ldrh.w	ip, [r6]
 801a950:	78be      	ldrb	r6, [r7, #2]
 801a952:	f814 9009 	ldrb.w	r9, [r4, r9]
 801a956:	011b      	lsls	r3, r3, #4
 801a958:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801a95c:	b289      	uxth	r1, r1
 801a95e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801a962:	eba3 0308 	sub.w	r3, r3, r8
 801a966:	b29b      	uxth	r3, r3
 801a968:	ebae 0e01 	sub.w	lr, lr, r1
 801a96c:	fa1f fe8e 	uxth.w	lr, lr
 801a970:	435e      	muls	r6, r3
 801a972:	fb0e 660b 	mla	r6, lr, fp, r6
 801a976:	f892 b002 	ldrb.w	fp, [r2, #2]
 801a97a:	9310      	str	r3, [sp, #64]	; 0x40
 801a97c:	fb01 660b 	mla	r6, r1, fp, r6
 801a980:	f890 b002 	ldrb.w	fp, [r0, #2]
 801a984:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a986:	fb08 660b 	mla	r6, r8, fp, r6
 801a98a:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801a98e:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 801a992:	fb1b fb03 	smulbb	fp, fp, r3
 801a996:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801a99a:	fb06 b60a 	mla	r6, r6, sl, fp
 801a99e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a9a0:	f895 b001 	ldrb.w	fp, [r5, #1]
 801a9a4:	787d      	ldrb	r5, [r7, #1]
 801a9a6:	783f      	ldrb	r7, [r7, #0]
 801a9a8:	435d      	muls	r5, r3
 801a9aa:	fb0e 550b 	mla	r5, lr, fp, r5
 801a9ae:	f892 b001 	ldrb.w	fp, [r2, #1]
 801a9b2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a9b4:	fb01 550b 	mla	r5, r1, fp, r5
 801a9b8:	f890 b001 	ldrb.w	fp, [r0, #1]
 801a9bc:	fb08 550b 	mla	r5, r8, fp, r5
 801a9c0:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801a9c4:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 801a9c8:	fb1b fb03 	smulbb	fp, fp, r3
 801a9cc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801a9ce:	437b      	muls	r3, r7
 801a9d0:	7817      	ldrb	r7, [r2, #0]
 801a9d2:	fb0e 3309 	mla	r3, lr, r9, r3
 801a9d6:	fb01 3307 	mla	r3, r1, r7, r3
 801a9da:	7807      	ldrb	r7, [r0, #0]
 801a9dc:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a9e0:	fb08 3707 	mla	r7, r8, r7, r3
 801a9e4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801a9e6:	fa5f fc8c 	uxtb.w	ip, ip
 801a9ea:	fb1c fc03 	smulbb	ip, ip, r3
 801a9ee:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801a9f2:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801a9f6:	fb05 b50a 	mla	r5, r5, sl, fp
 801a9fa:	fb07 c70a 	mla	r7, r7, sl, ip
 801a9fe:	b2b6      	uxth	r6, r6
 801aa00:	b2ad      	uxth	r5, r5
 801aa02:	b2bf      	uxth	r7, r7
 801aa04:	1c73      	adds	r3, r6, #1
 801aa06:	1c7a      	adds	r2, r7, #1
 801aa08:	f105 0b01 	add.w	fp, r5, #1
 801aa0c:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801aa10:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801aa14:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801aa18:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801aa1c:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801aa20:	096d      	lsrs	r5, r5, #5
 801aa22:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801aa24:	4316      	orrs	r6, r2
 801aa26:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801aa2a:	432e      	orrs	r6, r5
 801aa2c:	f823 6b02 	strh.w	r6, [r3], #2
 801aa30:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801aa32:	930c      	str	r3, [sp, #48]	; 0x30
 801aa34:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801aa36:	4413      	add	r3, r2
 801aa38:	931f      	str	r3, [sp, #124]	; 0x7c
 801aa3a:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801aa3c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801aa3e:	4413      	add	r3, r2
 801aa40:	9320      	str	r3, [sp, #128]	; 0x80
 801aa42:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801aa44:	3b01      	subs	r3, #1
 801aa46:	9311      	str	r3, [sp, #68]	; 0x44
 801aa48:	e6db      	b.n	801a802 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801aa4a:	b149      	cbz	r1, 801aa60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801aa4c:	5cb2      	ldrb	r2, [r6, r2]
 801aa4e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aa52:	4422      	add	r2, r4
 801aa54:	4628      	mov	r0, r5
 801aa56:	462f      	mov	r7, r5
 801aa58:	e771      	b.n	801a93e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801aa5a:	4628      	mov	r0, r5
 801aa5c:	462a      	mov	r2, r5
 801aa5e:	e76e      	b.n	801a93e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801aa60:	4628      	mov	r0, r5
 801aa62:	462a      	mov	r2, r5
 801aa64:	e7f7      	b.n	801aa56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801aa66:	b015      	add	sp, #84	; 0x54
 801aa68:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801aa6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801aa6c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801aa70:	880f      	ldrh	r7, [r1, #0]
 801aa72:	f9bd e030 	ldrsh.w	lr, [sp, #48]	; 0x30
 801aa76:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	; 0x34
 801aa7a:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
 801aa7e:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801aa82:	023c      	lsls	r4, r7, #8
 801aa84:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	; 0x38
 801aa88:	f404 0b78 	and.w	fp, r4, #16252928	; 0xf80000
 801aa8c:	017c      	lsls	r4, r7, #5
 801aa8e:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 801aa92:	00ff      	lsls	r7, r7, #3
 801aa94:	ea4b 0404 	orr.w	r4, fp, r4
 801aa98:	b2ff      	uxtb	r7, r7
 801aa9a:	fb05 ca0e 	mla	sl, r5, lr, ip
 801aa9e:	4327      	orrs	r7, r4
 801aaa0:	2d00      	cmp	r5, #0
 801aaa2:	eb02 080a 	add.w	r8, r2, sl
 801aaa6:	9701      	str	r7, [sp, #4]
 801aaa8:	db7e      	blt.n	801aba8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801aaaa:	45a9      	cmp	r9, r5
 801aaac:	dd7c      	ble.n	801aba8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801aaae:	f1bc 0f00 	cmp.w	ip, #0
 801aab2:	db77      	blt.n	801aba4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801aab4:	45e6      	cmp	lr, ip
 801aab6:	dd75      	ble.n	801aba4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801aab8:	f812 700a 	ldrb.w	r7, [r2, sl]
 801aabc:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801aac0:	441f      	add	r7, r3
 801aac2:	f11c 0201 	adds.w	r2, ip, #1
 801aac6:	d472      	bmi.n	801abae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801aac8:	4596      	cmp	lr, r2
 801aaca:	dd70      	ble.n	801abae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801aacc:	2800      	cmp	r0, #0
 801aace:	d06e      	beq.n	801abae <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801aad0:	f898 4001 	ldrb.w	r4, [r8, #1]
 801aad4:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801aad8:	441c      	add	r4, r3
 801aada:	3501      	adds	r5, #1
 801aadc:	d46b      	bmi.n	801abb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801aade:	45a9      	cmp	r9, r5
 801aae0:	dd69      	ble.n	801abb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801aae2:	2e00      	cmp	r6, #0
 801aae4:	d067      	beq.n	801abb6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801aae6:	f1bc 0f00 	cmp.w	ip, #0
 801aaea:	db62      	blt.n	801abb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801aaec:	45e6      	cmp	lr, ip
 801aaee:	dd60      	ble.n	801abb2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801aaf0:	f818 500e 	ldrb.w	r5, [r8, lr]
 801aaf4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801aaf8:	441d      	add	r5, r3
 801aafa:	f11c 0201 	adds.w	r2, ip, #1
 801aafe:	d45d      	bmi.n	801abbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801ab00:	4596      	cmp	lr, r2
 801ab02:	dd5b      	ble.n	801abbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801ab04:	2800      	cmp	r0, #0
 801ab06:	d059      	beq.n	801abbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801ab08:	44c6      	add	lr, r8
 801ab0a:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ab0e:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ab12:	4413      	add	r3, r2
 801ab14:	b280      	uxth	r0, r0
 801ab16:	b2b2      	uxth	r2, r6
 801ab18:	fb00 f602 	mul.w	r6, r0, r2
 801ab1c:	0100      	lsls	r0, r0, #4
 801ab1e:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801ab22:	f5c0 7880 	rsb	r8, r0, #256	; 0x100
 801ab26:	1b80      	subs	r0, r0, r6
 801ab28:	fa1f fc82 	uxth.w	ip, r2
 801ab2c:	b282      	uxth	r2, r0
 801ab2e:	78a0      	ldrb	r0, [r4, #2]
 801ab30:	f897 e002 	ldrb.w	lr, [r7, #2]
 801ab34:	f897 9000 	ldrb.w	r9, [r7]
 801ab38:	787f      	ldrb	r7, [r7, #1]
 801ab3a:	eba8 080c 	sub.w	r8, r8, ip
 801ab3e:	fa1f f888 	uxth.w	r8, r8
 801ab42:	4350      	muls	r0, r2
 801ab44:	fb08 0e0e 	mla	lr, r8, lr, r0
 801ab48:	78a8      	ldrb	r0, [r5, #2]
 801ab4a:	fb0c e000 	mla	r0, ip, r0, lr
 801ab4e:	f893 e002 	ldrb.w	lr, [r3, #2]
 801ab52:	fb06 0e0e 	mla	lr, r6, lr, r0
 801ab56:	f40e 4078 	and.w	r0, lr, #63488	; 0xf800
 801ab5a:	f894 e000 	ldrb.w	lr, [r4]
 801ab5e:	fb02 fe0e 	mul.w	lr, r2, lr
 801ab62:	fb08 e909 	mla	r9, r8, r9, lr
 801ab66:	f895 e000 	ldrb.w	lr, [r5]
 801ab6a:	fb0c 990e 	mla	r9, ip, lr, r9
 801ab6e:	f893 e000 	ldrb.w	lr, [r3]
 801ab72:	785b      	ldrb	r3, [r3, #1]
 801ab74:	fb06 9e0e 	mla	lr, r6, lr, r9
 801ab78:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801ab7c:	ea4e 0e00 	orr.w	lr, lr, r0
 801ab80:	7860      	ldrb	r0, [r4, #1]
 801ab82:	4350      	muls	r0, r2
 801ab84:	786a      	ldrb	r2, [r5, #1]
 801ab86:	fb08 0007 	mla	r0, r8, r7, r0
 801ab8a:	fb0c 0202 	mla	r2, ip, r2, r0
 801ab8e:	fb06 2303 	mla	r3, r6, r3, r2
 801ab92:	095b      	lsrs	r3, r3, #5
 801ab94:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ab98:	ea4e 0303 	orr.w	r3, lr, r3
 801ab9c:	800b      	strh	r3, [r1, #0]
 801ab9e:	b003      	add	sp, #12
 801aba0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801aba4:	af01      	add	r7, sp, #4
 801aba6:	e78c      	b.n	801aac2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801aba8:	ac01      	add	r4, sp, #4
 801abaa:	4627      	mov	r7, r4
 801abac:	e795      	b.n	801aada <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801abae:	ac01      	add	r4, sp, #4
 801abb0:	e793      	b.n	801aada <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801abb2:	ad01      	add	r5, sp, #4
 801abb4:	e7a1      	b.n	801aafa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801abb6:	ab01      	add	r3, sp, #4
 801abb8:	461d      	mov	r5, r3
 801abba:	e7ab      	b.n	801ab14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801abbc:	ab01      	add	r3, sp, #4
 801abbe:	e7a9      	b.n	801ab14 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801abc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801abc0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801abc4:	b08f      	sub	sp, #60	; 0x3c
 801abc6:	e9dd b519 	ldrd	fp, r5, [sp, #100]	; 0x64
 801abca:	920c      	str	r2, [sp, #48]	; 0x30
 801abcc:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 801abce:	910a      	str	r1, [sp, #40]	; 0x28
 801abd0:	9306      	str	r3, [sp, #24]
 801abd2:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	; 0x78
 801abd6:	900d      	str	r0, [sp, #52]	; 0x34
 801abd8:	6850      	ldr	r0, [r2, #4]
 801abda:	6812      	ldr	r2, [r2, #0]
 801abdc:	fb00 1303 	mla	r3, r0, r3, r1
 801abe0:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801abe4:	9307      	str	r3, [sp, #28]
 801abe6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801abe8:	681b      	ldr	r3, [r3, #0]
 801abea:	9308      	str	r3, [sp, #32]
 801abec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801abee:	685c      	ldr	r4, [r3, #4]
 801abf0:	3404      	adds	r4, #4
 801abf2:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801abf4:	2b00      	cmp	r3, #0
 801abf6:	dc03      	bgt.n	801ac00 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801abf8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801abfa:	2b00      	cmp	r3, #0
 801abfc:	f340 81d6 	ble.w	801afac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801ac00:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ac02:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ac06:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ac0a:	1e48      	subs	r0, r1, #1
 801ac0c:	1e56      	subs	r6, r2, #1
 801ac0e:	9b06      	ldr	r3, [sp, #24]
 801ac10:	2b00      	cmp	r3, #0
 801ac12:	f340 80b7 	ble.w	801ad84 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801ac16:	ea5f 472b 	movs.w	r7, fp, asr #16
 801ac1a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801ac1e:	d406      	bmi.n	801ac2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ac20:	4287      	cmp	r7, r0
 801ac22:	da04      	bge.n	801ac2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ac24:	2b00      	cmp	r3, #0
 801ac26:	db02      	blt.n	801ac2e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801ac28:	42b3      	cmp	r3, r6
 801ac2a:	f2c0 80ac 	blt.w	801ad86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801ac2e:	3701      	adds	r7, #1
 801ac30:	f100 809d 	bmi.w	801ad6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ac34:	42b9      	cmp	r1, r7
 801ac36:	f2c0 809a 	blt.w	801ad6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ac3a:	3301      	adds	r3, #1
 801ac3c:	f100 8097 	bmi.w	801ad6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ac40:	429a      	cmp	r2, r3
 801ac42:	f2c0 8094 	blt.w	801ad6e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801ac46:	9b06      	ldr	r3, [sp, #24]
 801ac48:	930b      	str	r3, [sp, #44]	; 0x2c
 801ac4a:	9b07      	ldr	r3, [sp, #28]
 801ac4c:	9309      	str	r3, [sp, #36]	; 0x24
 801ac4e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ac50:	2b00      	cmp	r3, #0
 801ac52:	f340 80b5 	ble.w	801adc0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801ac56:	9820      	ldr	r0, [sp, #128]	; 0x80
 801ac58:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801ac5a:	68c7      	ldr	r7, [r0, #12]
 801ac5c:	6892      	ldr	r2, [r2, #8]
 801ac5e:	ea5f 402b 	movs.w	r0, fp, asr #16
 801ac62:	ea4f 4625 	mov.w	r6, r5, asr #16
 801ac66:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801ac6a:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801ac6e:	f100 80fb 	bmi.w	801ae68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ac72:	f102 3cff 	add.w	ip, r2, #4294967295
 801ac76:	4560      	cmp	r0, ip
 801ac78:	f280 80f6 	bge.w	801ae68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ac7c:	2e00      	cmp	r6, #0
 801ac7e:	f2c0 80f3 	blt.w	801ae68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ac82:	f107 3cff 	add.w	ip, r7, #4294967295
 801ac86:	4566      	cmp	r6, ip
 801ac88:	f280 80ee 	bge.w	801ae68 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801ac8c:	b212      	sxth	r2, r2
 801ac8e:	fb06 0002 	mla	r0, r6, r2, r0
 801ac92:	9e08      	ldr	r6, [sp, #32]
 801ac94:	1837      	adds	r7, r6, r0
 801ac96:	5c30      	ldrb	r0, [r6, r0]
 801ac98:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801ac9c:	eb04 0c08 	add.w	ip, r4, r8
 801aca0:	2b00      	cmp	r3, #0
 801aca2:	f000 80d3 	beq.w	801ae4c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801aca6:	787e      	ldrb	r6, [r7, #1]
 801aca8:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801acac:	4426      	add	r6, r4
 801acae:	2900      	cmp	r1, #0
 801acb0:	f000 80d4 	beq.w	801ae5c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801acb4:	18b8      	adds	r0, r7, r2
 801acb6:	5cba      	ldrb	r2, [r7, r2]
 801acb8:	7840      	ldrb	r0, [r0, #1]
 801acba:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801acbe:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801acc2:	4422      	add	r2, r4
 801acc4:	4420      	add	r0, r4
 801acc6:	b29b      	uxth	r3, r3
 801acc8:	b289      	uxth	r1, r1
 801acca:	fb03 f901 	mul.w	r9, r3, r1
 801acce:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801acd2:	011b      	lsls	r3, r3, #4
 801acd4:	b289      	uxth	r1, r1
 801acd6:	78b7      	ldrb	r7, [r6, #2]
 801acd8:	f89c a002 	ldrb.w	sl, [ip, #2]
 801acdc:	f89c c001 	ldrb.w	ip, [ip, #1]
 801ace0:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801ace4:	eba3 0309 	sub.w	r3, r3, r9
 801ace8:	b29b      	uxth	r3, r3
 801acea:	ebae 0e01 	sub.w	lr, lr, r1
 801acee:	fa1f fe8e 	uxth.w	lr, lr
 801acf2:	435f      	muls	r7, r3
 801acf4:	fb0e 770a 	mla	r7, lr, sl, r7
 801acf8:	f892 a002 	ldrb.w	sl, [r2, #2]
 801acfc:	fb01 770a 	mla	r7, r1, sl, r7
 801ad00:	f890 a002 	ldrb.w	sl, [r0, #2]
 801ad04:	fb09 7a0a 	mla	sl, r9, sl, r7
 801ad08:	f814 7008 	ldrb.w	r7, [r4, r8]
 801ad0c:	f896 8000 	ldrb.w	r8, [r6]
 801ad10:	7876      	ldrb	r6, [r6, #1]
 801ad12:	fb03 f808 	mul.w	r8, r3, r8
 801ad16:	fb0e 8807 	mla	r8, lr, r7, r8
 801ad1a:	7817      	ldrb	r7, [r2, #0]
 801ad1c:	fb01 8807 	mla	r8, r1, r7, r8
 801ad20:	7807      	ldrb	r7, [r0, #0]
 801ad22:	fb09 8707 	mla	r7, r9, r7, r8
 801ad26:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801ad2a:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801ad2e:	ea47 070a 	orr.w	r7, r7, sl
 801ad32:	4373      	muls	r3, r6
 801ad34:	f892 a001 	ldrb.w	sl, [r2, #1]
 801ad38:	fb0e 330c 	mla	r3, lr, ip, r3
 801ad3c:	fb01 310a 	mla	r1, r1, sl, r3
 801ad40:	f890 a001 	ldrb.w	sl, [r0, #1]
 801ad44:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ad46:	fb09 1a0a 	mla	sl, r9, sl, r1
 801ad4a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801ad4e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801ad52:	ea47 070a 	orr.w	r7, r7, sl
 801ad56:	801f      	strh	r7, [r3, #0]
 801ad58:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ad5a:	3302      	adds	r3, #2
 801ad5c:	9309      	str	r3, [sp, #36]	; 0x24
 801ad5e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ad60:	449b      	add	fp, r3
 801ad62:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ad64:	441d      	add	r5, r3
 801ad66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ad68:	3b01      	subs	r3, #1
 801ad6a:	930b      	str	r3, [sp, #44]	; 0x2c
 801ad6c:	e76f      	b.n	801ac4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801ad6e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801ad70:	449b      	add	fp, r3
 801ad72:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801ad74:	441d      	add	r5, r3
 801ad76:	9b06      	ldr	r3, [sp, #24]
 801ad78:	3b01      	subs	r3, #1
 801ad7a:	9306      	str	r3, [sp, #24]
 801ad7c:	9b07      	ldr	r3, [sp, #28]
 801ad7e:	3302      	adds	r3, #2
 801ad80:	9307      	str	r3, [sp, #28]
 801ad82:	e744      	b.n	801ac0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801ad84:	d023      	beq.n	801adce <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801ad86:	9b06      	ldr	r3, [sp, #24]
 801ad88:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801ad8a:	3b01      	subs	r3, #1
 801ad8c:	fb00 b003 	mla	r0, r0, r3, fp
 801ad90:	1400      	asrs	r0, r0, #16
 801ad92:	f53f af58 	bmi.w	801ac46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ad96:	3901      	subs	r1, #1
 801ad98:	4288      	cmp	r0, r1
 801ad9a:	f6bf af54 	bge.w	801ac46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801ad9e:	991c      	ldr	r1, [sp, #112]	; 0x70
 801ada0:	fb01 5303 	mla	r3, r1, r3, r5
 801ada4:	141b      	asrs	r3, r3, #16
 801ada6:	f53f af4e 	bmi.w	801ac46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801adaa:	3a01      	subs	r2, #1
 801adac:	4293      	cmp	r3, r2
 801adae:	f6bf af4a 	bge.w	801ac46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801adb2:	9b06      	ldr	r3, [sp, #24]
 801adb4:	9309      	str	r3, [sp, #36]	; 0x24
 801adb6:	9b07      	ldr	r3, [sp, #28]
 801adb8:	930b      	str	r3, [sp, #44]	; 0x2c
 801adba:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801adbc:	2b00      	cmp	r3, #0
 801adbe:	dc70      	bgt.n	801aea2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801adc0:	9b06      	ldr	r3, [sp, #24]
 801adc2:	9a07      	ldr	r2, [sp, #28]
 801adc4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801adc8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801adcc:	9307      	str	r3, [sp, #28]
 801adce:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801add0:	2b00      	cmp	r3, #0
 801add2:	f340 80eb 	ble.w	801afac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801add6:	ee30 0a04 	vadd.f32	s0, s0, s8
 801adda:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801adde:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ade2:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ade4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ade8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801adec:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801adf0:	eef0 6a62 	vmov.f32	s13, s5
 801adf4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801adf8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801adfc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ae00:	ee16 ba90 	vmov	fp, s13
 801ae04:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ae08:	eef0 6a43 	vmov.f32	s13, s6
 801ae0c:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ae10:	ee12 2a90 	vmov	r2, s5
 801ae14:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801ae18:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae1c:	ee13 2a10 	vmov	r2, s6
 801ae20:	931b      	str	r3, [sp, #108]	; 0x6c
 801ae22:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ae24:	fb92 f3f3 	sdiv	r3, r2, r3
 801ae28:	931c      	str	r3, [sp, #112]	; 0x70
 801ae2a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801ae2c:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801ae2e:	3b01      	subs	r3, #1
 801ae30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ae34:	930a      	str	r3, [sp, #40]	; 0x28
 801ae36:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ae38:	bf08      	it	eq
 801ae3a:	4613      	moveq	r3, r2
 801ae3c:	ee16 5a90 	vmov	r5, s13
 801ae40:	9306      	str	r3, [sp, #24]
 801ae42:	eeb0 3a67 	vmov.f32	s6, s15
 801ae46:	eef0 2a47 	vmov.f32	s5, s14
 801ae4a:	e6d2      	b.n	801abf2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801ae4c:	b149      	cbz	r1, 801ae62 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801ae4e:	5cba      	ldrb	r2, [r7, r2]
 801ae50:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801ae54:	4422      	add	r2, r4
 801ae56:	4660      	mov	r0, ip
 801ae58:	4666      	mov	r6, ip
 801ae5a:	e734      	b.n	801acc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ae5c:	4660      	mov	r0, ip
 801ae5e:	4662      	mov	r2, ip
 801ae60:	e731      	b.n	801acc6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801ae62:	4660      	mov	r0, ip
 801ae64:	4662      	mov	r2, ip
 801ae66:	e7f7      	b.n	801ae58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801ae68:	f110 0c01 	adds.w	ip, r0, #1
 801ae6c:	f53f af74 	bmi.w	801ad58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ae70:	4562      	cmp	r2, ip
 801ae72:	f6ff af71 	blt.w	801ad58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ae76:	f116 0c01 	adds.w	ip, r6, #1
 801ae7a:	f53f af6d 	bmi.w	801ad58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ae7e:	4567      	cmp	r7, ip
 801ae80:	f6ff af6a 	blt.w	801ad58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801ae84:	b23f      	sxth	r7, r7
 801ae86:	b212      	sxth	r2, r2
 801ae88:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801ae8c:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801ae90:	9200      	str	r2, [sp, #0]
 801ae92:	9701      	str	r7, [sp, #4]
 801ae94:	4623      	mov	r3, r4
 801ae96:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801ae9a:	980d      	ldr	r0, [sp, #52]	; 0x34
 801ae9c:	f7ff fde6 	bl	801aa6c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801aea0:	e75a      	b.n	801ad58 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801aea2:	9a20      	ldr	r2, [sp, #128]	; 0x80
 801aea4:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801aea8:	ea4f 462b 	mov.w	r6, fp, asr #16
 801aeac:	1428      	asrs	r0, r5, #16
 801aeae:	fb02 6000 	mla	r0, r2, r0, r6
 801aeb2:	9e08      	ldr	r6, [sp, #32]
 801aeb4:	f816 8000 	ldrb.w	r8, [r6, r0]
 801aeb8:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801aebc:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801aec0:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801aec4:	1837      	adds	r7, r6, r0
 801aec6:	eb04 0c08 	add.w	ip, r4, r8
 801aeca:	2b00      	cmp	r3, #0
 801aecc:	d060      	beq.n	801af90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801aece:	787e      	ldrb	r6, [r7, #1]
 801aed0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801aed4:	4426      	add	r6, r4
 801aed6:	2900      	cmp	r1, #0
 801aed8:	d062      	beq.n	801afa0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801aeda:	18b8      	adds	r0, r7, r2
 801aedc:	5cba      	ldrb	r2, [r7, r2]
 801aede:	7840      	ldrb	r0, [r0, #1]
 801aee0:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801aee4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801aee8:	4422      	add	r2, r4
 801aeea:	4420      	add	r0, r4
 801aeec:	b29b      	uxth	r3, r3
 801aeee:	b289      	uxth	r1, r1
 801aef0:	fb03 f901 	mul.w	r9, r3, r1
 801aef4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801aef8:	011b      	lsls	r3, r3, #4
 801aefa:	b289      	uxth	r1, r1
 801aefc:	78b7      	ldrb	r7, [r6, #2]
 801aefe:	f89c a002 	ldrb.w	sl, [ip, #2]
 801af02:	f89c c001 	ldrb.w	ip, [ip, #1]
 801af06:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801af0a:	eba3 0309 	sub.w	r3, r3, r9
 801af0e:	b29b      	uxth	r3, r3
 801af10:	ebae 0e01 	sub.w	lr, lr, r1
 801af14:	fa1f fe8e 	uxth.w	lr, lr
 801af18:	435f      	muls	r7, r3
 801af1a:	fb0e 770a 	mla	r7, lr, sl, r7
 801af1e:	f892 a002 	ldrb.w	sl, [r2, #2]
 801af22:	fb01 770a 	mla	r7, r1, sl, r7
 801af26:	f890 a002 	ldrb.w	sl, [r0, #2]
 801af2a:	fb09 7a0a 	mla	sl, r9, sl, r7
 801af2e:	f814 7008 	ldrb.w	r7, [r4, r8]
 801af32:	f896 8000 	ldrb.w	r8, [r6]
 801af36:	7876      	ldrb	r6, [r6, #1]
 801af38:	fb03 f808 	mul.w	r8, r3, r8
 801af3c:	fb0e 8807 	mla	r8, lr, r7, r8
 801af40:	7817      	ldrb	r7, [r2, #0]
 801af42:	fb01 8807 	mla	r8, r1, r7, r8
 801af46:	7807      	ldrb	r7, [r0, #0]
 801af48:	fb09 8707 	mla	r7, r9, r7, r8
 801af4c:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 801af50:	4373      	muls	r3, r6
 801af52:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801af56:	7856      	ldrb	r6, [r2, #1]
 801af58:	ea47 070a 	orr.w	r7, r7, sl
 801af5c:	fb0e 330c 	mla	r3, lr, ip, r3
 801af60:	f890 a001 	ldrb.w	sl, [r0, #1]
 801af64:	fb01 3306 	mla	r3, r1, r6, r3
 801af68:	fb09 3a0a 	mla	sl, r9, sl, r3
 801af6c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801af70:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801af72:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 801af76:	ea47 070a 	orr.w	r7, r7, sl
 801af7a:	f823 7b02 	strh.w	r7, [r3], #2
 801af7e:	930b      	str	r3, [sp, #44]	; 0x2c
 801af80:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801af82:	449b      	add	fp, r3
 801af84:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801af86:	441d      	add	r5, r3
 801af88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801af8a:	3b01      	subs	r3, #1
 801af8c:	9309      	str	r3, [sp, #36]	; 0x24
 801af8e:	e714      	b.n	801adba <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801af90:	b149      	cbz	r1, 801afa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801af92:	5cba      	ldrb	r2, [r7, r2]
 801af94:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801af98:	4422      	add	r2, r4
 801af9a:	4660      	mov	r0, ip
 801af9c:	4666      	mov	r6, ip
 801af9e:	e7a5      	b.n	801aeec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801afa0:	4660      	mov	r0, ip
 801afa2:	4662      	mov	r2, ip
 801afa4:	e7a2      	b.n	801aeec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801afa6:	4660      	mov	r0, ip
 801afa8:	4662      	mov	r2, ip
 801afaa:	e7f7      	b.n	801af9c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801afac:	b00f      	add	sp, #60	; 0x3c
 801afae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801afb2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801afb2:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801afb6:	b085      	sub	sp, #20
 801afb8:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	; 0x40
 801afbc:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801afc0:	9102      	str	r1, [sp, #8]
 801afc2:	2c00      	cmp	r4, #0
 801afc4:	fb04 710c 	mla	r1, r4, ip, r7
 801afc8:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 801afcc:	f89d 6048 	ldrb.w	r6, [sp, #72]	; 0x48
 801afd0:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801afd4:	eb02 0e01 	add.w	lr, r2, r1
 801afd8:	f2c0 8122 	blt.w	801b220 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801afdc:	45a0      	cmp	r8, r4
 801afde:	f340 811f 	ble.w	801b220 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801afe2:	2f00      	cmp	r7, #0
 801afe4:	f2c0 811a 	blt.w	801b21c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801afe8:	45bc      	cmp	ip, r7
 801afea:	f340 8117 	ble.w	801b21c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801afee:	5c52      	ldrb	r2, [r2, r1]
 801aff0:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801aff4:	1c7a      	adds	r2, r7, #1
 801aff6:	f100 8116 	bmi.w	801b226 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801affa:	4594      	cmp	ip, r2
 801affc:	f340 8113 	ble.w	801b226 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801b000:	2e00      	cmp	r6, #0
 801b002:	f000 8112 	beq.w	801b22a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801b006:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801b00a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801b00e:	3401      	adds	r4, #1
 801b010:	f100 810f 	bmi.w	801b232 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801b014:	45a0      	cmp	r8, r4
 801b016:	f340 810c 	ble.w	801b232 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801b01a:	2800      	cmp	r0, #0
 801b01c:	f000 810c 	beq.w	801b238 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801b020:	2f00      	cmp	r7, #0
 801b022:	f2c0 8104 	blt.w	801b22e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801b026:	45bc      	cmp	ip, r7
 801b028:	f340 8101 	ble.w	801b22e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801b02c:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801b030:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801b034:	3701      	adds	r7, #1
 801b036:	f100 8102 	bmi.w	801b23e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801b03a:	45bc      	cmp	ip, r7
 801b03c:	f340 80ff 	ble.w	801b23e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801b040:	2e00      	cmp	r6, #0
 801b042:	f000 80fe 	beq.w	801b242 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801b046:	44f4      	add	ip, lr
 801b048:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801b04c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801b050:	b2b6      	uxth	r6, r6
 801b052:	b280      	uxth	r0, r0
 801b054:	fb00 fe06 	mul.w	lr, r0, r6
 801b058:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801b05c:	0136      	lsls	r6, r6, #4
 801b05e:	eba6 070e 	sub.w	r7, r6, lr
 801b062:	b280      	uxth	r0, r0
 801b064:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801b068:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801b06c:	b2bf      	uxth	r7, r7
 801b06e:	1a1b      	subs	r3, r3, r0
 801b070:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801b074:	b29b      	uxth	r3, r3
 801b076:	fb0a f607 	mul.w	r6, sl, r7
 801b07a:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801b07e:	fb0b 6603 	mla	r6, fp, r3, r6
 801b082:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801b086:	fb00 6609 	mla	r6, r0, r9, r6
 801b08a:	fb0e 6608 	mla	r6, lr, r8, r6
 801b08e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801b092:	9600      	str	r6, [sp, #0]
 801b094:	2e00      	cmp	r6, #0
 801b096:	f000 80be 	beq.w	801b216 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801b09a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801b09e:	fb0b fc0c 	mul.w	ip, fp, ip
 801b0a2:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801b0a6:	fb0b f505 	mul.w	r5, fp, r5
 801b0aa:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801b0ae:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801b0b2:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b0b6:	44dc      	add	ip, fp
 801b0b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b0bc:	9501      	str	r5, [sp, #4]
 801b0be:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801b0c2:	9503      	str	r5, [sp, #12]
 801b0c4:	9d01      	ldr	r5, [sp, #4]
 801b0c6:	9e02      	ldr	r6, [sp, #8]
 801b0c8:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801b0cc:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801b0d0:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801b0d4:	fb0a fc0c 	mul.w	ip, sl, ip
 801b0d8:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801b0dc:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801b0e0:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b0e4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b0e8:	4465      	add	r5, ip
 801b0ea:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b0ee:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801b0f2:	fb09 fc0c 	mul.w	ip, r9, ip
 801b0f6:	fb09 f904 	mul.w	r9, r9, r4
 801b0fa:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801b0fe:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801b102:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801b106:	fb08 f404 	mul.w	r4, r8, r4
 801b10a:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b10e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801b112:	fb08 f802 	mul.w	r8, r8, r2
 801b116:	fb0a fa01 	mul.w	sl, sl, r1
 801b11a:	0a22      	lsrs	r2, r4, #8
 801b11c:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801b120:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801b124:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801b128:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801b12c:	4414      	add	r4, r2
 801b12e:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801b132:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801b136:	0a2d      	lsrs	r5, r5, #8
 801b138:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801b13c:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801b140:	9a03      	ldr	r2, [sp, #12]
 801b142:	8836      	ldrh	r6, [r6, #0]
 801b144:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801b148:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801b14c:	437d      	muls	r5, r7
 801b14e:	4461      	add	r1, ip
 801b150:	0a24      	lsrs	r4, r4, #8
 801b152:	fb02 5503 	mla	r5, r2, r3, r5
 801b156:	0a09      	lsrs	r1, r1, #8
 801b158:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801b15c:	fb04 540e 	mla	r4, r4, lr, r5
 801b160:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801b164:	fb01 4100 	mla	r1, r1, r0, r4
 801b168:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b16c:	0a09      	lsrs	r1, r1, #8
 801b16e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b172:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801b176:	fb07 f70a 	mul.w	r7, r7, sl
 801b17a:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801b17e:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801b182:	fb03 7101 	mla	r1, r3, r1, r7
 801b186:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b18a:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801b18e:	fb0e 1e08 	mla	lr, lr, r8, r1
 801b192:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801b196:	fb00 e101 	mla	r1, r0, r1, lr
 801b19a:	f89d 0050 	ldrb.w	r0, [sp, #80]	; 0x50
 801b19e:	9a00      	ldr	r2, [sp, #0]
 801b1a0:	b287      	uxth	r7, r0
 801b1a2:	437a      	muls	r2, r7
 801b1a4:	0a09      	lsrs	r1, r1, #8
 801b1a6:	1c53      	adds	r3, r2, #1
 801b1a8:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801b1ac:	4321      	orrs	r1, r4
 801b1ae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801b1b2:	1235      	asrs	r5, r6, #8
 801b1b4:	0c0a      	lsrs	r2, r1, #16
 801b1b6:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801b1ba:	b2db      	uxtb	r3, r3
 801b1bc:	fb12 f207 	smulbb	r2, r2, r7
 801b1c0:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801b1c4:	fb05 2503 	mla	r5, r5, r3, r2
 801b1c8:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801b1cc:	10f2      	asrs	r2, r6, #3
 801b1ce:	b2c8      	uxtb	r0, r1
 801b1d0:	00f6      	lsls	r6, r6, #3
 801b1d2:	fb14 f407 	smulbb	r4, r4, r7
 801b1d6:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b1da:	b2f6      	uxtb	r6, r6
 801b1dc:	fb10 f007 	smulbb	r0, r0, r7
 801b1e0:	fb02 4203 	mla	r2, r2, r3, r4
 801b1e4:	b2ad      	uxth	r5, r5
 801b1e6:	fb06 0303 	mla	r3, r6, r3, r0
 801b1ea:	b299      	uxth	r1, r3
 801b1ec:	b294      	uxth	r4, r2
 801b1ee:	1c6b      	adds	r3, r5, #1
 801b1f0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801b1f4:	1c62      	adds	r2, r4, #1
 801b1f6:	1c4b      	adds	r3, r1, #1
 801b1f8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801b1fc:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801b200:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801b204:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b208:	0952      	lsrs	r2, r2, #5
 801b20a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b20e:	432b      	orrs	r3, r5
 801b210:	4313      	orrs	r3, r2
 801b212:	9a02      	ldr	r2, [sp, #8]
 801b214:	8013      	strh	r3, [r2, #0]
 801b216:	b005      	add	sp, #20
 801b218:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b21c:	2500      	movs	r5, #0
 801b21e:	e6e9      	b.n	801aff4 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 801b220:	2100      	movs	r1, #0
 801b222:	460d      	mov	r5, r1
 801b224:	e6f3      	b.n	801b00e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b226:	2100      	movs	r1, #0
 801b228:	e6f1      	b.n	801b00e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b22a:	4631      	mov	r1, r6
 801b22c:	e6ef      	b.n	801b00e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 801b22e:	2400      	movs	r4, #0
 801b230:	e700      	b.n	801b034 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 801b232:	2200      	movs	r2, #0
 801b234:	4614      	mov	r4, r2
 801b236:	e70b      	b.n	801b050 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b238:	4602      	mov	r2, r0
 801b23a:	4604      	mov	r4, r0
 801b23c:	e708      	b.n	801b050 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b23e:	2200      	movs	r2, #0
 801b240:	e706      	b.n	801b050 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 801b242:	4632      	mov	r2, r6
 801b244:	e704      	b.n	801b050 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

0801b246 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801b246:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b24a:	b09f      	sub	sp, #124	; 0x7c
 801b24c:	921b      	str	r2, [sp, #108]	; 0x6c
 801b24e:	9309      	str	r3, [sp, #36]	; 0x24
 801b250:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 801b252:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 801b256:	931c      	str	r3, [sp, #112]	; 0x70
 801b258:	9119      	str	r1, [sp, #100]	; 0x64
 801b25a:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 801b25e:	901d      	str	r0, [sp, #116]	; 0x74
 801b260:	6850      	ldr	r0, [r2, #4]
 801b262:	6812      	ldr	r2, [r2, #0]
 801b264:	9d2a      	ldr	r5, [sp, #168]	; 0xa8
 801b266:	fb00 1303 	mla	r3, r0, r3, r1
 801b26a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b26e:	930c      	str	r3, [sp, #48]	; 0x30
 801b270:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b272:	681b      	ldr	r3, [r3, #0]
 801b274:	9312      	str	r3, [sp, #72]	; 0x48
 801b276:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b278:	685e      	ldr	r6, [r3, #4]
 801b27a:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 801b27e:	930d      	str	r3, [sp, #52]	; 0x34
 801b280:	3604      	adds	r6, #4
 801b282:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b284:	2b00      	cmp	r3, #0
 801b286:	dc03      	bgt.n	801b290 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801b288:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801b28a:	2b00      	cmp	r3, #0
 801b28c:	f340 8388 	ble.w	801b9a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b290:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b292:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b296:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801b29a:	1e48      	subs	r0, r1, #1
 801b29c:	1e57      	subs	r7, r2, #1
 801b29e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b2a0:	2b00      	cmp	r3, #0
 801b2a2:	f340 8195 	ble.w	801b5d0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801b2a6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b2a8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801b2ac:	ea4f 4325 	mov.w	r3, r5, asr #16
 801b2b0:	d406      	bmi.n	801b2c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b2b2:	4584      	cmp	ip, r0
 801b2b4:	da04      	bge.n	801b2c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b2b6:	2b00      	cmp	r3, #0
 801b2b8:	db02      	blt.n	801b2c0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801b2ba:	42bb      	cmp	r3, r7
 801b2bc:	f2c0 8189 	blt.w	801b5d2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801b2c0:	f11c 0c01 	adds.w	ip, ip, #1
 801b2c4:	f100 8177 	bmi.w	801b5b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b2c8:	4561      	cmp	r1, ip
 801b2ca:	f2c0 8174 	blt.w	801b5b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b2ce:	3301      	adds	r3, #1
 801b2d0:	f100 8171 	bmi.w	801b5b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b2d4:	429a      	cmp	r2, r3
 801b2d6:	f2c0 816e 	blt.w	801b5b6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 801b2da:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b2dc:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 801b2de:	931a      	str	r3, [sp, #104]	; 0x68
 801b2e0:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801b2e2:	2b00      	cmp	r3, #0
 801b2e4:	f340 8193 	ble.w	801b60e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 801b2e8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b2ea:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b2ee:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b2f0:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 801b2f4:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b2f6:	141b      	asrs	r3, r3, #16
 801b2f8:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801b2fc:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801b300:	f100 81d6 	bmi.w	801b6b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b304:	f100 38ff 	add.w	r8, r0, #4294967295
 801b308:	4543      	cmp	r3, r8
 801b30a:	f280 81d1 	bge.w	801b6b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b30e:	f1bc 0f00 	cmp.w	ip, #0
 801b312:	f2c0 81cd 	blt.w	801b6b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b316:	f10e 38ff 	add.w	r8, lr, #4294967295
 801b31a:	45c4      	cmp	ip, r8
 801b31c:	f280 81c8 	bge.w	801b6b0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 801b320:	b200      	sxth	r0, r0
 801b322:	fb0c 3300 	mla	r3, ip, r0, r3
 801b326:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b328:	eb04 0803 	add.w	r8, r4, r3
 801b32c:	5ce3      	ldrb	r3, [r4, r3]
 801b32e:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b332:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801b336:	2a00      	cmp	r2, #0
 801b338:	f000 81af 	beq.w	801b69a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801b33c:	f898 c001 	ldrb.w	ip, [r8, #1]
 801b340:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801b344:	940e      	str	r4, [sp, #56]	; 0x38
 801b346:	0e24      	lsrs	r4, r4, #24
 801b348:	9415      	str	r4, [sp, #84]	; 0x54
 801b34a:	b179      	cbz	r1, 801b36c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b34c:	eb08 0c00 	add.w	ip, r8, r0
 801b350:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b354:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b358:	900a      	str	r0, [sp, #40]	; 0x28
 801b35a:	0e00      	lsrs	r0, r0, #24
 801b35c:	9013      	str	r0, [sp, #76]	; 0x4c
 801b35e:	f89c 0001 	ldrb.w	r0, [ip, #1]
 801b362:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b366:	900f      	str	r0, [sp, #60]	; 0x3c
 801b368:	0e00      	lsrs	r0, r0, #24
 801b36a:	9016      	str	r0, [sp, #88]	; 0x58
 801b36c:	b292      	uxth	r2, r2
 801b36e:	b289      	uxth	r1, r1
 801b370:	fb02 f901 	mul.w	r9, r2, r1
 801b374:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801b378:	0112      	lsls	r2, r2, #4
 801b37a:	eba2 0809 	sub.w	r8, r2, r9
 801b37e:	b289      	uxth	r1, r1
 801b380:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b384:	9815      	ldr	r0, [sp, #84]	; 0x54
 801b386:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b388:	fa1f f888 	uxth.w	r8, r8
 801b38c:	1a52      	subs	r2, r2, r1
 801b38e:	b292      	uxth	r2, r2
 801b390:	fb08 f000 	mul.w	r0, r8, r0
 801b394:	fb02 000e 	mla	r0, r2, lr, r0
 801b398:	fb01 0004 	mla	r0, r1, r4, r0
 801b39c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b39e:	fb09 0004 	mla	r0, r9, r4, r0
 801b3a2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801b3a6:	2800      	cmp	r0, #0
 801b3a8:	f000 80fa 	beq.w	801b5a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b3ac:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801b3b0:	d01b      	beq.n	801b3ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 801b3b2:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b3b6:	fb0e fa0a 	mul.w	sl, lr, sl
 801b3ba:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b3be:	fb0e fe03 	mul.w	lr, lr, r3
 801b3c2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b3c6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b3ca:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b3ce:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801b3d2:	4453      	add	r3, sl
 801b3d4:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801b3d8:	0a1b      	lsrs	r3, r3, #8
 801b3da:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b3de:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b3e2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b3e6:	ea43 030c 	orr.w	r3, r3, ip
 801b3ea:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b3ec:	2cff      	cmp	r4, #255	; 0xff
 801b3ee:	d021      	beq.n	801b434 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801b3f0:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b3f2:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b3f6:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b3f8:	fb04 fb0b 	mul.w	fp, r4, fp
 801b3fc:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b3fe:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b402:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801b404:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b408:	fb04 fa0a 	mul.w	sl, r4, sl
 801b40c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b410:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b414:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b418:	44de      	add	lr, fp
 801b41a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b41e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b422:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b426:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b42a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b42e:	ea4e 040a 	orr.w	r4, lr, sl
 801b432:	940e      	str	r4, [sp, #56]	; 0x38
 801b434:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b436:	2cff      	cmp	r4, #255	; 0xff
 801b438:	d021      	beq.n	801b47e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801b43a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b43c:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b440:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b442:	fb04 fb0b 	mul.w	fp, r4, fp
 801b446:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b448:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b44c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801b44e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b452:	fb04 fa0a 	mul.w	sl, r4, sl
 801b456:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b45a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b45e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b462:	44de      	add	lr, fp
 801b464:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b468:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b46c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b470:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b474:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b478:	ea4e 040a 	orr.w	r4, lr, sl
 801b47c:	940a      	str	r4, [sp, #40]	; 0x28
 801b47e:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b480:	2cff      	cmp	r4, #255	; 0xff
 801b482:	d021      	beq.n	801b4c8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801b484:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b486:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801b48a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b48c:	fb04 fb0b 	mul.w	fp, r4, fp
 801b490:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b492:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b496:	9c16      	ldr	r4, [sp, #88]	; 0x58
 801b498:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801b49c:	fb04 fa0a 	mul.w	sl, r4, sl
 801b4a0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b4a4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801b4a8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801b4ac:	44de      	add	lr, fp
 801b4ae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801b4b2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801b4b6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b4ba:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801b4be:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b4c2:	ea4e 040a 	orr.w	r4, lr, sl
 801b4c6:	940f      	str	r4, [sp, #60]	; 0x3c
 801b4c8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b4ca:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b4ce:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801b4d0:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801b4d4:	fb08 fc0c 	mul.w	ip, r8, ip
 801b4d8:	fb02 cc0e 	mla	ip, r2, lr, ip
 801b4dc:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b4e0:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801b4e2:	fb01 cc0e 	mla	ip, r1, lr, ip
 801b4e6:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801b4ea:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801b4ec:	fb09 cc0e 	mla	ip, r9, lr, ip
 801b4f0:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801b4f4:	fb08 f80e 	mul.w	r8, r8, lr
 801b4f8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b4fc:	fb02 8303 	mla	r3, r2, r3, r8
 801b500:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801b502:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b504:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b508:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801b50a:	fb01 330a 	mla	r3, r1, sl, r3
 801b50e:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 801b512:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801b514:	fb09 3901 	mla	r9, r9, r1, r3
 801b518:	4342      	muls	r2, r0
 801b51a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b51e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801b522:	883b      	ldrh	r3, [r7, #0]
 801b524:	1c50      	adds	r0, r2, #1
 801b526:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b52a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801b52e:	ea4c 0c09 	orr.w	ip, ip, r9
 801b532:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b536:	1219      	asrs	r1, r3, #8
 801b538:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801b53c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801b540:	b2c0      	uxtb	r0, r0
 801b542:	fb12 f204 	smulbb	r2, r2, r4
 801b546:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801b54a:	fb01 2100 	mla	r1, r1, r0, r2
 801b54e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801b552:	10da      	asrs	r2, r3, #3
 801b554:	fa5f fc8c 	uxtb.w	ip, ip
 801b558:	00db      	lsls	r3, r3, #3
 801b55a:	fb1c fc04 	smulbb	ip, ip, r4
 801b55e:	b2db      	uxtb	r3, r3
 801b560:	b289      	uxth	r1, r1
 801b562:	fb03 c300 	mla	r3, r3, r0, ip
 801b566:	fa1f fc83 	uxth.w	ip, r3
 801b56a:	1c4b      	adds	r3, r1, #1
 801b56c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801b570:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801b574:	fb1e fe04 	smulbb	lr, lr, r4
 801b578:	f10c 0301 	add.w	r3, ip, #1
 801b57c:	fb02 e200 	mla	r2, r2, r0, lr
 801b580:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801b584:	b292      	uxth	r2, r2
 801b586:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801b58a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801b58e:	430b      	orrs	r3, r1
 801b590:	1c51      	adds	r1, r2, #1
 801b592:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801b596:	0952      	lsrs	r2, r2, #5
 801b598:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801b59c:	4313      	orrs	r3, r2
 801b59e:	803b      	strh	r3, [r7, #0]
 801b5a0:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b5a2:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b5a4:	441a      	add	r2, r3
 801b5a6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b5a8:	9229      	str	r2, [sp, #164]	; 0xa4
 801b5aa:	441d      	add	r5, r3
 801b5ac:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801b5ae:	3b01      	subs	r3, #1
 801b5b0:	3702      	adds	r7, #2
 801b5b2:	931a      	str	r3, [sp, #104]	; 0x68
 801b5b4:	e694      	b.n	801b2e0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801b5b6:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b5b8:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b5ba:	441c      	add	r4, r3
 801b5bc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b5be:	9429      	str	r4, [sp, #164]	; 0xa4
 801b5c0:	441d      	add	r5, r3
 801b5c2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b5c4:	3b01      	subs	r3, #1
 801b5c6:	9309      	str	r3, [sp, #36]	; 0x24
 801b5c8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b5ca:	3302      	adds	r3, #2
 801b5cc:	930c      	str	r3, [sp, #48]	; 0x30
 801b5ce:	e666      	b.n	801b29e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801b5d0:	d024      	beq.n	801b61c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 801b5d2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b5d4:	982b      	ldr	r0, [sp, #172]	; 0xac
 801b5d6:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b5d8:	3b01      	subs	r3, #1
 801b5da:	fb00 4003 	mla	r0, r0, r3, r4
 801b5de:	1400      	asrs	r0, r0, #16
 801b5e0:	f53f ae7b 	bmi.w	801b2da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b5e4:	3901      	subs	r1, #1
 801b5e6:	4288      	cmp	r0, r1
 801b5e8:	f6bf ae77 	bge.w	801b2da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b5ec:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801b5ee:	fb01 5303 	mla	r3, r1, r3, r5
 801b5f2:	141b      	asrs	r3, r3, #16
 801b5f4:	f53f ae71 	bmi.w	801b2da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b5f8:	3a01      	subs	r2, #1
 801b5fa:	4293      	cmp	r3, r2
 801b5fc:	f6bf ae6d 	bge.w	801b2da <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801b600:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801b604:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 801b608:	f1bb 0f00 	cmp.w	fp, #0
 801b60c:	dc70      	bgt.n	801b6f0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 801b60e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801b610:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801b614:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801b616:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801b61a:	930c      	str	r3, [sp, #48]	; 0x30
 801b61c:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b61e:	2b00      	cmp	r3, #0
 801b620:	f340 81be 	ble.w	801b9a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 801b624:	ee30 0a04 	vadd.f32	s0, s0, s8
 801b628:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801b62c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801b630:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b632:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801b636:	ee31 1a05 	vadd.f32	s2, s2, s10
 801b63a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801b63e:	eef0 6a62 	vmov.f32	s13, s5
 801b642:	ee61 7a27 	vmul.f32	s15, s2, s15
 801b646:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b64a:	ee77 2a62 	vsub.f32	s5, s14, s5
 801b64e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 801b652:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801b656:	eef0 6a43 	vmov.f32	s13, s6
 801b65a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801b65e:	ee12 2a90 	vmov	r2, s5
 801b662:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801b666:	fb92 f3f3 	sdiv	r3, r2, r3
 801b66a:	ee13 2a10 	vmov	r2, s6
 801b66e:	932b      	str	r3, [sp, #172]	; 0xac
 801b670:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b672:	fb92 f3f3 	sdiv	r3, r2, r3
 801b676:	932c      	str	r3, [sp, #176]	; 0xb0
 801b678:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801b67a:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801b67c:	3b01      	subs	r3, #1
 801b67e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801b682:	9319      	str	r3, [sp, #100]	; 0x64
 801b684:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801b686:	bf08      	it	eq
 801b688:	4613      	moveq	r3, r2
 801b68a:	ee16 5a90 	vmov	r5, s13
 801b68e:	9309      	str	r3, [sp, #36]	; 0x24
 801b690:	eeb0 3a67 	vmov.f32	s6, s15
 801b694:	eef0 2a47 	vmov.f32	s5, s14
 801b698:	e5f3      	b.n	801b282 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801b69a:	2900      	cmp	r1, #0
 801b69c:	f43f ae66 	beq.w	801b36c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b6a0:	f818 0000 	ldrb.w	r0, [r8, r0]
 801b6a4:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 801b6a8:	900a      	str	r0, [sp, #40]	; 0x28
 801b6aa:	0e00      	lsrs	r0, r0, #24
 801b6ac:	9013      	str	r0, [sp, #76]	; 0x4c
 801b6ae:	e65d      	b.n	801b36c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 801b6b0:	f113 0801 	adds.w	r8, r3, #1
 801b6b4:	f53f af74 	bmi.w	801b5a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b6b8:	4540      	cmp	r0, r8
 801b6ba:	f6ff af71 	blt.w	801b5a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b6be:	f11c 0801 	adds.w	r8, ip, #1
 801b6c2:	f53f af6d 	bmi.w	801b5a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b6c6:	45c6      	cmp	lr, r8
 801b6c8:	f6ff af6a 	blt.w	801b5a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b6cc:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801b6ce:	9302      	str	r3, [sp, #8]
 801b6d0:	b200      	sxth	r0, r0
 801b6d2:	fa0f f38e 	sxth.w	r3, lr
 801b6d6:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801b6da:	e9cd c203 	strd	ip, r2, [sp, #12]
 801b6de:	9301      	str	r3, [sp, #4]
 801b6e0:	9000      	str	r0, [sp, #0]
 801b6e2:	4633      	mov	r3, r6
 801b6e4:	9a12      	ldr	r2, [sp, #72]	; 0x48
 801b6e6:	981d      	ldr	r0, [sp, #116]	; 0x74
 801b6e8:	4639      	mov	r1, r7
 801b6ea:	f7ff fc62 	bl	801afb2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 801b6ee:	e757      	b.n	801b5a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801b6f0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801b6f2:	9c29      	ldr	r4, [sp, #164]	; 0xa4
 801b6f4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801b6f8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801b6fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801b6fe:	1427      	asrs	r7, r4, #16
 801b700:	142b      	asrs	r3, r5, #16
 801b702:	fb01 7303 	mla	r3, r1, r3, r7
 801b706:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801b708:	18e7      	adds	r7, r4, r3
 801b70a:	5ce3      	ldrb	r3, [r4, r3]
 801b70c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801b710:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801b714:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801b718:	2a00      	cmp	r2, #0
 801b71a:	f000 8137 	beq.w	801b98c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801b71e:	f897 e001 	ldrb.w	lr, [r7, #1]
 801b722:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801b726:	9410      	str	r4, [sp, #64]	; 0x40
 801b728:	0e24      	lsrs	r4, r4, #24
 801b72a:	9417      	str	r4, [sp, #92]	; 0x5c
 801b72c:	b170      	cbz	r0, 801b74c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b72e:	eb07 0e01 	add.w	lr, r7, r1
 801b732:	5c79      	ldrb	r1, [r7, r1]
 801b734:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b738:	910b      	str	r1, [sp, #44]	; 0x2c
 801b73a:	0e09      	lsrs	r1, r1, #24
 801b73c:	9114      	str	r1, [sp, #80]	; 0x50
 801b73e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801b742:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b746:	9111      	str	r1, [sp, #68]	; 0x44
 801b748:	0e09      	lsrs	r1, r1, #24
 801b74a:	9118      	str	r1, [sp, #96]	; 0x60
 801b74c:	b292      	uxth	r2, r2
 801b74e:	b280      	uxth	r0, r0
 801b750:	fb02 f800 	mul.w	r8, r2, r0
 801b754:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801b758:	0112      	lsls	r2, r2, #4
 801b75a:	eba2 0e08 	sub.w	lr, r2, r8
 801b75e:	b280      	uxth	r0, r0
 801b760:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801b764:	9917      	ldr	r1, [sp, #92]	; 0x5c
 801b766:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b768:	fa1f fe8e 	uxth.w	lr, lr
 801b76c:	1a12      	subs	r2, r2, r0
 801b76e:	b292      	uxth	r2, r2
 801b770:	fb0e f101 	mul.w	r1, lr, r1
 801b774:	fb02 110c 	mla	r1, r2, ip, r1
 801b778:	fb00 1104 	mla	r1, r0, r4, r1
 801b77c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b77e:	fb08 1104 	mla	r1, r8, r4, r1
 801b782:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801b786:	2900      	cmp	r1, #0
 801b788:	f000 80f5 	beq.w	801b976 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801b78c:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801b790:	d019      	beq.n	801b7c6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 801b792:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801b796:	fb0c fa0a 	mul.w	sl, ip, sl
 801b79a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b79e:	fb0c fc03 	mul.w	ip, ip, r3
 801b7a2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801b7a6:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b7aa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801b7ae:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801b7b2:	4453      	add	r3, sl
 801b7b4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801b7b8:	0a1b      	lsrs	r3, r3, #8
 801b7ba:	0a3f      	lsrs	r7, r7, #8
 801b7bc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801b7c0:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801b7c4:	433b      	orrs	r3, r7
 801b7c6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b7c8:	2cff      	cmp	r4, #255	; 0xff
 801b7ca:	d020      	beq.n	801b80e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 801b7cc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b7ce:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b7d2:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b7d4:	4367      	muls	r7, r4
 801b7d6:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b7d8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b7dc:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 801b7de:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b7e2:	fb04 fa0a 	mul.w	sl, r4, sl
 801b7e6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b7ea:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b7ee:	44bc      	add	ip, r7
 801b7f0:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b7f4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b7f8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b7fc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b800:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b804:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b808:	ea4c 040a 	orr.w	r4, ip, sl
 801b80c:	9410      	str	r4, [sp, #64]	; 0x40
 801b80e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b810:	2cff      	cmp	r4, #255	; 0xff
 801b812:	d020      	beq.n	801b856 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 801b814:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b816:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b81a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b81c:	4367      	muls	r7, r4
 801b81e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b820:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b824:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801b826:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b82a:	fb04 fa0a 	mul.w	sl, r4, sl
 801b82e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b832:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b836:	44bc      	add	ip, r7
 801b838:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b83c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b840:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b844:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b848:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b84c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b850:	ea4c 040a 	orr.w	r4, ip, sl
 801b854:	940b      	str	r4, [sp, #44]	; 0x2c
 801b856:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b858:	2cff      	cmp	r4, #255	; 0xff
 801b85a:	d020      	beq.n	801b89e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801b85c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b85e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b862:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b864:	4367      	muls	r7, r4
 801b866:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b868:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801b86c:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801b86e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801b872:	fb04 fa0a 	mul.w	sl, r4, sl
 801b876:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801b87a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b87e:	44bc      	add	ip, r7
 801b880:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801b884:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801b888:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b88c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801b890:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801b894:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801b898:	ea4c 040a 	orr.w	r4, ip, sl
 801b89c:	9411      	str	r4, [sp, #68]	; 0x44
 801b89e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b8a0:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801b8a4:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801b8a6:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801b8aa:	fb0e f707 	mul.w	r7, lr, r7
 801b8ae:	fb02 770c 	mla	r7, r2, ip, r7
 801b8b2:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b8b6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801b8b8:	fb00 770c 	mla	r7, r0, ip, r7
 801b8bc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801b8c0:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801b8c2:	fb08 770c 	mla	r7, r8, ip, r7
 801b8c6:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801b8ca:	fb0e fe0c 	mul.w	lr, lr, ip
 801b8ce:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801b8d2:	fb02 e303 	mla	r3, r2, r3, lr
 801b8d6:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801b8d8:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801b8da:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801b8de:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801b8e0:	fb00 330a 	mla	r3, r0, sl, r3
 801b8e4:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801b8e8:	fb08 3c0c 	mla	ip, r8, ip, r3
 801b8ec:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801b8ee:	f8b9 0000 	ldrh.w	r0, [r9]
 801b8f2:	434b      	muls	r3, r1
 801b8f4:	0a3f      	lsrs	r7, r7, #8
 801b8f6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801b8fa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801b8fe:	1c59      	adds	r1, r3, #1
 801b900:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801b904:	ea47 070c 	orr.w	r7, r7, ip
 801b908:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801b90c:	1202      	asrs	r2, r0, #8
 801b90e:	0c3b      	lsrs	r3, r7, #16
 801b910:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801b914:	b2c9      	uxtb	r1, r1
 801b916:	fb13 f304 	smulbb	r3, r3, r4
 801b91a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801b91e:	fb02 3201 	mla	r2, r2, r1, r3
 801b922:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801b926:	10c3      	asrs	r3, r0, #3
 801b928:	b2ff      	uxtb	r7, r7
 801b92a:	00c0      	lsls	r0, r0, #3
 801b92c:	b292      	uxth	r2, r2
 801b92e:	fb1c fc04 	smulbb	ip, ip, r4
 801b932:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801b936:	b2c0      	uxtb	r0, r0
 801b938:	fb17 f704 	smulbb	r7, r7, r4
 801b93c:	fb03 c301 	mla	r3, r3, r1, ip
 801b940:	fb00 7001 	mla	r0, r0, r1, r7
 801b944:	f102 0c01 	add.w	ip, r2, #1
 801b948:	b280      	uxth	r0, r0
 801b94a:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801b94e:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 801b952:	1c42      	adds	r2, r0, #1
 801b954:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801b958:	b29b      	uxth	r3, r3
 801b95a:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801b95e:	ea42 020c 	orr.w	r2, r2, ip
 801b962:	f103 0c01 	add.w	ip, r3, #1
 801b966:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801b96a:	095b      	lsrs	r3, r3, #5
 801b96c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801b970:	431a      	orrs	r2, r3
 801b972:	f8a9 2000 	strh.w	r2, [r9]
 801b976:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 801b978:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801b97a:	441a      	add	r2, r3
 801b97c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801b97e:	9229      	str	r2, [sp, #164]	; 0xa4
 801b980:	f109 0902 	add.w	r9, r9, #2
 801b984:	441d      	add	r5, r3
 801b986:	f10b 3bff 	add.w	fp, fp, #4294967295
 801b98a:	e63d      	b.n	801b608 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801b98c:	2800      	cmp	r0, #0
 801b98e:	f43f aedd 	beq.w	801b74c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b992:	5c79      	ldrb	r1, [r7, r1]
 801b994:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801b998:	910b      	str	r1, [sp, #44]	; 0x2c
 801b99a:	0e09      	lsrs	r1, r1, #24
 801b99c:	9114      	str	r1, [sp, #80]	; 0x50
 801b99e:	e6d5      	b.n	801b74c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801b9a0:	b01f      	add	sp, #124	; 0x7c
 801b9a2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801b9a6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 801b9a6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b9aa:	b089      	sub	sp, #36	; 0x24
 801b9ac:	9101      	str	r1, [sp, #4]
 801b9ae:	9801      	ldr	r0, [sp, #4]
 801b9b0:	f9bd c048 	ldrsh.w	ip, [sp, #72]	; 0x48
 801b9b4:	8800      	ldrh	r0, [r0, #0]
 801b9b6:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	; 0x4c
 801b9ba:	f89d 5058 	ldrb.w	r5, [sp, #88]	; 0x58
 801b9be:	f89d 405c 	ldrb.w	r4, [sp, #92]	; 0x5c
 801b9c2:	1206      	asrs	r6, r0, #8
 801b9c4:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	; 0x50
 801b9c8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801b9cc:	9602      	str	r6, [sp, #8]
 801b9ce:	10c6      	asrs	r6, r0, #3
 801b9d0:	00c0      	lsls	r0, r0, #3
 801b9d2:	b2c0      	uxtb	r0, r0
 801b9d4:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801b9d8:	9004      	str	r0, [sp, #16]
 801b9da:	2f00      	cmp	r7, #0
 801b9dc:	fb07 100c 	mla	r0, r7, ip, r1
 801b9e0:	9603      	str	r6, [sp, #12]
 801b9e2:	eb02 0e00 	add.w	lr, r2, r0
 801b9e6:	f2c0 810a 	blt.w	801bbfe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b9ea:	45b8      	cmp	r8, r7
 801b9ec:	f340 8107 	ble.w	801bbfe <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 801b9f0:	2900      	cmp	r1, #0
 801b9f2:	f2c0 8102 	blt.w	801bbfa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b9f6:	458c      	cmp	ip, r1
 801b9f8:	f340 80ff 	ble.w	801bbfa <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 801b9fc:	5c12      	ldrb	r2, [r2, r0]
 801b9fe:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 801ba02:	1c4a      	adds	r2, r1, #1
 801ba04:	f100 80fe 	bmi.w	801bc04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801ba08:	4594      	cmp	ip, r2
 801ba0a:	f340 80fb 	ble.w	801bc04 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 801ba0e:	2d00      	cmp	r5, #0
 801ba10:	f000 80fa 	beq.w	801bc08 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 801ba14:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801ba18:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801ba1c:	3701      	adds	r7, #1
 801ba1e:	f100 80f7 	bmi.w	801bc10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801ba22:	45b8      	cmp	r8, r7
 801ba24:	f340 80f4 	ble.w	801bc10 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 801ba28:	2c00      	cmp	r4, #0
 801ba2a:	f000 80f4 	beq.w	801bc16 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 801ba2e:	2900      	cmp	r1, #0
 801ba30:	eb0e 020c 	add.w	r2, lr, ip
 801ba34:	f2c0 80ea 	blt.w	801bc0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801ba38:	458c      	cmp	ip, r1
 801ba3a:	f340 80e7 	ble.w	801bc0c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 801ba3e:	f81e 700c 	ldrb.w	r7, [lr, ip]
 801ba42:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 801ba46:	3101      	adds	r1, #1
 801ba48:	f100 80e8 	bmi.w	801bc1c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801ba4c:	458c      	cmp	ip, r1
 801ba4e:	f340 80e5 	ble.w	801bc1c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 801ba52:	2d00      	cmp	r5, #0
 801ba54:	f000 80e4 	beq.w	801bc20 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 801ba58:	7852      	ldrb	r2, [r2, #1]
 801ba5a:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801ba5e:	0e0b      	lsrs	r3, r1, #24
 801ba60:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 801ba64:	9300      	str	r3, [sp, #0]
 801ba66:	b2a4      	uxth	r4, r4
 801ba68:	b2ab      	uxth	r3, r5
 801ba6a:	f000 15ff 	and.w	r5, r0, #16711935	; 0xff00ff
 801ba6e:	fb03 f904 	mul.w	r9, r3, r4
 801ba72:	fb0a f505 	mul.w	r5, sl, r5
 801ba76:	011b      	lsls	r3, r3, #4
 801ba78:	eba3 0e09 	sub.w	lr, r3, r9
 801ba7c:	f5c3 7280 	rsb	r2, r3, #256	; 0x100
 801ba80:	f400 437f 	and.w	r3, r0, #65280	; 0xff00
 801ba84:	0a28      	lsrs	r0, r5, #8
 801ba86:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801ba8a:	f105 1501 	add.w	r5, r5, #65537	; 0x10001
 801ba8e:	4405      	add	r5, r0
 801ba90:	0a2d      	lsrs	r5, r5, #8
 801ba92:	fb0a f303 	mul.w	r3, sl, r3
 801ba96:	f005 10ff 	and.w	r0, r5, #16711935	; 0xff00ff
 801ba9a:	9005      	str	r0, [sp, #20]
 801ba9c:	f503 7080 	add.w	r0, r3, #256	; 0x100
 801baa0:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801baa4:	0a1b      	lsrs	r3, r3, #8
 801baa6:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 801baaa:	9306      	str	r3, [sp, #24]
 801baac:	f006 13ff 	and.w	r3, r6, #16711935	; 0xff00ff
 801bab0:	fb0b f303 	mul.w	r3, fp, r3
 801bab4:	0a1d      	lsrs	r5, r3, #8
 801bab6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801baba:	ea4f 6817 	mov.w	r8, r7, lsr #24
 801babe:	fb0b f606 	mul.w	r6, fp, r6
 801bac2:	f103 1301 	add.w	r3, r3, #65537	; 0x10001
 801bac6:	f007 1cff 	and.w	ip, r7, #16711935	; 0xff00ff
 801baca:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801bace:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801bad2:	fb08 f707 	mul.w	r7, r8, r7
 801bad6:	441d      	add	r5, r3
 801bad8:	f506 7380 	add.w	r3, r6, #256	; 0x100
 801badc:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801bae0:	f507 7380 	add.w	r3, r7, #256	; 0x100
 801bae4:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 801bae8:	fb08 fc0c 	mul.w	ip, r8, ip
 801baec:	0a1b      	lsrs	r3, r3, #8
 801baee:	9307      	str	r3, [sp, #28]
 801baf0:	ea4f 201c 	mov.w	r0, ip, lsr #8
 801baf4:	0e0b      	lsrs	r3, r1, #24
 801baf6:	f001 17ff 	and.w	r7, r1, #16711935	; 0xff00ff
 801bafa:	435f      	muls	r7, r3
 801bafc:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801bb00:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801bb04:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 801bb08:	4460      	add	r0, ip
 801bb0a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801bb0e:	b2a4      	uxth	r4, r4
 801bb10:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801bb14:	0a2d      	lsrs	r5, r5, #8
 801bb16:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801bb1a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bb1e:	fa1f fe8e 	uxth.w	lr, lr
 801bb22:	4359      	muls	r1, r3
 801bb24:	1b12      	subs	r2, r2, r4
 801bb26:	9b05      	ldr	r3, [sp, #20]
 801bb28:	44bc      	add	ip, r7
 801bb2a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801bb2e:	b292      	uxth	r2, r2
 801bb30:	fb05 f50e 	mul.w	r5, r5, lr
 801bb34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bb38:	fb03 5502 	mla	r5, r3, r2, r5
 801bb3c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bb40:	9b06      	ldr	r3, [sp, #24]
 801bb42:	f501 7780 	add.w	r7, r1, #256	; 0x100
 801bb46:	0a36      	lsrs	r6, r6, #8
 801bb48:	0a00      	lsrs	r0, r0, #8
 801bb4a:	fb0c 5509 	mla	r5, ip, r9, r5
 801bb4e:	f000 10ff 	and.w	r0, r0, #16711935	; 0xff00ff
 801bb52:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801bb56:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801bb5a:	fb00 5504 	mla	r5, r0, r4, r5
 801bb5e:	fb0e f606 	mul.w	r6, lr, r6
 801bb62:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 801bb66:	0a09      	lsrs	r1, r1, #8
 801bb68:	9b07      	ldr	r3, [sp, #28]
 801bb6a:	fb02 6000 	mla	r0, r2, r0, r6
 801bb6e:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801bb72:	fb09 0001 	mla	r0, r9, r1, r0
 801bb76:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bb7a:	fb0e fe0b 	mul.w	lr, lr, fp
 801bb7e:	fb04 0003 	mla	r0, r4, r3, r0
 801bb82:	fb02 e20a 	mla	r2, r2, sl, lr
 801bb86:	9b00      	ldr	r3, [sp, #0]
 801bb88:	fb04 2408 	mla	r4, r4, r8, r2
 801bb8c:	fb09 4903 	mla	r9, r9, r3, r4
 801bb90:	ea6f 2929 	mvn.w	r9, r9, asr #8
 801bb94:	9b02      	ldr	r3, [sp, #8]
 801bb96:	9a04      	ldr	r2, [sp, #16]
 801bb98:	fa5f f989 	uxtb.w	r9, r9
 801bb9c:	fb03 f109 	mul.w	r1, r3, r9
 801bba0:	9b03      	ldr	r3, [sp, #12]
 801bba2:	0a2d      	lsrs	r5, r5, #8
 801bba4:	0a00      	lsrs	r0, r0, #8
 801bba6:	fb03 f309 	mul.w	r3, r3, r9
 801bbaa:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801bbae:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801bbb2:	4305      	orrs	r5, r0
 801bbb4:	fb02 f909 	mul.w	r9, r2, r9
 801bbb8:	1c58      	adds	r0, r3, #1
 801bbba:	1c4a      	adds	r2, r1, #1
 801bbbc:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801bbc0:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bbc4:	0a2b      	lsrs	r3, r5, #8
 801bbc6:	0c2a      	lsrs	r2, r5, #16
 801bbc8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801bbcc:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 801bbd0:	00db      	lsls	r3, r3, #3
 801bbd2:	0212      	lsls	r2, r2, #8
 801bbd4:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801bbd8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bbdc:	4313      	orrs	r3, r2
 801bbde:	f109 0201 	add.w	r2, r9, #1
 801bbe2:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 801bbe6:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 801bbea:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 801bbee:	431d      	orrs	r5, r3
 801bbf0:	9b01      	ldr	r3, [sp, #4]
 801bbf2:	801d      	strh	r5, [r3, #0]
 801bbf4:	b009      	add	sp, #36	; 0x24
 801bbf6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bbfa:	2000      	movs	r0, #0
 801bbfc:	e701      	b.n	801ba02 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 801bbfe:	2600      	movs	r6, #0
 801bc00:	4630      	mov	r0, r6
 801bc02:	e70b      	b.n	801ba1c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801bc04:	2600      	movs	r6, #0
 801bc06:	e709      	b.n	801ba1c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801bc08:	462e      	mov	r6, r5
 801bc0a:	e707      	b.n	801ba1c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 801bc0c:	2700      	movs	r7, #0
 801bc0e:	e71a      	b.n	801ba46 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 801bc10:	2100      	movs	r1, #0
 801bc12:	460f      	mov	r7, r1
 801bc14:	e723      	b.n	801ba5e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801bc16:	4621      	mov	r1, r4
 801bc18:	4627      	mov	r7, r4
 801bc1a:	e720      	b.n	801ba5e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801bc1c:	2100      	movs	r1, #0
 801bc1e:	e71e      	b.n	801ba5e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 801bc20:	4629      	mov	r1, r5
 801bc22:	e71c      	b.n	801ba5e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

0801bc24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801bc24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bc28:	b09b      	sub	sp, #108	; 0x6c
 801bc2a:	9218      	str	r2, [sp, #96]	; 0x60
 801bc2c:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801bc2e:	9116      	str	r1, [sp, #88]	; 0x58
 801bc30:	9307      	str	r3, [sp, #28]
 801bc32:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801bc36:	9019      	str	r0, [sp, #100]	; 0x64
 801bc38:	6850      	ldr	r0, [r2, #4]
 801bc3a:	6812      	ldr	r2, [r2, #0]
 801bc3c:	9d26      	ldr	r5, [sp, #152]	; 0x98
 801bc3e:	fb00 1303 	mla	r3, r0, r3, r1
 801bc42:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801bc46:	930a      	str	r3, [sp, #40]	; 0x28
 801bc48:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bc4a:	681b      	ldr	r3, [r3, #0]
 801bc4c:	930f      	str	r3, [sp, #60]	; 0x3c
 801bc4e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bc50:	685e      	ldr	r6, [r3, #4]
 801bc52:	3604      	adds	r6, #4
 801bc54:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801bc56:	2b00      	cmp	r3, #0
 801bc58:	dc03      	bgt.n	801bc62 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801bc5a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801bc5c:	2b00      	cmp	r3, #0
 801bc5e:	f340 8373 	ble.w	801c348 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801bc62:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bc64:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801bc68:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801bc6c:	1e48      	subs	r0, r1, #1
 801bc6e:	1e57      	subs	r7, r2, #1
 801bc70:	9b07      	ldr	r3, [sp, #28]
 801bc72:	2b00      	cmp	r3, #0
 801bc74:	f340 8190 	ble.w	801bf98 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 801bc78:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801bc7a:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801bc7e:	ea4f 4325 	mov.w	r3, r5, asr #16
 801bc82:	d406      	bmi.n	801bc92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bc84:	4584      	cmp	ip, r0
 801bc86:	da04      	bge.n	801bc92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bc88:	2b00      	cmp	r3, #0
 801bc8a:	db02      	blt.n	801bc92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801bc8c:	42bb      	cmp	r3, r7
 801bc8e:	f2c0 8184 	blt.w	801bf9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 801bc92:	f11c 0c01 	adds.w	ip, ip, #1
 801bc96:	f100 8172 	bmi.w	801bf7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bc9a:	4561      	cmp	r1, ip
 801bc9c:	f2c0 816f 	blt.w	801bf7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bca0:	3301      	adds	r3, #1
 801bca2:	f100 816c 	bmi.w	801bf7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bca6:	429a      	cmp	r2, r3
 801bca8:	f2c0 8169 	blt.w	801bf7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801bcac:	9b07      	ldr	r3, [sp, #28]
 801bcae:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801bcb0:	9317      	str	r3, [sp, #92]	; 0x5c
 801bcb2:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801bcb4:	2b00      	cmp	r3, #0
 801bcb6:	f340 818e 	ble.w	801bfd6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 801bcba:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801bcbc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801bcc0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801bcc2:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 801bcc6:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801bcc8:	141b      	asrs	r3, r3, #16
 801bcca:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801bcce:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801bcd2:	f100 81d1 	bmi.w	801c078 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801bcd6:	f101 38ff 	add.w	r8, r1, #4294967295
 801bcda:	4543      	cmp	r3, r8
 801bcdc:	f280 81cc 	bge.w	801c078 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801bce0:	f1bc 0f00 	cmp.w	ip, #0
 801bce4:	f2c0 81c8 	blt.w	801c078 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801bce8:	f10e 38ff 	add.w	r8, lr, #4294967295
 801bcec:	45c4      	cmp	ip, r8
 801bcee:	f280 81c3 	bge.w	801c078 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 801bcf2:	b209      	sxth	r1, r1
 801bcf4:	fb0c 3301 	mla	r3, ip, r1, r3
 801bcf8:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801bcfa:	eb04 0803 	add.w	r8, r4, r3
 801bcfe:	5ce3      	ldrb	r3, [r4, r3]
 801bd00:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801bd04:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 801bd08:	2a00      	cmp	r2, #0
 801bd0a:	f000 81aa 	beq.w	801c062 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 801bd0e:	f898 c001 	ldrb.w	ip, [r8, #1]
 801bd12:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 801bd16:	940b      	str	r4, [sp, #44]	; 0x2c
 801bd18:	0e24      	lsrs	r4, r4, #24
 801bd1a:	9412      	str	r4, [sp, #72]	; 0x48
 801bd1c:	b178      	cbz	r0, 801bd3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801bd1e:	eb08 0c01 	add.w	ip, r8, r1
 801bd22:	f818 1001 	ldrb.w	r1, [r8, r1]
 801bd26:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bd2a:	9108      	str	r1, [sp, #32]
 801bd2c:	0e09      	lsrs	r1, r1, #24
 801bd2e:	9110      	str	r1, [sp, #64]	; 0x40
 801bd30:	f89c 1001 	ldrb.w	r1, [ip, #1]
 801bd34:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801bd38:	910c      	str	r1, [sp, #48]	; 0x30
 801bd3a:	0e09      	lsrs	r1, r1, #24
 801bd3c:	9113      	str	r1, [sp, #76]	; 0x4c
 801bd3e:	b292      	uxth	r2, r2
 801bd40:	b280      	uxth	r0, r0
 801bd42:	fb02 f900 	mul.w	r9, r2, r0
 801bd46:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801bd4a:	0112      	lsls	r2, r2, #4
 801bd4c:	eba2 0809 	sub.w	r8, r2, r9
 801bd50:	b280      	uxth	r0, r0
 801bd52:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801bd56:	9912      	ldr	r1, [sp, #72]	; 0x48
 801bd58:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801bd5a:	fa1f f888 	uxth.w	r8, r8
 801bd5e:	1a12      	subs	r2, r2, r0
 801bd60:	b292      	uxth	r2, r2
 801bd62:	fb08 f101 	mul.w	r1, r8, r1
 801bd66:	fb02 110e 	mla	r1, r2, lr, r1
 801bd6a:	fb00 1104 	mla	r1, r0, r4, r1
 801bd6e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801bd70:	fb09 1104 	mla	r1, r9, r4, r1
 801bd74:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801bd78:	2900      	cmp	r1, #0
 801bd7a:	f000 80f5 	beq.w	801bf68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801bd7e:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801bd82:	d01b      	beq.n	801bdbc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801bd84:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801bd88:	fb0e fa0a 	mul.w	sl, lr, sl
 801bd8c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bd90:	fb0e fe03 	mul.w	lr, lr, r3
 801bd94:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801bd98:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bd9c:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801bda0:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801bda4:	4453      	add	r3, sl
 801bda6:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801bdaa:	0a1b      	lsrs	r3, r3, #8
 801bdac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bdb0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801bdb4:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801bdb8:	ea43 030c 	orr.w	r3, r3, ip
 801bdbc:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bdbe:	2cff      	cmp	r4, #255	; 0xff
 801bdc0:	d021      	beq.n	801be06 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 801bdc2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bdc4:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801bdc8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bdca:	fb04 fb0b 	mul.w	fp, r4, fp
 801bdce:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bdd0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801bdd4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801bdd6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801bdda:	fb04 fa0a 	mul.w	sl, r4, sl
 801bdde:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bde2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801bde6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801bdea:	44de      	add	lr, fp
 801bdec:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801bdf0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801bdf4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801bdf8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801bdfc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801be00:	ea4e 040a 	orr.w	r4, lr, sl
 801be04:	940b      	str	r4, [sp, #44]	; 0x2c
 801be06:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801be08:	2cff      	cmp	r4, #255	; 0xff
 801be0a:	d021      	beq.n	801be50 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 801be0c:	9c08      	ldr	r4, [sp, #32]
 801be0e:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801be12:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801be14:	fb04 fb0b 	mul.w	fp, r4, fp
 801be18:	9c08      	ldr	r4, [sp, #32]
 801be1a:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801be1e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801be20:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801be24:	fb04 fa0a 	mul.w	sl, r4, sl
 801be28:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801be2c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801be30:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801be34:	44de      	add	lr, fp
 801be36:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801be3a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801be3e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801be42:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801be46:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801be4a:	ea4e 040a 	orr.w	r4, lr, sl
 801be4e:	9408      	str	r4, [sp, #32]
 801be50:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801be52:	2cff      	cmp	r4, #255	; 0xff
 801be54:	d021      	beq.n	801be9a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801be56:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801be58:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801be5c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801be5e:	fb04 fb0b 	mul.w	fp, r4, fp
 801be62:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801be64:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801be68:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801be6a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801be6e:	fb04 fa0a 	mul.w	sl, r4, sl
 801be72:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801be76:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801be7a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801be7e:	44de      	add	lr, fp
 801be80:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801be84:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801be88:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801be8c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801be90:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801be94:	ea4e 040a 	orr.w	r4, lr, sl
 801be98:	940c      	str	r4, [sp, #48]	; 0x30
 801be9a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801be9c:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801bea0:	9c08      	ldr	r4, [sp, #32]
 801bea2:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 801bea6:	fb08 fc0c 	mul.w	ip, r8, ip
 801beaa:	fb02 cc0e 	mla	ip, r2, lr, ip
 801beae:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801beb2:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801beb4:	fb00 cc0e 	mla	ip, r0, lr, ip
 801beb8:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 801bebc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801bebe:	fb09 cc0e 	mla	ip, r9, lr, ip
 801bec2:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 801bec6:	fb08 f80e 	mul.w	r8, r8, lr
 801beca:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801bece:	fb02 8303 	mla	r3, r2, r3, r8
 801bed2:	9a08      	ldr	r2, [sp, #32]
 801bed4:	f8b7 8000 	ldrh.w	r8, [r7]
 801bed8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801bedc:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801bede:	fb00 330a 	mla	r3, r0, sl, r3
 801bee2:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 801bee6:	fb09 3900 	mla	r9, r9, r0, r3
 801beea:	43c9      	mvns	r1, r1
 801beec:	ea4f 2228 	mov.w	r2, r8, asr #8
 801bef0:	fa5f fe81 	uxtb.w	lr, r1
 801bef4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801bef8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801befc:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801bf00:	fb02 f20e 	mul.w	r2, r2, lr
 801bf04:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801bf08:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801bf0c:	ea4c 0c09 	orr.w	ip, ip, r9
 801bf10:	1c53      	adds	r3, r2, #1
 801bf12:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 801bf16:	ea4f 00e8 	mov.w	r0, r8, asr #3
 801bf1a:	ea4f 431c 	mov.w	r3, ip, lsr #16
 801bf1e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801bf22:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801bf26:	4a63      	ldr	r2, [pc, #396]	; (801c0b4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 801bf28:	fb00 f00e 	mul.w	r0, r0, lr
 801bf2c:	b2db      	uxtb	r3, r3
 801bf2e:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 801bf32:	1c43      	adds	r3, r0, #1
 801bf34:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801bf38:	ea4f 231c 	mov.w	r3, ip, lsr #8
 801bf3c:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801bf40:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801bf44:	b2c9      	uxtb	r1, r1
 801bf46:	00db      	lsls	r3, r3, #3
 801bf48:	fb01 f10e 	mul.w	r1, r1, lr
 801bf4c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801bf50:	4313      	orrs	r3, r2
 801bf52:	1c4a      	adds	r2, r1, #1
 801bf54:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bf58:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801bf5c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801bf60:	ea4c 0c03 	orr.w	ip, ip, r3
 801bf64:	f8a7 c000 	strh.w	ip, [r7]
 801bf68:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801bf6a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801bf6c:	441a      	add	r2, r3
 801bf6e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bf70:	9225      	str	r2, [sp, #148]	; 0x94
 801bf72:	441d      	add	r5, r3
 801bf74:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801bf76:	3b01      	subs	r3, #1
 801bf78:	3702      	adds	r7, #2
 801bf7a:	9317      	str	r3, [sp, #92]	; 0x5c
 801bf7c:	e699      	b.n	801bcb2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801bf7e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801bf80:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801bf82:	441c      	add	r4, r3
 801bf84:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801bf86:	9425      	str	r4, [sp, #148]	; 0x94
 801bf88:	441d      	add	r5, r3
 801bf8a:	9b07      	ldr	r3, [sp, #28]
 801bf8c:	3b01      	subs	r3, #1
 801bf8e:	9307      	str	r3, [sp, #28]
 801bf90:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bf92:	3302      	adds	r3, #2
 801bf94:	930a      	str	r3, [sp, #40]	; 0x28
 801bf96:	e66b      	b.n	801bc70 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801bf98:	d024      	beq.n	801bfe4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 801bf9a:	9b07      	ldr	r3, [sp, #28]
 801bf9c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801bf9e:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801bfa0:	3b01      	subs	r3, #1
 801bfa2:	fb00 4003 	mla	r0, r0, r3, r4
 801bfa6:	1400      	asrs	r0, r0, #16
 801bfa8:	f53f ae80 	bmi.w	801bcac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801bfac:	3901      	subs	r1, #1
 801bfae:	4288      	cmp	r0, r1
 801bfb0:	f6bf ae7c 	bge.w	801bcac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801bfb4:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801bfb6:	fb01 5303 	mla	r3, r1, r3, r5
 801bfba:	141b      	asrs	r3, r3, #16
 801bfbc:	f53f ae76 	bmi.w	801bcac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801bfc0:	3a01      	subs	r2, #1
 801bfc2:	4293      	cmp	r3, r2
 801bfc4:	f6bf ae72 	bge.w	801bcac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801bfc8:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801bfcc:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801bfd0:	f1bb 0f00 	cmp.w	fp, #0
 801bfd4:	dc70      	bgt.n	801c0b8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 801bfd6:	9b07      	ldr	r3, [sp, #28]
 801bfd8:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801bfdc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801bfde:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801bfe2:	930a      	str	r3, [sp, #40]	; 0x28
 801bfe4:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801bfe6:	2b00      	cmp	r3, #0
 801bfe8:	f340 81ae 	ble.w	801c348 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 801bfec:	ee30 0a04 	vadd.f32	s0, s0, s8
 801bff0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801bff4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801bff8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801bffa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801bffe:	ee31 1a05 	vadd.f32	s2, s2, s10
 801c002:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801c006:	eef0 6a62 	vmov.f32	s13, s5
 801c00a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801c00e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c012:	ee77 2a62 	vsub.f32	s5, s14, s5
 801c016:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801c01a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801c01e:	eef0 6a43 	vmov.f32	s13, s6
 801c022:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801c026:	ee12 2a90 	vmov	r2, s5
 801c02a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801c02e:	fb92 f3f3 	sdiv	r3, r2, r3
 801c032:	ee13 2a10 	vmov	r2, s6
 801c036:	9327      	str	r3, [sp, #156]	; 0x9c
 801c038:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c03a:	fb92 f3f3 	sdiv	r3, r2, r3
 801c03e:	9328      	str	r3, [sp, #160]	; 0xa0
 801c040:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801c042:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801c044:	3b01      	subs	r3, #1
 801c046:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801c04a:	9316      	str	r3, [sp, #88]	; 0x58
 801c04c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c04e:	bf08      	it	eq
 801c050:	4613      	moveq	r3, r2
 801c052:	ee16 5a90 	vmov	r5, s13
 801c056:	9307      	str	r3, [sp, #28]
 801c058:	eeb0 3a67 	vmov.f32	s6, s15
 801c05c:	eef0 2a47 	vmov.f32	s5, s14
 801c060:	e5f8      	b.n	801bc54 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801c062:	2800      	cmp	r0, #0
 801c064:	f43f ae6b 	beq.w	801bd3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c068:	f818 1001 	ldrb.w	r1, [r8, r1]
 801c06c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c070:	9108      	str	r1, [sp, #32]
 801c072:	0e09      	lsrs	r1, r1, #24
 801c074:	9110      	str	r1, [sp, #64]	; 0x40
 801c076:	e662      	b.n	801bd3e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 801c078:	f113 0801 	adds.w	r8, r3, #1
 801c07c:	f53f af74 	bmi.w	801bf68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c080:	4541      	cmp	r1, r8
 801c082:	f6ff af71 	blt.w	801bf68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c086:	f11c 0801 	adds.w	r8, ip, #1
 801c08a:	f53f af6d 	bmi.w	801bf68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c08e:	45c6      	cmp	lr, r8
 801c090:	f6ff af6a 	blt.w	801bf68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c094:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 801c098:	b209      	sxth	r1, r1
 801c09a:	fa0f f38e 	sxth.w	r3, lr
 801c09e:	e9cd 2004 	strd	r2, r0, [sp, #16]
 801c0a2:	9301      	str	r3, [sp, #4]
 801c0a4:	9100      	str	r1, [sp, #0]
 801c0a6:	4633      	mov	r3, r6
 801c0a8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801c0aa:	9819      	ldr	r0, [sp, #100]	; 0x64
 801c0ac:	4639      	mov	r1, r7
 801c0ae:	f7ff fc7a 	bl	801b9a6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 801c0b2:	e759      	b.n	801bf68 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 801c0b4:	fffff800 	.word	0xfffff800
 801c0b8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801c0ba:	9c25      	ldr	r4, [sp, #148]	; 0x94
 801c0bc:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801c0c0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801c0c2:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c0c6:	1427      	asrs	r7, r4, #16
 801c0c8:	142b      	asrs	r3, r5, #16
 801c0ca:	fb01 7303 	mla	r3, r1, r3, r7
 801c0ce:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801c0d0:	18e7      	adds	r7, r4, r3
 801c0d2:	5ce3      	ldrb	r3, [r4, r3]
 801c0d4:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 801c0d8:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801c0dc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801c0e0:	2a00      	cmp	r2, #0
 801c0e2:	f000 8127 	beq.w	801c334 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801c0e6:	f897 e001 	ldrb.w	lr, [r7, #1]
 801c0ea:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 801c0ee:	940d      	str	r4, [sp, #52]	; 0x34
 801c0f0:	0e24      	lsrs	r4, r4, #24
 801c0f2:	9414      	str	r4, [sp, #80]	; 0x50
 801c0f4:	b170      	cbz	r0, 801c114 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c0f6:	eb07 0e01 	add.w	lr, r7, r1
 801c0fa:	5c79      	ldrb	r1, [r7, r1]
 801c0fc:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c100:	9109      	str	r1, [sp, #36]	; 0x24
 801c102:	0e09      	lsrs	r1, r1, #24
 801c104:	9111      	str	r1, [sp, #68]	; 0x44
 801c106:	f89e 1001 	ldrb.w	r1, [lr, #1]
 801c10a:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c10e:	910e      	str	r1, [sp, #56]	; 0x38
 801c110:	0e09      	lsrs	r1, r1, #24
 801c112:	9115      	str	r1, [sp, #84]	; 0x54
 801c114:	b292      	uxth	r2, r2
 801c116:	b280      	uxth	r0, r0
 801c118:	fb02 f800 	mul.w	r8, r2, r0
 801c11c:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801c120:	0112      	lsls	r2, r2, #4
 801c122:	eba2 0e08 	sub.w	lr, r2, r8
 801c126:	b280      	uxth	r0, r0
 801c128:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801c12c:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801c12e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c130:	fa1f fe8e 	uxth.w	lr, lr
 801c134:	1a09      	subs	r1, r1, r0
 801c136:	b289      	uxth	r1, r1
 801c138:	fb0e f202 	mul.w	r2, lr, r2
 801c13c:	fb01 220c 	mla	r2, r1, ip, r2
 801c140:	fb00 2204 	mla	r2, r0, r4, r2
 801c144:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c146:	fb08 2204 	mla	r2, r8, r4, r2
 801c14a:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801c14e:	2a00      	cmp	r2, #0
 801c150:	f000 80e5 	beq.w	801c31e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 801c154:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801c158:	d019      	beq.n	801c18e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 801c15a:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801c15e:	fb0c fa0a 	mul.w	sl, ip, sl
 801c162:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c166:	fb0c fc03 	mul.w	ip, ip, r3
 801c16a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801c16e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c172:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801c176:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801c17a:	4453      	add	r3, sl
 801c17c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801c180:	0a1b      	lsrs	r3, r3, #8
 801c182:	0a3f      	lsrs	r7, r7, #8
 801c184:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801c188:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801c18c:	433b      	orrs	r3, r7
 801c18e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c190:	2cff      	cmp	r4, #255	; 0xff
 801c192:	d020      	beq.n	801c1d6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 801c194:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c196:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c19a:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c19c:	4367      	muls	r7, r4
 801c19e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c1a0:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c1a4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 801c1a6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c1aa:	fb04 fa0a 	mul.w	sl, r4, sl
 801c1ae:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c1b2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c1b6:	44bc      	add	ip, r7
 801c1b8:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c1bc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c1c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c1c4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c1c8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c1cc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c1d0:	ea4c 040a 	orr.w	r4, ip, sl
 801c1d4:	940d      	str	r4, [sp, #52]	; 0x34
 801c1d6:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c1d8:	2cff      	cmp	r4, #255	; 0xff
 801c1da:	d020      	beq.n	801c21e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 801c1dc:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801c1de:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c1e2:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c1e4:	4367      	muls	r7, r4
 801c1e6:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801c1e8:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c1ec:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801c1ee:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c1f2:	fb04 fa0a 	mul.w	sl, r4, sl
 801c1f6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c1fa:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c1fe:	44bc      	add	ip, r7
 801c200:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c204:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c208:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c20c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c210:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c214:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c218:	ea4c 040a 	orr.w	r4, ip, sl
 801c21c:	9409      	str	r4, [sp, #36]	; 0x24
 801c21e:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c220:	2cff      	cmp	r4, #255	; 0xff
 801c222:	d020      	beq.n	801c266 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 801c224:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c226:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c22a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c22c:	4367      	muls	r7, r4
 801c22e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c230:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801c234:	9c15      	ldr	r4, [sp, #84]	; 0x54
 801c236:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801c23a:	fb04 fa0a 	mul.w	sl, r4, sl
 801c23e:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801c242:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c246:	44bc      	add	ip, r7
 801c248:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801c24c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801c250:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c254:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801c258:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801c25c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801c260:	ea4c 040a 	orr.w	r4, ip, sl
 801c264:	940e      	str	r4, [sp, #56]	; 0x38
 801c266:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c268:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 801c26c:	9c09      	ldr	r4, [sp, #36]	; 0x24
 801c26e:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801c272:	fb0e f707 	mul.w	r7, lr, r7
 801c276:	fb01 770c 	mla	r7, r1, ip, r7
 801c27a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c27e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c280:	fb00 770c 	mla	r7, r0, ip, r7
 801c284:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801c288:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c28a:	fb08 770c 	mla	r7, r8, ip, r7
 801c28e:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 801c292:	fb0e fe0c 	mul.w	lr, lr, ip
 801c296:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801c29a:	fb01 e303 	mla	r3, r1, r3, lr
 801c29e:	9909      	ldr	r1, [sp, #36]	; 0x24
 801c2a0:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801c2a4:	990e      	ldr	r1, [sp, #56]	; 0x38
 801c2a6:	fb00 330a 	mla	r3, r0, sl, r3
 801c2aa:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801c2ae:	fb08 3c0c 	mla	ip, r8, ip, r3
 801c2b2:	f8b9 3000 	ldrh.w	r3, [r9]
 801c2b6:	43d2      	mvns	r2, r2
 801c2b8:	1218      	asrs	r0, r3, #8
 801c2ba:	b2d2      	uxtb	r2, r2
 801c2bc:	10d9      	asrs	r1, r3, #3
 801c2be:	0a3f      	lsrs	r7, r7, #8
 801c2c0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801c2c4:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801c2c8:	00db      	lsls	r3, r3, #3
 801c2ca:	4350      	muls	r0, r2
 801c2cc:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801c2d0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801c2d4:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c2d8:	b2db      	uxtb	r3, r3
 801c2da:	ea47 070c 	orr.w	r7, r7, ip
 801c2de:	4351      	muls	r1, r2
 801c2e0:	4353      	muls	r3, r2
 801c2e2:	1c42      	adds	r2, r0, #1
 801c2e4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c2e8:	0c3a      	lsrs	r2, r7, #16
 801c2ea:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801c2ee:	4a18      	ldr	r2, [pc, #96]	; (801c350 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 801c2f0:	b2c0      	uxtb	r0, r0
 801c2f2:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 801c2f6:	1c4a      	adds	r2, r1, #1
 801c2f8:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c2fc:	0a3a      	lsrs	r2, r7, #8
 801c2fe:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c302:	00c9      	lsls	r1, r1, #3
 801c304:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c308:	4301      	orrs	r1, r0
 801c30a:	1c58      	adds	r0, r3, #1
 801c30c:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801c310:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801c314:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 801c318:	4308      	orrs	r0, r1
 801c31a:	f8a9 0000 	strh.w	r0, [r9]
 801c31e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801c320:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801c322:	441a      	add	r2, r3
 801c324:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c326:	9225      	str	r2, [sp, #148]	; 0x94
 801c328:	f109 0902 	add.w	r9, r9, #2
 801c32c:	441d      	add	r5, r3
 801c32e:	f10b 3bff 	add.w	fp, fp, #4294967295
 801c332:	e64d      	b.n	801bfd0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 801c334:	2800      	cmp	r0, #0
 801c336:	f43f aeed 	beq.w	801c114 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c33a:	5c79      	ldrb	r1, [r7, r1]
 801c33c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 801c340:	9109      	str	r1, [sp, #36]	; 0x24
 801c342:	0e09      	lsrs	r1, r1, #24
 801c344:	9111      	str	r1, [sp, #68]	; 0x44
 801c346:	e6e5      	b.n	801c114 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 801c348:	b01b      	add	sp, #108	; 0x6c
 801c34a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c34e:	bf00      	nop
 801c350:	fffff800 	.word	0xfffff800

0801c354 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 801c354:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c358:	b085      	sub	sp, #20
 801c35a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801c35e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801c362:	9103      	str	r1, [sp, #12]
 801c364:	fb00 7406 	mla	r4, r0, r6, r7
 801c368:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 801c36c:	2800      	cmp	r0, #0
 801c36e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801c372:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801c376:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801c37a:	9501      	str	r5, [sp, #4]
 801c37c:	eb03 0904 	add.w	r9, r3, r4
 801c380:	f2c0 8150 	blt.w	801c624 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c384:	4583      	cmp	fp, r0
 801c386:	f340 814d 	ble.w	801c624 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 801c38a:	2f00      	cmp	r7, #0
 801c38c:	f2c0 8146 	blt.w	801c61c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c390:	42be      	cmp	r6, r7
 801c392:	f340 8143 	ble.w	801c61c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 801c396:	f813 c004 	ldrb.w	ip, [r3, r4]
 801c39a:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 801c39e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801c3a2:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801c3a6:	4355      	muls	r5, r2
 801c3a8:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c3ac:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801c3b0:	fb0c f203 	mul.w	r2, ip, r3
 801c3b4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801c3b8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801c3bc:	441d      	add	r5, r3
 801c3be:	f102 0320 	add.w	r3, r2, #32
 801c3c2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c3c6:	0a1b      	lsrs	r3, r3, #8
 801c3c8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801c3cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801c3d0:	431c      	orrs	r4, r3
 801c3d2:	1c7b      	adds	r3, r7, #1
 801c3d4:	f100 812b 	bmi.w	801c62e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c3d8:	429e      	cmp	r6, r3
 801c3da:	f340 8128 	ble.w	801c62e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 801c3de:	2900      	cmp	r1, #0
 801c3e0:	f000 8128 	beq.w	801c634 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 801c3e4:	9a01      	ldr	r2, [sp, #4]
 801c3e6:	f899 3001 	ldrb.w	r3, [r9, #1]
 801c3ea:	8855      	ldrh	r5, [r2, #2]
 801c3ec:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801c3f0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801c3f4:	fb08 f802 	mul.w	r8, r8, r2
 801c3f8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c3fc:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801c400:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801c404:	435d      	muls	r5, r3
 801c406:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c40a:	44d0      	add	r8, sl
 801c40c:	f105 0a20 	add.w	sl, r5, #32
 801c410:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801c414:	0a2d      	lsrs	r5, r5, #8
 801c416:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801c41a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c41e:	432a      	orrs	r2, r5
 801c420:	3001      	adds	r0, #1
 801c422:	f100 810d 	bmi.w	801c640 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c426:	4583      	cmp	fp, r0
 801c428:	f340 810a 	ble.w	801c640 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 801c42c:	f1be 0f00 	cmp.w	lr, #0
 801c430:	f000 810b 	beq.w	801c64a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 801c434:	2f00      	cmp	r7, #0
 801c436:	f2c0 8100 	blt.w	801c63a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c43a:	42be      	cmp	r6, r7
 801c43c:	f340 80fd 	ble.w	801c63a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 801c440:	9801      	ldr	r0, [sp, #4]
 801c442:	f819 5006 	ldrb.w	r5, [r9, r6]
 801c446:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801c44a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801c44e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801c452:	fb0a fa00 	mul.w	sl, sl, r0
 801c456:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801c45a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801c45e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801c462:	fb05 f808 	mul.w	r8, r5, r8
 801c466:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801c46a:	4482      	add	sl, r0
 801c46c:	f108 0020 	add.w	r0, r8, #32
 801c470:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c474:	0a00      	lsrs	r0, r0, #8
 801c476:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801c47a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c47e:	ea4b 0b00 	orr.w	fp, fp, r0
 801c482:	3701      	adds	r7, #1
 801c484:	f100 80e6 	bmi.w	801c654 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c488:	42be      	cmp	r6, r7
 801c48a:	f340 80e3 	ble.w	801c654 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 801c48e:	2900      	cmp	r1, #0
 801c490:	f000 80e3 	beq.w	801c65a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 801c494:	3601      	adds	r6, #1
 801c496:	9801      	ldr	r0, [sp, #4]
 801c498:	f819 7006 	ldrb.w	r7, [r9, r6]
 801c49c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801c4a0:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801c4a4:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801c4a8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c4ac:	fb09 f906 	mul.w	r9, r9, r6
 801c4b0:	fb07 f800 	mul.w	r8, r7, r0
 801c4b4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801c4b8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801c4bc:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801c4c0:	44d1      	add	r9, sl
 801c4c2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801c4c6:	f108 0020 	add.w	r0, r8, #32
 801c4ca:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801c4ce:	0a00      	lsrs	r0, r0, #8
 801c4d0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c4d4:	4330      	orrs	r0, r6
 801c4d6:	b28e      	uxth	r6, r1
 801c4d8:	fa1f f98e 	uxth.w	r9, lr
 801c4dc:	fb06 f809 	mul.w	r8, r6, r9
 801c4e0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801c4e4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801c4e8:	0136      	lsls	r6, r6, #4
 801c4ea:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c4ee:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801c4f2:	9601      	str	r6, [sp, #4]
 801c4f4:	ea4a 0404 	orr.w	r4, sl, r4
 801c4f8:	fa1f f689 	uxth.w	r6, r9
 801c4fc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c500:	fb11 f90e 	smulbb	r9, r1, lr
 801c504:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801c508:	9602      	str	r6, [sp, #8]
 801c50a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c50e:	4626      	mov	r6, r4
 801c510:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c514:	f1ce 0410 	rsb	r4, lr, #16
 801c518:	1a64      	subs	r4, r4, r1
 801c51a:	ea4a 0202 	orr.w	r2, sl, r2
 801c51e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801c522:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c526:	434a      	muls	r2, r1
 801c528:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801c52c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c530:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c534:	fb04 2406 	mla	r4, r4, r6, r2
 801c538:	ea4a 0000 	orr.w	r0, sl, r0
 801c53c:	fb09 4200 	mla	r2, r9, r0, r4
 801c540:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801c544:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801c548:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801c54c:	ea44 0b0b 	orr.w	fp, r4, fp
 801c550:	9c01      	ldr	r4, [sp, #4]
 801c552:	9e02      	ldr	r6, [sp, #8]
 801c554:	9903      	ldr	r1, [sp, #12]
 801c556:	f5c4 7480 	rsb	r4, r4, #256	; 0x100
 801c55a:	1ba4      	subs	r4, r4, r6
 801c55c:	9e01      	ldr	r6, [sp, #4]
 801c55e:	8808      	ldrh	r0, [r1, #0]
 801c560:	f89d 1050 	ldrb.w	r1, [sp, #80]	; 0x50
 801c564:	eba6 0608 	sub.w	r6, r6, r8
 801c568:	b2b6      	uxth	r6, r6
 801c56a:	b2a4      	uxth	r4, r4
 801c56c:	4373      	muls	r3, r6
 801c56e:	fb0c 3304 	mla	r3, ip, r4, r3
 801c572:	9c02      	ldr	r4, [sp, #8]
 801c574:	fb04 3505 	mla	r5, r4, r5, r3
 801c578:	fb08 5707 	mla	r7, r8, r7, r5
 801c57c:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801c580:	b289      	uxth	r1, r1
 801c582:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801c586:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801c58a:	434f      	muls	r7, r1
 801c58c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c590:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c594:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c598:	1c7b      	adds	r3, r7, #1
 801c59a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c59e:	ea42 0e0e 	orr.w	lr, r2, lr
 801c5a2:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801c5a6:	fa1f f28e 	uxth.w	r2, lr
 801c5aa:	1203      	asrs	r3, r0, #8
 801c5ac:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 801c5b0:	b2ff      	uxtb	r7, r7
 801c5b2:	1215      	asrs	r5, r2, #8
 801c5b4:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c5b8:	fb13 f307 	smulbb	r3, r3, r7
 801c5bc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c5c0:	fb05 3501 	mla	r5, r5, r1, r3
 801c5c4:	10c3      	asrs	r3, r0, #3
 801c5c6:	10d4      	asrs	r4, r2, #3
 801c5c8:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c5cc:	fb13 f307 	smulbb	r3, r3, r7
 801c5d0:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 801c5d4:	fb04 3401 	mla	r4, r4, r1, r3
 801c5d8:	00c3      	lsls	r3, r0, #3
 801c5da:	00d2      	lsls	r2, r2, #3
 801c5dc:	b2db      	uxtb	r3, r3
 801c5de:	fb13 f307 	smulbb	r3, r3, r7
 801c5e2:	b2d2      	uxtb	r2, r2
 801c5e4:	fb02 3101 	mla	r1, r2, r1, r3
 801c5e8:	b2ad      	uxth	r5, r5
 801c5ea:	b289      	uxth	r1, r1
 801c5ec:	b2a4      	uxth	r4, r4
 801c5ee:	1c6b      	adds	r3, r5, #1
 801c5f0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c5f4:	1c62      	adds	r2, r4, #1
 801c5f6:	1c4b      	adds	r3, r1, #1
 801c5f8:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801c5fc:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801c600:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c604:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c608:	0964      	lsrs	r4, r4, #5
 801c60a:	432b      	orrs	r3, r5
 801c60c:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801c610:	9a03      	ldr	r2, [sp, #12]
 801c612:	4323      	orrs	r3, r4
 801c614:	8013      	strh	r3, [r2, #0]
 801c616:	b005      	add	sp, #20
 801c618:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c61c:	f04f 0c00 	mov.w	ip, #0
 801c620:	4664      	mov	r4, ip
 801c622:	e6d6      	b.n	801c3d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 801c624:	2300      	movs	r3, #0
 801c626:	469c      	mov	ip, r3
 801c628:	461a      	mov	r2, r3
 801c62a:	461c      	mov	r4, r3
 801c62c:	e6f8      	b.n	801c420 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c62e:	2300      	movs	r3, #0
 801c630:	461a      	mov	r2, r3
 801c632:	e6f5      	b.n	801c420 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c634:	460b      	mov	r3, r1
 801c636:	460a      	mov	r2, r1
 801c638:	e6f2      	b.n	801c420 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 801c63a:	2500      	movs	r5, #0
 801c63c:	46ab      	mov	fp, r5
 801c63e:	e720      	b.n	801c482 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 801c640:	2700      	movs	r7, #0
 801c642:	463d      	mov	r5, r7
 801c644:	4638      	mov	r0, r7
 801c646:	46bb      	mov	fp, r7
 801c648:	e745      	b.n	801c4d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c64a:	4677      	mov	r7, lr
 801c64c:	4675      	mov	r5, lr
 801c64e:	4670      	mov	r0, lr
 801c650:	46f3      	mov	fp, lr
 801c652:	e740      	b.n	801c4d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c654:	2700      	movs	r7, #0
 801c656:	4638      	mov	r0, r7
 801c658:	e73d      	b.n	801c4d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 801c65a:	460f      	mov	r7, r1
 801c65c:	4608      	mov	r0, r1
 801c65e:	e73a      	b.n	801c4d6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

0801c660 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801c660:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c664:	b097      	sub	sp, #92	; 0x5c
 801c666:	9214      	str	r2, [sp, #80]	; 0x50
 801c668:	9308      	str	r3, [sp, #32]
 801c66a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801c66c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801c670:	9312      	str	r3, [sp, #72]	; 0x48
 801c672:	9111      	str	r1, [sp, #68]	; 0x44
 801c674:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801c678:	9015      	str	r0, [sp, #84]	; 0x54
 801c67a:	6850      	ldr	r0, [r2, #4]
 801c67c:	6812      	ldr	r2, [r2, #0]
 801c67e:	fb00 1303 	mla	r3, r0, r3, r1
 801c682:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801c686:	9309      	str	r3, [sp, #36]	; 0x24
 801c688:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c68a:	681b      	ldr	r3, [r3, #0]
 801c68c:	930b      	str	r3, [sp, #44]	; 0x2c
 801c68e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c690:	685b      	ldr	r3, [r3, #4]
 801c692:	930c      	str	r3, [sp, #48]	; 0x30
 801c694:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 801c698:	930a      	str	r3, [sp, #40]	; 0x28
 801c69a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801c69c:	2b00      	cmp	r3, #0
 801c69e:	dc03      	bgt.n	801c6a8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801c6a0:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801c6a2:	2b00      	cmp	r3, #0
 801c6a4:	f340 83cb 	ble.w	801ce3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801c6a8:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c6aa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801c6ae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801c6b2:	1e48      	subs	r0, r1, #1
 801c6b4:	1e55      	subs	r5, r2, #1
 801c6b6:	9b08      	ldr	r3, [sp, #32]
 801c6b8:	2b00      	cmp	r3, #0
 801c6ba:	f340 81a3 	ble.w	801ca04 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 801c6be:	9e21      	ldr	r6, [sp, #132]	; 0x84
 801c6c0:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c6c2:	1436      	asrs	r6, r6, #16
 801c6c4:	ea4f 4323 	mov.w	r3, r3, asr #16
 801c6c8:	d406      	bmi.n	801c6d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c6ca:	4286      	cmp	r6, r0
 801c6cc:	da04      	bge.n	801c6d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c6ce:	2b00      	cmp	r3, #0
 801c6d0:	db02      	blt.n	801c6d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801c6d2:	42ab      	cmp	r3, r5
 801c6d4:	f2c0 8197 	blt.w	801ca06 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801c6d8:	3601      	adds	r6, #1
 801c6da:	f100 8184 	bmi.w	801c9e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c6de:	42b1      	cmp	r1, r6
 801c6e0:	f2c0 8181 	blt.w	801c9e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c6e4:	3301      	adds	r3, #1
 801c6e6:	f100 817e 	bmi.w	801c9e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c6ea:	429a      	cmp	r2, r3
 801c6ec:	f2c0 817b 	blt.w	801c9e6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 801c6f0:	9b08      	ldr	r3, [sp, #32]
 801c6f2:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801c6f4:	9313      	str	r3, [sp, #76]	; 0x4c
 801c6f6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801c6fa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c6fc:	2b00      	cmp	r3, #0
 801c6fe:	f340 81a4 	ble.w	801ca4a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801c702:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c704:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801c706:	1418      	asrs	r0, r3, #16
 801c708:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c70a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801c70e:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801c710:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801c714:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801c716:	142d      	asrs	r5, r5, #16
 801c718:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801c71c:	f100 81f8 	bmi.w	801cb10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c720:	f102 3eff 	add.w	lr, r2, #4294967295
 801c724:	4575      	cmp	r5, lr
 801c726:	f280 81f3 	bge.w	801cb10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c72a:	2800      	cmp	r0, #0
 801c72c:	f2c0 81f0 	blt.w	801cb10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c730:	f103 3eff 	add.w	lr, r3, #4294967295
 801c734:	4570      	cmp	r0, lr
 801c736:	f280 81eb 	bge.w	801cb10 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801c73a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801c73c:	b212      	sxth	r2, r2
 801c73e:	fb00 5002 	mla	r0, r0, r2, r5
 801c742:	fa1f fe81 	uxth.w	lr, r1
 801c746:	eb03 0a00 	add.w	sl, r3, r0
 801c74a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801c74e:	f813 9000 	ldrb.w	r9, [r3, r0]
 801c752:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801c756:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801c75a:	b29b      	uxth	r3, r3
 801c75c:	f1bc 0f00 	cmp.w	ip, #0
 801c760:	f000 81b9 	beq.w	801cad6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801c764:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801c768:	940d      	str	r4, [sp, #52]	; 0x34
 801c76a:	eb0a 0b02 	add.w	fp, sl, r2
 801c76e:	fa1f fa8c 	uxth.w	sl, ip
 801c772:	fb0a fe0e 	mul.w	lr, sl, lr
 801c776:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801c77a:	fa1f fa8a 	uxth.w	sl, sl
 801c77e:	eba5 050e 	sub.w	r5, r5, lr
 801c782:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801c786:	940e      	str	r4, [sp, #56]	; 0x38
 801c788:	eba3 030a 	sub.w	r3, r3, sl
 801c78c:	b2ad      	uxth	r5, r5
 801c78e:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c790:	b29b      	uxth	r3, r3
 801c792:	fb08 f505 	mul.w	r5, r8, r5
 801c796:	fb09 5303 	mla	r3, r9, r3, r5
 801c79a:	fb0a 3304 	mla	r3, sl, r4, r3
 801c79e:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c7a0:	fb0e 3304 	mla	r3, lr, r4, r3
 801c7a4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801c7a8:	2b00      	cmp	r3, #0
 801c7aa:	f000 810f 	beq.w	801c9cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801c7ae:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801c7b0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801c7b4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801c7b8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801c7bc:	f000 8190 	beq.w	801cae0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 801c7c0:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c7c4:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801c7c8:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c7cc:	fb09 f000 	mul.w	r0, r9, r0
 801c7d0:	fb0a fe0e 	mul.w	lr, sl, lr
 801c7d4:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801c7d8:	f100 0b20 	add.w	fp, r0, #32
 801c7dc:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c7e0:	44ce      	add	lr, r9
 801c7e2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801c7e6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801c7ea:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c7ee:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801c7f2:	ea4e 0909 	orr.w	r9, lr, r9
 801c7f6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801c7fa:	8868      	ldrh	r0, [r5, #2]
 801c7fc:	d019      	beq.n	801c832 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801c7fe:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801c802:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801c806:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c80a:	fb08 f800 	mul.w	r8, r8, r0
 801c80e:	fb0a fe0e 	mul.w	lr, sl, lr
 801c812:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801c816:	f108 0b20 	add.w	fp, r8, #32
 801c81a:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801c81e:	4486      	add	lr, r0
 801c820:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801c824:	0a00      	lsrs	r0, r0, #8
 801c826:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801c82a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801c82e:	ea4e 0000 	orr.w	r0, lr, r0
 801c832:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801c836:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801c83a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801c83e:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801c842:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c846:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801c84a:	ea4e 0909 	orr.w	r9, lr, r9
 801c84e:	ea4a 0000 	orr.w	r0, sl, r0
 801c852:	f1bc 0f00 	cmp.w	ip, #0
 801c856:	f000 8145 	beq.w	801cae4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 801c85a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801c85e:	3a01      	subs	r2, #1
 801c860:	0052      	lsls	r2, r2, #1
 801c862:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801c864:	3202      	adds	r2, #2
 801c866:	2cff      	cmp	r4, #255	; 0xff
 801c868:	eb05 0e02 	add.w	lr, r5, r2
 801c86c:	5aaa      	ldrh	r2, [r5, r2]
 801c86e:	d018      	beq.n	801c8a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 801c870:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801c874:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c878:	fb04 fa02 	mul.w	sl, r4, r2
 801c87c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c880:	fb08 f805 	mul.w	r8, r8, r5
 801c884:	f10a 0520 	add.w	r5, sl, #32
 801c888:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801c88c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801c890:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c894:	4442      	add	r2, r8
 801c896:	0a2d      	lsrs	r5, r5, #8
 801c898:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801c89c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c8a0:	432a      	orrs	r2, r5
 801c8a2:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 801c8a4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801c8a8:	2cff      	cmp	r4, #255	; 0xff
 801c8aa:	d01a      	beq.n	801c8e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 801c8ac:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801c8b0:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801c8b4:	fb04 fa05 	mul.w	sl, r4, r5
 801c8b8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801c8bc:	fb08 f80e 	mul.w	r8, r8, lr
 801c8c0:	f10a 0e20 	add.w	lr, sl, #32
 801c8c4:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801c8c8:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801c8cc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801c8d0:	4445      	add	r5, r8
 801c8d2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801c8d6:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801c8da:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801c8de:	ea45 050e 	orr.w	r5, r5, lr
 801c8e2:	fb1c fe01 	smulbb	lr, ip, r1
 801c8e6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801c8ea:	f1cc 0810 	rsb	r8, ip, #16
 801c8ee:	eba8 0801 	sub.w	r8, r8, r1
 801c8f2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801c8f6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801c8fa:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801c8fe:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801c902:	4341      	muls	r1, r0
 801c904:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801c908:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801c90c:	ea4a 0202 	orr.w	r2, sl, r2
 801c910:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801c914:	fb09 1108 	mla	r1, r9, r8, r1
 801c918:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801c91c:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801c920:	fb0c 1102 	mla	r1, ip, r2, r1
 801c924:	ea4b 0505 	orr.w	r5, fp, r5
 801c928:	fb0e 1e05 	mla	lr, lr, r5, r1
 801c92c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801c930:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801c934:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801c938:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801c93c:	ea42 0e0e 	orr.w	lr, r2, lr
 801c940:	fa1f f28e 	uxth.w	r2, lr
 801c944:	2bff      	cmp	r3, #255	; 0xff
 801c946:	d103      	bne.n	801c950 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801c948:	9912      	ldr	r1, [sp, #72]	; 0x48
 801c94a:	29ff      	cmp	r1, #255	; 0xff
 801c94c:	f000 80de 	beq.w	801cb0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 801c950:	990a      	ldr	r1, [sp, #40]	; 0x28
 801c952:	8838      	ldrh	r0, [r7, #0]
 801c954:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801c956:	434b      	muls	r3, r1
 801c958:	f103 0c01 	add.w	ip, r3, #1
 801c95c:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 801c960:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801c964:	fa5f fc83 	uxtb.w	ip, r3
 801c968:	1203      	asrs	r3, r0, #8
 801c96a:	1215      	asrs	r5, r2, #8
 801c96c:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801c970:	fb13 f30c 	smulbb	r3, r3, ip
 801c974:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801c978:	fb05 3501 	mla	r5, r5, r1, r3
 801c97c:	10c3      	asrs	r3, r0, #3
 801c97e:	10d1      	asrs	r1, r2, #3
 801c980:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801c984:	fb13 f30c 	smulbb	r3, r3, ip
 801c988:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801c98c:	fb01 3104 	mla	r1, r1, r4, r3
 801c990:	00c3      	lsls	r3, r0, #3
 801c992:	00d2      	lsls	r2, r2, #3
 801c994:	b2db      	uxtb	r3, r3
 801c996:	b2d2      	uxtb	r2, r2
 801c998:	fb13 f30c 	smulbb	r3, r3, ip
 801c99c:	b2ad      	uxth	r5, r5
 801c99e:	fb02 3304 	mla	r3, r2, r4, r3
 801c9a2:	b29a      	uxth	r2, r3
 801c9a4:	1c6b      	adds	r3, r5, #1
 801c9a6:	b289      	uxth	r1, r1
 801c9a8:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801c9ac:	1c53      	adds	r3, r2, #1
 801c9ae:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801c9b2:	1c4a      	adds	r2, r1, #1
 801c9b4:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801c9b8:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801c9bc:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801c9c0:	0949      	lsrs	r1, r1, #5
 801c9c2:	432b      	orrs	r3, r5
 801c9c4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801c9c8:	430b      	orrs	r3, r1
 801c9ca:	803b      	strh	r3, [r7, #0]
 801c9cc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c9ce:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801c9d0:	4413      	add	r3, r2
 801c9d2:	9321      	str	r3, [sp, #132]	; 0x84
 801c9d4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801c9d6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c9d8:	441a      	add	r2, r3
 801c9da:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801c9dc:	9222      	str	r2, [sp, #136]	; 0x88
 801c9de:	3b01      	subs	r3, #1
 801c9e0:	3702      	adds	r7, #2
 801c9e2:	9313      	str	r3, [sp, #76]	; 0x4c
 801c9e4:	e689      	b.n	801c6fa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801c9e6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801c9e8:	9e23      	ldr	r6, [sp, #140]	; 0x8c
 801c9ea:	9c22      	ldr	r4, [sp, #136]	; 0x88
 801c9ec:	4433      	add	r3, r6
 801c9ee:	9321      	str	r3, [sp, #132]	; 0x84
 801c9f0:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801c9f2:	441c      	add	r4, r3
 801c9f4:	9b08      	ldr	r3, [sp, #32]
 801c9f6:	9422      	str	r4, [sp, #136]	; 0x88
 801c9f8:	3b01      	subs	r3, #1
 801c9fa:	9308      	str	r3, [sp, #32]
 801c9fc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801c9fe:	3302      	adds	r3, #2
 801ca00:	9309      	str	r3, [sp, #36]	; 0x24
 801ca02:	e658      	b.n	801c6b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 801ca04:	d028      	beq.n	801ca58 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801ca06:	9b08      	ldr	r3, [sp, #32]
 801ca08:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801ca0a:	9d21      	ldr	r5, [sp, #132]	; 0x84
 801ca0c:	3b01      	subs	r3, #1
 801ca0e:	fb00 5003 	mla	r0, r0, r3, r5
 801ca12:	1400      	asrs	r0, r0, #16
 801ca14:	f53f ae6c 	bmi.w	801c6f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ca18:	3901      	subs	r1, #1
 801ca1a:	4288      	cmp	r0, r1
 801ca1c:	f6bf ae68 	bge.w	801c6f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ca20:	9924      	ldr	r1, [sp, #144]	; 0x90
 801ca22:	9822      	ldr	r0, [sp, #136]	; 0x88
 801ca24:	fb01 0303 	mla	r3, r1, r3, r0
 801ca28:	141b      	asrs	r3, r3, #16
 801ca2a:	f53f ae61 	bmi.w	801c6f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ca2e:	3a01      	subs	r2, #1
 801ca30:	4293      	cmp	r3, r2
 801ca32:	f6bf ae5d 	bge.w	801c6f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801ca36:	9b08      	ldr	r3, [sp, #32]
 801ca38:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801ca3c:	9313      	str	r3, [sp, #76]	; 0x4c
 801ca3e:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801ca42:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801ca44:	2b00      	cmp	r3, #0
 801ca46:	f300 8082 	bgt.w	801cb4e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801ca4a:	9b08      	ldr	r3, [sp, #32]
 801ca4c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801ca50:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ca52:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801ca56:	9309      	str	r3, [sp, #36]	; 0x24
 801ca58:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801ca5a:	2b00      	cmp	r3, #0
 801ca5c:	f340 81ef 	ble.w	801ce3e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 801ca60:	ee30 0a04 	vadd.f32	s0, s0, s8
 801ca64:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801ca68:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801ca6c:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801ca6e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801ca72:	ee31 1a05 	vadd.f32	s2, s2, s10
 801ca76:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801ca7a:	eef0 6a62 	vmov.f32	s13, s5
 801ca7e:	ee61 7a27 	vmul.f32	s15, s2, s15
 801ca82:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801ca86:	ee77 2a62 	vsub.f32	s5, s14, s5
 801ca8a:	edcd 6a21 	vstr	s13, [sp, #132]	; 0x84
 801ca8e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801ca92:	eef0 6a43 	vmov.f32	s13, s6
 801ca96:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801ca9a:	ee12 2a90 	vmov	r2, s5
 801ca9e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801caa2:	fb92 f3f3 	sdiv	r3, r2, r3
 801caa6:	ee13 2a10 	vmov	r2, s6
 801caaa:	9323      	str	r3, [sp, #140]	; 0x8c
 801caac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801caae:	fb92 f3f3 	sdiv	r3, r2, r3
 801cab2:	9324      	str	r3, [sp, #144]	; 0x90
 801cab4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801cab6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801cab8:	3b01      	subs	r3, #1
 801caba:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801cabe:	9311      	str	r3, [sp, #68]	; 0x44
 801cac0:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801cac2:	edcd 6a22 	vstr	s13, [sp, #136]	; 0x88
 801cac6:	bf08      	it	eq
 801cac8:	4613      	moveq	r3, r2
 801caca:	9308      	str	r3, [sp, #32]
 801cacc:	eeb0 3a67 	vmov.f32	s6, s15
 801cad0:	eef0 2a47 	vmov.f32	s5, s14
 801cad4:	e5e1      	b.n	801c69a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801cad6:	fb08 f505 	mul.w	r5, r8, r5
 801cada:	fb09 5303 	mla	r3, r9, r3, r5
 801cade:	e661      	b.n	801c7a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 801cae0:	4681      	mov	r9, r0
 801cae2:	e688      	b.n	801c7f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 801cae4:	f1c1 0210 	rsb	r2, r1, #16
 801cae8:	4341      	muls	r1, r0
 801caea:	fb09 1902 	mla	r9, r9, r2, r1
 801caee:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801caf2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801caf6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801cafa:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801cafe:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cb02:	ea42 0909 	orr.w	r9, r2, r9
 801cb06:	fa1f f289 	uxth.w	r2, r9
 801cb0a:	e71b      	b.n	801c944 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 801cb0c:	803a      	strh	r2, [r7, #0]
 801cb0e:	e75d      	b.n	801c9cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cb10:	f115 0e01 	adds.w	lr, r5, #1
 801cb14:	f53f af5a 	bmi.w	801c9cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cb18:	4572      	cmp	r2, lr
 801cb1a:	f6ff af57 	blt.w	801c9cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cb1e:	f110 0e01 	adds.w	lr, r0, #1
 801cb22:	f53f af53 	bmi.w	801c9cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cb26:	4573      	cmp	r3, lr
 801cb28:	f6ff af50 	blt.w	801c9cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cb2c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801cb2e:	9502      	str	r5, [sp, #8]
 801cb30:	b21b      	sxth	r3, r3
 801cb32:	b212      	sxth	r2, r2
 801cb34:	e9cd 0103 	strd	r0, r1, [sp, #12]
 801cb38:	9301      	str	r3, [sp, #4]
 801cb3a:	9200      	str	r2, [sp, #0]
 801cb3c:	e9cd c405 	strd	ip, r4, [sp, #20]
 801cb40:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 801cb44:	4639      	mov	r1, r7
 801cb46:	9815      	ldr	r0, [sp, #84]	; 0x54
 801cb48:	f7ff fc04 	bl	801c354 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 801cb4c:	e73e      	b.n	801c9cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801cb4e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801cb50:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801cb54:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801cb56:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801cb5a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801cb5c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801cb60:	9b22      	ldr	r3, [sp, #136]	; 0x88
 801cb62:	141f      	asrs	r7, r3, #16
 801cb64:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801cb66:	141b      	asrs	r3, r3, #16
 801cb68:	fb01 3707 	mla	r7, r1, r7, r3
 801cb6c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801cb6e:	fa1f fc82 	uxth.w	ip, r2
 801cb72:	eb03 0a07 	add.w	sl, r3, r7
 801cb76:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801cb7a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801cb7e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801cb82:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801cb86:	b29b      	uxth	r3, r3
 801cb88:	2d00      	cmp	r5, #0
 801cb8a:	f000 813d 	beq.w	801ce08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 801cb8e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801cb92:	940f      	str	r4, [sp, #60]	; 0x3c
 801cb94:	eb0a 0b01 	add.w	fp, sl, r1
 801cb98:	fa1f fa85 	uxth.w	sl, r5
 801cb9c:	fb0a fc0c 	mul.w	ip, sl, ip
 801cba0:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801cba4:	fa1f fa8a 	uxth.w	sl, sl
 801cba8:	eba0 000c 	sub.w	r0, r0, ip
 801cbac:	eba3 030a 	sub.w	r3, r3, sl
 801cbb0:	b280      	uxth	r0, r0
 801cbb2:	fb08 f000 	mul.w	r0, r8, r0
 801cbb6:	b29b      	uxth	r3, r3
 801cbb8:	fb09 0303 	mla	r3, r9, r3, r0
 801cbbc:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801cbbe:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801cbc2:	9410      	str	r4, [sp, #64]	; 0x40
 801cbc4:	fb0a 3300 	mla	r3, sl, r0, r3
 801cbc8:	fb0c 3304 	mla	r3, ip, r4, r3
 801cbcc:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801cbd0:	2b00      	cmp	r3, #0
 801cbd2:	f000 810b 	beq.w	801cdec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801cbd6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801cbd8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801cbda:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801cbde:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801cbe2:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801cbe6:	f000 8114 	beq.w	801ce12 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 801cbea:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801cbee:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801cbf2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cbf6:	fb09 f707 	mul.w	r7, r9, r7
 801cbfa:	fb0a fc0c 	mul.w	ip, sl, ip
 801cbfe:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801cc02:	f107 0b20 	add.w	fp, r7, #32
 801cc06:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801cc0a:	44cc      	add	ip, r9
 801cc0c:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801cc10:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801cc14:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801cc18:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801cc1c:	ea4c 0909 	orr.w	r9, ip, r9
 801cc20:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801cc24:	8847      	ldrh	r7, [r0, #2]
 801cc26:	d019      	beq.n	801cc5c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 801cc28:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801cc2c:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801cc30:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cc34:	fb08 f807 	mul.w	r8, r8, r7
 801cc38:	fb0a fc0c 	mul.w	ip, sl, ip
 801cc3c:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801cc40:	f108 0b20 	add.w	fp, r8, #32
 801cc44:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801cc48:	44bc      	add	ip, r7
 801cc4a:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801cc4e:	0a3f      	lsrs	r7, r7, #8
 801cc50:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801cc54:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cc58:	ea4c 0707 	orr.w	r7, ip, r7
 801cc5c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801cc60:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801cc64:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801cc68:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801cc6c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cc70:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801cc74:	ea4c 0909 	orr.w	r9, ip, r9
 801cc78:	ea4a 0707 	orr.w	r7, sl, r7
 801cc7c:	2d00      	cmp	r5, #0
 801cc7e:	f000 80ca 	beq.w	801ce16 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 801cc82:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801cc86:	3901      	subs	r1, #1
 801cc88:	0049      	lsls	r1, r1, #1
 801cc8a:	3102      	adds	r1, #2
 801cc8c:	eb00 0c01 	add.w	ip, r0, r1
 801cc90:	5a41      	ldrh	r1, [r0, r1]
 801cc92:	980f      	ldr	r0, [sp, #60]	; 0x3c
 801cc94:	28ff      	cmp	r0, #255	; 0xff
 801cc96:	d019      	beq.n	801cccc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 801cc98:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801cc9a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801cc9e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801cca2:	fb04 fa01 	mul.w	sl, r4, r1
 801cca6:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801ccaa:	fb08 f800 	mul.w	r8, r8, r0
 801ccae:	f10a 0020 	add.w	r0, sl, #32
 801ccb2:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801ccb6:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801ccba:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ccbe:	4441      	add	r1, r8
 801ccc0:	0a00      	lsrs	r0, r0, #8
 801ccc2:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801ccc6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ccca:	4301      	orrs	r1, r0
 801cccc:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801ccce:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801ccd2:	2cff      	cmp	r4, #255	; 0xff
 801ccd4:	d01a      	beq.n	801cd0c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 801ccd6:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801ccda:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ccde:	fb04 fa00 	mul.w	sl, r4, r0
 801cce2:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801cce6:	fb08 f80c 	mul.w	r8, r8, ip
 801ccea:	f10a 0c20 	add.w	ip, sl, #32
 801ccee:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801ccf2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801ccf6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801ccfa:	4440      	add	r0, r8
 801ccfc:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801cd00:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801cd04:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801cd08:	ea40 000c 	orr.w	r0, r0, ip
 801cd0c:	fb15 fc02 	smulbb	ip, r5, r2
 801cd10:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801cd14:	f1c5 0810 	rsb	r8, r5, #16
 801cd18:	eba8 0802 	sub.w	r8, r8, r2
 801cd1c:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801cd20:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801cd24:	437a      	muls	r2, r7
 801cd26:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801cd2a:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801cd2e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cd32:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801cd36:	fb09 2208 	mla	r2, r9, r8, r2
 801cd3a:	ea4a 0101 	orr.w	r1, sl, r1
 801cd3e:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801cd42:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801cd46:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801cd4a:	fb05 2201 	mla	r2, r5, r1, r2
 801cd4e:	ea4b 0000 	orr.w	r0, fp, r0
 801cd52:	fb0c 2200 	mla	r2, ip, r0, r2
 801cd56:	0d57      	lsrs	r7, r2, #21
 801cd58:	0952      	lsrs	r2, r2, #5
 801cd5a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cd5e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801cd62:	433a      	orrs	r2, r7
 801cd64:	2bff      	cmp	r3, #255	; 0xff
 801cd66:	b292      	uxth	r2, r2
 801cd68:	d102      	bne.n	801cd70 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801cd6a:	9912      	ldr	r1, [sp, #72]	; 0x48
 801cd6c:	29ff      	cmp	r1, #255	; 0xff
 801cd6e:	d063      	beq.n	801ce38 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 801cd70:	980a      	ldr	r0, [sp, #40]	; 0x28
 801cd72:	f8be 1000 	ldrh.w	r1, [lr]
 801cd76:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801cd78:	4343      	muls	r3, r0
 801cd7a:	1c58      	adds	r0, r3, #1
 801cd7c:	eb00 2323 	add.w	r3, r0, r3, asr #8
 801cd80:	ea6f 2323 	mvn.w	r3, r3, asr #8
 801cd84:	1208      	asrs	r0, r1, #8
 801cd86:	b2db      	uxtb	r3, r3
 801cd88:	1215      	asrs	r5, r2, #8
 801cd8a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801cd8e:	fb10 f003 	smulbb	r0, r0, r3
 801cd92:	10cf      	asrs	r7, r1, #3
 801cd94:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801cd98:	00c9      	lsls	r1, r1, #3
 801cd9a:	fb05 0504 	mla	r5, r5, r4, r0
 801cd9e:	b2c9      	uxtb	r1, r1
 801cda0:	10d0      	asrs	r0, r2, #3
 801cda2:	00d2      	lsls	r2, r2, #3
 801cda4:	fb11 f103 	smulbb	r1, r1, r3
 801cda8:	b2d2      	uxtb	r2, r2
 801cdaa:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801cdae:	fb02 1204 	mla	r2, r2, r4, r1
 801cdb2:	fb17 f703 	smulbb	r7, r7, r3
 801cdb6:	b2ad      	uxth	r5, r5
 801cdb8:	b292      	uxth	r2, r2
 801cdba:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801cdbe:	fb00 7004 	mla	r0, r0, r4, r7
 801cdc2:	1c6b      	adds	r3, r5, #1
 801cdc4:	1c57      	adds	r7, r2, #1
 801cdc6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801cdca:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801cdce:	b280      	uxth	r0, r0
 801cdd0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cdd4:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801cdd8:	433d      	orrs	r5, r7
 801cdda:	1c47      	adds	r7, r0, #1
 801cddc:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 801cde0:	097f      	lsrs	r7, r7, #5
 801cde2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801cde6:	433d      	orrs	r5, r7
 801cde8:	f8ae 5000 	strh.w	r5, [lr]
 801cdec:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801cdee:	9a23      	ldr	r2, [sp, #140]	; 0x8c
 801cdf0:	4413      	add	r3, r2
 801cdf2:	9321      	str	r3, [sp, #132]	; 0x84
 801cdf4:	9a22      	ldr	r2, [sp, #136]	; 0x88
 801cdf6:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801cdf8:	441a      	add	r2, r3
 801cdfa:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 801cdfc:	9222      	str	r2, [sp, #136]	; 0x88
 801cdfe:	3b01      	subs	r3, #1
 801ce00:	f10e 0e02 	add.w	lr, lr, #2
 801ce04:	9313      	str	r3, [sp, #76]	; 0x4c
 801ce06:	e61c      	b.n	801ca42 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 801ce08:	fb08 f000 	mul.w	r0, r8, r0
 801ce0c:	fb09 0303 	mla	r3, r9, r3, r0
 801ce10:	e6dc      	b.n	801cbcc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 801ce12:	46b9      	mov	r9, r7
 801ce14:	e704      	b.n	801cc20 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 801ce16:	f1c2 0110 	rsb	r1, r2, #16
 801ce1a:	437a      	muls	r2, r7
 801ce1c:	fb09 2901 	mla	r9, r9, r1, r2
 801ce20:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801ce24:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801ce28:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801ce2c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ce30:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801ce34:	4302      	orrs	r2, r0
 801ce36:	e795      	b.n	801cd64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 801ce38:	f8ae 2000 	strh.w	r2, [lr]
 801ce3c:	e7d6      	b.n	801cdec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 801ce3e:	b017      	add	sp, #92	; 0x5c
 801ce40:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ce44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801ce44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ce48:	b085      	sub	sp, #20
 801ce4a:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	; 0x40
 801ce4e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 801ce52:	9103      	str	r1, [sp, #12]
 801ce54:	fb00 7406 	mla	r4, r0, r6, r7
 801ce58:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 801ce5c:	2800      	cmp	r0, #0
 801ce5e:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	; 0x3c
 801ce62:	f89d 1048 	ldrb.w	r1, [sp, #72]	; 0x48
 801ce66:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 801ce6a:	9501      	str	r5, [sp, #4]
 801ce6c:	eb02 0904 	add.w	r9, r2, r4
 801ce70:	f2c0 8141 	blt.w	801d0f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801ce74:	4583      	cmp	fp, r0
 801ce76:	f340 813e 	ble.w	801d0f6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 801ce7a:	2f00      	cmp	r7, #0
 801ce7c:	f2c0 8137 	blt.w	801d0ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801ce80:	42be      	cmp	r6, r7
 801ce82:	f340 8134 	ble.w	801d0ee <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 801ce86:	f812 c004 	ldrb.w	ip, [r2, r4]
 801ce8a:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 801ce8e:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801ce92:	f423 65fc 	bic.w	r5, r3, #2016	; 0x7e0
 801ce96:	4355      	muls	r5, r2
 801ce98:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ce9c:	f64f 041f 	movw	r4, #63519	; 0xf81f
 801cea0:	fb0c f203 	mul.w	r2, ip, r3
 801cea4:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 801cea8:	f605 0501 	addw	r5, r5, #2049	; 0x801
 801ceac:	441d      	add	r5, r3
 801ceae:	f102 0320 	add.w	r3, r2, #32
 801ceb2:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801ceb6:	0a1b      	lsrs	r3, r3, #8
 801ceb8:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 801cebc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801cec0:	431c      	orrs	r4, r3
 801cec2:	1c7b      	adds	r3, r7, #1
 801cec4:	f100 811c 	bmi.w	801d100 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801cec8:	429e      	cmp	r6, r3
 801ceca:	f340 8119 	ble.w	801d100 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 801cece:	2900      	cmp	r1, #0
 801ced0:	f000 8119 	beq.w	801d106 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 801ced4:	9a01      	ldr	r2, [sp, #4]
 801ced6:	f899 3001 	ldrb.w	r3, [r9, #1]
 801ceda:	8855      	ldrh	r5, [r2, #2]
 801cedc:	ea4f 08e3 	mov.w	r8, r3, asr #3
 801cee0:	f425 62fc 	bic.w	r2, r5, #2016	; 0x7e0
 801cee4:	fb08 f802 	mul.w	r8, r8, r2
 801cee8:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801ceec:	f64f 021f 	movw	r2, #63519	; 0xf81f
 801cef0:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 801cef4:	435d      	muls	r5, r3
 801cef6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801cefa:	44d0      	add	r8, sl
 801cefc:	f105 0a20 	add.w	sl, r5, #32
 801cf00:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 801cf04:	0a2d      	lsrs	r5, r5, #8
 801cf06:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 801cf0a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801cf0e:	432a      	orrs	r2, r5
 801cf10:	3001      	adds	r0, #1
 801cf12:	f100 80fe 	bmi.w	801d112 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801cf16:	4583      	cmp	fp, r0
 801cf18:	f340 80fb 	ble.w	801d112 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 801cf1c:	f1be 0f00 	cmp.w	lr, #0
 801cf20:	f000 80fc 	beq.w	801d11c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 801cf24:	2f00      	cmp	r7, #0
 801cf26:	f2c0 80f1 	blt.w	801d10c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801cf2a:	42be      	cmp	r6, r7
 801cf2c:	f340 80ee 	ble.w	801d10c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 801cf30:	9801      	ldr	r0, [sp, #4]
 801cf32:	f819 5006 	ldrb.w	r5, [r9, r6]
 801cf36:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 801cf3a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 801cf3e:	f428 60fc 	bic.w	r0, r8, #2016	; 0x7e0
 801cf42:	fb0a fa00 	mul.w	sl, sl, r0
 801cf46:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 801cf4a:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 801cf4e:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 801cf52:	fb05 f808 	mul.w	r8, r5, r8
 801cf56:	f60a 0a01 	addw	sl, sl, #2049	; 0x801
 801cf5a:	4482      	add	sl, r0
 801cf5c:	f108 0020 	add.w	r0, r8, #32
 801cf60:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801cf64:	0a00      	lsrs	r0, r0, #8
 801cf66:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 801cf6a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cf6e:	ea4b 0b00 	orr.w	fp, fp, r0
 801cf72:	3701      	adds	r7, #1
 801cf74:	f100 80d7 	bmi.w	801d126 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801cf78:	42be      	cmp	r6, r7
 801cf7a:	f340 80d4 	ble.w	801d126 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 801cf7e:	2900      	cmp	r1, #0
 801cf80:	f000 80d4 	beq.w	801d12c <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 801cf84:	3601      	adds	r6, #1
 801cf86:	9801      	ldr	r0, [sp, #4]
 801cf88:	f819 7006 	ldrb.w	r7, [r9, r6]
 801cf8c:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 801cf90:	ea4f 09e7 	mov.w	r9, r7, asr #3
 801cf94:	f420 66fc 	bic.w	r6, r0, #2016	; 0x7e0
 801cf98:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cf9c:	fb09 f906 	mul.w	r9, r9, r6
 801cfa0:	fb07 f800 	mul.w	r8, r7, r0
 801cfa4:	f64f 001f 	movw	r0, #63519	; 0xf81f
 801cfa8:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 801cfac:	f609 0901 	addw	r9, r9, #2049	; 0x801
 801cfb0:	44d1      	add	r9, sl
 801cfb2:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 801cfb6:	f108 0020 	add.w	r0, r8, #32
 801cfba:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801cfbe:	0a00      	lsrs	r0, r0, #8
 801cfc0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801cfc4:	4330      	orrs	r0, r6
 801cfc6:	b28e      	uxth	r6, r1
 801cfc8:	fa1f f98e 	uxth.w	r9, lr
 801cfcc:	fb06 f809 	mul.w	r8, r6, r9
 801cfd0:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 801cfd4:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801cfd8:	0136      	lsls	r6, r6, #4
 801cfda:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cfde:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801cfe2:	9601      	str	r6, [sp, #4]
 801cfe4:	ea4a 0404 	orr.w	r4, sl, r4
 801cfe8:	fa1f f689 	uxth.w	r6, r9
 801cfec:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801cff0:	fb11 f90e 	smulbb	r9, r1, lr
 801cff4:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 801cff8:	9602      	str	r6, [sp, #8]
 801cffa:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801cffe:	4626      	mov	r6, r4
 801d000:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d004:	f1ce 0410 	rsb	r4, lr, #16
 801d008:	1a64      	subs	r4, r4, r1
 801d00a:	ea4a 0202 	orr.w	r2, sl, r2
 801d00e:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 801d012:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d016:	434a      	muls	r2, r1
 801d018:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 801d01c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d020:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d024:	fb04 2406 	mla	r4, r4, r6, r2
 801d028:	ea4a 0000 	orr.w	r0, sl, r0
 801d02c:	fb09 4200 	mla	r2, r9, r0, r4
 801d030:	ea4f 440b 	mov.w	r4, fp, lsl #16
 801d034:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d038:	9801      	ldr	r0, [sp, #4]
 801d03a:	9903      	ldr	r1, [sp, #12]
 801d03c:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801d040:	ea44 0b0b 	orr.w	fp, r4, fp
 801d044:	9c02      	ldr	r4, [sp, #8]
 801d046:	8809      	ldrh	r1, [r1, #0]
 801d048:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 801d04c:	1b00      	subs	r0, r0, r4
 801d04e:	9c01      	ldr	r4, [sp, #4]
 801d050:	eba4 0608 	sub.w	r6, r4, r8
 801d054:	b2b6      	uxth	r6, r6
 801d056:	b280      	uxth	r0, r0
 801d058:	4373      	muls	r3, r6
 801d05a:	fb0c 3300 	mla	r3, ip, r0, r3
 801d05e:	9802      	ldr	r0, [sp, #8]
 801d060:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 801d064:	fb00 3505 	mla	r5, r0, r5, r3
 801d068:	fb0e 2e0b 	mla	lr, lr, fp, r2
 801d06c:	fb08 5707 	mla	r7, r8, r7, r5
 801d070:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d074:	120b      	asrs	r3, r1, #8
 801d076:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d07a:	ea6f 2727 	mvn.w	r7, r7, asr #8
 801d07e:	b2ff      	uxtb	r7, r7
 801d080:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d084:	10c8      	asrs	r0, r1, #3
 801d086:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d08a:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801d08e:	00c9      	lsls	r1, r1, #3
 801d090:	437b      	muls	r3, r7
 801d092:	ea42 0e0e 	orr.w	lr, r2, lr
 801d096:	b2c9      	uxtb	r1, r1
 801d098:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801d09c:	fa1f f28e 	uxth.w	r2, lr
 801d0a0:	4378      	muls	r0, r7
 801d0a2:	434f      	muls	r7, r1
 801d0a4:	1c59      	adds	r1, r3, #1
 801d0a6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 801d0aa:	1213      	asrs	r3, r2, #8
 801d0ac:	f023 0307 	bic.w	r3, r3, #7
 801d0b0:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801d0b4:	1c41      	adds	r1, r0, #1
 801d0b6:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d0ba:	10d1      	asrs	r1, r2, #3
 801d0bc:	f021 0103 	bic.w	r1, r1, #3
 801d0c0:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d0c4:	021b      	lsls	r3, r3, #8
 801d0c6:	00c9      	lsls	r1, r1, #3
 801d0c8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d0cc:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801d0d0:	430b      	orrs	r3, r1
 801d0d2:	1c79      	adds	r1, r7, #1
 801d0d4:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 801d0d8:	00d2      	lsls	r2, r2, #3
 801d0da:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801d0de:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d0e2:	431a      	orrs	r2, r3
 801d0e4:	9b03      	ldr	r3, [sp, #12]
 801d0e6:	801a      	strh	r2, [r3, #0]
 801d0e8:	b005      	add	sp, #20
 801d0ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d0ee:	f04f 0c00 	mov.w	ip, #0
 801d0f2:	4664      	mov	r4, ip
 801d0f4:	e6e5      	b.n	801cec2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 801d0f6:	2300      	movs	r3, #0
 801d0f8:	469c      	mov	ip, r3
 801d0fa:	461a      	mov	r2, r3
 801d0fc:	461c      	mov	r4, r3
 801d0fe:	e707      	b.n	801cf10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d100:	2300      	movs	r3, #0
 801d102:	461a      	mov	r2, r3
 801d104:	e704      	b.n	801cf10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d106:	460b      	mov	r3, r1
 801d108:	460a      	mov	r2, r1
 801d10a:	e701      	b.n	801cf10 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 801d10c:	2500      	movs	r5, #0
 801d10e:	46ab      	mov	fp, r5
 801d110:	e72f      	b.n	801cf72 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 801d112:	2700      	movs	r7, #0
 801d114:	463d      	mov	r5, r7
 801d116:	4638      	mov	r0, r7
 801d118:	46bb      	mov	fp, r7
 801d11a:	e754      	b.n	801cfc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d11c:	4677      	mov	r7, lr
 801d11e:	4675      	mov	r5, lr
 801d120:	4670      	mov	r0, lr
 801d122:	46f3      	mov	fp, lr
 801d124:	e74f      	b.n	801cfc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d126:	2700      	movs	r7, #0
 801d128:	4638      	mov	r0, r7
 801d12a:	e74c      	b.n	801cfc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 801d12c:	460f      	mov	r7, r1
 801d12e:	4608      	mov	r0, r1
 801d130:	e749      	b.n	801cfc6 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

0801d134 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801d134:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d138:	b093      	sub	sp, #76	; 0x4c
 801d13a:	9210      	str	r2, [sp, #64]	; 0x40
 801d13c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801d13e:	910e      	str	r1, [sp, #56]	; 0x38
 801d140:	9306      	str	r3, [sp, #24]
 801d142:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801d146:	9011      	str	r0, [sp, #68]	; 0x44
 801d148:	6850      	ldr	r0, [r2, #4]
 801d14a:	6812      	ldr	r2, [r2, #0]
 801d14c:	fb00 1303 	mla	r3, r0, r3, r1
 801d150:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801d154:	9307      	str	r3, [sp, #28]
 801d156:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d158:	681b      	ldr	r3, [r3, #0]
 801d15a:	9308      	str	r3, [sp, #32]
 801d15c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d15e:	685b      	ldr	r3, [r3, #4]
 801d160:	9309      	str	r3, [sp, #36]	; 0x24
 801d162:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d164:	2b00      	cmp	r3, #0
 801d166:	dc03      	bgt.n	801d170 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801d168:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801d16a:	2b00      	cmp	r3, #0
 801d16c:	f340 83b4 	ble.w	801d8d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801d170:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d172:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d176:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801d17a:	1e48      	subs	r0, r1, #1
 801d17c:	1e55      	subs	r5, r2, #1
 801d17e:	9b06      	ldr	r3, [sp, #24]
 801d180:	2b00      	cmp	r3, #0
 801d182:	f340 8163 	ble.w	801d44c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 801d186:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 801d188:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d18a:	1436      	asrs	r6, r6, #16
 801d18c:	ea4f 4323 	mov.w	r3, r3, asr #16
 801d190:	d406      	bmi.n	801d1a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d192:	4286      	cmp	r6, r0
 801d194:	da04      	bge.n	801d1a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d196:	2b00      	cmp	r3, #0
 801d198:	db02      	blt.n	801d1a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801d19a:	42ab      	cmp	r3, r5
 801d19c:	f2c0 8157 	blt.w	801d44e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 801d1a0:	3601      	adds	r6, #1
 801d1a2:	f100 8144 	bmi.w	801d42e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d1a6:	42b1      	cmp	r1, r6
 801d1a8:	f2c0 8141 	blt.w	801d42e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d1ac:	3301      	adds	r3, #1
 801d1ae:	f100 813e 	bmi.w	801d42e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d1b2:	429a      	cmp	r2, r3
 801d1b4:	f2c0 813b 	blt.w	801d42e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 801d1b8:	9b06      	ldr	r3, [sp, #24]
 801d1ba:	9f07      	ldr	r7, [sp, #28]
 801d1bc:	930f      	str	r3, [sp, #60]	; 0x3c
 801d1be:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801d1c2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d1c4:	2b00      	cmp	r3, #0
 801d1c6:	f340 8164 	ble.w	801d492 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 801d1ca:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d1cc:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801d1ce:	1418      	asrs	r0, r3, #16
 801d1d0:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d1d2:	f3c3 3103 	ubfx	r1, r3, #12, #4
 801d1d6:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d1d8:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 801d1dc:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d1de:	142d      	asrs	r5, r5, #16
 801d1e0:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 801d1e4:	f100 81ee 	bmi.w	801d5c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d1e8:	f102 3eff 	add.w	lr, r2, #4294967295
 801d1ec:	4575      	cmp	r5, lr
 801d1ee:	f280 81e9 	bge.w	801d5c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d1f2:	2800      	cmp	r0, #0
 801d1f4:	f2c0 81e6 	blt.w	801d5c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d1f8:	f103 3eff 	add.w	lr, r3, #4294967295
 801d1fc:	4570      	cmp	r0, lr
 801d1fe:	f280 81e1 	bge.w	801d5c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 801d202:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d204:	b212      	sxth	r2, r2
 801d206:	fb00 5002 	mla	r0, r0, r2, r5
 801d20a:	fa1f fe81 	uxth.w	lr, r1
 801d20e:	eb03 0a00 	add.w	sl, r3, r0
 801d212:	ea4f 150e 	mov.w	r5, lr, lsl #4
 801d216:	f813 9000 	ldrb.w	r9, [r3, r0]
 801d21a:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d21e:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 801d222:	b29b      	uxth	r3, r3
 801d224:	f1bc 0f00 	cmp.w	ip, #0
 801d228:	f000 8179 	beq.w	801d51e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 801d22c:	f81a 4002 	ldrb.w	r4, [sl, r2]
 801d230:	940a      	str	r4, [sp, #40]	; 0x28
 801d232:	eb0a 0b02 	add.w	fp, sl, r2
 801d236:	fa1f fa8c 	uxth.w	sl, ip
 801d23a:	fb0a fe0e 	mul.w	lr, sl, lr
 801d23e:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801d242:	fa1f fa8a 	uxth.w	sl, sl
 801d246:	eba5 050e 	sub.w	r5, r5, lr
 801d24a:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d24e:	940b      	str	r4, [sp, #44]	; 0x2c
 801d250:	eba3 030a 	sub.w	r3, r3, sl
 801d254:	b2ad      	uxth	r5, r5
 801d256:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d258:	b29b      	uxth	r3, r3
 801d25a:	fb08 f505 	mul.w	r5, r8, r5
 801d25e:	fb09 5303 	mla	r3, r9, r3, r5
 801d262:	fb0a 3304 	mla	r3, sl, r4, r3
 801d266:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d268:	fb0e 3304 	mla	r3, lr, r4, r3
 801d26c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d270:	2b00      	cmp	r3, #0
 801d272:	f000 80cf 	beq.w	801d414 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d276:	9c08      	ldr	r4, [sp, #32]
 801d278:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d27c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801d280:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 801d284:	f000 8150 	beq.w	801d528 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 801d288:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801d28c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d290:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d294:	fb09 f000 	mul.w	r0, r9, r0
 801d298:	fb0a fe0e 	mul.w	lr, sl, lr
 801d29c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801d2a0:	f100 0b20 	add.w	fp, r0, #32
 801d2a4:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801d2a8:	44ce      	add	lr, r9
 801d2aa:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801d2ae:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d2b2:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d2b6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d2ba:	ea4e 0909 	orr.w	r9, lr, r9
 801d2be:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d2c2:	8868      	ldrh	r0, [r5, #2]
 801d2c4:	d019      	beq.n	801d2fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801d2c6:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 801d2ca:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d2ce:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d2d2:	fb08 f800 	mul.w	r8, r8, r0
 801d2d6:	fb0a fe0e 	mul.w	lr, sl, lr
 801d2da:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 801d2de:	f108 0b20 	add.w	fp, r8, #32
 801d2e2:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 801d2e6:	4486      	add	lr, r0
 801d2e8:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 801d2ec:	0a00      	lsrs	r0, r0, #8
 801d2ee:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 801d2f2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d2f6:	ea4e 0000 	orr.w	r0, lr, r0
 801d2fa:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 801d2fe:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 801d302:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801d306:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d30a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d30e:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d312:	ea4e 0909 	orr.w	r9, lr, r9
 801d316:	ea4a 0000 	orr.w	r0, sl, r0
 801d31a:	f1bc 0f00 	cmp.w	ip, #0
 801d31e:	f000 8105 	beq.w	801d52c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801d322:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 801d326:	3a01      	subs	r2, #1
 801d328:	0052      	lsls	r2, r2, #1
 801d32a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801d32c:	3202      	adds	r2, #2
 801d32e:	2cff      	cmp	r4, #255	; 0xff
 801d330:	eb05 0e02 	add.w	lr, r5, r2
 801d334:	5aaa      	ldrh	r2, [r5, r2]
 801d336:	d018      	beq.n	801d36a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801d338:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 801d33c:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d340:	fb04 fa02 	mul.w	sl, r4, r2
 801d344:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d348:	fb08 f805 	mul.w	r8, r8, r5
 801d34c:	f10a 0520 	add.w	r5, sl, #32
 801d350:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 801d354:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 801d358:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d35c:	4442      	add	r2, r8
 801d35e:	0a2d      	lsrs	r5, r5, #8
 801d360:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 801d364:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d368:	432a      	orrs	r2, r5
 801d36a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801d36c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801d370:	2cff      	cmp	r4, #255	; 0xff
 801d372:	d01a      	beq.n	801d3aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801d374:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 801d378:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801d37c:	fb04 fa05 	mul.w	sl, r4, r5
 801d380:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d384:	fb08 f80e 	mul.w	r8, r8, lr
 801d388:	f10a 0e20 	add.w	lr, sl, #32
 801d38c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801d390:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 801d394:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d398:	4445      	add	r5, r8
 801d39a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801d39e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801d3a2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 801d3a6:	ea45 050e 	orr.w	r5, r5, lr
 801d3aa:	fb1c fe01 	smulbb	lr, ip, r1
 801d3ae:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801d3b2:	f1cc 0810 	rsb	r8, ip, #16
 801d3b6:	eba8 0801 	sub.w	r8, r8, r1
 801d3ba:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801d3be:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801d3c2:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 801d3c6:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 801d3ca:	4341      	muls	r1, r0
 801d3cc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d3d0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d3d4:	ea4a 0202 	orr.w	r2, sl, r2
 801d3d8:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 801d3dc:	fb09 1108 	mla	r1, r9, r8, r1
 801d3e0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d3e4:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d3e8:	fb0c 1102 	mla	r1, ip, r2, r1
 801d3ec:	ea4b 0505 	orr.w	r5, fp, r5
 801d3f0:	fb0e 1e05 	mla	lr, lr, r5, r1
 801d3f4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 801d3f8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 801d3fc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d400:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801d404:	ea42 0e0e 	orr.w	lr, r2, lr
 801d408:	fa1f f28e 	uxth.w	r2, lr
 801d40c:	2bff      	cmp	r3, #255	; 0xff
 801d40e:	f040 80a1 	bne.w	801d554 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801d412:	803a      	strh	r2, [r7, #0]
 801d414:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d416:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801d418:	4413      	add	r3, r2
 801d41a:	931d      	str	r3, [sp, #116]	; 0x74
 801d41c:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801d41e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d420:	441a      	add	r2, r3
 801d422:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d424:	921e      	str	r2, [sp, #120]	; 0x78
 801d426:	3b01      	subs	r3, #1
 801d428:	3702      	adds	r7, #2
 801d42a:	930f      	str	r3, [sp, #60]	; 0x3c
 801d42c:	e6c9      	b.n	801d1c2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801d42e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d430:	9e1f      	ldr	r6, [sp, #124]	; 0x7c
 801d432:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 801d434:	4433      	add	r3, r6
 801d436:	931d      	str	r3, [sp, #116]	; 0x74
 801d438:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d43a:	441c      	add	r4, r3
 801d43c:	9b06      	ldr	r3, [sp, #24]
 801d43e:	941e      	str	r4, [sp, #120]	; 0x78
 801d440:	3b01      	subs	r3, #1
 801d442:	9306      	str	r3, [sp, #24]
 801d444:	9b07      	ldr	r3, [sp, #28]
 801d446:	3302      	adds	r3, #2
 801d448:	9307      	str	r3, [sp, #28]
 801d44a:	e698      	b.n	801d17e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801d44c:	d028      	beq.n	801d4a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 801d44e:	9b06      	ldr	r3, [sp, #24]
 801d450:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801d452:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 801d454:	3b01      	subs	r3, #1
 801d456:	fb00 5003 	mla	r0, r0, r3, r5
 801d45a:	1400      	asrs	r0, r0, #16
 801d45c:	f53f aeac 	bmi.w	801d1b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d460:	3901      	subs	r1, #1
 801d462:	4288      	cmp	r0, r1
 801d464:	f6bf aea8 	bge.w	801d1b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d468:	9920      	ldr	r1, [sp, #128]	; 0x80
 801d46a:	981e      	ldr	r0, [sp, #120]	; 0x78
 801d46c:	fb01 0303 	mla	r3, r1, r3, r0
 801d470:	141b      	asrs	r3, r3, #16
 801d472:	f53f aea1 	bmi.w	801d1b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d476:	3a01      	subs	r2, #1
 801d478:	4293      	cmp	r3, r2
 801d47a:	f6bf ae9d 	bge.w	801d1b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 801d47e:	9b06      	ldr	r3, [sp, #24]
 801d480:	f8dd e01c 	ldr.w	lr, [sp, #28]
 801d484:	930f      	str	r3, [sp, #60]	; 0x3c
 801d486:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801d48a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d48c:	2b00      	cmp	r3, #0
 801d48e:	f300 80b6 	bgt.w	801d5fe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 801d492:	9b06      	ldr	r3, [sp, #24]
 801d494:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801d498:	9b07      	ldr	r3, [sp, #28]
 801d49a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 801d49e:	9307      	str	r3, [sp, #28]
 801d4a0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d4a2:	2b00      	cmp	r3, #0
 801d4a4:	f340 8218 	ble.w	801d8d8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 801d4a8:	ee30 0a04 	vadd.f32	s0, s0, s8
 801d4ac:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801d4b0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801d4b4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d4b6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801d4ba:	ee31 1a05 	vadd.f32	s2, s2, s10
 801d4be:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801d4c2:	eef0 6a62 	vmov.f32	s13, s5
 801d4c6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801d4ca:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d4ce:	ee77 2a62 	vsub.f32	s5, s14, s5
 801d4d2:	edcd 6a1d 	vstr	s13, [sp, #116]	; 0x74
 801d4d6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801d4da:	eef0 6a43 	vmov.f32	s13, s6
 801d4de:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801d4e2:	ee12 2a90 	vmov	r2, s5
 801d4e6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801d4ea:	fb92 f3f3 	sdiv	r3, r2, r3
 801d4ee:	ee13 2a10 	vmov	r2, s6
 801d4f2:	931f      	str	r3, [sp, #124]	; 0x7c
 801d4f4:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d4f6:	fb92 f3f3 	sdiv	r3, r2, r3
 801d4fa:	9320      	str	r3, [sp, #128]	; 0x80
 801d4fc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801d4fe:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801d500:	3b01      	subs	r3, #1
 801d502:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801d506:	930e      	str	r3, [sp, #56]	; 0x38
 801d508:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801d50a:	edcd 6a1e 	vstr	s13, [sp, #120]	; 0x78
 801d50e:	bf08      	it	eq
 801d510:	4613      	moveq	r3, r2
 801d512:	9306      	str	r3, [sp, #24]
 801d514:	eeb0 3a67 	vmov.f32	s6, s15
 801d518:	eef0 2a47 	vmov.f32	s5, s14
 801d51c:	e621      	b.n	801d162 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801d51e:	fb08 f505 	mul.w	r5, r8, r5
 801d522:	fb09 5303 	mla	r3, r9, r3, r5
 801d526:	e6a1      	b.n	801d26c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 801d528:	4681      	mov	r9, r0
 801d52a:	e6c8      	b.n	801d2be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 801d52c:	f1c1 0210 	rsb	r2, r1, #16
 801d530:	4341      	muls	r1, r0
 801d532:	fb09 1902 	mla	r9, r9, r2, r1
 801d536:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d53a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801d53e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801d542:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801d546:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d54a:	ea42 0909 	orr.w	r9, r2, r9
 801d54e:	fa1f f289 	uxth.w	r2, r9
 801d552:	e75b      	b.n	801d40c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801d554:	f8b7 c000 	ldrh.w	ip, [r7]
 801d558:	43db      	mvns	r3, r3
 801d55a:	ea4f 202c 	mov.w	r0, ip, asr #8
 801d55e:	fa5f fe83 	uxtb.w	lr, r3
 801d562:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d566:	fb00 f00e 	mul.w	r0, r0, lr
 801d56a:	1c41      	adds	r1, r0, #1
 801d56c:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801d570:	1211      	asrs	r1, r2, #8
 801d572:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d576:	f021 0107 	bic.w	r1, r1, #7
 801d57a:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 801d57e:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d582:	48d7      	ldr	r0, [pc, #860]	; (801d8e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d584:	fb05 f50e 	mul.w	r5, r5, lr
 801d588:	b2c9      	uxtb	r1, r1
 801d58a:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 801d58e:	1c69      	adds	r1, r5, #1
 801d590:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801d594:	10d1      	asrs	r1, r2, #3
 801d596:	f021 0103 	bic.w	r1, r1, #3
 801d59a:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 801d59e:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d5a2:	b2db      	uxtb	r3, r3
 801d5a4:	00c9      	lsls	r1, r1, #3
 801d5a6:	fb03 f30e 	mul.w	r3, r3, lr
 801d5aa:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d5ae:	4301      	orrs	r1, r0
 801d5b0:	1c58      	adds	r0, r3, #1
 801d5b2:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 801d5b6:	00d2      	lsls	r2, r2, #3
 801d5b8:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801d5bc:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801d5c0:	430a      	orrs	r2, r1
 801d5c2:	e726      	b.n	801d412 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 801d5c4:	f115 0e01 	adds.w	lr, r5, #1
 801d5c8:	f53f af24 	bmi.w	801d414 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d5cc:	4572      	cmp	r2, lr
 801d5ce:	f6ff af21 	blt.w	801d414 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d5d2:	f110 0e01 	adds.w	lr, r0, #1
 801d5d6:	f53f af1d 	bmi.w	801d414 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d5da:	4573      	cmp	r3, lr
 801d5dc:	f6ff af1a 	blt.w	801d414 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d5e0:	b21b      	sxth	r3, r3
 801d5e2:	b212      	sxth	r2, r2
 801d5e4:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 801d5e8:	e9cd 5002 	strd	r5, r0, [sp, #8]
 801d5ec:	9301      	str	r3, [sp, #4]
 801d5ee:	9200      	str	r2, [sp, #0]
 801d5f0:	4639      	mov	r1, r7
 801d5f2:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 801d5f6:	9811      	ldr	r0, [sp, #68]	; 0x44
 801d5f8:	f7ff fc24 	bl	801ce44 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801d5fc:	e70a      	b.n	801d414 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 801d5fe:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d600:	f3c3 3203 	ubfx	r2, r3, #12, #4
 801d604:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d606:	f3c3 3503 	ubfx	r5, r3, #12, #4
 801d60a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801d60c:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801d610:	9b1e      	ldr	r3, [sp, #120]	; 0x78
 801d612:	141f      	asrs	r7, r3, #16
 801d614:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d616:	141b      	asrs	r3, r3, #16
 801d618:	fb01 3707 	mla	r7, r1, r7, r3
 801d61c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801d61e:	fa1f fc82 	uxth.w	ip, r2
 801d622:	eb03 0a07 	add.w	sl, r3, r7
 801d626:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801d62a:	f813 9007 	ldrb.w	r9, [r3, r7]
 801d62e:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d632:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801d636:	b29b      	uxth	r3, r3
 801d638:	2d00      	cmp	r5, #0
 801d63a:	f000 80fe 	beq.w	801d83a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 801d63e:	f81a 4001 	ldrb.w	r4, [sl, r1]
 801d642:	940c      	str	r4, [sp, #48]	; 0x30
 801d644:	eb0a 0b01 	add.w	fp, sl, r1
 801d648:	fa1f fa85 	uxth.w	sl, r5
 801d64c:	fb0a fc0c 	mul.w	ip, sl, ip
 801d650:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 801d654:	fa1f fa8a 	uxth.w	sl, sl
 801d658:	eba0 000c 	sub.w	r0, r0, ip
 801d65c:	eba3 030a 	sub.w	r3, r3, sl
 801d660:	b280      	uxth	r0, r0
 801d662:	fb08 f000 	mul.w	r0, r8, r0
 801d666:	b29b      	uxth	r3, r3
 801d668:	fb09 0303 	mla	r3, r9, r3, r0
 801d66c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d66e:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801d672:	940d      	str	r4, [sp, #52]	; 0x34
 801d674:	fb0a 3300 	mla	r3, sl, r0, r3
 801d678:	fb0c 3304 	mla	r3, ip, r4, r3
 801d67c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801d680:	2b00      	cmp	r3, #0
 801d682:	f000 80cc 	beq.w	801d81e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d686:	9808      	ldr	r0, [sp, #32]
 801d688:	9c08      	ldr	r4, [sp, #32]
 801d68a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801d68e:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 801d692:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801d696:	f000 80d5 	beq.w	801d844 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 801d69a:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d69e:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801d6a2:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d6a6:	fb09 f707 	mul.w	r7, r9, r7
 801d6aa:	fb0a fc0c 	mul.w	ip, sl, ip
 801d6ae:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 801d6b2:	f107 0b20 	add.w	fp, r7, #32
 801d6b6:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d6ba:	44cc      	add	ip, r9
 801d6bc:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 801d6c0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801d6c4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d6c8:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 801d6cc:	ea4c 0909 	orr.w	r9, ip, r9
 801d6d0:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801d6d4:	8847      	ldrh	r7, [r0, #2]
 801d6d6:	d019      	beq.n	801d70c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 801d6d8:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801d6dc:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801d6e0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d6e4:	fb08 f807 	mul.w	r8, r8, r7
 801d6e8:	fb0a fc0c 	mul.w	ip, sl, ip
 801d6ec:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 801d6f0:	f108 0b20 	add.w	fp, r8, #32
 801d6f4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801d6f8:	44bc      	add	ip, r7
 801d6fa:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 801d6fe:	0a3f      	lsrs	r7, r7, #8
 801d700:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 801d704:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d708:	ea4c 0707 	orr.w	r7, ip, r7
 801d70c:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801d710:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 801d714:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 801d718:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801d71c:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d720:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801d724:	ea4c 0909 	orr.w	r9, ip, r9
 801d728:	ea4a 0707 	orr.w	r7, sl, r7
 801d72c:	2d00      	cmp	r5, #0
 801d72e:	f000 808b 	beq.w	801d848 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 801d732:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801d736:	3901      	subs	r1, #1
 801d738:	0049      	lsls	r1, r1, #1
 801d73a:	3102      	adds	r1, #2
 801d73c:	eb00 0c01 	add.w	ip, r0, r1
 801d740:	5a41      	ldrh	r1, [r0, r1]
 801d742:	980c      	ldr	r0, [sp, #48]	; 0x30
 801d744:	28ff      	cmp	r0, #255	; 0xff
 801d746:	d019      	beq.n	801d77c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 801d748:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 801d74a:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801d74e:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d752:	fb04 fa01 	mul.w	sl, r4, r1
 801d756:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d75a:	fb08 f800 	mul.w	r8, r8, r0
 801d75e:	f10a 0020 	add.w	r0, sl, #32
 801d762:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801d766:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801d76a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d76e:	4441      	add	r1, r8
 801d770:	0a00      	lsrs	r0, r0, #8
 801d772:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801d776:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d77a:	4301      	orrs	r1, r0
 801d77c:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801d77e:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 801d782:	2cff      	cmp	r4, #255	; 0xff
 801d784:	d01a      	beq.n	801d7bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 801d786:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801d78a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d78e:	fb04 fa00 	mul.w	sl, r4, r0
 801d792:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801d796:	fb08 f80c 	mul.w	r8, r8, ip
 801d79a:	f10a 0c20 	add.w	ip, sl, #32
 801d79e:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 801d7a2:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801d7a6:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801d7aa:	4440      	add	r0, r8
 801d7ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801d7b0:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 801d7b4:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801d7b8:	ea40 000c 	orr.w	r0, r0, ip
 801d7bc:	fb15 fc02 	smulbb	ip, r5, r2
 801d7c0:	ea4f 0cec 	mov.w	ip, ip, asr #3
 801d7c4:	f1c5 0810 	rsb	r8, r5, #16
 801d7c8:	eba8 0802 	sub.w	r8, r8, r2
 801d7cc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801d7d0:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 801d7d4:	437a      	muls	r2, r7
 801d7d6:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801d7da:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 801d7de:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801d7e2:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801d7e6:	fb09 2208 	mla	r2, r9, r8, r2
 801d7ea:	ea4a 0101 	orr.w	r1, sl, r1
 801d7ee:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 801d7f2:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801d7f6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801d7fa:	fb05 2201 	mla	r2, r5, r1, r2
 801d7fe:	ea4b 0000 	orr.w	r0, fp, r0
 801d802:	fb0c 2200 	mla	r2, ip, r0, r2
 801d806:	0d57      	lsrs	r7, r2, #21
 801d808:	0952      	lsrs	r2, r2, #5
 801d80a:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801d80e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d812:	433a      	orrs	r2, r7
 801d814:	2bff      	cmp	r3, #255	; 0xff
 801d816:	b292      	uxth	r2, r2
 801d818:	d127      	bne.n	801d86a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 801d81a:	f8ae 2000 	strh.w	r2, [lr]
 801d81e:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801d820:	9a1f      	ldr	r2, [sp, #124]	; 0x7c
 801d822:	4413      	add	r3, r2
 801d824:	931d      	str	r3, [sp, #116]	; 0x74
 801d826:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 801d828:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801d82a:	441a      	add	r2, r3
 801d82c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801d82e:	921e      	str	r2, [sp, #120]	; 0x78
 801d830:	3b01      	subs	r3, #1
 801d832:	f10e 0e02 	add.w	lr, lr, #2
 801d836:	930f      	str	r3, [sp, #60]	; 0x3c
 801d838:	e627      	b.n	801d48a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801d83a:	fb08 f000 	mul.w	r0, r8, r0
 801d83e:	fb09 0303 	mla	r3, r9, r3, r0
 801d842:	e71b      	b.n	801d67c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 801d844:	46b9      	mov	r9, r7
 801d846:	e743      	b.n	801d6d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 801d848:	f1c2 0110 	rsb	r1, r2, #16
 801d84c:	437a      	muls	r2, r7
 801d84e:	fb09 2901 	mla	r9, r9, r1, r2
 801d852:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801d856:	ea4f 5059 	mov.w	r0, r9, lsr #21
 801d85a:	ea4f 1259 	mov.w	r2, r9, lsr #5
 801d85e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801d862:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d866:	4302      	orrs	r2, r0
 801d868:	e7d4      	b.n	801d814 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 801d86a:	f8be 7000 	ldrh.w	r7, [lr]
 801d86e:	4c1c      	ldr	r4, [pc, #112]	; (801d8e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 801d870:	43db      	mvns	r3, r3
 801d872:	1238      	asrs	r0, r7, #8
 801d874:	fa5f fc83 	uxtb.w	ip, r3
 801d878:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801d87c:	10fd      	asrs	r5, r7, #3
 801d87e:	fb00 f00c 	mul.w	r0, r0, ip
 801d882:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 801d886:	fb05 f10c 	mul.w	r1, r5, ip
 801d88a:	1c45      	adds	r5, r0, #1
 801d88c:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d890:	1215      	asrs	r5, r2, #8
 801d892:	f025 0507 	bic.w	r5, r5, #7
 801d896:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801d89a:	1c4d      	adds	r5, r1, #1
 801d89c:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801d8a0:	10d1      	asrs	r1, r2, #3
 801d8a2:	f021 0103 	bic.w	r1, r1, #3
 801d8a6:	00fb      	lsls	r3, r7, #3
 801d8a8:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801d8ac:	b2db      	uxtb	r3, r3
 801d8ae:	b2c0      	uxtb	r0, r0
 801d8b0:	00c9      	lsls	r1, r1, #3
 801d8b2:	fb03 f30c 	mul.w	r3, r3, ip
 801d8b6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801d8ba:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801d8be:	4308      	orrs	r0, r1
 801d8c0:	1c59      	adds	r1, r3, #1
 801d8c2:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801d8c6:	00d2      	lsls	r2, r2, #3
 801d8c8:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801d8cc:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801d8d0:	4318      	orrs	r0, r3
 801d8d2:	f8ae 0000 	strh.w	r0, [lr]
 801d8d6:	e7a2      	b.n	801d81e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 801d8d8:	b013      	add	sp, #76	; 0x4c
 801d8da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d8de:	bf00      	nop
 801d8e0:	fffff800 	.word	0xfffff800

0801d8e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 801d8e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801d8e8:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	; 0x24
 801d8ec:	fb05 4c03 	mla	ip, r5, r3, r4
 801d8f0:	2d00      	cmp	r5, #0
 801d8f2:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 801d8f6:	f89d 902c 	ldrb.w	r9, [sp, #44]	; 0x2c
 801d8fa:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801d8fe:	f89d 6034 	ldrb.w	r6, [sp, #52]	; 0x34
 801d902:	8808      	ldrh	r0, [r1, #0]
 801d904:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 801d908:	f2c0 80a7 	blt.w	801da5a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d90c:	45aa      	cmp	sl, r5
 801d90e:	f340 80a4 	ble.w	801da5a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 801d912:	2c00      	cmp	r4, #0
 801d914:	f2c0 809f 	blt.w	801da56 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d918:	42a3      	cmp	r3, r4
 801d91a:	f340 809c 	ble.w	801da56 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 801d91e:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 801d922:	1c62      	adds	r2, r4, #1
 801d924:	f100 809c 	bmi.w	801da60 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d928:	4293      	cmp	r3, r2
 801d92a:	f340 8099 	ble.w	801da60 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d92e:	f1b9 0f00 	cmp.w	r9, #0
 801d932:	f000 8095 	beq.w	801da60 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 801d936:	f8be c002 	ldrh.w	ip, [lr, #2]
 801d93a:	3501      	adds	r5, #1
 801d93c:	f100 8094 	bmi.w	801da68 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d940:	45aa      	cmp	sl, r5
 801d942:	f340 8091 	ble.w	801da68 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d946:	2f00      	cmp	r7, #0
 801d948:	f000 808e 	beq.w	801da68 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 801d94c:	2c00      	cmp	r4, #0
 801d94e:	f2c0 8089 	blt.w	801da64 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d952:	42a3      	cmp	r3, r4
 801d954:	f340 8086 	ble.w	801da64 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 801d958:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 801d95c:	3401      	adds	r4, #1
 801d95e:	f100 8086 	bmi.w	801da6e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d962:	42a3      	cmp	r3, r4
 801d964:	f340 8083 	ble.w	801da6e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d968:	f1b9 0f00 	cmp.w	r9, #0
 801d96c:	d07f      	beq.n	801da6e <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 801d96e:	3301      	adds	r3, #1
 801d970:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 801d974:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801d978:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d97c:	f428 68fc 	bic.w	r8, r8, #2016	; 0x7e0
 801d980:	fb19 fe07 	smulbb	lr, r9, r7
 801d984:	ea44 0808 	orr.w	r8, r4, r8
 801d988:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801d98c:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801d990:	f1c7 0210 	rsb	r2, r7, #16
 801d994:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 801d998:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801d99c:	ea44 0c0c 	orr.w	ip, r4, ip
 801d9a0:	eba2 0209 	sub.w	r2, r2, r9
 801d9a4:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801d9a8:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801d9ac:	fb04 f40c 	mul.w	r4, r4, ip
 801d9b0:	fb02 4808 	mla	r8, r2, r8, r4
 801d9b4:	041a      	lsls	r2, r3, #16
 801d9b6:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d9ba:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801d9be:	4313      	orrs	r3, r2
 801d9c0:	042a      	lsls	r2, r5, #16
 801d9c2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801d9c6:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 801d9ca:	fb0e 8303 	mla	r3, lr, r3, r8
 801d9ce:	432a      	orrs	r2, r5
 801d9d0:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801d9d4:	fb07 3202 	mla	r2, r7, r2, r3
 801d9d8:	0d53      	lsrs	r3, r2, #21
 801d9da:	0952      	lsrs	r2, r2, #5
 801d9dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801d9e0:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801d9e4:	431a      	orrs	r2, r3
 801d9e6:	b293      	uxth	r3, r2
 801d9e8:	b2b4      	uxth	r4, r6
 801d9ea:	1202      	asrs	r2, r0, #8
 801d9ec:	43f6      	mvns	r6, r6
 801d9ee:	b2f6      	uxtb	r6, r6
 801d9f0:	121d      	asrs	r5, r3, #8
 801d9f2:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801d9f6:	fb12 f206 	smulbb	r2, r2, r6
 801d9fa:	10c7      	asrs	r7, r0, #3
 801d9fc:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801da00:	00c0      	lsls	r0, r0, #3
 801da02:	fb05 2504 	mla	r5, r5, r4, r2
 801da06:	b2c0      	uxtb	r0, r0
 801da08:	10da      	asrs	r2, r3, #3
 801da0a:	00db      	lsls	r3, r3, #3
 801da0c:	b2db      	uxtb	r3, r3
 801da0e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801da12:	fb10 f006 	smulbb	r0, r0, r6
 801da16:	b2ad      	uxth	r5, r5
 801da18:	fb03 0004 	mla	r0, r3, r4, r0
 801da1c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801da20:	fb17 f706 	smulbb	r7, r7, r6
 801da24:	b280      	uxth	r0, r0
 801da26:	1c6b      	adds	r3, r5, #1
 801da28:	fb02 7204 	mla	r2, r2, r4, r7
 801da2c:	b292      	uxth	r2, r2
 801da2e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801da32:	1c43      	adds	r3, r0, #1
 801da34:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801da38:	1c50      	adds	r0, r2, #1
 801da3a:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801da3e:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801da42:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801da46:	0952      	lsrs	r2, r2, #5
 801da48:	432b      	orrs	r3, r5
 801da4a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801da4e:	4313      	orrs	r3, r2
 801da50:	800b      	strh	r3, [r1, #0]
 801da52:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801da56:	4680      	mov	r8, r0
 801da58:	e763      	b.n	801d922 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 801da5a:	4684      	mov	ip, r0
 801da5c:	4680      	mov	r8, r0
 801da5e:	e76c      	b.n	801d93a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801da60:	4684      	mov	ip, r0
 801da62:	e76a      	b.n	801d93a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 801da64:	4605      	mov	r5, r0
 801da66:	e779      	b.n	801d95c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 801da68:	4603      	mov	r3, r0
 801da6a:	4605      	mov	r5, r0
 801da6c:	e782      	b.n	801d974 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 801da6e:	4603      	mov	r3, r0
 801da70:	e780      	b.n	801d974 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

0801da72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801da72:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801da76:	b093      	sub	sp, #76	; 0x4c
 801da78:	461d      	mov	r5, r3
 801da7a:	9210      	str	r2, [sp, #64]	; 0x40
 801da7c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 801da7e:	f89d 2094 	ldrb.w	r2, [sp, #148]	; 0x94
 801da82:	920b      	str	r2, [sp, #44]	; 0x2c
 801da84:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	; 0x88
 801da88:	910a      	str	r1, [sp, #40]	; 0x28
 801da8a:	6859      	ldr	r1, [r3, #4]
 801da8c:	681b      	ldr	r3, [r3, #0]
 801da8e:	9011      	str	r0, [sp, #68]	; 0x44
 801da90:	fb01 2707 	mla	r7, r1, r7, r2
 801da94:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 801da98:	9307      	str	r3, [sp, #28]
 801da9a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801da9c:	681b      	ldr	r3, [r3, #0]
 801da9e:	9309      	str	r3, [sp, #36]	; 0x24
 801daa0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801daa2:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801daa6:	43db      	mvns	r3, r3
 801daa8:	b2db      	uxtb	r3, r3
 801daaa:	9308      	str	r3, [sp, #32]
 801daac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801daae:	2b00      	cmp	r3, #0
 801dab0:	dc03      	bgt.n	801daba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801dab2:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801dab4:	2b00      	cmp	r3, #0
 801dab6:	f340 8203 	ble.w	801dec0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801daba:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dabc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dac0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801dac4:	1e48      	subs	r0, r1, #1
 801dac6:	f102 3cff 	add.w	ip, r2, #4294967295
 801daca:	2d00      	cmp	r5, #0
 801dacc:	f340 80da 	ble.w	801dc84 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801dad0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801dad4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801dad8:	d406      	bmi.n	801dae8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dada:	4586      	cmp	lr, r0
 801dadc:	da04      	bge.n	801dae8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dade:	2b00      	cmp	r3, #0
 801dae0:	db02      	blt.n	801dae8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 801dae2:	4563      	cmp	r3, ip
 801dae4:	f2c0 80cf 	blt.w	801dc86 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801dae8:	f11e 0e01 	adds.w	lr, lr, #1
 801daec:	f100 80c1 	bmi.w	801dc72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801daf0:	4571      	cmp	r1, lr
 801daf2:	f2c0 80be 	blt.w	801dc72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801daf6:	3301      	adds	r3, #1
 801daf8:	f100 80bb 	bmi.w	801dc72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801dafc:	429a      	cmp	r2, r3
 801dafe:	f2c0 80b8 	blt.w	801dc72 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801db02:	f8dd 801c 	ldr.w	r8, [sp, #28]
 801db06:	46a9      	mov	r9, r5
 801db08:	f1b9 0f00 	cmp.w	r9, #0
 801db0c:	f340 80d8 	ble.w	801dcc0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801db10:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801db12:	1421      	asrs	r1, r4, #16
 801db14:	ea4f 4026 	mov.w	r0, r6, asr #16
 801db18:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801db1c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801db20:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801db24:	f100 8111 	bmi.w	801dd4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801db28:	f10e 3aff 	add.w	sl, lr, #4294967295
 801db2c:	4551      	cmp	r1, sl
 801db2e:	f280 810c 	bge.w	801dd4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801db32:	2800      	cmp	r0, #0
 801db34:	f2c0 8109 	blt.w	801dd4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801db38:	f103 3aff 	add.w	sl, r3, #4294967295
 801db3c:	4550      	cmp	r0, sl
 801db3e:	f280 8104 	bge.w	801dd4a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 801db42:	fa0f f38e 	sxth.w	r3, lr
 801db46:	fb00 1103 	mla	r1, r0, r3, r1
 801db4a:	9809      	ldr	r0, [sp, #36]	; 0x24
 801db4c:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801db50:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 801db54:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 801db58:	f1bc 0f00 	cmp.w	ip, #0
 801db5c:	d007      	beq.n	801db6e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 801db5e:	005b      	lsls	r3, r3, #1
 801db60:	eb0a 0003 	add.w	r0, sl, r3
 801db64:	f83a 3003 	ldrh.w	r3, [sl, r3]
 801db68:	930c      	str	r3, [sp, #48]	; 0x30
 801db6a:	8843      	ldrh	r3, [r0, #2]
 801db6c:	930d      	str	r3, [sp, #52]	; 0x34
 801db6e:	ea4f 400e 	mov.w	r0, lr, lsl #16
 801db72:	fb12 f30c 	smulbb	r3, r2, ip
 801db76:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 801db7a:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 801db7e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801db82:	10db      	asrs	r3, r3, #3
 801db84:	ea40 000e 	orr.w	r0, r0, lr
 801db88:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801db8c:	f1cc 0e10 	rsb	lr, ip, #16
 801db90:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801db94:	ebae 0e02 	sub.w	lr, lr, r2
 801db98:	ea4a 0101 	orr.w	r1, sl, r1
 801db9c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801dba0:	4351      	muls	r1, r2
 801dba2:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801dba4:	9f08      	ldr	r7, [sp, #32]
 801dba6:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801dbaa:	fb0e 1e00 	mla	lr, lr, r0, r1
 801dbae:	0410      	lsls	r0, r2, #16
 801dbb0:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801dbb4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801dbb8:	4310      	orrs	r0, r2
 801dbba:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801dbbc:	990c      	ldr	r1, [sp, #48]	; 0x30
 801dbbe:	0412      	lsls	r2, r2, #16
 801dbc0:	fb03 e000 	mla	r0, r3, r0, lr
 801dbc4:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801dbc8:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801dbcc:	ea42 020e 	orr.w	r2, r2, lr
 801dbd0:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801dbd4:	fb03 0302 	mla	r3, r3, r2, r0
 801dbd8:	0d5a      	lsrs	r2, r3, #21
 801dbda:	095b      	lsrs	r3, r3, #5
 801dbdc:	f8b8 0000 	ldrh.w	r0, [r8]
 801dbe0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801dbe4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801dbe8:	4313      	orrs	r3, r2
 801dbea:	b29b      	uxth	r3, r3
 801dbec:	1201      	asrs	r1, r0, #8
 801dbee:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 801dbf2:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801dbf6:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801dbfa:	fb11 f107 	smulbb	r1, r1, r7
 801dbfe:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801dc02:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801dc06:	00c0      	lsls	r0, r0, #3
 801dc08:	fb0c 1c02 	mla	ip, ip, r2, r1
 801dc0c:	b2c0      	uxtb	r0, r0
 801dc0e:	10d9      	asrs	r1, r3, #3
 801dc10:	00db      	lsls	r3, r3, #3
 801dc12:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 801dc16:	b2db      	uxtb	r3, r3
 801dc18:	fb10 f007 	smulbb	r0, r0, r7
 801dc1c:	fa1f fc8c 	uxth.w	ip, ip
 801dc20:	fb03 0302 	mla	r3, r3, r2, r0
 801dc24:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801dc28:	fb1e fe07 	smulbb	lr, lr, r7
 801dc2c:	fb01 e102 	mla	r1, r1, r2, lr
 801dc30:	b29a      	uxth	r2, r3
 801dc32:	f10c 0301 	add.w	r3, ip, #1
 801dc36:	b289      	uxth	r1, r1
 801dc38:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801dc3c:	1c53      	adds	r3, r2, #1
 801dc3e:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801dc42:	1c4a      	adds	r2, r1, #1
 801dc44:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801dc48:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801dc4c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801dc50:	0949      	lsrs	r1, r1, #5
 801dc52:	ea43 030c 	orr.w	r3, r3, ip
 801dc56:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801dc5a:	430b      	orrs	r3, r1
 801dc5c:	f8a8 3000 	strh.w	r3, [r8]
 801dc60:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801dc62:	441c      	add	r4, r3
 801dc64:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dc66:	f108 0802 	add.w	r8, r8, #2
 801dc6a:	441e      	add	r6, r3
 801dc6c:	f109 39ff 	add.w	r9, r9, #4294967295
 801dc70:	e74a      	b.n	801db08 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 801dc72:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801dc74:	441c      	add	r4, r3
 801dc76:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dc78:	441e      	add	r6, r3
 801dc7a:	9b07      	ldr	r3, [sp, #28]
 801dc7c:	3302      	adds	r3, #2
 801dc7e:	3d01      	subs	r5, #1
 801dc80:	9307      	str	r3, [sp, #28]
 801dc82:	e722      	b.n	801daca <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801dc84:	d022      	beq.n	801dccc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 801dc86:	981f      	ldr	r0, [sp, #124]	; 0x7c
 801dc88:	1e6b      	subs	r3, r5, #1
 801dc8a:	fb00 4003 	mla	r0, r0, r3, r4
 801dc8e:	1400      	asrs	r0, r0, #16
 801dc90:	f53f af37 	bmi.w	801db02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801dc94:	3901      	subs	r1, #1
 801dc96:	4288      	cmp	r0, r1
 801dc98:	f6bf af33 	bge.w	801db02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801dc9c:	9920      	ldr	r1, [sp, #128]	; 0x80
 801dc9e:	fb01 6303 	mla	r3, r1, r3, r6
 801dca2:	141b      	asrs	r3, r3, #16
 801dca4:	f53f af2d 	bmi.w	801db02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801dca8:	3a01      	subs	r2, #1
 801dcaa:	4293      	cmp	r3, r2
 801dcac:	f6bf af29 	bge.w	801db02 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 801dcb0:	f8dd 901c 	ldr.w	r9, [sp, #28]
 801dcb4:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 801dcb8:	46a8      	mov	r8, r5
 801dcba:	f1b8 0f00 	cmp.w	r8, #0
 801dcbe:	dc5e      	bgt.n	801dd7e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 801dcc0:	9b07      	ldr	r3, [sp, #28]
 801dcc2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801dcc6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801dcca:	9307      	str	r3, [sp, #28]
 801dccc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dcce:	2b00      	cmp	r3, #0
 801dcd0:	f340 80f6 	ble.w	801dec0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 801dcd4:	ee30 0a04 	vadd.f32	s0, s0, s8
 801dcd8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801dcdc:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801dce0:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dce2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801dce6:	ee31 1a05 	vadd.f32	s2, s2, s10
 801dcea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801dcee:	eef0 6a62 	vmov.f32	s13, s5
 801dcf2:	ee61 7a27 	vmul.f32	s15, s2, s15
 801dcf6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dcfa:	ee77 2a62 	vsub.f32	s5, s14, s5
 801dcfe:	ee16 4a90 	vmov	r4, s13
 801dd02:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801dd06:	eef0 6a43 	vmov.f32	s13, s6
 801dd0a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801dd0e:	ee12 2a90 	vmov	r2, s5
 801dd12:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801dd16:	fb92 f3f3 	sdiv	r3, r2, r3
 801dd1a:	ee13 2a10 	vmov	r2, s6
 801dd1e:	931f      	str	r3, [sp, #124]	; 0x7c
 801dd20:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dd22:	fb92 f3f3 	sdiv	r3, r2, r3
 801dd26:	9320      	str	r3, [sp, #128]	; 0x80
 801dd28:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801dd2a:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801dd2c:	3b01      	subs	r3, #1
 801dd2e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801dd32:	930a      	str	r3, [sp, #40]	; 0x28
 801dd34:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801dd36:	ee16 6a90 	vmov	r6, s13
 801dd3a:	bf14      	ite	ne
 801dd3c:	461d      	movne	r5, r3
 801dd3e:	4615      	moveq	r5, r2
 801dd40:	eeb0 3a67 	vmov.f32	s6, s15
 801dd44:	eef0 2a47 	vmov.f32	s5, s14
 801dd48:	e6b0      	b.n	801daac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801dd4a:	f111 0a01 	adds.w	sl, r1, #1
 801dd4e:	d487      	bmi.n	801dc60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801dd50:	45d6      	cmp	lr, sl
 801dd52:	db85      	blt.n	801dc60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801dd54:	f110 0a01 	adds.w	sl, r0, #1
 801dd58:	d482      	bmi.n	801dc60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801dd5a:	4553      	cmp	r3, sl
 801dd5c:	db80      	blt.n	801dc60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801dd5e:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801dd60:	9101      	str	r1, [sp, #4]
 801dd62:	b21b      	sxth	r3, r3
 801dd64:	e9cd 0202 	strd	r0, r2, [sp, #8]
 801dd68:	9300      	str	r3, [sp, #0]
 801dd6a:	e9cd c704 	strd	ip, r7, [sp, #16]
 801dd6e:	fa0f f38e 	sxth.w	r3, lr
 801dd72:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801dd74:	9811      	ldr	r0, [sp, #68]	; 0x44
 801dd76:	4641      	mov	r1, r8
 801dd78:	f7ff fdb4 	bl	801d8e4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 801dd7c:	e770      	b.n	801dc60 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 801dd7e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801dd80:	9f09      	ldr	r7, [sp, #36]	; 0x24
 801dd82:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dd86:	1430      	asrs	r0, r6, #16
 801dd88:	1423      	asrs	r3, r4, #16
 801dd8a:	fb01 3000 	mla	r0, r1, r0, r3
 801dd8e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801dd90:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 801dd94:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 801dd98:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801dd9c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801dda0:	8858      	ldrh	r0, [r3, #2]
 801dda2:	f1be 0f00 	cmp.w	lr, #0
 801dda6:	d00b      	beq.n	801ddc0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 801dda8:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801ddac:	3901      	subs	r1, #1
 801ddae:	0049      	lsls	r1, r1, #1
 801ddb0:	3102      	adds	r1, #2
 801ddb2:	eb03 0b01 	add.w	fp, r3, r1
 801ddb6:	5a5b      	ldrh	r3, [r3, r1]
 801ddb8:	930e      	str	r3, [sp, #56]	; 0x38
 801ddba:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801ddbe:	930f      	str	r3, [sp, #60]	; 0x3c
 801ddc0:	ea4f 410c 	mov.w	r1, ip, lsl #16
 801ddc4:	fb12 f30e 	smulbb	r3, r2, lr
 801ddc8:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801ddcc:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 801ddd0:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 801ddd4:	10db      	asrs	r3, r3, #3
 801ddd6:	ea41 010c 	orr.w	r1, r1, ip
 801ddda:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801ddde:	f1ce 0c10 	rsb	ip, lr, #16
 801dde2:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dde6:	ebac 0c02 	sub.w	ip, ip, r2
 801ddea:	ea4b 0000 	orr.w	r0, fp, r0
 801ddee:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801ddf2:	4350      	muls	r0, r2
 801ddf4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ddf6:	9f08      	ldr	r7, [sp, #32]
 801ddf8:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801ddfc:	fb0c 0c01 	mla	ip, ip, r1, r0
 801de00:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801de04:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 801de08:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 801de0a:	980e      	ldr	r0, [sp, #56]	; 0x38
 801de0c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801de10:	0412      	lsls	r2, r2, #16
 801de12:	ea4b 0101 	orr.w	r1, fp, r1
 801de16:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801de1a:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801de1e:	fb03 c101 	mla	r1, r3, r1, ip
 801de22:	4302      	orrs	r2, r0
 801de24:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801de28:	fb03 1202 	mla	r2, r3, r2, r1
 801de2c:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 801de30:	0952      	lsrs	r2, r2, #5
 801de32:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 801de36:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801de3a:	f8b9 2000 	ldrh.w	r2, [r9]
 801de3e:	ea4b 0303 	orr.w	r3, fp, r3
 801de42:	b29b      	uxth	r3, r3
 801de44:	1211      	asrs	r1, r2, #8
 801de46:	1218      	asrs	r0, r3, #8
 801de48:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801de4c:	fb11 f107 	smulbb	r1, r1, r7
 801de50:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801de54:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801de58:	00d2      	lsls	r2, r2, #3
 801de5a:	fb00 100a 	mla	r0, r0, sl, r1
 801de5e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 801de62:	10d9      	asrs	r1, r3, #3
 801de64:	b2d2      	uxtb	r2, r2
 801de66:	00db      	lsls	r3, r3, #3
 801de68:	fb1c fc07 	smulbb	ip, ip, r7
 801de6c:	fb12 f207 	smulbb	r2, r2, r7
 801de70:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801de74:	b2db      	uxtb	r3, r3
 801de76:	b280      	uxth	r0, r0
 801de78:	fb01 c10a 	mla	r1, r1, sl, ip
 801de7c:	fb03 230a 	mla	r3, r3, sl, r2
 801de80:	b29b      	uxth	r3, r3
 801de82:	b289      	uxth	r1, r1
 801de84:	1c42      	adds	r2, r0, #1
 801de86:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801de8a:	f101 0c01 	add.w	ip, r1, #1
 801de8e:	1c5a      	adds	r2, r3, #1
 801de90:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801de94:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 801de98:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 801de9a:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801de9e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801dea2:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801dea6:	4310      	orrs	r0, r2
 801dea8:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801deac:	441c      	add	r4, r3
 801deae:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801deb0:	ea40 000c 	orr.w	r0, r0, ip
 801deb4:	f829 0b02 	strh.w	r0, [r9], #2
 801deb8:	441e      	add	r6, r3
 801deba:	f108 38ff 	add.w	r8, r8, #4294967295
 801debe:	e6fc      	b.n	801dcba <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 801dec0:	b013      	add	sp, #76	; 0x4c
 801dec2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801dec6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 801dec6:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801deca:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 801dece:	fb0e 4703 	mla	r7, lr, r3, r4
 801ded2:	f1be 0f00 	cmp.w	lr, #0
 801ded6:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 801deda:	f89d 5028 	ldrb.w	r5, [sp, #40]	; 0x28
 801dede:	f89d 602c 	ldrb.w	r6, [sp, #44]	; 0x2c
 801dee2:	8808      	ldrh	r0, [r1, #0]
 801dee4:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 801dee8:	db60      	blt.n	801dfac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801deea:	45f1      	cmp	r9, lr
 801deec:	dd5e      	ble.n	801dfac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 801deee:	2c00      	cmp	r4, #0
 801def0:	db5a      	blt.n	801dfa8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801def2:	42a3      	cmp	r3, r4
 801def4:	dd58      	ble.n	801dfa8 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 801def6:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 801defa:	1c62      	adds	r2, r4, #1
 801defc:	d459      	bmi.n	801dfb2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801defe:	4293      	cmp	r3, r2
 801df00:	dd57      	ble.n	801dfb2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801df02:	2d00      	cmp	r5, #0
 801df04:	d055      	beq.n	801dfb2 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 801df06:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 801df0a:	f11e 0e01 	adds.w	lr, lr, #1
 801df0e:	d454      	bmi.n	801dfba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801df10:	45f1      	cmp	r9, lr
 801df12:	dd52      	ble.n	801dfba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801df14:	2e00      	cmp	r6, #0
 801df16:	d050      	beq.n	801dfba <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 801df18:	2c00      	cmp	r4, #0
 801df1a:	db4c      	blt.n	801dfb6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801df1c:	42a3      	cmp	r3, r4
 801df1e:	dd4a      	ble.n	801dfb6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 801df20:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 801df24:	3401      	adds	r4, #1
 801df26:	d405      	bmi.n	801df34 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801df28:	42a3      	cmp	r3, r4
 801df2a:	dd03      	ble.n	801df34 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801df2c:	b115      	cbz	r5, 801df34 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 801df2e:	3301      	adds	r3, #1
 801df30:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 801df34:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801df38:	fb15 f406 	smulbb	r4, r5, r6
 801df3c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801df40:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801df44:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801df48:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801df4c:	ea43 0c0c 	orr.w	ip, r3, ip
 801df50:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801df54:	f1c6 0310 	rsb	r3, r6, #16
 801df58:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 801df5c:	1b5b      	subs	r3, r3, r5
 801df5e:	ea4e 0707 	orr.w	r7, lr, r7
 801df62:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801df66:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801df6a:	437d      	muls	r5, r7
 801df6c:	fb03 5c0c 	mla	ip, r3, ip, r5
 801df70:	0403      	lsls	r3, r0, #16
 801df72:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801df76:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801df7a:	4318      	orrs	r0, r3
 801df7c:	0413      	lsls	r3, r2, #16
 801df7e:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801df82:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801df86:	4313      	orrs	r3, r2
 801df88:	fb04 c000 	mla	r0, r4, r0, ip
 801df8c:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801df90:	fb06 0003 	mla	r0, r6, r3, r0
 801df94:	0d43      	lsrs	r3, r0, #21
 801df96:	0940      	lsrs	r0, r0, #5
 801df98:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801df9c:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801dfa0:	4318      	orrs	r0, r3
 801dfa2:	8008      	strh	r0, [r1, #0]
 801dfa4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801dfa8:	4684      	mov	ip, r0
 801dfaa:	e7a6      	b.n	801defa <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 801dfac:	4607      	mov	r7, r0
 801dfae:	4684      	mov	ip, r0
 801dfb0:	e7ab      	b.n	801df0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801dfb2:	4607      	mov	r7, r0
 801dfb4:	e7a9      	b.n	801df0a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 801dfb6:	4602      	mov	r2, r0
 801dfb8:	e7b4      	b.n	801df24 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 801dfba:	4602      	mov	r2, r0
 801dfbc:	e7ba      	b.n	801df34 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

0801dfbe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801dfbe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801dfc2:	b08f      	sub	sp, #60	; 0x3c
 801dfc4:	461d      	mov	r5, r3
 801dfc6:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 801dfc8:	920c      	str	r2, [sp, #48]	; 0x30
 801dfca:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	; 0x78
 801dfce:	9107      	str	r1, [sp, #28]
 801dfd0:	6859      	ldr	r1, [r3, #4]
 801dfd2:	681b      	ldr	r3, [r3, #0]
 801dfd4:	900d      	str	r0, [sp, #52]	; 0x34
 801dfd6:	fb01 2707 	mla	r7, r1, r7, r2
 801dfda:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 801dfde:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dfe0:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	; 0x64
 801dfe4:	f8d3 8000 	ldr.w	r8, [r3]
 801dfe8:	9b07      	ldr	r3, [sp, #28]
 801dfea:	2b00      	cmp	r3, #0
 801dfec:	dc03      	bgt.n	801dff6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801dfee:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801dff0:	2b00      	cmp	r3, #0
 801dff2:	f340 8181 	ble.w	801e2f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801dff6:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801dff8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801dffc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e000:	1e48      	subs	r0, r1, #1
 801e002:	f102 3cff 	add.w	ip, r2, #4294967295
 801e006:	2d00      	cmp	r5, #0
 801e008:	f340 809b 	ble.w	801e142 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 801e00c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801e010:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e014:	d406      	bmi.n	801e024 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e016:	4586      	cmp	lr, r0
 801e018:	da04      	bge.n	801e024 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e01a:	2b00      	cmp	r3, #0
 801e01c:	db02      	blt.n	801e024 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 801e01e:	4563      	cmp	r3, ip
 801e020:	f2c0 8090 	blt.w	801e144 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801e024:	f11e 0e01 	adds.w	lr, lr, #1
 801e028:	f100 8084 	bmi.w	801e134 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e02c:	4571      	cmp	r1, lr
 801e02e:	f2c0 8081 	blt.w	801e134 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e032:	3301      	adds	r3, #1
 801e034:	d47e      	bmi.n	801e134 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e036:	429a      	cmp	r2, r3
 801e038:	db7c      	blt.n	801e134 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 801e03a:	46aa      	mov	sl, r5
 801e03c:	46b9      	mov	r9, r7
 801e03e:	f1ba 0f00 	cmp.w	sl, #0
 801e042:	f340 8099 	ble.w	801e178 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 801e046:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e048:	1421      	asrs	r1, r4, #16
 801e04a:	ea4f 4026 	mov.w	r0, r6, asr #16
 801e04e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e052:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801e056:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 801e05a:	f100 80d0 	bmi.w	801e1fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e05e:	f10e 3bff 	add.w	fp, lr, #4294967295
 801e062:	4559      	cmp	r1, fp
 801e064:	f280 80cb 	bge.w	801e1fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e068:	2800      	cmp	r0, #0
 801e06a:	f2c0 80c8 	blt.w	801e1fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e06e:	f103 3bff 	add.w	fp, r3, #4294967295
 801e072:	4558      	cmp	r0, fp
 801e074:	f280 80c3 	bge.w	801e1fe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 801e078:	fa0f fe8e 	sxth.w	lr, lr
 801e07c:	fb00 110e 	mla	r1, r0, lr, r1
 801e080:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801e084:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 801e088:	8841      	ldrh	r1, [r0, #2]
 801e08a:	f1bc 0f00 	cmp.w	ip, #0
 801e08e:	d00b      	beq.n	801e0a8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 801e090:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 801e094:	3b01      	subs	r3, #1
 801e096:	005b      	lsls	r3, r3, #1
 801e098:	3302      	adds	r3, #2
 801e09a:	eb00 0e03 	add.w	lr, r0, r3
 801e09e:	5ac3      	ldrh	r3, [r0, r3]
 801e0a0:	9308      	str	r3, [sp, #32]
 801e0a2:	f8be 3002 	ldrh.w	r3, [lr, #2]
 801e0a6:	9309      	str	r3, [sp, #36]	; 0x24
 801e0a8:	ea4f 400b 	mov.w	r0, fp, lsl #16
 801e0ac:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e0b0:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 801e0b4:	ea40 000b 	orr.w	r0, r0, fp
 801e0b8:	fb12 f30c 	smulbb	r3, r2, ip
 801e0bc:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e0c0:	10db      	asrs	r3, r3, #3
 801e0c2:	f1cc 0e10 	rsb	lr, ip, #16
 801e0c6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e0ca:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801e0ce:	ebae 0e02 	sub.w	lr, lr, r2
 801e0d2:	ea4b 0101 	orr.w	r1, fp, r1
 801e0d6:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e0da:	4351      	muls	r1, r2
 801e0dc:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801e0de:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 801e0e2:	fb0e 1e00 	mla	lr, lr, r0, r1
 801e0e6:	0410      	lsls	r0, r2, #16
 801e0e8:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e0ec:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801e0f0:	4310      	orrs	r0, r2
 801e0f2:	9a08      	ldr	r2, [sp, #32]
 801e0f4:	9908      	ldr	r1, [sp, #32]
 801e0f6:	0412      	lsls	r2, r2, #16
 801e0f8:	fb03 e000 	mla	r0, r3, r0, lr
 801e0fc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e100:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801e104:	ea42 020e 	orr.w	r2, r2, lr
 801e108:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 801e10c:	fb03 0302 	mla	r3, r3, r2, r0
 801e110:	0d5a      	lsrs	r2, r3, #21
 801e112:	095b      	lsrs	r3, r3, #5
 801e114:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e118:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801e11c:	4313      	orrs	r3, r2
 801e11e:	f8a9 3000 	strh.w	r3, [r9]
 801e122:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801e124:	441c      	add	r4, r3
 801e126:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e128:	f109 0902 	add.w	r9, r9, #2
 801e12c:	441e      	add	r6, r3
 801e12e:	f10a 3aff 	add.w	sl, sl, #4294967295
 801e132:	e784      	b.n	801e03e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 801e134:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801e136:	441c      	add	r4, r3
 801e138:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e13a:	3d01      	subs	r5, #1
 801e13c:	441e      	add	r6, r3
 801e13e:	3702      	adds	r7, #2
 801e140:	e761      	b.n	801e006 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801e142:	d01d      	beq.n	801e180 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 801e144:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801e146:	1e6b      	subs	r3, r5, #1
 801e148:	fb00 4003 	mla	r0, r0, r3, r4
 801e14c:	1400      	asrs	r0, r0, #16
 801e14e:	f53f af74 	bmi.w	801e03a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e152:	3901      	subs	r1, #1
 801e154:	4288      	cmp	r0, r1
 801e156:	f6bf af70 	bge.w	801e03a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e15a:	991c      	ldr	r1, [sp, #112]	; 0x70
 801e15c:	fb01 6303 	mla	r3, r1, r3, r6
 801e160:	141b      	asrs	r3, r3, #16
 801e162:	f53f af6a 	bmi.w	801e03a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e166:	3a01      	subs	r2, #1
 801e168:	4293      	cmp	r3, r2
 801e16a:	f6bf af66 	bge.w	801e03a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801e16e:	46a9      	mov	r9, r5
 801e170:	46ba      	mov	sl, r7
 801e172:	f1b9 0f00 	cmp.w	r9, #0
 801e176:	dc5a      	bgt.n	801e22e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 801e178:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 801e17c:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801e180:	9b07      	ldr	r3, [sp, #28]
 801e182:	2b00      	cmp	r3, #0
 801e184:	f340 80b8 	ble.w	801e2f8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 801e188:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e18c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e190:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e194:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e196:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e19a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e19e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e1a2:	eef0 6a62 	vmov.f32	s13, s5
 801e1a6:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e1aa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e1ae:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e1b2:	ee16 4a90 	vmov	r4, s13
 801e1b6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e1ba:	eef0 6a43 	vmov.f32	s13, s6
 801e1be:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e1c2:	ee12 2a90 	vmov	r2, s5
 801e1c6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e1ca:	fb92 f3f3 	sdiv	r3, r2, r3
 801e1ce:	ee13 2a10 	vmov	r2, s6
 801e1d2:	931b      	str	r3, [sp, #108]	; 0x6c
 801e1d4:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e1d6:	fb92 f3f3 	sdiv	r3, r2, r3
 801e1da:	931c      	str	r3, [sp, #112]	; 0x70
 801e1dc:	9b07      	ldr	r3, [sp, #28]
 801e1de:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801e1e0:	3b01      	subs	r3, #1
 801e1e2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e1e6:	9307      	str	r3, [sp, #28]
 801e1e8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e1ea:	ee16 6a90 	vmov	r6, s13
 801e1ee:	bf14      	ite	ne
 801e1f0:	461d      	movne	r5, r3
 801e1f2:	4615      	moveq	r5, r2
 801e1f4:	eeb0 3a67 	vmov.f32	s6, s15
 801e1f8:	eef0 2a47 	vmov.f32	s5, s14
 801e1fc:	e6f4      	b.n	801dfe8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801e1fe:	f111 0b01 	adds.w	fp, r1, #1
 801e202:	d48e      	bmi.n	801e122 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e204:	45de      	cmp	lr, fp
 801e206:	db8c      	blt.n	801e122 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e208:	f110 0b01 	adds.w	fp, r0, #1
 801e20c:	d489      	bmi.n	801e122 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e20e:	455b      	cmp	r3, fp
 801e210:	db87      	blt.n	801e122 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e212:	b21b      	sxth	r3, r3
 801e214:	e9cd 1001 	strd	r1, r0, [sp, #4]
 801e218:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 801e21c:	9300      	str	r3, [sp, #0]
 801e21e:	4642      	mov	r2, r8
 801e220:	fa0f f38e 	sxth.w	r3, lr
 801e224:	4649      	mov	r1, r9
 801e226:	980d      	ldr	r0, [sp, #52]	; 0x34
 801e228:	f7ff fe4d 	bl	801dec6 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 801e22c:	e779      	b.n	801e122 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801e22e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801e230:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801e234:	1420      	asrs	r0, r4, #16
 801e236:	1431      	asrs	r1, r6, #16
 801e238:	fb03 0101 	mla	r1, r3, r1, r0
 801e23c:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 801e240:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 801e244:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 801e248:	8841      	ldrh	r1, [r0, #2]
 801e24a:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801e24e:	f1be 0f00 	cmp.w	lr, #0
 801e252:	d00b      	beq.n	801e26c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 801e254:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 801e258:	3b01      	subs	r3, #1
 801e25a:	005b      	lsls	r3, r3, #1
 801e25c:	3302      	adds	r3, #2
 801e25e:	eb00 0b03 	add.w	fp, r0, r3
 801e262:	5ac3      	ldrh	r3, [r0, r3]
 801e264:	930a      	str	r3, [sp, #40]	; 0x28
 801e266:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801e26a:	930b      	str	r3, [sp, #44]	; 0x2c
 801e26c:	ea4f 400c 	mov.w	r0, ip, lsl #16
 801e270:	fb12 f30e 	smulbb	r3, r2, lr
 801e274:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 801e278:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801e27c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 801e280:	10db      	asrs	r3, r3, #3
 801e282:	ea40 000c 	orr.w	r0, r0, ip
 801e286:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e28a:	f1ce 0c10 	rsb	ip, lr, #16
 801e28e:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 801e292:	ebac 0c02 	sub.w	ip, ip, r2
 801e296:	ea4b 0101 	orr.w	r1, fp, r1
 801e29a:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 801e29e:	4351      	muls	r1, r2
 801e2a0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e2a2:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 801e2a6:	fb0c 1c00 	mla	ip, ip, r0, r1
 801e2aa:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 801e2ae:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 801e2b2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 801e2b4:	990a      	ldr	r1, [sp, #40]	; 0x28
 801e2b6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 801e2ba:	0412      	lsls	r2, r2, #16
 801e2bc:	ea4b 0000 	orr.w	r0, fp, r0
 801e2c0:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801e2c4:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 801e2c8:	fb03 c000 	mla	r0, r3, r0, ip
 801e2cc:	ea42 0b0b 	orr.w	fp, r2, fp
 801e2d0:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 801e2d4:	fb03 000b 	mla	r0, r3, fp, r0
 801e2d8:	0d43      	lsrs	r3, r0, #21
 801e2da:	0940      	lsrs	r0, r0, #5
 801e2dc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801e2e0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 801e2e4:	4318      	orrs	r0, r3
 801e2e6:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801e2e8:	f82a 0b02 	strh.w	r0, [sl], #2
 801e2ec:	441c      	add	r4, r3
 801e2ee:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 801e2f0:	f109 39ff 	add.w	r9, r9, #4294967295
 801e2f4:	441e      	add	r6, r3
 801e2f6:	e73c      	b.n	801e172 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 801e2f8:	b00f      	add	sp, #60	; 0x3c
 801e2fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801e2fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 801e2fe:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e302:	b085      	sub	sp, #20
 801e304:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801e308:	9102      	str	r1, [sp, #8]
 801e30a:	2c00      	cmp	r4, #0
 801e30c:	fb04 7103 	mla	r1, r4, r3, r7
 801e310:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801e314:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801e318:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801e31c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801e320:	f2c0 811b 	blt.w	801e55a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e324:	45a6      	cmp	lr, r4
 801e326:	f340 8118 	ble.w	801e55a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 801e32a:	2f00      	cmp	r7, #0
 801e32c:	f2c0 8113 	blt.w	801e556 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e330:	42bb      	cmp	r3, r7
 801e332:	f340 8110 	ble.w	801e556 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 801e336:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801e33a:	1c7a      	adds	r2, r7, #1
 801e33c:	f100 8110 	bmi.w	801e560 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e340:	4293      	cmp	r3, r2
 801e342:	f340 810d 	ble.w	801e560 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 801e346:	2e00      	cmp	r6, #0
 801e348:	f000 810c 	beq.w	801e564 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 801e34c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801e350:	3401      	adds	r4, #1
 801e352:	f100 810b 	bmi.w	801e56c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e356:	45a6      	cmp	lr, r4
 801e358:	f340 8108 	ble.w	801e56c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 801e35c:	2800      	cmp	r0, #0
 801e35e:	f000 8108 	beq.w	801e572 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 801e362:	2f00      	cmp	r7, #0
 801e364:	f2c0 8100 	blt.w	801e568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e368:	42bb      	cmp	r3, r7
 801e36a:	f340 80fd 	ble.w	801e568 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 801e36e:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801e372:	3701      	adds	r7, #1
 801e374:	f100 8100 	bmi.w	801e578 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e378:	42bb      	cmp	r3, r7
 801e37a:	f340 80fd 	ble.w	801e578 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 801e37e:	2e00      	cmp	r6, #0
 801e380:	f000 80fc 	beq.w	801e57c <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 801e384:	3301      	adds	r3, #1
 801e386:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 801e38a:	b2b6      	uxth	r6, r6
 801e38c:	b280      	uxth	r0, r0
 801e38e:	fb00 fe06 	mul.w	lr, r0, r6
 801e392:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801e396:	0136      	lsls	r6, r6, #4
 801e398:	eba6 070e 	sub.w	r7, r6, lr
 801e39c:	b280      	uxth	r0, r0
 801e39e:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801e3a2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801e3a6:	b2bf      	uxth	r7, r7
 801e3a8:	1a1b      	subs	r3, r3, r0
 801e3aa:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801e3ae:	b29b      	uxth	r3, r3
 801e3b0:	fb0a f607 	mul.w	r6, sl, r7
 801e3b4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801e3b8:	fb0b 6603 	mla	r6, fp, r3, r6
 801e3bc:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801e3c0:	fb00 6609 	mla	r6, r0, r9, r6
 801e3c4:	fb0e 6608 	mla	r6, lr, r8, r6
 801e3c8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801e3cc:	9600      	str	r6, [sp, #0]
 801e3ce:	2e00      	cmp	r6, #0
 801e3d0:	f000 80be 	beq.w	801e550 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 801e3d4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e3d8:	fb0b fc0c 	mul.w	ip, fp, ip
 801e3dc:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801e3e0:	fb0b f505 	mul.w	r5, fp, r5
 801e3e4:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801e3e8:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801e3ec:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e3f0:	44dc      	add	ip, fp
 801e3f2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e3f6:	9501      	str	r5, [sp, #4]
 801e3f8:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801e3fc:	9503      	str	r5, [sp, #12]
 801e3fe:	9d01      	ldr	r5, [sp, #4]
 801e400:	9e02      	ldr	r6, [sp, #8]
 801e402:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801e406:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801e40a:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801e40e:	fb0a fc0c 	mul.w	ip, sl, ip
 801e412:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801e416:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801e41a:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e41e:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e422:	4465      	add	r5, ip
 801e424:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801e428:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801e42c:	fb09 fc0c 	mul.w	ip, r9, ip
 801e430:	fb09 f904 	mul.w	r9, r9, r4
 801e434:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801e438:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801e43c:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801e440:	fb08 f404 	mul.w	r4, r8, r4
 801e444:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e448:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e44c:	fb08 f802 	mul.w	r8, r8, r2
 801e450:	fb0a fa01 	mul.w	sl, sl, r1
 801e454:	0a22      	lsrs	r2, r4, #8
 801e456:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801e45a:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e45e:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801e462:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801e466:	4414      	add	r4, r2
 801e468:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801e46c:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801e470:	0a2d      	lsrs	r5, r5, #8
 801e472:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801e476:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801e47a:	9a03      	ldr	r2, [sp, #12]
 801e47c:	8836      	ldrh	r6, [r6, #0]
 801e47e:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e482:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801e486:	437d      	muls	r5, r7
 801e488:	4461      	add	r1, ip
 801e48a:	0a24      	lsrs	r4, r4, #8
 801e48c:	fb02 5503 	mla	r5, r2, r3, r5
 801e490:	0a09      	lsrs	r1, r1, #8
 801e492:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801e496:	fb04 540e 	mla	r4, r4, lr, r5
 801e49a:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801e49e:	fb01 4100 	mla	r1, r1, r0, r4
 801e4a2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e4a6:	0a09      	lsrs	r1, r1, #8
 801e4a8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e4ac:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801e4b0:	fb07 f70a 	mul.w	r7, r7, sl
 801e4b4:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801e4b8:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801e4bc:	fb03 7101 	mla	r1, r3, r1, r7
 801e4c0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e4c4:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801e4c8:	fb0e 1e08 	mla	lr, lr, r8, r1
 801e4cc:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801e4d0:	fb00 e101 	mla	r1, r0, r1, lr
 801e4d4:	f89d 004c 	ldrb.w	r0, [sp, #76]	; 0x4c
 801e4d8:	9a00      	ldr	r2, [sp, #0]
 801e4da:	b287      	uxth	r7, r0
 801e4dc:	437a      	muls	r2, r7
 801e4de:	0a09      	lsrs	r1, r1, #8
 801e4e0:	1c53      	adds	r3, r2, #1
 801e4e2:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801e4e6:	4321      	orrs	r1, r4
 801e4e8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801e4ec:	1235      	asrs	r5, r6, #8
 801e4ee:	0c0a      	lsrs	r2, r1, #16
 801e4f0:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 801e4f4:	b2db      	uxtb	r3, r3
 801e4f6:	fb12 f207 	smulbb	r2, r2, r7
 801e4fa:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801e4fe:	fb05 2503 	mla	r5, r5, r3, r2
 801e502:	f3c1 2407 	ubfx	r4, r1, #8, #8
 801e506:	10f2      	asrs	r2, r6, #3
 801e508:	b2c8      	uxtb	r0, r1
 801e50a:	00f6      	lsls	r6, r6, #3
 801e50c:	fb14 f407 	smulbb	r4, r4, r7
 801e510:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e514:	b2f6      	uxtb	r6, r6
 801e516:	fb10 f007 	smulbb	r0, r0, r7
 801e51a:	fb02 4203 	mla	r2, r2, r3, r4
 801e51e:	b2ad      	uxth	r5, r5
 801e520:	fb06 0303 	mla	r3, r6, r3, r0
 801e524:	b299      	uxth	r1, r3
 801e526:	b294      	uxth	r4, r2
 801e528:	1c6b      	adds	r3, r5, #1
 801e52a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e52e:	1c62      	adds	r2, r4, #1
 801e530:	1c4b      	adds	r3, r1, #1
 801e532:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 801e536:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 801e53a:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801e53e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e542:	0952      	lsrs	r2, r2, #5
 801e544:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e548:	432b      	orrs	r3, r5
 801e54a:	4313      	orrs	r3, r2
 801e54c:	9a02      	ldr	r2, [sp, #8]
 801e54e:	8013      	strh	r3, [r2, #0]
 801e550:	b005      	add	sp, #20
 801e552:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e556:	2500      	movs	r5, #0
 801e558:	e6ef      	b.n	801e33a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 801e55a:	2100      	movs	r1, #0
 801e55c:	460d      	mov	r5, r1
 801e55e:	e6f7      	b.n	801e350 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e560:	2100      	movs	r1, #0
 801e562:	e6f5      	b.n	801e350 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e564:	4631      	mov	r1, r6
 801e566:	e6f3      	b.n	801e350 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 801e568:	2400      	movs	r4, #0
 801e56a:	e702      	b.n	801e372 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 801e56c:	2200      	movs	r2, #0
 801e56e:	4614      	mov	r4, r2
 801e570:	e70b      	b.n	801e38a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e572:	4602      	mov	r2, r0
 801e574:	4604      	mov	r4, r0
 801e576:	e708      	b.n	801e38a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e578:	2200      	movs	r2, #0
 801e57a:	e706      	b.n	801e38a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 801e57c:	4632      	mov	r2, r6
 801e57e:	e704      	b.n	801e38a <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

0801e580 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e580:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e584:	b09d      	sub	sp, #116	; 0x74
 801e586:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 801e58a:	9219      	str	r2, [sp, #100]	; 0x64
 801e58c:	9307      	str	r3, [sp, #28]
 801e58e:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 801e590:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 801e594:	931a      	str	r3, [sp, #104]	; 0x68
 801e596:	9117      	str	r1, [sp, #92]	; 0x5c
 801e598:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 801e59c:	901b      	str	r0, [sp, #108]	; 0x6c
 801e59e:	6850      	ldr	r0, [r2, #4]
 801e5a0:	6812      	ldr	r2, [r2, #0]
 801e5a2:	fb00 1303 	mla	r3, r0, r3, r1
 801e5a6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801e5aa:	930a      	str	r3, [sp, #40]	; 0x28
 801e5ac:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e5ae:	681b      	ldr	r3, [r3, #0]
 801e5b0:	9310      	str	r3, [sp, #64]	; 0x40
 801e5b2:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801e5b6:	930b      	str	r3, [sp, #44]	; 0x2c
 801e5b8:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e5ba:	2b00      	cmp	r3, #0
 801e5bc:	dc03      	bgt.n	801e5c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 801e5be:	9b19      	ldr	r3, [sp, #100]	; 0x64
 801e5c0:	2b00      	cmp	r3, #0
 801e5c2:	f340 8375 	ble.w	801ecb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e5c6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e5c8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e5cc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e5d0:	1e48      	subs	r0, r1, #1
 801e5d2:	1e57      	subs	r7, r2, #1
 801e5d4:	9b07      	ldr	r3, [sp, #28]
 801e5d6:	2b00      	cmp	r3, #0
 801e5d8:	f340 818e 	ble.w	801e8f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801e5dc:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801e5e0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801e5e4:	d406      	bmi.n	801e5f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e5e6:	4584      	cmp	ip, r0
 801e5e8:	da04      	bge.n	801e5f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e5ea:	2b00      	cmp	r3, #0
 801e5ec:	db02      	blt.n	801e5f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 801e5ee:	42bb      	cmp	r3, r7
 801e5f0:	f2c0 8183 	blt.w	801e8fa <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 801e5f4:	f11c 0c01 	adds.w	ip, ip, #1
 801e5f8:	f100 8173 	bmi.w	801e8e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e5fc:	4561      	cmp	r1, ip
 801e5fe:	f2c0 8170 	blt.w	801e8e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e602:	3301      	adds	r3, #1
 801e604:	f100 816d 	bmi.w	801e8e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e608:	429a      	cmp	r2, r3
 801e60a:	f2c0 816a 	blt.w	801e8e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801e60e:	9b07      	ldr	r3, [sp, #28]
 801e610:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801e612:	9318      	str	r3, [sp, #96]	; 0x60
 801e614:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e616:	2b00      	cmp	r3, #0
 801e618:	f340 818c 	ble.w	801e934 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 801e61c:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 801e61e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801e620:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e624:	689b      	ldr	r3, [r3, #8]
 801e626:	1422      	asrs	r2, r4, #16
 801e628:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801e62c:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801e630:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801e634:	f100 81cd 	bmi.w	801e9d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e638:	f103 38ff 	add.w	r8, r3, #4294967295
 801e63c:	4542      	cmp	r2, r8
 801e63e:	f280 81c8 	bge.w	801e9d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e642:	f1bc 0f00 	cmp.w	ip, #0
 801e646:	f2c0 81c4 	blt.w	801e9d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e64a:	f10e 38ff 	add.w	r8, lr, #4294967295
 801e64e:	45c4      	cmp	ip, r8
 801e650:	f280 81bf 	bge.w	801e9d2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 801e654:	b21b      	sxth	r3, r3
 801e656:	fb0c 2203 	mla	r2, ip, r3, r2
 801e65a:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801e65c:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801e660:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801e664:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801e668:	2800      	cmp	r0, #0
 801e66a:	f000 81a9 	beq.w	801e9c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 801e66e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801e672:	950c      	str	r5, [sp, #48]	; 0x30
 801e674:	0e2d      	lsrs	r5, r5, #24
 801e676:	9513      	str	r5, [sp, #76]	; 0x4c
 801e678:	b181      	cbz	r1, 801e69c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e67a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801e67e:	3b01      	subs	r3, #1
 801e680:	009b      	lsls	r3, r3, #2
 801e682:	3304      	adds	r3, #4
 801e684:	eb08 0c03 	add.w	ip, r8, r3
 801e688:	f858 3003 	ldr.w	r3, [r8, r3]
 801e68c:	9308      	str	r3, [sp, #32]
 801e68e:	0e1b      	lsrs	r3, r3, #24
 801e690:	9311      	str	r3, [sp, #68]	; 0x44
 801e692:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801e696:	930d      	str	r3, [sp, #52]	; 0x34
 801e698:	0e1b      	lsrs	r3, r3, #24
 801e69a:	9314      	str	r3, [sp, #80]	; 0x50
 801e69c:	b280      	uxth	r0, r0
 801e69e:	b289      	uxth	r1, r1
 801e6a0:	fb00 f901 	mul.w	r9, r0, r1
 801e6a4:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801e6a8:	0100      	lsls	r0, r0, #4
 801e6aa:	eba0 0809 	sub.w	r8, r0, r9
 801e6ae:	b289      	uxth	r1, r1
 801e6b0:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801e6b4:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801e6b6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e6b8:	fa1f f888 	uxth.w	r8, r8
 801e6bc:	1a5b      	subs	r3, r3, r1
 801e6be:	b29b      	uxth	r3, r3
 801e6c0:	fb08 f000 	mul.w	r0, r8, r0
 801e6c4:	fb03 000e 	mla	r0, r3, lr, r0
 801e6c8:	fb01 0005 	mla	r0, r1, r5, r0
 801e6cc:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e6ce:	fb09 0005 	mla	r0, r9, r5, r0
 801e6d2:	f3c0 2007 	ubfx	r0, r0, #8, #8
 801e6d6:	2800      	cmp	r0, #0
 801e6d8:	f000 80fa 	beq.w	801e8d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e6dc:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801e6e0:	d01b      	beq.n	801e71a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 801e6e2:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801e6e6:	fb0e fa0a 	mul.w	sl, lr, sl
 801e6ea:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e6ee:	fb0e fe02 	mul.w	lr, lr, r2
 801e6f2:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801e6f6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e6fa:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801e6fe:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801e702:	4452      	add	r2, sl
 801e704:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801e708:	0a12      	lsrs	r2, r2, #8
 801e70a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e70e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801e712:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801e716:	ea42 020c 	orr.w	r2, r2, ip
 801e71a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e71c:	2dff      	cmp	r5, #255	; 0xff
 801e71e:	d021      	beq.n	801e764 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 801e720:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e722:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e726:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e728:	fb05 fb0b 	mul.w	fp, r5, fp
 801e72c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e72e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e732:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801e734:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e738:	fb05 fa0a 	mul.w	sl, r5, sl
 801e73c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e740:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e744:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e748:	44de      	add	lr, fp
 801e74a:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e74e:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e752:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e756:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e75a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e75e:	ea4e 050a 	orr.w	r5, lr, sl
 801e762:	950c      	str	r5, [sp, #48]	; 0x30
 801e764:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e766:	2dff      	cmp	r5, #255	; 0xff
 801e768:	d021      	beq.n	801e7ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 801e76a:	9d08      	ldr	r5, [sp, #32]
 801e76c:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e770:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e772:	fb05 fb0b 	mul.w	fp, r5, fp
 801e776:	9d08      	ldr	r5, [sp, #32]
 801e778:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e77c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801e77e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e782:	fb05 fa0a 	mul.w	sl, r5, sl
 801e786:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e78a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e78e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e792:	44de      	add	lr, fp
 801e794:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e798:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e79c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e7a0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e7a4:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e7a8:	ea4e 050a 	orr.w	r5, lr, sl
 801e7ac:	9508      	str	r5, [sp, #32]
 801e7ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e7b0:	2dff      	cmp	r5, #255	; 0xff
 801e7b2:	d021      	beq.n	801e7f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 801e7b4:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e7b6:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801e7ba:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e7bc:	fb05 fb0b 	mul.w	fp, r5, fp
 801e7c0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e7c2:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801e7c6:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801e7c8:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801e7cc:	fb05 fa0a 	mul.w	sl, r5, sl
 801e7d0:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e7d4:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801e7d8:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801e7dc:	44de      	add	lr, fp
 801e7de:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801e7e2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801e7e6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801e7ea:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801e7ee:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801e7f2:	ea4e 050a 	orr.w	r5, lr, sl
 801e7f6:	950d      	str	r5, [sp, #52]	; 0x34
 801e7f8:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e7fa:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801e7fe:	9d08      	ldr	r5, [sp, #32]
 801e800:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801e804:	fb08 fc0c 	mul.w	ip, r8, ip
 801e808:	fb03 cc0e 	mla	ip, r3, lr, ip
 801e80c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e810:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801e812:	fb01 cc0e 	mla	ip, r1, lr, ip
 801e816:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801e81a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801e81c:	fb09 cc0e 	mla	ip, r9, lr, ip
 801e820:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801e824:	fb08 f80e 	mul.w	r8, r8, lr
 801e828:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801e82c:	fb03 8202 	mla	r2, r3, r2, r8
 801e830:	9b08      	ldr	r3, [sp, #32]
 801e832:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801e834:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 801e838:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801e83a:	fb01 220a 	mla	r2, r1, sl, r2
 801e83e:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801e842:	fb09 2901 	mla	r9, r9, r1, r2
 801e846:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801e848:	883b      	ldrh	r3, [r7, #0]
 801e84a:	4342      	muls	r2, r0
 801e84c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801e850:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801e854:	1c50      	adds	r0, r2, #1
 801e856:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801e85a:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801e85e:	ea4c 0c09 	orr.w	ip, ip, r9
 801e862:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801e866:	1219      	asrs	r1, r3, #8
 801e868:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801e86c:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801e870:	b2c0      	uxtb	r0, r0
 801e872:	fb12 f205 	smulbb	r2, r2, r5
 801e876:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801e87a:	fb01 2100 	mla	r1, r1, r0, r2
 801e87e:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801e882:	10da      	asrs	r2, r3, #3
 801e884:	fa5f fc8c 	uxtb.w	ip, ip
 801e888:	00db      	lsls	r3, r3, #3
 801e88a:	fb1c fc05 	smulbb	ip, ip, r5
 801e88e:	b2db      	uxtb	r3, r3
 801e890:	b289      	uxth	r1, r1
 801e892:	fb03 c300 	mla	r3, r3, r0, ip
 801e896:	fa1f fc83 	uxth.w	ip, r3
 801e89a:	1c4b      	adds	r3, r1, #1
 801e89c:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801e8a0:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801e8a4:	fb1e fe05 	smulbb	lr, lr, r5
 801e8a8:	f10c 0301 	add.w	r3, ip, #1
 801e8ac:	fb02 e200 	mla	r2, r2, r0, lr
 801e8b0:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801e8b4:	b292      	uxth	r2, r2
 801e8b6:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 801e8ba:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e8be:	430b      	orrs	r3, r1
 801e8c0:	1c51      	adds	r1, r2, #1
 801e8c2:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801e8c6:	0952      	lsrs	r2, r2, #5
 801e8c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801e8cc:	4313      	orrs	r3, r2
 801e8ce:	803b      	strh	r3, [r7, #0]
 801e8d0:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e8d2:	441c      	add	r4, r3
 801e8d4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e8d6:	441e      	add	r6, r3
 801e8d8:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801e8da:	3b01      	subs	r3, #1
 801e8dc:	3702      	adds	r7, #2
 801e8de:	9318      	str	r3, [sp, #96]	; 0x60
 801e8e0:	e698      	b.n	801e614 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801e8e2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801e8e4:	441c      	add	r4, r3
 801e8e6:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801e8e8:	441e      	add	r6, r3
 801e8ea:	9b07      	ldr	r3, [sp, #28]
 801e8ec:	3b01      	subs	r3, #1
 801e8ee:	9307      	str	r3, [sp, #28]
 801e8f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e8f2:	3302      	adds	r3, #2
 801e8f4:	930a      	str	r3, [sp, #40]	; 0x28
 801e8f6:	e66d      	b.n	801e5d4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 801e8f8:	d023      	beq.n	801e942 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 801e8fa:	9b07      	ldr	r3, [sp, #28]
 801e8fc:	9829      	ldr	r0, [sp, #164]	; 0xa4
 801e8fe:	3b01      	subs	r3, #1
 801e900:	fb00 4003 	mla	r0, r0, r3, r4
 801e904:	1400      	asrs	r0, r0, #16
 801e906:	f53f ae82 	bmi.w	801e60e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e90a:	3901      	subs	r1, #1
 801e90c:	4288      	cmp	r0, r1
 801e90e:	f6bf ae7e 	bge.w	801e60e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e912:	992a      	ldr	r1, [sp, #168]	; 0xa8
 801e914:	fb01 6303 	mla	r3, r1, r3, r6
 801e918:	141b      	asrs	r3, r3, #16
 801e91a:	f53f ae78 	bmi.w	801e60e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e91e:	3a01      	subs	r2, #1
 801e920:	4293      	cmp	r3, r2
 801e922:	f6bf ae74 	bge.w	801e60e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801e926:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801e92a:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 801e92e:	f1bb 0f00 	cmp.w	fp, #0
 801e932:	dc6c      	bgt.n	801ea0e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801e934:	9b07      	ldr	r3, [sp, #28]
 801e936:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801e93a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801e93c:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801e940:	930a      	str	r3, [sp, #40]	; 0x28
 801e942:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e944:	2b00      	cmp	r3, #0
 801e946:	f340 81b3 	ble.w	801ecb0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801e94a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801e94e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801e952:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801e956:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e958:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801e95c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801e960:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801e964:	eef0 6a62 	vmov.f32	s13, s5
 801e968:	ee61 7a27 	vmul.f32	s15, s2, s15
 801e96c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e970:	ee77 2a62 	vsub.f32	s5, s14, s5
 801e974:	ee16 4a90 	vmov	r4, s13
 801e978:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801e97c:	eef0 6a43 	vmov.f32	s13, s6
 801e980:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801e984:	ee12 2a90 	vmov	r2, s5
 801e988:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801e98c:	fb92 f3f3 	sdiv	r3, r2, r3
 801e990:	ee13 2a10 	vmov	r2, s6
 801e994:	9329      	str	r3, [sp, #164]	; 0xa4
 801e996:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e998:	fb92 f3f3 	sdiv	r3, r2, r3
 801e99c:	932a      	str	r3, [sp, #168]	; 0xa8
 801e99e:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801e9a0:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801e9a2:	3b01      	subs	r3, #1
 801e9a4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801e9a8:	9317      	str	r3, [sp, #92]	; 0x5c
 801e9aa:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801e9ac:	bf08      	it	eq
 801e9ae:	4613      	moveq	r3, r2
 801e9b0:	ee16 6a90 	vmov	r6, s13
 801e9b4:	9307      	str	r3, [sp, #28]
 801e9b6:	eeb0 3a67 	vmov.f32	s6, s15
 801e9ba:	eef0 2a47 	vmov.f32	s5, s14
 801e9be:	e5fb      	b.n	801e5b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801e9c0:	2900      	cmp	r1, #0
 801e9c2:	f43f ae6b 	beq.w	801e69c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e9c6:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801e9ca:	9308      	str	r3, [sp, #32]
 801e9cc:	0e1b      	lsrs	r3, r3, #24
 801e9ce:	9311      	str	r3, [sp, #68]	; 0x44
 801e9d0:	e664      	b.n	801e69c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 801e9d2:	f112 0801 	adds.w	r8, r2, #1
 801e9d6:	f53f af7b 	bmi.w	801e8d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e9da:	4543      	cmp	r3, r8
 801e9dc:	f6ff af78 	blt.w	801e8d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e9e0:	f11c 0801 	adds.w	r8, ip, #1
 801e9e4:	f53f af74 	bmi.w	801e8d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e9e8:	45c6      	cmp	lr, r8
 801e9ea:	f6ff af71 	blt.w	801e8d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801e9ee:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 801e9f0:	9201      	str	r2, [sp, #4]
 801e9f2:	fa0f f28e 	sxth.w	r2, lr
 801e9f6:	e9cd 1504 	strd	r1, r5, [sp, #16]
 801e9fa:	e9cd c002 	strd	ip, r0, [sp, #8]
 801e9fe:	9200      	str	r2, [sp, #0]
 801ea00:	b21b      	sxth	r3, r3
 801ea02:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801ea04:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801ea06:	4639      	mov	r1, r7
 801ea08:	f7ff fc79 	bl	801e2fe <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 801ea0c:	e760      	b.n	801e8d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 801ea0e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801ea10:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801ea12:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ea16:	1427      	asrs	r7, r4, #16
 801ea18:	1433      	asrs	r3, r6, #16
 801ea1a:	fb01 7303 	mla	r3, r1, r3, r7
 801ea1e:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801ea22:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801ea26:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801ea2a:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801ea2e:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801ea32:	2a00      	cmp	r2, #0
 801ea34:	f000 8133 	beq.w	801ec9e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 801ea38:	687d      	ldr	r5, [r7, #4]
 801ea3a:	950e      	str	r5, [sp, #56]	; 0x38
 801ea3c:	0e2d      	lsrs	r5, r5, #24
 801ea3e:	9515      	str	r5, [sp, #84]	; 0x54
 801ea40:	b178      	cbz	r0, 801ea62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801ea42:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801ea46:	3901      	subs	r1, #1
 801ea48:	0089      	lsls	r1, r1, #2
 801ea4a:	3104      	adds	r1, #4
 801ea4c:	eb07 0e01 	add.w	lr, r7, r1
 801ea50:	5879      	ldr	r1, [r7, r1]
 801ea52:	9109      	str	r1, [sp, #36]	; 0x24
 801ea54:	0e09      	lsrs	r1, r1, #24
 801ea56:	9112      	str	r1, [sp, #72]	; 0x48
 801ea58:	f8de 1004 	ldr.w	r1, [lr, #4]
 801ea5c:	910f      	str	r1, [sp, #60]	; 0x3c
 801ea5e:	0e09      	lsrs	r1, r1, #24
 801ea60:	9116      	str	r1, [sp, #88]	; 0x58
 801ea62:	b292      	uxth	r2, r2
 801ea64:	b280      	uxth	r0, r0
 801ea66:	fb02 f800 	mul.w	r8, r2, r0
 801ea6a:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 801ea6e:	0112      	lsls	r2, r2, #4
 801ea70:	eba2 0e08 	sub.w	lr, r2, r8
 801ea74:	b280      	uxth	r0, r0
 801ea76:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 801ea7a:	9915      	ldr	r1, [sp, #84]	; 0x54
 801ea7c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801ea7e:	fa1f fe8e 	uxth.w	lr, lr
 801ea82:	1a12      	subs	r2, r2, r0
 801ea84:	b292      	uxth	r2, r2
 801ea86:	fb0e f101 	mul.w	r1, lr, r1
 801ea8a:	fb02 110c 	mla	r1, r2, ip, r1
 801ea8e:	fb00 1105 	mla	r1, r0, r5, r1
 801ea92:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801ea94:	fb08 1105 	mla	r1, r8, r5, r1
 801ea98:	f3c1 2107 	ubfx	r1, r1, #8, #8
 801ea9c:	2900      	cmp	r1, #0
 801ea9e:	f000 80f5 	beq.w	801ec8c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 801eaa2:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801eaa6:	d019      	beq.n	801eadc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 801eaa8:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801eaac:	fb0c fa0a 	mul.w	sl, ip, sl
 801eab0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801eab4:	fb0c fc03 	mul.w	ip, ip, r3
 801eab8:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801eabc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801eac0:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801eac4:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801eac8:	4453      	add	r3, sl
 801eaca:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801eace:	0a1b      	lsrs	r3, r3, #8
 801ead0:	0a3f      	lsrs	r7, r7, #8
 801ead2:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801ead6:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801eada:	433b      	orrs	r3, r7
 801eadc:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801eade:	2dff      	cmp	r5, #255	; 0xff
 801eae0:	d020      	beq.n	801eb24 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 801eae2:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801eae4:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801eae8:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801eaea:	436f      	muls	r7, r5
 801eaec:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801eaee:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801eaf2:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801eaf4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801eaf8:	fb05 fa0a 	mul.w	sl, r5, sl
 801eafc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801eb00:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eb04:	44bc      	add	ip, r7
 801eb06:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801eb0a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801eb0e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eb12:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eb16:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eb1a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eb1e:	ea4c 050a 	orr.w	r5, ip, sl
 801eb22:	950e      	str	r5, [sp, #56]	; 0x38
 801eb24:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801eb26:	2dff      	cmp	r5, #255	; 0xff
 801eb28:	d020      	beq.n	801eb6c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801eb2a:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801eb2c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801eb30:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801eb32:	436f      	muls	r7, r5
 801eb34:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801eb36:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801eb3a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801eb3c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801eb40:	fb05 fa0a 	mul.w	sl, r5, sl
 801eb44:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801eb48:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eb4c:	44bc      	add	ip, r7
 801eb4e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801eb52:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801eb56:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eb5a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eb5e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eb62:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801eb66:	ea4c 050a 	orr.w	r5, ip, sl
 801eb6a:	9509      	str	r5, [sp, #36]	; 0x24
 801eb6c:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801eb6e:	2dff      	cmp	r5, #255	; 0xff
 801eb70:	d020      	beq.n	801ebb4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 801eb72:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801eb74:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801eb78:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801eb7a:	436f      	muls	r7, r5
 801eb7c:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801eb7e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801eb82:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801eb84:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801eb88:	fb05 fa0a 	mul.w	sl, r5, sl
 801eb8c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801eb90:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801eb94:	44bc      	add	ip, r7
 801eb96:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801eb9a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801eb9e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801eba2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801eba6:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801ebaa:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ebae:	ea4c 050a 	orr.w	r5, ip, sl
 801ebb2:	950f      	str	r5, [sp, #60]	; 0x3c
 801ebb4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ebb6:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801ebba:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801ebbc:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801ebc0:	fb0e f707 	mul.w	r7, lr, r7
 801ebc4:	fb02 770c 	mla	r7, r2, ip, r7
 801ebc8:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ebcc:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801ebce:	fb00 770c 	mla	r7, r0, ip, r7
 801ebd2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ebd6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801ebd8:	fb08 770c 	mla	r7, r8, ip, r7
 801ebdc:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801ebe0:	fb0e fe0c 	mul.w	lr, lr, ip
 801ebe4:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801ebe8:	fb02 e303 	mla	r3, r2, r3, lr
 801ebec:	9a09      	ldr	r2, [sp, #36]	; 0x24
 801ebee:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801ebf0:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 801ebf4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801ebf6:	fb00 330a 	mla	r3, r0, sl, r3
 801ebfa:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 801ebfe:	fb08 3c0c 	mla	ip, r8, ip, r3
 801ec02:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801ec04:	f8b9 0000 	ldrh.w	r0, [r9]
 801ec08:	4359      	muls	r1, r3
 801ec0a:	0a3f      	lsrs	r7, r7, #8
 801ec0c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ec10:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801ec14:	1c4b      	adds	r3, r1, #1
 801ec16:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801ec1a:	ea47 070c 	orr.w	r7, r7, ip
 801ec1e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801ec22:	1202      	asrs	r2, r0, #8
 801ec24:	0c3b      	lsrs	r3, r7, #16
 801ec26:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 801ec2a:	b2c9      	uxtb	r1, r1
 801ec2c:	fb13 f305 	smulbb	r3, r3, r5
 801ec30:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801ec34:	fb02 3201 	mla	r2, r2, r1, r3
 801ec38:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 801ec3c:	10c3      	asrs	r3, r0, #3
 801ec3e:	b2ff      	uxtb	r7, r7
 801ec40:	00c0      	lsls	r0, r0, #3
 801ec42:	b2c0      	uxtb	r0, r0
 801ec44:	fb17 f705 	smulbb	r7, r7, r5
 801ec48:	fb00 7001 	mla	r0, r0, r1, r7
 801ec4c:	b292      	uxth	r2, r2
 801ec4e:	fb1c fc05 	smulbb	ip, ip, r5
 801ec52:	b280      	uxth	r0, r0
 801ec54:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 801ec58:	fb03 c301 	mla	r3, r3, r1, ip
 801ec5c:	1c51      	adds	r1, r2, #1
 801ec5e:	f100 0c01 	add.w	ip, r0, #1
 801ec62:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ec66:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 801ec6a:	b29b      	uxth	r3, r3
 801ec6c:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801ec70:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801ec74:	ea4c 0202 	orr.w	r2, ip, r2
 801ec78:	f103 0c01 	add.w	ip, r3, #1
 801ec7c:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 801ec80:	095b      	lsrs	r3, r3, #5
 801ec82:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801ec86:	431a      	orrs	r2, r3
 801ec88:	f8a9 2000 	strh.w	r2, [r9]
 801ec8c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801ec8e:	441c      	add	r4, r3
 801ec90:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801ec92:	f109 0902 	add.w	r9, r9, #2
 801ec96:	441e      	add	r6, r3
 801ec98:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ec9c:	e647      	b.n	801e92e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801ec9e:	2800      	cmp	r0, #0
 801eca0:	f43f aedf 	beq.w	801ea62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801eca4:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 801eca8:	9109      	str	r1, [sp, #36]	; 0x24
 801ecaa:	0e09      	lsrs	r1, r1, #24
 801ecac:	9112      	str	r1, [sp, #72]	; 0x48
 801ecae:	e6d8      	b.n	801ea62 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 801ecb0:	b01d      	add	sp, #116	; 0x74
 801ecb2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ecb6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 801ecb6:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ecba:	b085      	sub	sp, #20
 801ecbc:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	; 0x3c
 801ecc0:	9102      	str	r1, [sp, #8]
 801ecc2:	2c00      	cmp	r4, #0
 801ecc4:	fb04 7103 	mla	r1, r4, r3, r7
 801ecc8:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 801eccc:	f89d 6044 	ldrb.w	r6, [sp, #68]	; 0x44
 801ecd0:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 801ecd4:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 801ecd8:	f2c0 810c 	blt.w	801eef4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801ecdc:	45a6      	cmp	lr, r4
 801ecde:	f340 8109 	ble.w	801eef4 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 801ece2:	2f00      	cmp	r7, #0
 801ece4:	f2c0 8104 	blt.w	801eef0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801ece8:	42bb      	cmp	r3, r7
 801ecea:	f340 8101 	ble.w	801eef0 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 801ecee:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 801ecf2:	1c7a      	adds	r2, r7, #1
 801ecf4:	f100 8101 	bmi.w	801eefa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801ecf8:	4293      	cmp	r3, r2
 801ecfa:	f340 80fe 	ble.w	801eefa <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 801ecfe:	2e00      	cmp	r6, #0
 801ed00:	f000 80fd 	beq.w	801eefe <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 801ed04:	f8dc 1004 	ldr.w	r1, [ip, #4]
 801ed08:	3401      	adds	r4, #1
 801ed0a:	f100 80fc 	bmi.w	801ef06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801ed0e:	45a6      	cmp	lr, r4
 801ed10:	f340 80f9 	ble.w	801ef06 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 801ed14:	2800      	cmp	r0, #0
 801ed16:	f000 80f9 	beq.w	801ef0c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 801ed1a:	2f00      	cmp	r7, #0
 801ed1c:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 801ed20:	f2c0 80ef 	blt.w	801ef02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801ed24:	42bb      	cmp	r3, r7
 801ed26:	f340 80ec 	ble.w	801ef02 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 801ed2a:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 801ed2e:	3701      	adds	r7, #1
 801ed30:	f100 80ef 	bmi.w	801ef12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801ed34:	42bb      	cmp	r3, r7
 801ed36:	f340 80ec 	ble.w	801ef12 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 801ed3a:	2e00      	cmp	r6, #0
 801ed3c:	f000 80eb 	beq.w	801ef16 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 801ed40:	6852      	ldr	r2, [r2, #4]
 801ed42:	b2b6      	uxth	r6, r6
 801ed44:	b280      	uxth	r0, r0
 801ed46:	fb00 fe06 	mul.w	lr, r0, r6
 801ed4a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801ed4e:	0136      	lsls	r6, r6, #4
 801ed50:	eba6 070e 	sub.w	r7, r6, lr
 801ed54:	b280      	uxth	r0, r0
 801ed56:	f5c6 7380 	rsb	r3, r6, #256	; 0x100
 801ed5a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801ed5e:	b2bf      	uxth	r7, r7
 801ed60:	1a1b      	subs	r3, r3, r0
 801ed62:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801ed66:	b29b      	uxth	r3, r3
 801ed68:	fb07 f60a 	mul.w	r6, r7, sl
 801ed6c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801ed70:	fb0b 6603 	mla	r6, fp, r3, r6
 801ed74:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801ed78:	fb00 6609 	mla	r6, r0, r9, r6
 801ed7c:	fb0e 6608 	mla	r6, lr, r8, r6
 801ed80:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ed84:	9600      	str	r6, [sp, #0]
 801ed86:	2e00      	cmp	r6, #0
 801ed88:	f000 80af 	beq.w	801eeea <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 801ed8c:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801ed90:	fb0b fc0c 	mul.w	ip, fp, ip
 801ed94:	f405 457f 	and.w	r5, r5, #65280	; 0xff00
 801ed98:	fb0b f505 	mul.w	r5, fp, r5
 801ed9c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801eda0:	f00b 1bff 	and.w	fp, fp, #16711935	; 0xff00ff
 801eda4:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801eda8:	44dc      	add	ip, fp
 801edaa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801edae:	9501      	str	r5, [sp, #4]
 801edb0:	f00c 15ff 	and.w	r5, ip, #16711935	; 0xff00ff
 801edb4:	9503      	str	r5, [sp, #12]
 801edb6:	9d01      	ldr	r5, [sp, #4]
 801edb8:	9e02      	ldr	r6, [sp, #8]
 801edba:	f505 7c80 	add.w	ip, r5, #256	; 0x100
 801edbe:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801edc2:	f001 1cff 	and.w	ip, r1, #16711935	; 0xff00ff
 801edc6:	fb0a fc0c 	mul.w	ip, sl, ip
 801edca:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801edce:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801edd2:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801edd6:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801edda:	4465      	add	r5, ip
 801eddc:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801ede0:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801ede4:	fb09 fc0c 	mul.w	ip, r9, ip
 801ede8:	fb09 f904 	mul.w	r9, r9, r4
 801edec:	f509 7480 	add.w	r4, r9, #256	; 0x100
 801edf0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801edf4:	f002 14ff 	and.w	r4, r2, #16711935	; 0xff00ff
 801edf8:	fb08 f404 	mul.w	r4, r8, r4
 801edfc:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801ee00:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801ee04:	fb08 f802 	mul.w	r8, r8, r2
 801ee08:	fb0a fa01 	mul.w	sl, sl, r1
 801ee0c:	0a22      	lsrs	r2, r4, #8
 801ee0e:	f50a 7180 	add.w	r1, sl, #256	; 0x100
 801ee12:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801ee16:	f104 1401 	add.w	r4, r4, #65537	; 0x10001
 801ee1a:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ee1e:	4414      	add	r4, r2
 801ee20:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ee24:	f508 7280 	add.w	r2, r8, #256	; 0x100
 801ee28:	0a2d      	lsrs	r5, r5, #8
 801ee2a:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ee2e:	f005 15ff 	and.w	r5, r5, #16711935	; 0xff00ff
 801ee32:	9a03      	ldr	r2, [sp, #12]
 801ee34:	8836      	ldrh	r6, [r6, #0]
 801ee36:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ee3a:	f10c 1c01 	add.w	ip, ip, #65537	; 0x10001
 801ee3e:	437d      	muls	r5, r7
 801ee40:	4461      	add	r1, ip
 801ee42:	0a24      	lsrs	r4, r4, #8
 801ee44:	fb02 5503 	mla	r5, r2, r3, r5
 801ee48:	0a09      	lsrs	r1, r1, #8
 801ee4a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801ee4e:	fb04 540e 	mla	r4, r4, lr, r5
 801ee52:	f001 11ff 	and.w	r1, r1, #16711935	; 0xff00ff
 801ee56:	fb01 4100 	mla	r1, r1, r0, r4
 801ee5a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ee5e:	0a09      	lsrs	r1, r1, #8
 801ee60:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801ee64:	f001 14ff 	and.w	r4, r1, #16711935	; 0xff00ff
 801ee68:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801ee6c:	f40b 417f 	and.w	r1, fp, #65280	; 0xff00
 801ee70:	fb07 f70a 	mul.w	r7, r7, sl
 801ee74:	fb03 7101 	mla	r1, r3, r1, r7
 801ee78:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801ee7c:	9b00      	ldr	r3, [sp, #0]
 801ee7e:	f408 487f 	and.w	r8, r8, #65280	; 0xff00
 801ee82:	fb0e 1e08 	mla	lr, lr, r8, r1
 801ee86:	f409 417f 	and.w	r1, r9, #65280	; 0xff00
 801ee8a:	fb00 e101 	mla	r1, r0, r1, lr
 801ee8e:	43da      	mvns	r2, r3
 801ee90:	1233      	asrs	r3, r6, #8
 801ee92:	b2d2      	uxtb	r2, r2
 801ee94:	10f0      	asrs	r0, r6, #3
 801ee96:	0a09      	lsrs	r1, r1, #8
 801ee98:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 801ee9c:	00f6      	lsls	r6, r6, #3
 801ee9e:	4353      	muls	r3, r2
 801eea0:	f401 417f 	and.w	r1, r1, #65280	; 0xff00
 801eea4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801eea8:	b2f6      	uxtb	r6, r6
 801eeaa:	4321      	orrs	r1, r4
 801eeac:	4350      	muls	r0, r2
 801eeae:	4356      	muls	r6, r2
 801eeb0:	1c5a      	adds	r2, r3, #1
 801eeb2:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801eeb6:	0c0b      	lsrs	r3, r1, #16
 801eeb8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801eebc:	1c42      	adds	r2, r0, #1
 801eebe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801eec2:	0a0a      	lsrs	r2, r1, #8
 801eec4:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801eec8:	021b      	lsls	r3, r3, #8
 801eeca:	00d2      	lsls	r2, r2, #3
 801eecc:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801eed0:	f403 4378 	and.w	r3, r3, #63488	; 0xf800
 801eed4:	4313      	orrs	r3, r2
 801eed6:	1c72      	adds	r2, r6, #1
 801eed8:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801eedc:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 801eee0:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801eee4:	4319      	orrs	r1, r3
 801eee6:	9b02      	ldr	r3, [sp, #8]
 801eee8:	8019      	strh	r1, [r3, #0]
 801eeea:	b005      	add	sp, #20
 801eeec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801eef0:	2500      	movs	r5, #0
 801eef2:	e6fe      	b.n	801ecf2 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 801eef4:	2100      	movs	r1, #0
 801eef6:	460d      	mov	r5, r1
 801eef8:	e706      	b.n	801ed08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801eefa:	2100      	movs	r1, #0
 801eefc:	e704      	b.n	801ed08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801eefe:	4631      	mov	r1, r6
 801ef00:	e702      	b.n	801ed08 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 801ef02:	2400      	movs	r4, #0
 801ef04:	e713      	b.n	801ed2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 801ef06:	2200      	movs	r2, #0
 801ef08:	4614      	mov	r4, r2
 801ef0a:	e71a      	b.n	801ed42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ef0c:	4602      	mov	r2, r0
 801ef0e:	4604      	mov	r4, r0
 801ef10:	e717      	b.n	801ed42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ef12:	2200      	movs	r2, #0
 801ef14:	e715      	b.n	801ed42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 801ef16:	4632      	mov	r2, r6
 801ef18:	e713      	b.n	801ed42 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

0801ef1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ef1c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ef20:	b09b      	sub	sp, #108	; 0x6c
 801ef22:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 801ef26:	9218      	str	r2, [sp, #96]	; 0x60
 801ef28:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801ef2a:	9116      	str	r1, [sp, #88]	; 0x58
 801ef2c:	9307      	str	r3, [sp, #28]
 801ef2e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 801ef32:	9019      	str	r0, [sp, #100]	; 0x64
 801ef34:	6850      	ldr	r0, [r2, #4]
 801ef36:	6812      	ldr	r2, [r2, #0]
 801ef38:	fb00 1303 	mla	r3, r0, r3, r1
 801ef3c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801ef40:	930a      	str	r3, [sp, #40]	; 0x28
 801ef42:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ef44:	681b      	ldr	r3, [r3, #0]
 801ef46:	930f      	str	r3, [sp, #60]	; 0x3c
 801ef48:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801ef4a:	2b00      	cmp	r3, #0
 801ef4c:	dc03      	bgt.n	801ef56 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801ef4e:	9b18      	ldr	r3, [sp, #96]	; 0x60
 801ef50:	2b00      	cmp	r3, #0
 801ef52:	f340 8386 	ble.w	801f662 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801ef56:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801ef58:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ef5c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ef60:	1e48      	subs	r0, r1, #1
 801ef62:	1e57      	subs	r7, r2, #1
 801ef64:	9b07      	ldr	r3, [sp, #28]
 801ef66:	2b00      	cmp	r3, #0
 801ef68:	f340 8166 	ble.w	801f238 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 801ef6c:	ea5f 4c24 	movs.w	ip, r4, asr #16
 801ef70:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ef74:	d406      	bmi.n	801ef84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ef76:	4584      	cmp	ip, r0
 801ef78:	da04      	bge.n	801ef84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ef7a:	2b00      	cmp	r3, #0
 801ef7c:	db02      	blt.n	801ef84 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801ef7e:	42bb      	cmp	r3, r7
 801ef80:	f2c0 815b 	blt.w	801f23a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 801ef84:	f11c 0c01 	adds.w	ip, ip, #1
 801ef88:	f100 814b 	bmi.w	801f222 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ef8c:	4561      	cmp	r1, ip
 801ef8e:	f2c0 8148 	blt.w	801f222 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ef92:	3301      	adds	r3, #1
 801ef94:	f100 8145 	bmi.w	801f222 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ef98:	429a      	cmp	r2, r3
 801ef9a:	f2c0 8142 	blt.w	801f222 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 801ef9e:	9b07      	ldr	r3, [sp, #28]
 801efa0:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 801efa2:	9317      	str	r3, [sp, #92]	; 0x5c
 801efa4:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801efa6:	2b00      	cmp	r3, #0
 801efa8:	f340 8165 	ble.w	801f276 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 801efac:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 801efae:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801efb0:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801efb4:	689b      	ldr	r3, [r3, #8]
 801efb6:	1422      	asrs	r2, r4, #16
 801efb8:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801efbc:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801efc0:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801efc4:	f100 81d5 	bmi.w	801f372 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801efc8:	f103 38ff 	add.w	r8, r3, #4294967295
 801efcc:	4542      	cmp	r2, r8
 801efce:	f280 81d0 	bge.w	801f372 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801efd2:	f1bc 0f00 	cmp.w	ip, #0
 801efd6:	f2c0 81cc 	blt.w	801f372 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801efda:	f10e 38ff 	add.w	r8, lr, #4294967295
 801efde:	45c4      	cmp	ip, r8
 801efe0:	f280 81c7 	bge.w	801f372 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 801efe4:	b21b      	sxth	r3, r3
 801efe6:	fb0c 2203 	mla	r2, ip, r3, r2
 801efea:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801efec:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 801eff0:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801eff4:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 801eff8:	2900      	cmp	r1, #0
 801effa:	f000 8182 	beq.w	801f302 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801effe:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801f002:	950b      	str	r5, [sp, #44]	; 0x2c
 801f004:	0e2d      	lsrs	r5, r5, #24
 801f006:	9512      	str	r5, [sp, #72]	; 0x48
 801f008:	b180      	cbz	r0, 801f02c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f00a:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 801f00e:	3b01      	subs	r3, #1
 801f010:	009b      	lsls	r3, r3, #2
 801f012:	3304      	adds	r3, #4
 801f014:	eb08 0c03 	add.w	ip, r8, r3
 801f018:	f858 3003 	ldr.w	r3, [r8, r3]
 801f01c:	9308      	str	r3, [sp, #32]
 801f01e:	0e1b      	lsrs	r3, r3, #24
 801f020:	9310      	str	r3, [sp, #64]	; 0x40
 801f022:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801f026:	930c      	str	r3, [sp, #48]	; 0x30
 801f028:	0e1b      	lsrs	r3, r3, #24
 801f02a:	9313      	str	r3, [sp, #76]	; 0x4c
 801f02c:	b289      	uxth	r1, r1
 801f02e:	b280      	uxth	r0, r0
 801f030:	fb01 f900 	mul.w	r9, r1, r0
 801f034:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f038:	0109      	lsls	r1, r1, #4
 801f03a:	eba1 0809 	sub.w	r8, r1, r9
 801f03e:	b280      	uxth	r0, r0
 801f040:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 801f044:	9b12      	ldr	r3, [sp, #72]	; 0x48
 801f046:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f048:	fa1f f888 	uxth.w	r8, r8
 801f04c:	1a09      	subs	r1, r1, r0
 801f04e:	b289      	uxth	r1, r1
 801f050:	fb08 f303 	mul.w	r3, r8, r3
 801f054:	fb01 330e 	mla	r3, r1, lr, r3
 801f058:	fb00 3305 	mla	r3, r0, r5, r3
 801f05c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f05e:	fb09 3305 	mla	r3, r9, r5, r3
 801f062:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f066:	2b00      	cmp	r3, #0
 801f068:	f000 80d2 	beq.w	801f210 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f06c:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 801f070:	d01b      	beq.n	801f0aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 801f072:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 801f076:	fb0e fa0a 	mul.w	sl, lr, sl
 801f07a:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801f07e:	fb0e fe02 	mul.w	lr, lr, r2
 801f082:	ea4f 221a 	mov.w	r2, sl, lsr #8
 801f086:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801f08a:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f08e:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 801f092:	4452      	add	r2, sl
 801f094:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f098:	0a12      	lsrs	r2, r2, #8
 801f09a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f09e:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 801f0a2:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f0a6:	ea42 020c 	orr.w	r2, r2, ip
 801f0aa:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f0ac:	2dff      	cmp	r5, #255	; 0xff
 801f0ae:	d021      	beq.n	801f0f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 801f0b0:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801f0b2:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801f0b6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f0b8:	fb05 fb0b 	mul.w	fp, r5, fp
 801f0bc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801f0be:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f0c2:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801f0c4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f0c8:	fb05 fa0a 	mul.w	sl, r5, sl
 801f0cc:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f0d0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f0d4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f0d8:	44de      	add	lr, fp
 801f0da:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f0de:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f0e2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f0e6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f0ea:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f0ee:	ea4e 050a 	orr.w	r5, lr, sl
 801f0f2:	950b      	str	r5, [sp, #44]	; 0x2c
 801f0f4:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f0f6:	2dff      	cmp	r5, #255	; 0xff
 801f0f8:	d021      	beq.n	801f13e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801f0fa:	9d08      	ldr	r5, [sp, #32]
 801f0fc:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801f100:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f102:	fb05 fb0b 	mul.w	fp, r5, fp
 801f106:	9d08      	ldr	r5, [sp, #32]
 801f108:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801f10c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f10e:	fb05 fa0e 	mul.w	sl, r5, lr
 801f112:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f116:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f11a:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f11e:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f122:	44de      	add	lr, fp
 801f124:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f128:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f12c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f130:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f134:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f138:	ea4e 050a 	orr.w	r5, lr, sl
 801f13c:	9508      	str	r5, [sp, #32]
 801f13e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f140:	2dff      	cmp	r5, #255	; 0xff
 801f142:	d021      	beq.n	801f188 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 801f144:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f146:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801f14a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f14c:	fb05 fb0b 	mul.w	fp, r5, fp
 801f150:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f152:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f156:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801f158:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801f15c:	fb05 fa0a 	mul.w	sl, r5, sl
 801f160:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f164:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801f168:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801f16c:	44de      	add	lr, fp
 801f16e:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801f172:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801f176:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f17a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801f17e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f182:	ea4e 050a 	orr.w	r5, lr, sl
 801f186:	950c      	str	r5, [sp, #48]	; 0x30
 801f188:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801f18a:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f18e:	9d08      	ldr	r5, [sp, #32]
 801f190:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 801f194:	fb08 fc0c 	mul.w	ip, r8, ip
 801f198:	fb01 cc0e 	mla	ip, r1, lr, ip
 801f19c:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801f1a0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801f1a2:	fb00 cc0e 	mla	ip, r0, lr, ip
 801f1a6:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 801f1aa:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801f1ac:	fb09 cc0e 	mla	ip, r9, lr, ip
 801f1b0:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801f1b4:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 801f1b8:	fb08 f80e 	mul.w	r8, r8, lr
 801f1bc:	fb01 8202 	mla	r2, r1, r2, r8
 801f1c0:	9908      	ldr	r1, [sp, #32]
 801f1c2:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801f1c6:	990c      	ldr	r1, [sp, #48]	; 0x30
 801f1c8:	fb00 220a 	mla	r2, r0, sl, r2
 801f1cc:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 801f1d0:	fb09 2900 	mla	r9, r9, r0, r2
 801f1d4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f1d8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801f1dc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f1e0:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 801f1e4:	ea4c 0c09 	orr.w	ip, ip, r9
 801f1e8:	2bff      	cmp	r3, #255	; 0xff
 801f1ea:	ea4f 221c 	mov.w	r2, ip, lsr #8
 801f1ee:	f040 8091 	bne.w	801f314 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 801f1f2:	ea4f 135c 	mov.w	r3, ip, lsr #5
 801f1f6:	f422 62ff 	bic.w	r2, r2, #2040	; 0x7f8
 801f1fa:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f1fe:	f022 0207 	bic.w	r2, r2, #7
 801f202:	431a      	orrs	r2, r3
 801f204:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 801f208:	ea4c 0c02 	orr.w	ip, ip, r2
 801f20c:	f8a7 c000 	strh.w	ip, [r7]
 801f210:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f212:	441c      	add	r4, r3
 801f214:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f216:	441e      	add	r6, r3
 801f218:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801f21a:	3b01      	subs	r3, #1
 801f21c:	3702      	adds	r7, #2
 801f21e:	9317      	str	r3, [sp, #92]	; 0x5c
 801f220:	e6c0      	b.n	801efa4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 801f222:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f224:	441c      	add	r4, r3
 801f226:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f228:	441e      	add	r6, r3
 801f22a:	9b07      	ldr	r3, [sp, #28]
 801f22c:	3b01      	subs	r3, #1
 801f22e:	9307      	str	r3, [sp, #28]
 801f230:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f232:	3302      	adds	r3, #2
 801f234:	930a      	str	r3, [sp, #40]	; 0x28
 801f236:	e695      	b.n	801ef64 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f238:	d024      	beq.n	801f284 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 801f23a:	9b07      	ldr	r3, [sp, #28]
 801f23c:	9827      	ldr	r0, [sp, #156]	; 0x9c
 801f23e:	3b01      	subs	r3, #1
 801f240:	fb00 4003 	mla	r0, r0, r3, r4
 801f244:	1400      	asrs	r0, r0, #16
 801f246:	f53f aeaa 	bmi.w	801ef9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f24a:	3901      	subs	r1, #1
 801f24c:	4288      	cmp	r0, r1
 801f24e:	f6bf aea6 	bge.w	801ef9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f252:	9928      	ldr	r1, [sp, #160]	; 0xa0
 801f254:	fb01 6303 	mla	r3, r1, r3, r6
 801f258:	141b      	asrs	r3, r3, #16
 801f25a:	f53f aea0 	bmi.w	801ef9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f25e:	3a01      	subs	r2, #1
 801f260:	4293      	cmp	r3, r2
 801f262:	f6bf ae9c 	bge.w	801ef9e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 801f266:	f8dd b01c 	ldr.w	fp, [sp, #28]
 801f26a:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 801f26e:	f1bb 0f00 	cmp.w	fp, #0
 801f272:	f300 809a 	bgt.w	801f3aa <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 801f276:	9b07      	ldr	r3, [sp, #28]
 801f278:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f27c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f27e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 801f282:	930a      	str	r3, [sp, #40]	; 0x28
 801f284:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801f286:	2b00      	cmp	r3, #0
 801f288:	f340 81eb 	ble.w	801f662 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 801f28c:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f290:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801f294:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f298:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f29a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f29e:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f2a2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f2a6:	eef0 6a62 	vmov.f32	s13, s5
 801f2aa:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f2ae:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f2b2:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f2b6:	ee16 4a90 	vmov	r4, s13
 801f2ba:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f2be:	eef0 6a43 	vmov.f32	s13, s6
 801f2c2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f2c6:	ee12 2a90 	vmov	r2, s5
 801f2ca:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f2ce:	fb92 f3f3 	sdiv	r3, r2, r3
 801f2d2:	ee13 2a10 	vmov	r2, s6
 801f2d6:	9327      	str	r3, [sp, #156]	; 0x9c
 801f2d8:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f2da:	fb92 f3f3 	sdiv	r3, r2, r3
 801f2de:	9328      	str	r3, [sp, #160]	; 0xa0
 801f2e0:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801f2e2:	9a18      	ldr	r2, [sp, #96]	; 0x60
 801f2e4:	3b01      	subs	r3, #1
 801f2e6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f2ea:	9316      	str	r3, [sp, #88]	; 0x58
 801f2ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801f2ee:	bf08      	it	eq
 801f2f0:	4613      	moveq	r3, r2
 801f2f2:	ee16 6a90 	vmov	r6, s13
 801f2f6:	9307      	str	r3, [sp, #28]
 801f2f8:	eeb0 3a67 	vmov.f32	s6, s15
 801f2fc:	eef0 2a47 	vmov.f32	s5, s14
 801f300:	e622      	b.n	801ef48 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 801f302:	2800      	cmp	r0, #0
 801f304:	f43f ae92 	beq.w	801f02c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f308:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 801f30c:	9308      	str	r3, [sp, #32]
 801f30e:	0e1b      	lsrs	r3, r3, #24
 801f310:	9310      	str	r3, [sp, #64]	; 0x40
 801f312:	e68b      	b.n	801f02c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 801f314:	8839      	ldrh	r1, [r7, #0]
 801f316:	4dd4      	ldr	r5, [pc, #848]	; (801f668 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f318:	43db      	mvns	r3, r3
 801f31a:	ea4f 2e21 	mov.w	lr, r1, asr #8
 801f31e:	fa5f f883 	uxtb.w	r8, r3
 801f322:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 801f326:	fb0e fe08 	mul.w	lr, lr, r8
 801f32a:	10c8      	asrs	r0, r1, #3
 801f32c:	00cb      	lsls	r3, r1, #3
 801f32e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f332:	f10e 0101 	add.w	r1, lr, #1
 801f336:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 801f33a:	fb00 f008 	mul.w	r0, r0, r8
 801f33e:	ea4f 411c 	mov.w	r1, ip, lsr #16
 801f342:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 801f346:	f100 0e01 	add.w	lr, r0, #1
 801f34a:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 801f34e:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 801f352:	b2db      	uxtb	r3, r3
 801f354:	b2c9      	uxtb	r1, r1
 801f356:	00d2      	lsls	r2, r2, #3
 801f358:	fb03 f308 	mul.w	r3, r3, r8
 801f35c:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 801f360:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f364:	430a      	orrs	r2, r1
 801f366:	1c59      	adds	r1, r3, #1
 801f368:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801f36c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801f370:	e748      	b.n	801f204 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 801f372:	f112 0801 	adds.w	r8, r2, #1
 801f376:	f53f af4b 	bmi.w	801f210 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f37a:	4543      	cmp	r3, r8
 801f37c:	f6ff af48 	blt.w	801f210 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f380:	f11c 0801 	adds.w	r8, ip, #1
 801f384:	f53f af44 	bmi.w	801f210 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f388:	45c6      	cmp	lr, r8
 801f38a:	f6ff af41 	blt.w	801f210 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f38e:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 801f392:	fa0f f28e 	sxth.w	r2, lr
 801f396:	e9cd 1003 	strd	r1, r0, [sp, #12]
 801f39a:	9200      	str	r2, [sp, #0]
 801f39c:	b21b      	sxth	r3, r3
 801f39e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f3a0:	9819      	ldr	r0, [sp, #100]	; 0x64
 801f3a2:	4639      	mov	r1, r7
 801f3a4:	f7ff fc87 	bl	801ecb6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 801f3a8:	e732      	b.n	801f210 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 801f3aa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801f3ac:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801f3ae:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 801f3b2:	1421      	asrs	r1, r4, #16
 801f3b4:	1433      	asrs	r3, r6, #16
 801f3b6:	fb07 1303 	mla	r3, r7, r3, r1
 801f3ba:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801f3bc:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801f3c0:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801f3c4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f3c8:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f3cc:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801f3d0:	2a00      	cmp	r2, #0
 801f3d2:	f000 8107 	beq.w	801f5e4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 801f3d6:	684d      	ldr	r5, [r1, #4]
 801f3d8:	950d      	str	r5, [sp, #52]	; 0x34
 801f3da:	0e2d      	lsrs	r5, r5, #24
 801f3dc:	9514      	str	r5, [sp, #80]	; 0x50
 801f3de:	b178      	cbz	r0, 801f400 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f3e0:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 801f3e4:	3f01      	subs	r7, #1
 801f3e6:	00bf      	lsls	r7, r7, #2
 801f3e8:	3704      	adds	r7, #4
 801f3ea:	eb01 0e07 	add.w	lr, r1, r7
 801f3ee:	59c9      	ldr	r1, [r1, r7]
 801f3f0:	9109      	str	r1, [sp, #36]	; 0x24
 801f3f2:	0e09      	lsrs	r1, r1, #24
 801f3f4:	9111      	str	r1, [sp, #68]	; 0x44
 801f3f6:	f8de 1004 	ldr.w	r1, [lr, #4]
 801f3fa:	910e      	str	r1, [sp, #56]	; 0x38
 801f3fc:	0e09      	lsrs	r1, r1, #24
 801f3fe:	9115      	str	r1, [sp, #84]	; 0x54
 801f400:	b292      	uxth	r2, r2
 801f402:	b280      	uxth	r0, r0
 801f404:	fb02 f900 	mul.w	r9, r2, r0
 801f408:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801f40c:	0112      	lsls	r2, r2, #4
 801f40e:	eba2 0e09 	sub.w	lr, r2, r9
 801f412:	b280      	uxth	r0, r0
 801f414:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 801f418:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801f41a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f41c:	fa1f fe8e 	uxth.w	lr, lr
 801f420:	1a09      	subs	r1, r1, r0
 801f422:	b289      	uxth	r1, r1
 801f424:	fb0e f202 	mul.w	r2, lr, r2
 801f428:	fb01 220c 	mla	r2, r1, ip, r2
 801f42c:	fb00 2205 	mla	r2, r0, r5, r2
 801f430:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f432:	fb09 2205 	mla	r2, r9, r5, r2
 801f436:	f3c2 2207 	ubfx	r2, r2, #8, #8
 801f43a:	2a00      	cmp	r2, #0
 801f43c:	f000 80c9 	beq.w	801f5d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f440:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801f444:	d019      	beq.n	801f47a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 801f446:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 801f44a:	fb0c fa0a 	mul.w	sl, ip, sl
 801f44e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f452:	fb0c fc03 	mul.w	ip, ip, r3
 801f456:	ea4f 231a 	mov.w	r3, sl, lsr #8
 801f45a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f45e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801f462:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 801f466:	4453      	add	r3, sl
 801f468:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801f46c:	0a1b      	lsrs	r3, r3, #8
 801f46e:	0a3f      	lsrs	r7, r7, #8
 801f470:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801f474:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 801f478:	433b      	orrs	r3, r7
 801f47a:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f47c:	2dff      	cmp	r5, #255	; 0xff
 801f47e:	d020      	beq.n	801f4c2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 801f480:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f482:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f486:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f488:	436f      	muls	r7, r5
 801f48a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f48c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f490:	9d14      	ldr	r5, [sp, #80]	; 0x50
 801f492:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f496:	fb05 fa0a 	mul.w	sl, r5, sl
 801f49a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f49e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f4a2:	44bc      	add	ip, r7
 801f4a4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f4a8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f4ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f4b0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f4b4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f4b8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f4bc:	ea4c 050a 	orr.w	r5, ip, sl
 801f4c0:	950d      	str	r5, [sp, #52]	; 0x34
 801f4c2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f4c4:	2dff      	cmp	r5, #255	; 0xff
 801f4c6:	d020      	beq.n	801f50a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 801f4c8:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f4ca:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f4ce:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f4d0:	436f      	muls	r7, r5
 801f4d2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f4d4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801f4d8:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801f4da:	fb05 fa0c 	mul.w	sl, r5, ip
 801f4de:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f4e2:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f4e6:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f4ea:	44bc      	add	ip, r7
 801f4ec:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f4f0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f4f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f4f8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f4fc:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f500:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f504:	ea4c 050a 	orr.w	r5, ip, sl
 801f508:	9509      	str	r5, [sp, #36]	; 0x24
 801f50a:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f50c:	2dff      	cmp	r5, #255	; 0xff
 801f50e:	d020      	beq.n	801f552 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 801f510:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f512:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f516:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f518:	436f      	muls	r7, r5
 801f51a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f51c:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801f520:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801f522:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 801f526:	fb05 fa0a 	mul.w	sl, r5, sl
 801f52a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801f52e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f532:	44bc      	add	ip, r7
 801f534:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801f538:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801f53c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f540:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801f544:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801f548:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801f54c:	ea4c 050a 	orr.w	r5, ip, sl
 801f550:	950e      	str	r5, [sp, #56]	; 0x38
 801f552:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f554:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801f558:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801f55a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 801f55e:	fb0e f707 	mul.w	r7, lr, r7
 801f562:	fb01 770c 	mla	r7, r1, ip, r7
 801f566:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f56a:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801f56c:	fb00 770c 	mla	r7, r0, ip, r7
 801f570:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 801f574:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801f576:	fb09 770c 	mla	r7, r9, ip, r7
 801f57a:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 801f57e:	fb0e fe0c 	mul.w	lr, lr, ip
 801f582:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801f586:	fb01 e303 	mla	r3, r1, r3, lr
 801f58a:	9909      	ldr	r1, [sp, #36]	; 0x24
 801f58c:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 801f590:	990e      	ldr	r1, [sp, #56]	; 0x38
 801f592:	fb00 330a 	mla	r3, r0, sl, r3
 801f596:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 801f59a:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f59e:	0a3f      	lsrs	r7, r7, #8
 801f5a0:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801f5a4:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 801f5a8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 801f5ac:	ea47 070c 	orr.w	r7, r7, ip
 801f5b0:	2aff      	cmp	r2, #255	; 0xff
 801f5b2:	ea4f 2317 	mov.w	r3, r7, lsr #8
 801f5b6:	d11e      	bne.n	801f5f6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 801f5b8:	097a      	lsrs	r2, r7, #5
 801f5ba:	f423 63ff 	bic.w	r3, r3, #2040	; 0x7f8
 801f5be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801f5c2:	f023 0307 	bic.w	r3, r3, #7
 801f5c6:	4313      	orrs	r3, r2
 801f5c8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f5cc:	431f      	orrs	r7, r3
 801f5ce:	f8a8 7000 	strh.w	r7, [r8]
 801f5d2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801f5d4:	441c      	add	r4, r3
 801f5d6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f5d8:	f108 0802 	add.w	r8, r8, #2
 801f5dc:	441e      	add	r6, r3
 801f5de:	f10b 3bff 	add.w	fp, fp, #4294967295
 801f5e2:	e644      	b.n	801f26e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 801f5e4:	2800      	cmp	r0, #0
 801f5e6:	f43f af0b 	beq.w	801f400 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f5ea:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801f5ee:	9109      	str	r1, [sp, #36]	; 0x24
 801f5f0:	0e09      	lsrs	r1, r1, #24
 801f5f2:	9111      	str	r1, [sp, #68]	; 0x44
 801f5f4:	e704      	b.n	801f400 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f5f6:	f8b8 1000 	ldrh.w	r1, [r8]
 801f5fa:	43d2      	mvns	r2, r2
 801f5fc:	ea4f 2c21 	mov.w	ip, r1, asr #8
 801f600:	fa5f fe82 	uxtb.w	lr, r2
 801f604:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801f608:	fb0c fc0e 	mul.w	ip, ip, lr
 801f60c:	10c8      	asrs	r0, r1, #3
 801f60e:	00ca      	lsls	r2, r1, #3
 801f610:	f10c 0101 	add.w	r1, ip, #1
 801f614:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f618:	0c39      	lsrs	r1, r7, #16
 801f61a:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801f61e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f622:	4911      	ldr	r1, [pc, #68]	; (801f668 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 801f624:	fb00 f00e 	mul.w	r0, r0, lr
 801f628:	fa5f fc8c 	uxtb.w	ip, ip
 801f62c:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 801f630:	b2d2      	uxtb	r2, r2
 801f632:	1c41      	adds	r1, r0, #1
 801f634:	fb02 f20e 	mul.w	r2, r2, lr
 801f638:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801f63c:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801f640:	1c51      	adds	r1, r2, #1
 801f642:	00c0      	lsls	r0, r0, #3
 801f644:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801f648:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f64c:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801f650:	ea4c 0c00 	orr.w	ip, ip, r0
 801f654:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801f658:	ea47 0c0c 	orr.w	ip, r7, ip
 801f65c:	f8a8 c000 	strh.w	ip, [r8]
 801f660:	e7b7      	b.n	801f5d2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 801f662:	b01b      	add	sp, #108	; 0x6c
 801f664:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f668:	fffff800 	.word	0xfffff800

0801f66c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 801f66c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f670:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801f674:	2d00      	cmp	r5, #0
 801f676:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801f67a:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801f67e:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801f682:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801f686:	fb05 0e03 	mla	lr, r5, r3, r0
 801f68a:	f2c0 808c 	blt.w	801f7a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f68e:	45a9      	cmp	r9, r5
 801f690:	f340 8089 	ble.w	801f7a6 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 801f694:	2800      	cmp	r0, #0
 801f696:	f2c0 8084 	blt.w	801f7a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f69a:	4580      	cmp	r8, r0
 801f69c:	f340 8081 	ble.w	801f7a2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 801f6a0:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801f6a4:	f01e 0f01 	tst.w	lr, #1
 801f6a8:	5d16      	ldrb	r6, [r2, r4]
 801f6aa:	bf0c      	ite	eq
 801f6ac:	f006 060f 	andeq.w	r6, r6, #15
 801f6b0:	1136      	asrne	r6, r6, #4
 801f6b2:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801f6b6:	b2f6      	uxtb	r6, r6
 801f6b8:	1c44      	adds	r4, r0, #1
 801f6ba:	d477      	bmi.n	801f7ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f6bc:	45a0      	cmp	r8, r4
 801f6be:	dd75      	ble.n	801f7ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 801f6c0:	2f00      	cmp	r7, #0
 801f6c2:	d075      	beq.n	801f7b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 801f6c4:	f10e 0a01 	add.w	sl, lr, #1
 801f6c8:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801f6cc:	f01a 0f01 	tst.w	sl, #1
 801f6d0:	5d14      	ldrb	r4, [r2, r4]
 801f6d2:	bf0c      	ite	eq
 801f6d4:	f004 040f 	andeq.w	r4, r4, #15
 801f6d8:	1124      	asrne	r4, r4, #4
 801f6da:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801f6de:	b2e4      	uxtb	r4, r4
 801f6e0:	3501      	adds	r5, #1
 801f6e2:	d469      	bmi.n	801f7b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f6e4:	45a9      	cmp	r9, r5
 801f6e6:	dd67      	ble.n	801f7b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 801f6e8:	f1bc 0f00 	cmp.w	ip, #0
 801f6ec:	d067      	beq.n	801f7be <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 801f6ee:	2800      	cmp	r0, #0
 801f6f0:	db60      	blt.n	801f7b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f6f2:	4580      	cmp	r8, r0
 801f6f4:	dd5e      	ble.n	801f7b4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 801f6f6:	eb03 090e 	add.w	r9, r3, lr
 801f6fa:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801f6fe:	f019 0f01 	tst.w	r9, #1
 801f702:	5d55      	ldrb	r5, [r2, r5]
 801f704:	bf0c      	ite	eq
 801f706:	f005 050f 	andeq.w	r5, r5, #15
 801f70a:	112d      	asrne	r5, r5, #4
 801f70c:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801f710:	b2ed      	uxtb	r5, r5
 801f712:	3001      	adds	r0, #1
 801f714:	d456      	bmi.n	801f7c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f716:	4580      	cmp	r8, r0
 801f718:	dd54      	ble.n	801f7c4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 801f71a:	2f00      	cmp	r7, #0
 801f71c:	d054      	beq.n	801f7c8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 801f71e:	3301      	adds	r3, #1
 801f720:	449e      	add	lr, r3
 801f722:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801f726:	f01e 0f01 	tst.w	lr, #1
 801f72a:	5cd0      	ldrb	r0, [r2, r3]
 801f72c:	bf0c      	ite	eq
 801f72e:	f000 000f 	andeq.w	r0, r0, #15
 801f732:	1100      	asrne	r0, r0, #4
 801f734:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f738:	b2c3      	uxtb	r3, r0
 801f73a:	b2ba      	uxth	r2, r7
 801f73c:	fa1f fc8c 	uxth.w	ip, ip
 801f740:	fb02 f00c 	mul.w	r0, r2, ip
 801f744:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801f748:	0112      	lsls	r2, r2, #4
 801f74a:	fa1f fc8c 	uxth.w	ip, ip
 801f74e:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801f752:	1a12      	subs	r2, r2, r0
 801f754:	eba7 070c 	sub.w	r7, r7, ip
 801f758:	b292      	uxth	r2, r2
 801f75a:	b2bf      	uxth	r7, r7
 801f75c:	4362      	muls	r2, r4
 801f75e:	fb06 2207 	mla	r2, r6, r7, r2
 801f762:	fb0c 2505 	mla	r5, ip, r5, r2
 801f766:	fb00 5303 	mla	r3, r0, r3, r5
 801f76a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f76e:	b1b3      	cbz	r3, 801f79e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f770:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 801f774:	435a      	muls	r2, r3
 801f776:	1c53      	adds	r3, r2, #1
 801f778:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f77c:	4a2d      	ldr	r2, [pc, #180]	; (801f834 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801f77e:	121b      	asrs	r3, r3, #8
 801f780:	6812      	ldr	r2, [r2, #0]
 801f782:	2bff      	cmp	r3, #255	; 0xff
 801f784:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801f788:	d120      	bne.n	801f7cc <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 801f78a:	4b2b      	ldr	r3, [pc, #172]	; (801f838 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 801f78c:	0950      	lsrs	r0, r2, #5
 801f78e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f792:	4033      	ands	r3, r6
 801f794:	4318      	orrs	r0, r3
 801f796:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f79a:	4302      	orrs	r2, r0
 801f79c:	800a      	strh	r2, [r1, #0]
 801f79e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f7a2:	2600      	movs	r6, #0
 801f7a4:	e788      	b.n	801f6b8 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 801f7a6:	2400      	movs	r4, #0
 801f7a8:	4626      	mov	r6, r4
 801f7aa:	e799      	b.n	801f6e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f7ac:	2400      	movs	r4, #0
 801f7ae:	e797      	b.n	801f6e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f7b0:	463c      	mov	r4, r7
 801f7b2:	e795      	b.n	801f6e0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 801f7b4:	2500      	movs	r5, #0
 801f7b6:	e7ac      	b.n	801f712 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 801f7b8:	2300      	movs	r3, #0
 801f7ba:	461d      	mov	r5, r3
 801f7bc:	e7bd      	b.n	801f73a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f7be:	4663      	mov	r3, ip
 801f7c0:	4665      	mov	r5, ip
 801f7c2:	e7ba      	b.n	801f73a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f7c4:	2300      	movs	r3, #0
 801f7c6:	e7b8      	b.n	801f73a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f7c8:	463b      	mov	r3, r7
 801f7ca:	e7b6      	b.n	801f73a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 801f7cc:	880d      	ldrh	r5, [r1, #0]
 801f7ce:	b29f      	uxth	r7, r3
 801f7d0:	122c      	asrs	r4, r5, #8
 801f7d2:	f3c2 4007 	ubfx	r0, r2, #16, #8
 801f7d6:	43db      	mvns	r3, r3
 801f7d8:	b2db      	uxtb	r3, r3
 801f7da:	fb10 f007 	smulbb	r0, r0, r7
 801f7de:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801f7e2:	fb04 0403 	mla	r4, r4, r3, r0
 801f7e6:	b2f6      	uxtb	r6, r6
 801f7e8:	10e8      	asrs	r0, r5, #3
 801f7ea:	b2d2      	uxtb	r2, r2
 801f7ec:	00ed      	lsls	r5, r5, #3
 801f7ee:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801f7f2:	fb12 f207 	smulbb	r2, r2, r7
 801f7f6:	fb16 f607 	smulbb	r6, r6, r7
 801f7fa:	b2ed      	uxtb	r5, r5
 801f7fc:	b2a4      	uxth	r4, r4
 801f7fe:	fb00 6603 	mla	r6, r0, r3, r6
 801f802:	fb05 2303 	mla	r3, r5, r3, r2
 801f806:	b29a      	uxth	r2, r3
 801f808:	1c63      	adds	r3, r4, #1
 801f80a:	b2b0      	uxth	r0, r6
 801f80c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801f810:	1c53      	adds	r3, r2, #1
 801f812:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801f816:	1c42      	adds	r2, r0, #1
 801f818:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801f81c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801f820:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801f824:	0940      	lsrs	r0, r0, #5
 801f826:	4323      	orrs	r3, r4
 801f828:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801f82c:	4303      	orrs	r3, r0
 801f82e:	800b      	strh	r3, [r1, #0]
 801f830:	e7b5      	b.n	801f79e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 801f832:	bf00      	nop
 801f834:	20011e50 	.word	0x20011e50
 801f838:	00fff800 	.word	0x00fff800

0801f83c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f83c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f840:	b097      	sub	sp, #92	; 0x5c
 801f842:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 801f846:	9214      	str	r2, [sp, #80]	; 0x50
 801f848:	9309      	str	r3, [sp, #36]	; 0x24
 801f84a:	9a25      	ldr	r2, [sp, #148]	; 0x94
 801f84c:	f89d 30a4 	ldrb.w	r3, [sp, #164]	; 0xa4
 801f850:	910d      	str	r1, [sp, #52]	; 0x34
 801f852:	930f      	str	r3, [sp, #60]	; 0x3c
 801f854:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801f858:	9015      	str	r0, [sp, #84]	; 0x54
 801f85a:	6850      	ldr	r0, [r2, #4]
 801f85c:	6812      	ldr	r2, [r2, #0]
 801f85e:	fb00 1303 	mla	r3, r0, r3, r1
 801f862:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801f866:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f868:	689b      	ldr	r3, [r3, #8]
 801f86a:	3301      	adds	r3, #1
 801f86c:	f023 0301 	bic.w	r3, r3, #1
 801f870:	930a      	str	r3, [sp, #40]	; 0x28
 801f872:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f874:	681f      	ldr	r7, [r3, #0]
 801f876:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801f878:	2b00      	cmp	r3, #0
 801f87a:	dc03      	bgt.n	801f884 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 801f87c:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801f87e:	2b00      	cmp	r3, #0
 801f880:	f340 8287 	ble.w	801fd92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801f884:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f886:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f88a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f88e:	1e48      	subs	r0, r1, #1
 801f890:	f102 3cff 	add.w	ip, r2, #4294967295
 801f894:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f896:	2b00      	cmp	r3, #0
 801f898:	f340 80c4 	ble.w	801fa24 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801f89c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801f8a0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801f8a4:	d406      	bmi.n	801f8b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f8a6:	4586      	cmp	lr, r0
 801f8a8:	da04      	bge.n	801f8b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f8aa:	2b00      	cmp	r3, #0
 801f8ac:	db02      	blt.n	801f8b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 801f8ae:	4563      	cmp	r3, ip
 801f8b0:	f2c0 80b9 	blt.w	801fa26 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 801f8b4:	f11e 0e01 	adds.w	lr, lr, #1
 801f8b8:	f100 80aa 	bmi.w	801fa10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f8bc:	4571      	cmp	r1, lr
 801f8be:	f2c0 80a7 	blt.w	801fa10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f8c2:	3301      	adds	r3, #1
 801f8c4:	f100 80a4 	bmi.w	801fa10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f8c8:	429a      	cmp	r2, r3
 801f8ca:	f2c0 80a1 	blt.w	801fa10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 801f8ce:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f8d0:	f9bd a028 	ldrsh.w	sl, [sp, #40]	; 0x28
 801f8d4:	930e      	str	r3, [sp, #56]	; 0x38
 801f8d6:	46c8      	mov	r8, r9
 801f8d8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801f8da:	2b00      	cmp	r3, #0
 801f8dc:	f340 80c3 	ble.w	801fa66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801f8e0:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801f8e2:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801f8e6:	1423      	asrs	r3, r4, #16
 801f8e8:	ea4f 4026 	mov.w	r0, r6, asr #16
 801f8ec:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801f8f0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801f8f4:	f100 814d 	bmi.w	801fb92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f8f8:	f10c 3bff 	add.w	fp, ip, #4294967295
 801f8fc:	455b      	cmp	r3, fp
 801f8fe:	f280 8148 	bge.w	801fb92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f902:	2800      	cmp	r0, #0
 801f904:	f2c0 8145 	blt.w	801fb92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f908:	f10e 3bff 	add.w	fp, lr, #4294967295
 801f90c:	4558      	cmp	r0, fp
 801f90e:	f280 8140 	bge.w	801fb92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 801f912:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801f914:	fb00 3305 	mla	r3, r0, r5, r3
 801f918:	0858      	lsrs	r0, r3, #1
 801f91a:	07dd      	lsls	r5, r3, #31
 801f91c:	f817 c000 	ldrb.w	ip, [r7, r0]
 801f920:	bf54      	ite	pl
 801f922:	f00c 0c0f 	andpl.w	ip, ip, #15
 801f926:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801f92a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801f92e:	fa5f fc8c 	uxtb.w	ip, ip
 801f932:	2a00      	cmp	r2, #0
 801f934:	f000 80db 	beq.w	801faee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 801f938:	1c58      	adds	r0, r3, #1
 801f93a:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 801f93e:	07c0      	lsls	r0, r0, #31
 801f940:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801f944:	bf54      	ite	pl
 801f946:	f00e 0e0f 	andpl.w	lr, lr, #15
 801f94a:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 801f94e:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 801f952:	fa5f f08e 	uxtb.w	r0, lr
 801f956:	9010      	str	r0, [sp, #64]	; 0x40
 801f958:	b1c9      	cbz	r1, 801f98e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801f95a:	4453      	add	r3, sl
 801f95c:	0858      	lsrs	r0, r3, #1
 801f95e:	07dd      	lsls	r5, r3, #31
 801f960:	5c38      	ldrb	r0, [r7, r0]
 801f962:	bf54      	ite	pl
 801f964:	f000 000f 	andpl.w	r0, r0, #15
 801f968:	1100      	asrmi	r0, r0, #4
 801f96a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801f96e:	3301      	adds	r3, #1
 801f970:	b2c0      	uxtb	r0, r0
 801f972:	900b      	str	r0, [sp, #44]	; 0x2c
 801f974:	0858      	lsrs	r0, r3, #1
 801f976:	07dd      	lsls	r5, r3, #31
 801f978:	f817 e000 	ldrb.w	lr, [r7, r0]
 801f97c:	bf54      	ite	pl
 801f97e:	f00e 030f 	andpl.w	r3, lr, #15
 801f982:	ea4f 132e 	movmi.w	r3, lr, asr #4
 801f986:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801f98a:	b2db      	uxtb	r3, r3
 801f98c:	9311      	str	r3, [sp, #68]	; 0x44
 801f98e:	b292      	uxth	r2, r2
 801f990:	b289      	uxth	r1, r1
 801f992:	fb02 f301 	mul.w	r3, r2, r1
 801f996:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 801f99a:	0112      	lsls	r2, r2, #4
 801f99c:	b289      	uxth	r1, r1
 801f99e:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801f9a2:	9d10      	ldr	r5, [sp, #64]	; 0x40
 801f9a4:	1ad2      	subs	r2, r2, r3
 801f9a6:	1a40      	subs	r0, r0, r1
 801f9a8:	b292      	uxth	r2, r2
 801f9aa:	436a      	muls	r2, r5
 801f9ac:	b280      	uxth	r0, r0
 801f9ae:	fb0c 2c00 	mla	ip, ip, r0, r2
 801f9b2:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801f9b4:	fb01 c102 	mla	r1, r1, r2, ip
 801f9b8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 801f9ba:	fb03 1302 	mla	r3, r3, r2, r1
 801f9be:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801f9c2:	b1db      	cbz	r3, 801f9fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801f9c4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801f9c6:	4353      	muls	r3, r2
 801f9c8:	1c5a      	adds	r2, r3, #1
 801f9ca:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801f9ce:	4ac6      	ldr	r2, [pc, #792]	; (801fce8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801f9d0:	121b      	asrs	r3, r3, #8
 801f9d2:	6812      	ldr	r2, [r2, #0]
 801f9d4:	2bff      	cmp	r3, #255	; 0xff
 801f9d6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801f9da:	f040 8099 	bne.w	801fb10 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 801f9de:	0953      	lsrs	r3, r2, #5
 801f9e0:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801f9e4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801f9e8:	f02c 0c07 	bic.w	ip, ip, #7
 801f9ec:	ea43 0c0c 	orr.w	ip, r3, ip
 801f9f0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801f9f4:	ea4c 0202 	orr.w	r2, ip, r2
 801f9f8:	f8a8 2000 	strh.w	r2, [r8]
 801f9fc:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801f9fe:	441c      	add	r4, r3
 801fa00:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fa02:	441e      	add	r6, r3
 801fa04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801fa06:	3b01      	subs	r3, #1
 801fa08:	f108 0802 	add.w	r8, r8, #2
 801fa0c:	930e      	str	r3, [sp, #56]	; 0x38
 801fa0e:	e763      	b.n	801f8d8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801fa10:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801fa12:	441c      	add	r4, r3
 801fa14:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fa16:	441e      	add	r6, r3
 801fa18:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa1a:	3b01      	subs	r3, #1
 801fa1c:	9309      	str	r3, [sp, #36]	; 0x24
 801fa1e:	f109 0902 	add.w	r9, r9, #2
 801fa22:	e737      	b.n	801f894 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801fa24:	d024      	beq.n	801fa70 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801fa26:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa28:	9823      	ldr	r0, [sp, #140]	; 0x8c
 801fa2a:	3b01      	subs	r3, #1
 801fa2c:	fb00 4003 	mla	r0, r0, r3, r4
 801fa30:	1400      	asrs	r0, r0, #16
 801fa32:	f53f af4c 	bmi.w	801f8ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fa36:	3901      	subs	r1, #1
 801fa38:	4288      	cmp	r0, r1
 801fa3a:	f6bf af48 	bge.w	801f8ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fa3e:	9924      	ldr	r1, [sp, #144]	; 0x90
 801fa40:	fb01 6303 	mla	r3, r1, r3, r6
 801fa44:	141b      	asrs	r3, r3, #16
 801fa46:	f53f af42 	bmi.w	801f8ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fa4a:	3a01      	subs	r2, #1
 801fa4c:	4293      	cmp	r3, r2
 801fa4e:	f6bf af3e 	bge.w	801f8ce <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801fa52:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	; 0x28
 801fa56:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801fa5a:	930e      	str	r3, [sp, #56]	; 0x38
 801fa5c:	46c8      	mov	r8, r9
 801fa5e:	f1bb 0f00 	cmp.w	fp, #0
 801fa62:	f300 80b7 	bgt.w	801fbd4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801fa66:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fa68:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801fa6c:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801fa70:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801fa72:	2b00      	cmp	r3, #0
 801fa74:	f340 818d 	ble.w	801fd92 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 801fa78:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fa7c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801fa80:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fa84:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fa86:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fa8a:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fa8e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fa92:	eef0 6a62 	vmov.f32	s13, s5
 801fa96:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fa9a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fa9e:	ee77 2a62 	vsub.f32	s5, s14, s5
 801faa2:	ee16 4a90 	vmov	r4, s13
 801faa6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801faaa:	eef0 6a43 	vmov.f32	s13, s6
 801faae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fab2:	ee12 2a90 	vmov	r2, s5
 801fab6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801faba:	fb92 f3f3 	sdiv	r3, r2, r3
 801fabe:	ee13 2a10 	vmov	r2, s6
 801fac2:	9323      	str	r3, [sp, #140]	; 0x8c
 801fac4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fac6:	fb92 f3f3 	sdiv	r3, r2, r3
 801faca:	9324      	str	r3, [sp, #144]	; 0x90
 801facc:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801face:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801fad0:	3b01      	subs	r3, #1
 801fad2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fad6:	930d      	str	r3, [sp, #52]	; 0x34
 801fad8:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801fada:	bf08      	it	eq
 801fadc:	4613      	moveq	r3, r2
 801fade:	ee16 6a90 	vmov	r6, s13
 801fae2:	9309      	str	r3, [sp, #36]	; 0x24
 801fae4:	eeb0 3a67 	vmov.f32	s6, s15
 801fae8:	eef0 2a47 	vmov.f32	s5, s14
 801faec:	e6c3      	b.n	801f876 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 801faee:	2900      	cmp	r1, #0
 801faf0:	f43f af4d 	beq.w	801f98e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801faf4:	eb0a 0003 	add.w	r0, sl, r3
 801faf8:	0843      	lsrs	r3, r0, #1
 801fafa:	07c0      	lsls	r0, r0, #31
 801fafc:	5cfb      	ldrb	r3, [r7, r3]
 801fafe:	bf54      	ite	pl
 801fb00:	f003 030f 	andpl.w	r3, r3, #15
 801fb04:	111b      	asrmi	r3, r3, #4
 801fb06:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 801fb0a:	b2db      	uxtb	r3, r3
 801fb0c:	930b      	str	r3, [sp, #44]	; 0x2c
 801fb0e:	e73e      	b.n	801f98e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 801fb10:	f8b8 e000 	ldrh.w	lr, [r8]
 801fb14:	fa1f fb83 	uxth.w	fp, r3
 801fb18:	ea4f 202e 	mov.w	r0, lr, asr #8
 801fb1c:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801fb20:	43db      	mvns	r3, r3
 801fb22:	b2db      	uxtb	r3, r3
 801fb24:	fb11 f10b 	smulbb	r1, r1, fp
 801fb28:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fb2c:	fb00 1003 	mla	r0, r0, r3, r1
 801fb30:	fa5f fc8c 	uxtb.w	ip, ip
 801fb34:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801fb38:	b2d2      	uxtb	r2, r2
 801fb3a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801fb3e:	b280      	uxth	r0, r0
 801fb40:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fb44:	fb1c fc0b 	smulbb	ip, ip, fp
 801fb48:	fa5f fe8e 	uxtb.w	lr, lr
 801fb4c:	fb12 fb0b 	smulbb	fp, r2, fp
 801fb50:	fb01 cc03 	mla	ip, r1, r3, ip
 801fb54:	fb0e bb03 	mla	fp, lr, r3, fp
 801fb58:	1c43      	adds	r3, r0, #1
 801fb5a:	fa1f fc8c 	uxth.w	ip, ip
 801fb5e:	fa1f fb8b 	uxth.w	fp, fp
 801fb62:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fb66:	f400 4378 	and.w	r3, r0, #63488	; 0xf800
 801fb6a:	f10c 0101 	add.w	r1, ip, #1
 801fb6e:	f10b 0001 	add.w	r0, fp, #1
 801fb72:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 801fb76:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801fb7a:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801fb7e:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801fb82:	4318      	orrs	r0, r3
 801fb84:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801fb88:	ea40 000c 	orr.w	r0, r0, ip
 801fb8c:	f8a8 0000 	strh.w	r0, [r8]
 801fb90:	e734      	b.n	801f9fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fb92:	f113 0b01 	adds.w	fp, r3, #1
 801fb96:	f53f af31 	bmi.w	801f9fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fb9a:	45dc      	cmp	ip, fp
 801fb9c:	f6ff af2e 	blt.w	801f9fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fba0:	f110 0b01 	adds.w	fp, r0, #1
 801fba4:	f53f af2a 	bmi.w	801f9fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fba8:	45de      	cmp	lr, fp
 801fbaa:	f6ff af27 	blt.w	801f9fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fbae:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801fbb0:	9302      	str	r3, [sp, #8]
 801fbb2:	fa0f f38e 	sxth.w	r3, lr
 801fbb6:	9301      	str	r3, [sp, #4]
 801fbb8:	fa0f f38c 	sxth.w	r3, ip
 801fbbc:	e9cd 0203 	strd	r0, r2, [sp, #12]
 801fbc0:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801fbc4:	9300      	str	r3, [sp, #0]
 801fbc6:	463a      	mov	r2, r7
 801fbc8:	4653      	mov	r3, sl
 801fbca:	4641      	mov	r1, r8
 801fbcc:	9815      	ldr	r0, [sp, #84]	; 0x54
 801fbce:	f7ff fd4d 	bl	801f66c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801fbd2:	e713      	b.n	801f9fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 801fbd4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 801fbd6:	1422      	asrs	r2, r4, #16
 801fbd8:	1433      	asrs	r3, r6, #16
 801fbda:	fb05 2303 	mla	r3, r5, r3, r2
 801fbde:	085a      	lsrs	r2, r3, #1
 801fbe0:	07dd      	lsls	r5, r3, #31
 801fbe2:	5cba      	ldrb	r2, [r7, r2]
 801fbe4:	bf54      	ite	pl
 801fbe6:	f002 020f 	andpl.w	r2, r2, #15
 801fbea:	1112      	asrmi	r2, r2, #4
 801fbec:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801fbf0:	f3c4 3103 	ubfx	r1, r4, #12, #4
 801fbf4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801fbf8:	b2d2      	uxtb	r2, r2
 801fbfa:	2900      	cmp	r1, #0
 801fbfc:	d076      	beq.n	801fcec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 801fbfe:	f103 0e01 	add.w	lr, r3, #1
 801fc02:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 801fc06:	f01e 0f01 	tst.w	lr, #1
 801fc0a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fc0e:	bf0c      	ite	eq
 801fc10:	f00c 0c0f 	andeq.w	ip, ip, #15
 801fc14:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 801fc18:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fc1c:	fa5f f58c 	uxtb.w	r5, ip
 801fc20:	9512      	str	r5, [sp, #72]	; 0x48
 801fc22:	b300      	cbz	r0, 801fc66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801fc24:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801fc26:	442b      	add	r3, r5
 801fc28:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fc2c:	07dd      	lsls	r5, r3, #31
 801fc2e:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fc32:	bf54      	ite	pl
 801fc34:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fc38:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fc3c:	3301      	adds	r3, #1
 801fc3e:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fc42:	fa5f f58c 	uxtb.w	r5, ip
 801fc46:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fc4a:	950c      	str	r5, [sp, #48]	; 0x30
 801fc4c:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fc50:	07dd      	lsls	r5, r3, #31
 801fc52:	bf54      	ite	pl
 801fc54:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fc58:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fc5c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fc60:	fa5f f38c 	uxtb.w	r3, ip
 801fc64:	9313      	str	r3, [sp, #76]	; 0x4c
 801fc66:	b289      	uxth	r1, r1
 801fc68:	b280      	uxth	r0, r0
 801fc6a:	fb01 f300 	mul.w	r3, r1, r0
 801fc6e:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 801fc72:	0109      	lsls	r1, r1, #4
 801fc74:	b280      	uxth	r0, r0
 801fc76:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 801fc7a:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801fc7c:	1ac9      	subs	r1, r1, r3
 801fc7e:	ebac 0c00 	sub.w	ip, ip, r0
 801fc82:	b289      	uxth	r1, r1
 801fc84:	4369      	muls	r1, r5
 801fc86:	fa1f fc8c 	uxth.w	ip, ip
 801fc8a:	fb02 120c 	mla	r2, r2, ip, r1
 801fc8e:	990c      	ldr	r1, [sp, #48]	; 0x30
 801fc90:	fb00 2001 	mla	r0, r0, r1, r2
 801fc94:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 801fc96:	fb03 0302 	mla	r3, r3, r2, r0
 801fc9a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fc9e:	b1d3      	cbz	r3, 801fcd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801fca0:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801fca2:	4353      	muls	r3, r2
 801fca4:	1c5a      	adds	r2, r3, #1
 801fca6:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801fcaa:	4a0f      	ldr	r2, [pc, #60]	; (801fce8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 801fcac:	121b      	asrs	r3, r3, #8
 801fcae:	6812      	ldr	r2, [r2, #0]
 801fcb0:	2bff      	cmp	r3, #255	; 0xff
 801fcb2:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 801fcb6:	d12d      	bne.n	801fd14 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801fcb8:	0953      	lsrs	r3, r2, #5
 801fcba:	f42c 6cff 	bic.w	ip, ip, #2040	; 0x7f8
 801fcbe:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801fcc2:	f02c 0c07 	bic.w	ip, ip, #7
 801fcc6:	ea43 0c0c 	orr.w	ip, r3, ip
 801fcca:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801fcce:	ea4c 0202 	orr.w	r2, ip, r2
 801fcd2:	f8a8 2000 	strh.w	r2, [r8]
 801fcd6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 801fcd8:	441c      	add	r4, r3
 801fcda:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801fcdc:	f108 0802 	add.w	r8, r8, #2
 801fce0:	441e      	add	r6, r3
 801fce2:	f10b 3bff 	add.w	fp, fp, #4294967295
 801fce6:	e6ba      	b.n	801fa5e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 801fce8:	20011e50 	.word	0x20011e50
 801fcec:	2800      	cmp	r0, #0
 801fcee:	d0ba      	beq.n	801fc66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801fcf0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801fcf2:	442b      	add	r3, r5
 801fcf4:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 801fcf8:	07db      	lsls	r3, r3, #31
 801fcfa:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801fcfe:	bf54      	ite	pl
 801fd00:	f00c 0c0f 	andpl.w	ip, ip, #15
 801fd04:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 801fd08:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801fd0c:	fa5f f38c 	uxtb.w	r3, ip
 801fd10:	930c      	str	r3, [sp, #48]	; 0x30
 801fd12:	e7a8      	b.n	801fc66 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 801fd14:	f8b8 e000 	ldrh.w	lr, [r8]
 801fd18:	fa1f fa83 	uxth.w	sl, r3
 801fd1c:	ea4f 202e 	mov.w	r0, lr, asr #8
 801fd20:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801fd24:	43db      	mvns	r3, r3
 801fd26:	b2db      	uxtb	r3, r3
 801fd28:	fb11 f10a 	smulbb	r1, r1, sl
 801fd2c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801fd30:	fb00 1003 	mla	r0, r0, r3, r1
 801fd34:	b2d2      	uxtb	r2, r2
 801fd36:	ea4f 01ee 	mov.w	r1, lr, asr #3
 801fd3a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801fd3e:	fa5f fe8e 	uxtb.w	lr, lr
 801fd42:	fb12 f20a 	smulbb	r2, r2, sl
 801fd46:	fb0e 2203 	mla	r2, lr, r3, r2
 801fd4a:	fa5f fc8c 	uxtb.w	ip, ip
 801fd4e:	b280      	uxth	r0, r0
 801fd50:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 801fd54:	b292      	uxth	r2, r2
 801fd56:	fb1c fc0a 	smulbb	ip, ip, sl
 801fd5a:	fb01 cc03 	mla	ip, r1, r3, ip
 801fd5e:	1c43      	adds	r3, r0, #1
 801fd60:	1c51      	adds	r1, r2, #1
 801fd62:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801fd66:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 801fd6a:	fa1f fc8c 	uxth.w	ip, ip
 801fd6e:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801fd72:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 801fd76:	4308      	orrs	r0, r1
 801fd78:	f10c 0101 	add.w	r1, ip, #1
 801fd7c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 801fd80:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801fd84:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801fd88:	ea40 000c 	orr.w	r0, r0, ip
 801fd8c:	f8a8 0000 	strh.w	r0, [r8]
 801fd90:	e7a1      	b.n	801fcd6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 801fd92:	b017      	add	sp, #92	; 0x5c
 801fd94:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fd98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 801fd98:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801fd9c:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	; 0x28
 801fda0:	2d00      	cmp	r5, #0
 801fda2:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 801fda6:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 801fdaa:	f89d 7030 	ldrb.w	r7, [sp, #48]	; 0x30
 801fdae:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 801fdb2:	fb05 0e03 	mla	lr, r5, r3, r0
 801fdb6:	f2c0 80b0 	blt.w	801ff1a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801fdba:	45a9      	cmp	r9, r5
 801fdbc:	f340 80ad 	ble.w	801ff1a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 801fdc0:	2800      	cmp	r0, #0
 801fdc2:	f2c0 80a8 	blt.w	801ff16 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801fdc6:	4580      	cmp	r8, r0
 801fdc8:	f340 80a5 	ble.w	801ff16 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 801fdcc:	ea4f 045e 	mov.w	r4, lr, lsr #1
 801fdd0:	f01e 0f01 	tst.w	lr, #1
 801fdd4:	5d16      	ldrb	r6, [r2, r4]
 801fdd6:	bf0c      	ite	eq
 801fdd8:	f006 060f 	andeq.w	r6, r6, #15
 801fddc:	1136      	asrne	r6, r6, #4
 801fdde:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 801fde2:	b2f6      	uxtb	r6, r6
 801fde4:	1c44      	adds	r4, r0, #1
 801fde6:	f100 809b 	bmi.w	801ff20 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801fdea:	45a0      	cmp	r8, r4
 801fdec:	f340 8098 	ble.w	801ff20 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 801fdf0:	2f00      	cmp	r7, #0
 801fdf2:	f000 8097 	beq.w	801ff24 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 801fdf6:	f10e 0a01 	add.w	sl, lr, #1
 801fdfa:	ea4f 045a 	mov.w	r4, sl, lsr #1
 801fdfe:	f01a 0f01 	tst.w	sl, #1
 801fe02:	5d14      	ldrb	r4, [r2, r4]
 801fe04:	bf0c      	ite	eq
 801fe06:	f004 040f 	andeq.w	r4, r4, #15
 801fe0a:	1124      	asrne	r4, r4, #4
 801fe0c:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 801fe10:	b2e4      	uxtb	r4, r4
 801fe12:	3501      	adds	r5, #1
 801fe14:	f100 808a 	bmi.w	801ff2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801fe18:	45a9      	cmp	r9, r5
 801fe1a:	f340 8087 	ble.w	801ff2c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 801fe1e:	f1bc 0f00 	cmp.w	ip, #0
 801fe22:	f000 8086 	beq.w	801ff32 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 801fe26:	2800      	cmp	r0, #0
 801fe28:	db7e      	blt.n	801ff28 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801fe2a:	4580      	cmp	r8, r0
 801fe2c:	dd7c      	ble.n	801ff28 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 801fe2e:	eb03 090e 	add.w	r9, r3, lr
 801fe32:	ea4f 0559 	mov.w	r5, r9, lsr #1
 801fe36:	f019 0f01 	tst.w	r9, #1
 801fe3a:	5d55      	ldrb	r5, [r2, r5]
 801fe3c:	bf0c      	ite	eq
 801fe3e:	f005 050f 	andeq.w	r5, r5, #15
 801fe42:	112d      	asrne	r5, r5, #4
 801fe44:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 801fe48:	b2ed      	uxtb	r5, r5
 801fe4a:	3001      	adds	r0, #1
 801fe4c:	d474      	bmi.n	801ff38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801fe4e:	4580      	cmp	r8, r0
 801fe50:	dd72      	ble.n	801ff38 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 801fe52:	2f00      	cmp	r7, #0
 801fe54:	d072      	beq.n	801ff3c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 801fe56:	3301      	adds	r3, #1
 801fe58:	449e      	add	lr, r3
 801fe5a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801fe5e:	f01e 0f01 	tst.w	lr, #1
 801fe62:	5cd0      	ldrb	r0, [r2, r3]
 801fe64:	bf0c      	ite	eq
 801fe66:	f000 000f 	andeq.w	r0, r0, #15
 801fe6a:	1100      	asrne	r0, r0, #4
 801fe6c:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 801fe70:	b2c3      	uxtb	r3, r0
 801fe72:	b2ba      	uxth	r2, r7
 801fe74:	fa1f fc8c 	uxth.w	ip, ip
 801fe78:	fb02 f00c 	mul.w	r0, r2, ip
 801fe7c:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 801fe80:	0112      	lsls	r2, r2, #4
 801fe82:	fa1f fc8c 	uxth.w	ip, ip
 801fe86:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801fe8a:	1a12      	subs	r2, r2, r0
 801fe8c:	eba7 070c 	sub.w	r7, r7, ip
 801fe90:	b292      	uxth	r2, r2
 801fe92:	b2bf      	uxth	r7, r7
 801fe94:	4362      	muls	r2, r4
 801fe96:	fb06 2207 	mla	r2, r6, r7, r2
 801fe9a:	fb0c 2505 	mla	r5, ip, r5, r2
 801fe9e:	fb00 5303 	mla	r3, r0, r3, r5
 801fea2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801fea6:	b3a3      	cbz	r3, 801ff12 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 801fea8:	4a25      	ldr	r2, [pc, #148]	; (801ff40 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 801feaa:	880e      	ldrh	r6, [r1, #0]
 801feac:	6815      	ldr	r5, [r2, #0]
 801feae:	1234      	asrs	r4, r6, #8
 801feb0:	b29a      	uxth	r2, r3
 801feb2:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801feb6:	43db      	mvns	r3, r3
 801feb8:	b2db      	uxtb	r3, r3
 801feba:	fb10 f002 	smulbb	r0, r0, r2
 801febe:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801fec2:	fb04 0403 	mla	r4, r4, r3, r0
 801fec6:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801feca:	10f0      	asrs	r0, r6, #3
 801fecc:	b2ed      	uxtb	r5, r5
 801fece:	00f6      	lsls	r6, r6, #3
 801fed0:	fb17 f702 	smulbb	r7, r7, r2
 801fed4:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801fed8:	fb15 f202 	smulbb	r2, r5, r2
 801fedc:	b2f6      	uxtb	r6, r6
 801fede:	b2a4      	uxth	r4, r4
 801fee0:	fb00 7003 	mla	r0, r0, r3, r7
 801fee4:	fb06 2303 	mla	r3, r6, r3, r2
 801fee8:	b29a      	uxth	r2, r3
 801feea:	1c63      	adds	r3, r4, #1
 801feec:	b280      	uxth	r0, r0
 801feee:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801fef2:	1c53      	adds	r3, r2, #1
 801fef4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801fef8:	1c42      	adds	r2, r0, #1
 801fefa:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801fefe:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801ff02:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801ff06:	0940      	lsrs	r0, r0, #5
 801ff08:	4323      	orrs	r3, r4
 801ff0a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801ff0e:	4303      	orrs	r3, r0
 801ff10:	800b      	strh	r3, [r1, #0]
 801ff12:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ff16:	2600      	movs	r6, #0
 801ff18:	e764      	b.n	801fde4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 801ff1a:	2400      	movs	r4, #0
 801ff1c:	4626      	mov	r6, r4
 801ff1e:	e778      	b.n	801fe12 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801ff20:	2400      	movs	r4, #0
 801ff22:	e776      	b.n	801fe12 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801ff24:	463c      	mov	r4, r7
 801ff26:	e774      	b.n	801fe12 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 801ff28:	2500      	movs	r5, #0
 801ff2a:	e78e      	b.n	801fe4a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 801ff2c:	2300      	movs	r3, #0
 801ff2e:	461d      	mov	r5, r3
 801ff30:	e79f      	b.n	801fe72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801ff32:	4663      	mov	r3, ip
 801ff34:	4665      	mov	r5, ip
 801ff36:	e79c      	b.n	801fe72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801ff38:	2300      	movs	r3, #0
 801ff3a:	e79a      	b.n	801fe72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801ff3c:	463b      	mov	r3, r7
 801ff3e:	e798      	b.n	801fe72 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 801ff40:	20011e50 	.word	0x20011e50

0801ff44 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ff44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ff48:	b093      	sub	sp, #76	; 0x4c
 801ff4a:	461d      	mov	r5, r3
 801ff4c:	920c      	str	r2, [sp, #48]	; 0x30
 801ff4e:	9a21      	ldr	r2, [sp, #132]	; 0x84
 801ff50:	9107      	str	r1, [sp, #28]
 801ff52:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	; 0x88
 801ff56:	9011      	str	r0, [sp, #68]	; 0x44
 801ff58:	6850      	ldr	r0, [r2, #4]
 801ff5a:	6812      	ldr	r2, [r2, #0]
 801ff5c:	fb00 1303 	mla	r3, r0, r3, r1
 801ff60:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ff64:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ff66:	689b      	ldr	r3, [r3, #8]
 801ff68:	3301      	adds	r3, #1
 801ff6a:	f023 0301 	bic.w	r3, r3, #1
 801ff6e:	9306      	str	r3, [sp, #24]
 801ff70:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ff72:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	; 0x74
 801ff76:	681f      	ldr	r7, [r3, #0]
 801ff78:	9b07      	ldr	r3, [sp, #28]
 801ff7a:	2b00      	cmp	r3, #0
 801ff7c:	dc03      	bgt.n	801ff86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801ff7e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801ff80:	2b00      	cmp	r3, #0
 801ff82:	f340 8267 	ble.w	8020454 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 801ff86:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ff88:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801ff8c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801ff90:	1e48      	subs	r0, r1, #1
 801ff92:	f102 3cff 	add.w	ip, r2, #4294967295
 801ff96:	2d00      	cmp	r5, #0
 801ff98:	f340 80b8 	ble.w	802010c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 801ff9c:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801ffa0:	ea4f 4326 	mov.w	r3, r6, asr #16
 801ffa4:	d406      	bmi.n	801ffb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ffa6:	4586      	cmp	lr, r0
 801ffa8:	da04      	bge.n	801ffb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ffaa:	2b00      	cmp	r3, #0
 801ffac:	db02      	blt.n	801ffb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 801ffae:	4563      	cmp	r3, ip
 801ffb0:	f2c0 80ad 	blt.w	802010e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 801ffb4:	f11e 0e01 	adds.w	lr, lr, #1
 801ffb8:	f100 80a0 	bmi.w	80200fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801ffbc:	4571      	cmp	r1, lr
 801ffbe:	f2c0 809d 	blt.w	80200fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801ffc2:	3301      	adds	r3, #1
 801ffc4:	f100 809a 	bmi.w	80200fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801ffc8:	429a      	cmp	r2, r3
 801ffca:	f2c0 8097 	blt.w	80200fc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 801ffce:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 801ffd2:	9509      	str	r5, [sp, #36]	; 0x24
 801ffd4:	46c8      	mov	r8, r9
 801ffd6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801ffd8:	2b00      	cmp	r3, #0
 801ffda:	f340 80b6 	ble.w	802014a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 801ffde:	f3c4 3303 	ubfx	r3, r4, #12, #4
 801ffe2:	9308      	str	r3, [sp, #32]
 801ffe4:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801ffe6:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 801ffea:	1423      	asrs	r3, r4, #16
 801ffec:	ea4f 4026 	mov.w	r0, r6, asr #16
 801fff0:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801fff4:	f100 813e 	bmi.w	8020274 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 801fff8:	f10c 3bff 	add.w	fp, ip, #4294967295
 801fffc:	455b      	cmp	r3, fp
 801fffe:	f280 8139 	bge.w	8020274 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020002:	2800      	cmp	r0, #0
 8020004:	f2c0 8136 	blt.w	8020274 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020008:	f10e 3bff 	add.w	fp, lr, #4294967295
 802000c:	4558      	cmp	r0, fp
 802000e:	f280 8131 	bge.w	8020274 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8020012:	9a06      	ldr	r2, [sp, #24]
 8020014:	fb00 3302 	mla	r3, r0, r2, r3
 8020018:	0858      	lsrs	r0, r3, #1
 802001a:	07da      	lsls	r2, r3, #31
 802001c:	f817 c000 	ldrb.w	ip, [r7, r0]
 8020020:	9a08      	ldr	r2, [sp, #32]
 8020022:	bf54      	ite	pl
 8020024:	f00c 0c0f 	andpl.w	ip, ip, #15
 8020028:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 802002c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8020030:	fa5f fc8c 	uxtb.w	ip, ip
 8020034:	2a00      	cmp	r2, #0
 8020036:	f000 80cb 	beq.w	80201d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 802003a:	1c58      	adds	r0, r3, #1
 802003c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8020040:	07c0      	lsls	r0, r0, #31
 8020042:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8020046:	bf54      	ite	pl
 8020048:	f00e 0e0f 	andpl.w	lr, lr, #15
 802004c:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8020050:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8020054:	fa5f fe8e 	uxtb.w	lr, lr
 8020058:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 802005c:	b1b9      	cbz	r1, 802008e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802005e:	4453      	add	r3, sl
 8020060:	0858      	lsrs	r0, r3, #1
 8020062:	07da      	lsls	r2, r3, #31
 8020064:	5c38      	ldrb	r0, [r7, r0]
 8020066:	bf54      	ite	pl
 8020068:	f000 000f 	andpl.w	r0, r0, #15
 802006c:	1100      	asrmi	r0, r0, #4
 802006e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8020072:	b2c0      	uxtb	r0, r0
 8020074:	900a      	str	r0, [sp, #40]	; 0x28
 8020076:	1c58      	adds	r0, r3, #1
 8020078:	0843      	lsrs	r3, r0, #1
 802007a:	07c2      	lsls	r2, r0, #31
 802007c:	5cfb      	ldrb	r3, [r7, r3]
 802007e:	bf54      	ite	pl
 8020080:	f003 030f 	andpl.w	r3, r3, #15
 8020084:	111b      	asrmi	r3, r3, #4
 8020086:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 802008a:	b2db      	uxtb	r3, r3
 802008c:	930e      	str	r3, [sp, #56]	; 0x38
 802008e:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8020092:	b289      	uxth	r1, r1
 8020094:	fb02 f301 	mul.w	r3, r2, r1
 8020098:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 802009c:	0112      	lsls	r2, r2, #4
 802009e:	b289      	uxth	r1, r1
 80200a0:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 80200a4:	1a40      	subs	r0, r0, r1
 80200a6:	fa1f fe80 	uxth.w	lr, r0
 80200aa:	1ad2      	subs	r2, r2, r3
 80200ac:	980d      	ldr	r0, [sp, #52]	; 0x34
 80200ae:	b292      	uxth	r2, r2
 80200b0:	4342      	muls	r2, r0
 80200b2:	fb0c 2c0e 	mla	ip, ip, lr, r2
 80200b6:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80200b8:	fb01 c102 	mla	r1, r1, r2, ip
 80200bc:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80200be:	fb03 1302 	mla	r3, r3, r2, r1
 80200c2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80200c6:	2bff      	cmp	r3, #255	; 0xff
 80200c8:	f040 8093 	bne.w	80201f2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80200cc:	4bbe      	ldr	r3, [pc, #760]	; (80203c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80200ce:	681a      	ldr	r2, [r3, #0]
 80200d0:	4bbe      	ldr	r3, [pc, #760]	; (80203cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80200d2:	0951      	lsrs	r1, r2, #5
 80200d4:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80200d8:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80200dc:	430b      	orrs	r3, r1
 80200de:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 80200e2:	4313      	orrs	r3, r2
 80200e4:	f8a8 3000 	strh.w	r3, [r8]
 80200e8:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80200ea:	441c      	add	r4, r3
 80200ec:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80200ee:	441e      	add	r6, r3
 80200f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80200f2:	3b01      	subs	r3, #1
 80200f4:	f108 0802 	add.w	r8, r8, #2
 80200f8:	9309      	str	r3, [sp, #36]	; 0x24
 80200fa:	e76c      	b.n	801ffd6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80200fc:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 80200fe:	441c      	add	r4, r3
 8020100:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020102:	3d01      	subs	r5, #1
 8020104:	441e      	add	r6, r3
 8020106:	f109 0902 	add.w	r9, r9, #2
 802010a:	e744      	b.n	801ff96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 802010c:	d021      	beq.n	8020152 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 802010e:	981f      	ldr	r0, [sp, #124]	; 0x7c
 8020110:	1e6b      	subs	r3, r5, #1
 8020112:	fb00 4003 	mla	r0, r0, r3, r4
 8020116:	1400      	asrs	r0, r0, #16
 8020118:	f53f af59 	bmi.w	801ffce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 802011c:	3901      	subs	r1, #1
 802011e:	4288      	cmp	r0, r1
 8020120:	f6bf af55 	bge.w	801ffce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020124:	9920      	ldr	r1, [sp, #128]	; 0x80
 8020126:	fb01 6303 	mla	r3, r1, r3, r6
 802012a:	141b      	asrs	r3, r3, #16
 802012c:	f53f af4f 	bmi.w	801ffce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020130:	3a01      	subs	r2, #1
 8020132:	4293      	cmp	r3, r2
 8020134:	f6bf af4b 	bge.w	801ffce <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8020138:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 802013c:	9308      	str	r3, [sp, #32]
 802013e:	46a8      	mov	r8, r5
 8020140:	46ce      	mov	lr, r9
 8020142:	f1b8 0f00 	cmp.w	r8, #0
 8020146:	f300 80b5 	bgt.w	80202b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802014a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 802014e:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8020152:	9b07      	ldr	r3, [sp, #28]
 8020154:	2b00      	cmp	r3, #0
 8020156:	f340 817d 	ble.w	8020454 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 802015a:	ee30 0a04 	vadd.f32	s0, s0, s8
 802015e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8020162:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020166:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 8020168:	ee70 0aa4 	vadd.f32	s1, s1, s9
 802016c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020170:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020174:	eef0 6a62 	vmov.f32	s13, s5
 8020178:	ee61 7a27 	vmul.f32	s15, s2, s15
 802017c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020180:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020184:	ee16 4a90 	vmov	r4, s13
 8020188:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802018c:	eef0 6a43 	vmov.f32	s13, s6
 8020190:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020194:	ee12 2a90 	vmov	r2, s5
 8020198:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802019c:	fb92 f3f3 	sdiv	r3, r2, r3
 80201a0:	ee13 2a10 	vmov	r2, s6
 80201a4:	931f      	str	r3, [sp, #124]	; 0x7c
 80201a6:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80201a8:	fb92 f3f3 	sdiv	r3, r2, r3
 80201ac:	9320      	str	r3, [sp, #128]	; 0x80
 80201ae:	9b07      	ldr	r3, [sp, #28]
 80201b0:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80201b2:	3b01      	subs	r3, #1
 80201b4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80201b8:	9307      	str	r3, [sp, #28]
 80201ba:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80201bc:	ee16 6a90 	vmov	r6, s13
 80201c0:	bf14      	ite	ne
 80201c2:	461d      	movne	r5, r3
 80201c4:	4615      	moveq	r5, r2
 80201c6:	eeb0 3a67 	vmov.f32	s6, s15
 80201ca:	eef0 2a47 	vmov.f32	s5, s14
 80201ce:	e6d3      	b.n	801ff78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 80201d0:	2900      	cmp	r1, #0
 80201d2:	f43f af5c 	beq.w	802008e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80201d6:	eb0a 0003 	add.w	r0, sl, r3
 80201da:	0843      	lsrs	r3, r0, #1
 80201dc:	07c0      	lsls	r0, r0, #31
 80201de:	5cfb      	ldrb	r3, [r7, r3]
 80201e0:	bf54      	ite	pl
 80201e2:	f003 030f 	andpl.w	r3, r3, #15
 80201e6:	111b      	asrmi	r3, r3, #4
 80201e8:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80201ec:	b2db      	uxtb	r3, r3
 80201ee:	930a      	str	r3, [sp, #40]	; 0x28
 80201f0:	e74d      	b.n	802008e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 80201f2:	2b00      	cmp	r3, #0
 80201f4:	f43f af78 	beq.w	80200e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80201f8:	4a73      	ldr	r2, [pc, #460]	; (80203c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80201fa:	f8b8 c000 	ldrh.w	ip, [r8]
 80201fe:	6810      	ldr	r0, [r2, #0]
 8020200:	fa1f fe83 	uxth.w	lr, r3
 8020204:	ea4f 212c 	mov.w	r1, ip, asr #8
 8020208:	f3c0 4207 	ubfx	r2, r0, #16, #8
 802020c:	43db      	mvns	r3, r3
 802020e:	b2db      	uxtb	r3, r3
 8020210:	fb12 f20e 	smulbb	r2, r2, lr
 8020214:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8020218:	fb01 2103 	mla	r1, r1, r3, r2
 802021c:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8020220:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020224:	b2c0      	uxtb	r0, r0
 8020226:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802022a:	fb1b fb0e 	smulbb	fp, fp, lr
 802022e:	b289      	uxth	r1, r1
 8020230:	fb10 fe0e 	smulbb	lr, r0, lr
 8020234:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8020238:	fa5f fc8c 	uxtb.w	ip, ip
 802023c:	fb02 b203 	mla	r2, r2, r3, fp
 8020240:	1c48      	adds	r0, r1, #1
 8020242:	fb0c e303 	mla	r3, ip, r3, lr
 8020246:	b292      	uxth	r2, r2
 8020248:	b29b      	uxth	r3, r3
 802024a:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 802024e:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 8020252:	f102 0b01 	add.w	fp, r2, #1
 8020256:	1c59      	adds	r1, r3, #1
 8020258:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 802025c:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020260:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8020264:	0952      	lsrs	r2, r2, #5
 8020266:	4301      	orrs	r1, r0
 8020268:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802026c:	4311      	orrs	r1, r2
 802026e:	f8a8 1000 	strh.w	r1, [r8]
 8020272:	e739      	b.n	80200e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020274:	f113 0b01 	adds.w	fp, r3, #1
 8020278:	f53f af36 	bmi.w	80200e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802027c:	45dc      	cmp	ip, fp
 802027e:	f6ff af33 	blt.w	80200e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020282:	f110 0b01 	adds.w	fp, r0, #1
 8020286:	f53f af2f 	bmi.w	80200e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802028a:	45de      	cmp	lr, fp
 802028c:	f6ff af2c 	blt.w	80200e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8020290:	9a08      	ldr	r2, [sp, #32]
 8020292:	9302      	str	r3, [sp, #8]
 8020294:	fa0f f38e 	sxth.w	r3, lr
 8020298:	9301      	str	r3, [sp, #4]
 802029a:	fa0f f38c 	sxth.w	r3, ip
 802029e:	e9cd 0203 	strd	r0, r2, [sp, #12]
 80202a2:	9105      	str	r1, [sp, #20]
 80202a4:	9300      	str	r3, [sp, #0]
 80202a6:	463a      	mov	r2, r7
 80202a8:	4653      	mov	r3, sl
 80202aa:	4641      	mov	r1, r8
 80202ac:	9811      	ldr	r0, [sp, #68]	; 0x44
 80202ae:	f7ff fd73 	bl	801fd98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 80202b2:	e719      	b.n	80200e8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80202b4:	9906      	ldr	r1, [sp, #24]
 80202b6:	1422      	asrs	r2, r4, #16
 80202b8:	1433      	asrs	r3, r6, #16
 80202ba:	fb01 2303 	mla	r3, r1, r3, r2
 80202be:	085a      	lsrs	r2, r3, #1
 80202c0:	07d9      	lsls	r1, r3, #31
 80202c2:	5cba      	ldrb	r2, [r7, r2]
 80202c4:	bf54      	ite	pl
 80202c6:	f002 020f 	andpl.w	r2, r2, #15
 80202ca:	1112      	asrmi	r2, r2, #4
 80202cc:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 80202d0:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80202d4:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 80202d8:	b2d2      	uxtb	r2, r2
 80202da:	2800      	cmp	r0, #0
 80202dc:	d062      	beq.n	80203a4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 80202de:	f103 0a01 	add.w	sl, r3, #1
 80202e2:	ea4f 015a 	mov.w	r1, sl, lsr #1
 80202e6:	f01a 0f01 	tst.w	sl, #1
 80202ea:	5c79      	ldrb	r1, [r7, r1]
 80202ec:	bf0c      	ite	eq
 80202ee:	f001 010f 	andeq.w	r1, r1, #15
 80202f2:	1109      	asrne	r1, r1, #4
 80202f4:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80202f8:	b2c9      	uxtb	r1, r1
 80202fa:	910f      	str	r1, [sp, #60]	; 0x3c
 80202fc:	f1bc 0f00 	cmp.w	ip, #0
 8020300:	d019      	beq.n	8020336 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8020302:	9908      	ldr	r1, [sp, #32]
 8020304:	440b      	add	r3, r1
 8020306:	0859      	lsrs	r1, r3, #1
 8020308:	f013 0f01 	tst.w	r3, #1
 802030c:	5c79      	ldrb	r1, [r7, r1]
 802030e:	bf0c      	ite	eq
 8020310:	f001 010f 	andeq.w	r1, r1, #15
 8020314:	1109      	asrne	r1, r1, #4
 8020316:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 802031a:	b2c9      	uxtb	r1, r1
 802031c:	3301      	adds	r3, #1
 802031e:	910b      	str	r1, [sp, #44]	; 0x2c
 8020320:	0859      	lsrs	r1, r3, #1
 8020322:	07db      	lsls	r3, r3, #31
 8020324:	5c79      	ldrb	r1, [r7, r1]
 8020326:	bf54      	ite	pl
 8020328:	f001 010f 	andpl.w	r1, r1, #15
 802032c:	1109      	asrmi	r1, r1, #4
 802032e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8020332:	b2c9      	uxtb	r1, r1
 8020334:	9110      	str	r1, [sp, #64]	; 0x40
 8020336:	b280      	uxth	r0, r0
 8020338:	fa1f fc8c 	uxth.w	ip, ip
 802033c:	fb00 f30c 	mul.w	r3, r0, ip
 8020340:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 8020344:	0100      	lsls	r0, r0, #4
 8020346:	fa1f fc8c 	uxth.w	ip, ip
 802034a:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 802034e:	eba1 010c 	sub.w	r1, r1, ip
 8020352:	fa1f fa81 	uxth.w	sl, r1
 8020356:	1ac0      	subs	r0, r0, r3
 8020358:	990f      	ldr	r1, [sp, #60]	; 0x3c
 802035a:	b280      	uxth	r0, r0
 802035c:	4348      	muls	r0, r1
 802035e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8020360:	fb02 020a 	mla	r2, r2, sl, r0
 8020364:	fb0c 2c01 	mla	ip, ip, r1, r2
 8020368:	9a10      	ldr	r2, [sp, #64]	; 0x40
 802036a:	fb03 c302 	mla	r3, r3, r2, ip
 802036e:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8020372:	2bff      	cmp	r3, #255	; 0xff
 8020374:	d12c      	bne.n	80203d0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 8020376:	4b14      	ldr	r3, [pc, #80]	; (80203c8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8020378:	681a      	ldr	r2, [r3, #0]
 802037a:	4b14      	ldr	r3, [pc, #80]	; (80203cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 802037c:	0951      	lsrs	r1, r2, #5
 802037e:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8020382:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8020386:	430b      	orrs	r3, r1
 8020388:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802038c:	4313      	orrs	r3, r2
 802038e:	f8ae 3000 	strh.w	r3, [lr]
 8020392:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8020394:	441c      	add	r4, r3
 8020396:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8020398:	f10e 0e02 	add.w	lr, lr, #2
 802039c:	441e      	add	r6, r3
 802039e:	f108 38ff 	add.w	r8, r8, #4294967295
 80203a2:	e6ce      	b.n	8020142 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 80203a4:	f1bc 0f00 	cmp.w	ip, #0
 80203a8:	d0c5      	beq.n	8020336 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80203aa:	9908      	ldr	r1, [sp, #32]
 80203ac:	440b      	add	r3, r1
 80203ae:	0859      	lsrs	r1, r3, #1
 80203b0:	07db      	lsls	r3, r3, #31
 80203b2:	5c79      	ldrb	r1, [r7, r1]
 80203b4:	bf54      	ite	pl
 80203b6:	f001 010f 	andpl.w	r1, r1, #15
 80203ba:	1109      	asrmi	r1, r1, #4
 80203bc:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80203c0:	b2c9      	uxtb	r1, r1
 80203c2:	910b      	str	r1, [sp, #44]	; 0x2c
 80203c4:	e7b7      	b.n	8020336 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 80203c6:	bf00      	nop
 80203c8:	20011e50 	.word	0x20011e50
 80203cc:	fffff800 	.word	0xfffff800
 80203d0:	2b00      	cmp	r3, #0
 80203d2:	d0de      	beq.n	8020392 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80203d4:	4a21      	ldr	r2, [pc, #132]	; (802045c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 80203d6:	f8be c000 	ldrh.w	ip, [lr]
 80203da:	6810      	ldr	r0, [r2, #0]
 80203dc:	fa1f fa83 	uxth.w	sl, r3
 80203e0:	ea4f 212c 	mov.w	r1, ip, asr #8
 80203e4:	f3c0 4207 	ubfx	r2, r0, #16, #8
 80203e8:	43db      	mvns	r3, r3
 80203ea:	b2db      	uxtb	r3, r3
 80203ec:	fb12 f20a 	smulbb	r2, r2, sl
 80203f0:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80203f4:	fb01 2103 	mla	r1, r1, r3, r2
 80203f8:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 80203fc:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8020400:	b2c0      	uxtb	r0, r0
 8020402:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8020406:	fa5f fc8c 	uxtb.w	ip, ip
 802040a:	fb10 f00a 	smulbb	r0, r0, sl
 802040e:	fb0c 0003 	mla	r0, ip, r3, r0
 8020412:	b289      	uxth	r1, r1
 8020414:	fb1b fb0a 	smulbb	fp, fp, sl
 8020418:	b280      	uxth	r0, r0
 802041a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 802041e:	fb02 b203 	mla	r2, r2, r3, fp
 8020422:	1c4b      	adds	r3, r1, #1
 8020424:	f100 0b01 	add.w	fp, r0, #1
 8020428:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 802042c:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 8020430:	b292      	uxth	r2, r2
 8020432:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 8020436:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 802043a:	ea4b 0101 	orr.w	r1, fp, r1
 802043e:	f102 0b01 	add.w	fp, r2, #1
 8020442:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 8020446:	0952      	lsrs	r2, r2, #5
 8020448:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 802044c:	4311      	orrs	r1, r2
 802044e:	f8ae 1000 	strh.w	r1, [lr]
 8020452:	e79e      	b.n	8020392 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8020454:	b013      	add	sp, #76	; 0x4c
 8020456:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802045a:	bf00      	nop
 802045c:	20011e50 	.word	0x20011e50

08020460 <CRC_Lock>:
 8020460:	b530      	push	{r4, r5, lr}
 8020462:	4a20      	ldr	r2, [pc, #128]	; (80204e4 <CRC_Lock+0x84>)
 8020464:	6813      	ldr	r3, [r2, #0]
 8020466:	f023 0301 	bic.w	r3, r3, #1
 802046a:	6013      	str	r3, [r2, #0]
 802046c:	4b1e      	ldr	r3, [pc, #120]	; (80204e8 <CRC_Lock+0x88>)
 802046e:	681a      	ldr	r2, [r3, #0]
 8020470:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 8020474:	4022      	ands	r2, r4
 8020476:	f24c 2540 	movw	r5, #49728	; 0xc240
 802047a:	42aa      	cmp	r2, r5
 802047c:	d005      	beq.n	802048a <CRC_Lock+0x2a>
 802047e:	681b      	ldr	r3, [r3, #0]
 8020480:	f24c 2270 	movw	r2, #49776	; 0xc270
 8020484:	4023      	ands	r3, r4
 8020486:	4293      	cmp	r3, r2
 8020488:	d124      	bne.n	80204d4 <CRC_Lock+0x74>
 802048a:	4b18      	ldr	r3, [pc, #96]	; (80204ec <CRC_Lock+0x8c>)
 802048c:	681b      	ldr	r3, [r3, #0]
 802048e:	bb0b      	cbnz	r3, 80204d4 <CRC_Lock+0x74>
 8020490:	4b17      	ldr	r3, [pc, #92]	; (80204f0 <CRC_Lock+0x90>)
 8020492:	681a      	ldr	r2, [r3, #0]
 8020494:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8020498:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 802049c:	d00d      	beq.n	80204ba <CRC_Lock+0x5a>
 802049e:	681a      	ldr	r2, [r3, #0]
 80204a0:	f240 4483 	movw	r4, #1155	; 0x483
 80204a4:	f3c2 020b 	ubfx	r2, r2, #0, #12
 80204a8:	42a2      	cmp	r2, r4
 80204aa:	d006      	beq.n	80204ba <CRC_Lock+0x5a>
 80204ac:	681b      	ldr	r3, [r3, #0]
 80204ae:	f240 4285 	movw	r2, #1157	; 0x485
 80204b2:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80204b6:	4293      	cmp	r3, r2
 80204b8:	d10c      	bne.n	80204d4 <CRC_Lock+0x74>
 80204ba:	4b0e      	ldr	r3, [pc, #56]	; (80204f4 <CRC_Lock+0x94>)
 80204bc:	2201      	movs	r2, #1
 80204be:	601a      	str	r2, [r3, #0]
 80204c0:	681a      	ldr	r2, [r3, #0]
 80204c2:	2a00      	cmp	r2, #0
 80204c4:	d1fc      	bne.n	80204c0 <CRC_Lock+0x60>
 80204c6:	4b0c      	ldr	r3, [pc, #48]	; (80204f8 <CRC_Lock+0x98>)
 80204c8:	6018      	str	r0, [r3, #0]
 80204ca:	6818      	ldr	r0, [r3, #0]
 80204cc:	1a43      	subs	r3, r0, r1
 80204ce:	4258      	negs	r0, r3
 80204d0:	4158      	adcs	r0, r3
 80204d2:	bd30      	pop	{r4, r5, pc}
 80204d4:	4b09      	ldr	r3, [pc, #36]	; (80204fc <CRC_Lock+0x9c>)
 80204d6:	2201      	movs	r2, #1
 80204d8:	601a      	str	r2, [r3, #0]
 80204da:	681a      	ldr	r2, [r3, #0]
 80204dc:	2a00      	cmp	r2, #0
 80204de:	d1fc      	bne.n	80204da <CRC_Lock+0x7a>
 80204e0:	4b07      	ldr	r3, [pc, #28]	; (8020500 <CRC_Lock+0xa0>)
 80204e2:	e7f1      	b.n	80204c8 <CRC_Lock+0x68>
 80204e4:	e0002000 	.word	0xe0002000
 80204e8:	e000ed00 	.word	0xe000ed00
 80204ec:	e0042000 	.word	0xe0042000
 80204f0:	5c001000 	.word	0x5c001000
 80204f4:	58024c08 	.word	0x58024c08
 80204f8:	58024c00 	.word	0x58024c00
 80204fc:	40023008 	.word	0x40023008
 8020500:	40023000 	.word	0x40023000

08020504 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8020504:	6101      	str	r1, [r0, #16]
 8020506:	4770      	bx	lr

08020508 <_ZN8touchgfx8Gestures4tickEv>:
 8020508:	7b83      	ldrb	r3, [r0, #14]
 802050a:	b14b      	cbz	r3, 8020520 <_ZN8touchgfx8Gestures4tickEv+0x18>
 802050c:	8903      	ldrh	r3, [r0, #8]
 802050e:	3301      	adds	r3, #1
 8020510:	b29b      	uxth	r3, r3
 8020512:	2b07      	cmp	r3, #7
 8020514:	8103      	strh	r3, [r0, #8]
 8020516:	bf81      	itttt	hi
 8020518:	2300      	movhi	r3, #0
 802051a:	8143      	strhhi	r3, [r0, #10]
 802051c:	8183      	strhhi	r3, [r0, #12]
 802051e:	7383      	strbhi	r3, [r0, #14]
 8020520:	4770      	bx	lr
	...

08020524 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8020524:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8020528:	4698      	mov	r8, r3
 802052a:	8883      	ldrh	r3, [r0, #4]
 802052c:	f8ad 3006 	strh.w	r3, [sp, #6]
 8020530:	eba8 0303 	sub.w	r3, r8, r3
 8020534:	b21b      	sxth	r3, r3
 8020536:	4604      	mov	r4, r0
 8020538:	2b00      	cmp	r3, #0
 802053a:	4617      	mov	r7, r2
 802053c:	4a18      	ldr	r2, [pc, #96]	; (80205a0 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 802053e:	9200      	str	r2, [sp, #0]
 8020540:	bfb8      	it	lt
 8020542:	425b      	neglt	r3, r3
 8020544:	8aa2      	ldrh	r2, [r4, #20]
 8020546:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 802054a:	f8ad 800a 	strh.w	r8, [sp, #10]
 802054e:	b21b      	sxth	r3, r3
 8020550:	460e      	mov	r6, r1
 8020552:	4293      	cmp	r3, r2
 8020554:	88c1      	ldrh	r1, [r0, #6]
 8020556:	f8ad 1008 	strh.w	r1, [sp, #8]
 802055a:	f04f 0000 	mov.w	r0, #0
 802055e:	f88d 0004 	strb.w	r0, [sp, #4]
 8020562:	f8ad 500c 	strh.w	r5, [sp, #12]
 8020566:	dc07      	bgt.n	8020578 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8020568:	1a69      	subs	r1, r5, r1
 802056a:	b209      	sxth	r1, r1
 802056c:	2900      	cmp	r1, #0
 802056e:	bfb8      	it	lt
 8020570:	4249      	neglt	r1, r1
 8020572:	b209      	sxth	r1, r1
 8020574:	428a      	cmp	r2, r1
 8020576:	da10      	bge.n	802059a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8020578:	6920      	ldr	r0, [r4, #16]
 802057a:	6803      	ldr	r3, [r0, #0]
 802057c:	4669      	mov	r1, sp
 802057e:	685b      	ldr	r3, [r3, #4]
 8020580:	4798      	blx	r3
 8020582:	eba8 0606 	sub.w	r6, r8, r6
 8020586:	2300      	movs	r3, #0
 8020588:	1bef      	subs	r7, r5, r7
 802058a:	2001      	movs	r0, #1
 802058c:	8123      	strh	r3, [r4, #8]
 802058e:	8166      	strh	r6, [r4, #10]
 8020590:	81a7      	strh	r7, [r4, #12]
 8020592:	f8a4 8004 	strh.w	r8, [r4, #4]
 8020596:	80e5      	strh	r5, [r4, #6]
 8020598:	73a0      	strb	r0, [r4, #14]
 802059a:	b004      	add	sp, #16
 802059c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80205a0:	08023ee8 	.word	0x08023ee8

080205a4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 80205a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80205a6:	461e      	mov	r6, r3
 80205a8:	1e4b      	subs	r3, r1, #1
 80205aa:	2b01      	cmp	r3, #1
 80205ac:	b085      	sub	sp, #20
 80205ae:	4604      	mov	r4, r0
 80205b0:	460d      	mov	r5, r1
 80205b2:	4617      	mov	r7, r2
 80205b4:	d84b      	bhi.n	802064e <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 80205b6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80205ba:	1cd3      	adds	r3, r2, #3
 80205bc:	b29b      	uxth	r3, r3
 80205be:	2b06      	cmp	r3, #6
 80205c0:	d916      	bls.n	80205f0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 80205c2:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 8020664 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 80205c6:	f8cd c004 	str.w	ip, [sp, #4]
 80205ca:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 80205ce:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80205d2:	6900      	ldr	r0, [r0, #16]
 80205d4:	f8ad 100c 	strh.w	r1, [sp, #12]
 80205d8:	f04f 0c00 	mov.w	ip, #0
 80205dc:	f88d c008 	strb.w	ip, [sp, #8]
 80205e0:	f8ad 200a 	strh.w	r2, [sp, #10]
 80205e4:	f8ad 300e 	strh.w	r3, [sp, #14]
 80205e8:	6803      	ldr	r3, [r0, #0]
 80205ea:	a901      	add	r1, sp, #4
 80205ec:	689b      	ldr	r3, [r3, #8]
 80205ee:	4798      	blx	r3
 80205f0:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80205f4:	1cd3      	adds	r3, r2, #3
 80205f6:	b29b      	uxth	r3, r3
 80205f8:	2b06      	cmp	r3, #6
 80205fa:	d916      	bls.n	802062a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80205fc:	f8df c064 	ldr.w	ip, [pc, #100]	; 8020664 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8020600:	f8cd c004 	str.w	ip, [sp, #4]
 8020604:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8020608:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 802060c:	6920      	ldr	r0, [r4, #16]
 802060e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8020612:	f04f 0c01 	mov.w	ip, #1
 8020616:	f88d c008 	strb.w	ip, [sp, #8]
 802061a:	f8ad 200a 	strh.w	r2, [sp, #10]
 802061e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020622:	6803      	ldr	r3, [r0, #0]
 8020624:	a901      	add	r1, sp, #4
 8020626:	689b      	ldr	r3, [r3, #8]
 8020628:	4798      	blx	r3
 802062a:	4b0d      	ldr	r3, [pc, #52]	; (8020660 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 802062c:	9301      	str	r3, [sp, #4]
 802062e:	6920      	ldr	r0, [r4, #16]
 8020630:	f88d 5008 	strb.w	r5, [sp, #8]
 8020634:	2300      	movs	r3, #0
 8020636:	f8ad 700a 	strh.w	r7, [sp, #10]
 802063a:	f8ad 600c 	strh.w	r6, [sp, #12]
 802063e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8020642:	6803      	ldr	r3, [r0, #0]
 8020644:	a901      	add	r1, sp, #4
 8020646:	681b      	ldr	r3, [r3, #0]
 8020648:	4798      	blx	r3
 802064a:	b005      	add	sp, #20
 802064c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 802064e:	2900      	cmp	r1, #0
 8020650:	d1eb      	bne.n	802062a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8020652:	80a2      	strh	r2, [r4, #4]
 8020654:	80c6      	strh	r6, [r0, #6]
 8020656:	60a1      	str	r1, [r4, #8]
 8020658:	81a1      	strh	r1, [r4, #12]
 802065a:	73a1      	strb	r1, [r4, #14]
 802065c:	e7e5      	b.n	802062a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 802065e:	bf00      	nop
 8020660:	08023ed4 	.word	0x08023ed4
 8020664:	08023efc 	.word	0x08023efc

08020668 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8020668:	b570      	push	{r4, r5, r6, lr}
 802066a:	790b      	ldrb	r3, [r1, #4]
 802066c:	f890 502c 	ldrb.w	r5, [r0, #44]	; 0x2c
 8020670:	2b00      	cmp	r3, #0
 8020672:	bf0c      	ite	eq
 8020674:	2301      	moveq	r3, #1
 8020676:	2300      	movne	r3, #0
 8020678:	4604      	mov	r4, r0
 802067a:	460e      	mov	r6, r1
 802067c:	f880 302c 	strb.w	r3, [r0, #44]	; 0x2c
 8020680:	d109      	bne.n	8020696 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8020682:	b14d      	cbz	r5, 8020698 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8020684:	7933      	ldrb	r3, [r6, #4]
 8020686:	2b01      	cmp	r3, #1
 8020688:	d10c      	bne.n	80206a4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 802068a:	6823      	ldr	r3, [r4, #0]
 802068c:	4620      	mov	r0, r4
 802068e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8020690:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8020694:	4718      	bx	r3
 8020696:	b12d      	cbz	r5, 80206a4 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8020698:	6823      	ldr	r3, [r4, #0]
 802069a:	4620      	mov	r0, r4
 802069c:	695b      	ldr	r3, [r3, #20]
 802069e:	4798      	blx	r3
 80206a0:	2d00      	cmp	r5, #0
 80206a2:	d1ef      	bne.n	8020684 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 80206a4:	bd70      	pop	{r4, r5, r6, pc}

080206a6 <__aeabi_atexit>:
 80206a6:	460b      	mov	r3, r1
 80206a8:	4601      	mov	r1, r0
 80206aa:	4618      	mov	r0, r3
 80206ac:	f000 b852 	b.w	8020754 <__cxa_atexit>

080206b0 <_ZdlPvj>:
 80206b0:	f000 b812 	b.w	80206d8 <_ZdlPv>

080206b4 <__cxa_guard_acquire>:
 80206b4:	6803      	ldr	r3, [r0, #0]
 80206b6:	07db      	lsls	r3, r3, #31
 80206b8:	d406      	bmi.n	80206c8 <__cxa_guard_acquire+0x14>
 80206ba:	7843      	ldrb	r3, [r0, #1]
 80206bc:	b103      	cbz	r3, 80206c0 <__cxa_guard_acquire+0xc>
 80206be:	deff      	udf	#255	; 0xff
 80206c0:	2301      	movs	r3, #1
 80206c2:	7043      	strb	r3, [r0, #1]
 80206c4:	4618      	mov	r0, r3
 80206c6:	4770      	bx	lr
 80206c8:	2000      	movs	r0, #0
 80206ca:	4770      	bx	lr

080206cc <__cxa_guard_release>:
 80206cc:	2301      	movs	r3, #1
 80206ce:	6003      	str	r3, [r0, #0]
 80206d0:	4770      	bx	lr

080206d2 <__cxa_pure_virtual>:
 80206d2:	b508      	push	{r3, lr}
 80206d4:	f000 f80e 	bl	80206f4 <_ZSt9terminatev>

080206d8 <_ZdlPv>:
 80206d8:	f000 b88e 	b.w	80207f8 <free>

080206dc <_ZN10__cxxabiv111__terminateEPFvvE>:
 80206dc:	b508      	push	{r3, lr}
 80206de:	4780      	blx	r0
 80206e0:	f000 f80d 	bl	80206fe <abort>

080206e4 <_ZSt13get_terminatev>:
 80206e4:	4b02      	ldr	r3, [pc, #8]	; (80206f0 <_ZSt13get_terminatev+0xc>)
 80206e6:	6818      	ldr	r0, [r3, #0]
 80206e8:	f3bf 8f5b 	dmb	ish
 80206ec:	4770      	bx	lr
 80206ee:	bf00      	nop
 80206f0:	200000d4 	.word	0x200000d4

080206f4 <_ZSt9terminatev>:
 80206f4:	b508      	push	{r3, lr}
 80206f6:	f7ff fff5 	bl	80206e4 <_ZSt13get_terminatev>
 80206fa:	f7ff ffef 	bl	80206dc <_ZN10__cxxabiv111__terminateEPFvvE>

080206fe <abort>:
 80206fe:	b508      	push	{r3, lr}
 8020700:	2006      	movs	r0, #6
 8020702:	f000 fc9d 	bl	8021040 <raise>
 8020706:	2001      	movs	r0, #1
 8020708:	f7e2 fc56 	bl	8002fb8 <_exit>

0802070c <__assert_func>:
 802070c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 802070e:	4614      	mov	r4, r2
 8020710:	461a      	mov	r2, r3
 8020712:	4b09      	ldr	r3, [pc, #36]	; (8020738 <__assert_func+0x2c>)
 8020714:	681b      	ldr	r3, [r3, #0]
 8020716:	4605      	mov	r5, r0
 8020718:	68d8      	ldr	r0, [r3, #12]
 802071a:	b14c      	cbz	r4, 8020730 <__assert_func+0x24>
 802071c:	4b07      	ldr	r3, [pc, #28]	; (802073c <__assert_func+0x30>)
 802071e:	9100      	str	r1, [sp, #0]
 8020720:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8020724:	4906      	ldr	r1, [pc, #24]	; (8020740 <__assert_func+0x34>)
 8020726:	462b      	mov	r3, r5
 8020728:	f000 f828 	bl	802077c <fiprintf>
 802072c:	f7ff ffe7 	bl	80206fe <abort>
 8020730:	4b04      	ldr	r3, [pc, #16]	; (8020744 <__assert_func+0x38>)
 8020732:	461c      	mov	r4, r3
 8020734:	e7f3      	b.n	802071e <__assert_func+0x12>
 8020736:	bf00      	nop
 8020738:	200000d8 	.word	0x200000d8
 802073c:	080241c4 	.word	0x080241c4
 8020740:	080241d1 	.word	0x080241d1
 8020744:	080241ff 	.word	0x080241ff

08020748 <atexit>:
 8020748:	2300      	movs	r3, #0
 802074a:	4601      	mov	r1, r0
 802074c:	461a      	mov	r2, r3
 802074e:	4618      	mov	r0, r3
 8020750:	f000 bd52 	b.w	80211f8 <__register_exitproc>

08020754 <__cxa_atexit>:
 8020754:	b510      	push	{r4, lr}
 8020756:	4c05      	ldr	r4, [pc, #20]	; (802076c <__cxa_atexit+0x18>)
 8020758:	4613      	mov	r3, r2
 802075a:	b12c      	cbz	r4, 8020768 <__cxa_atexit+0x14>
 802075c:	460a      	mov	r2, r1
 802075e:	4601      	mov	r1, r0
 8020760:	2002      	movs	r0, #2
 8020762:	f000 fd49 	bl	80211f8 <__register_exitproc>
 8020766:	bd10      	pop	{r4, pc}
 8020768:	4620      	mov	r0, r4
 802076a:	e7fc      	b.n	8020766 <__cxa_atexit+0x12>
 802076c:	080211f9 	.word	0x080211f9

08020770 <__errno>:
 8020770:	4b01      	ldr	r3, [pc, #4]	; (8020778 <__errno+0x8>)
 8020772:	6818      	ldr	r0, [r3, #0]
 8020774:	4770      	bx	lr
 8020776:	bf00      	nop
 8020778:	200000d8 	.word	0x200000d8

0802077c <fiprintf>:
 802077c:	b40e      	push	{r1, r2, r3}
 802077e:	b503      	push	{r0, r1, lr}
 8020780:	4601      	mov	r1, r0
 8020782:	ab03      	add	r3, sp, #12
 8020784:	4805      	ldr	r0, [pc, #20]	; (802079c <fiprintf+0x20>)
 8020786:	f853 2b04 	ldr.w	r2, [r3], #4
 802078a:	6800      	ldr	r0, [r0, #0]
 802078c:	9301      	str	r3, [sp, #4]
 802078e:	f000 f95b 	bl	8020a48 <_vfiprintf_r>
 8020792:	b002      	add	sp, #8
 8020794:	f85d eb04 	ldr.w	lr, [sp], #4
 8020798:	b003      	add	sp, #12
 802079a:	4770      	bx	lr
 802079c:	200000d8 	.word	0x200000d8

080207a0 <__libc_init_array>:
 80207a0:	b570      	push	{r4, r5, r6, lr}
 80207a2:	4d0d      	ldr	r5, [pc, #52]	; (80207d8 <__libc_init_array+0x38>)
 80207a4:	4c0d      	ldr	r4, [pc, #52]	; (80207dc <__libc_init_array+0x3c>)
 80207a6:	1b64      	subs	r4, r4, r5
 80207a8:	10a4      	asrs	r4, r4, #2
 80207aa:	2600      	movs	r6, #0
 80207ac:	42a6      	cmp	r6, r4
 80207ae:	d109      	bne.n	80207c4 <__libc_init_array+0x24>
 80207b0:	4d0b      	ldr	r5, [pc, #44]	; (80207e0 <__libc_init_array+0x40>)
 80207b2:	4c0c      	ldr	r4, [pc, #48]	; (80207e4 <__libc_init_array+0x44>)
 80207b4:	f001 f85a 	bl	802186c <_init>
 80207b8:	1b64      	subs	r4, r4, r5
 80207ba:	10a4      	asrs	r4, r4, #2
 80207bc:	2600      	movs	r6, #0
 80207be:	42a6      	cmp	r6, r4
 80207c0:	d105      	bne.n	80207ce <__libc_init_array+0x2e>
 80207c2:	bd70      	pop	{r4, r5, r6, pc}
 80207c4:	f855 3b04 	ldr.w	r3, [r5], #4
 80207c8:	4798      	blx	r3
 80207ca:	3601      	adds	r6, #1
 80207cc:	e7ee      	b.n	80207ac <__libc_init_array+0xc>
 80207ce:	f855 3b04 	ldr.w	r3, [r5], #4
 80207d2:	4798      	blx	r3
 80207d4:	3601      	adds	r6, #1
 80207d6:	e7f2      	b.n	80207be <__libc_init_array+0x1e>
 80207d8:	08024360 	.word	0x08024360
 80207dc:	08024360 	.word	0x08024360
 80207e0:	08024360 	.word	0x08024360
 80207e4:	08024378 	.word	0x08024378

080207e8 <malloc>:
 80207e8:	4b02      	ldr	r3, [pc, #8]	; (80207f4 <malloc+0xc>)
 80207ea:	4601      	mov	r1, r0
 80207ec:	6818      	ldr	r0, [r3, #0]
 80207ee:	f000 b88d 	b.w	802090c <_malloc_r>
 80207f2:	bf00      	nop
 80207f4:	200000d8 	.word	0x200000d8

080207f8 <free>:
 80207f8:	4b02      	ldr	r3, [pc, #8]	; (8020804 <free+0xc>)
 80207fa:	4601      	mov	r1, r0
 80207fc:	6818      	ldr	r0, [r3, #0]
 80207fe:	f000 b819 	b.w	8020834 <_free_r>
 8020802:	bf00      	nop
 8020804:	200000d8 	.word	0x200000d8

08020808 <memcpy>:
 8020808:	440a      	add	r2, r1
 802080a:	4291      	cmp	r1, r2
 802080c:	f100 33ff 	add.w	r3, r0, #4294967295
 8020810:	d100      	bne.n	8020814 <memcpy+0xc>
 8020812:	4770      	bx	lr
 8020814:	b510      	push	{r4, lr}
 8020816:	f811 4b01 	ldrb.w	r4, [r1], #1
 802081a:	f803 4f01 	strb.w	r4, [r3, #1]!
 802081e:	4291      	cmp	r1, r2
 8020820:	d1f9      	bne.n	8020816 <memcpy+0xe>
 8020822:	bd10      	pop	{r4, pc}

08020824 <memset>:
 8020824:	4402      	add	r2, r0
 8020826:	4603      	mov	r3, r0
 8020828:	4293      	cmp	r3, r2
 802082a:	d100      	bne.n	802082e <memset+0xa>
 802082c:	4770      	bx	lr
 802082e:	f803 1b01 	strb.w	r1, [r3], #1
 8020832:	e7f9      	b.n	8020828 <memset+0x4>

08020834 <_free_r>:
 8020834:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8020836:	2900      	cmp	r1, #0
 8020838:	d044      	beq.n	80208c4 <_free_r+0x90>
 802083a:	f851 3c04 	ldr.w	r3, [r1, #-4]
 802083e:	9001      	str	r0, [sp, #4]
 8020840:	2b00      	cmp	r3, #0
 8020842:	f1a1 0404 	sub.w	r4, r1, #4
 8020846:	bfb8      	it	lt
 8020848:	18e4      	addlt	r4, r4, r3
 802084a:	f000 ff57 	bl	80216fc <__malloc_lock>
 802084e:	4a1e      	ldr	r2, [pc, #120]	; (80208c8 <_free_r+0x94>)
 8020850:	9801      	ldr	r0, [sp, #4]
 8020852:	6813      	ldr	r3, [r2, #0]
 8020854:	b933      	cbnz	r3, 8020864 <_free_r+0x30>
 8020856:	6063      	str	r3, [r4, #4]
 8020858:	6014      	str	r4, [r2, #0]
 802085a:	b003      	add	sp, #12
 802085c:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 8020860:	f000 bf52 	b.w	8021708 <__malloc_unlock>
 8020864:	42a3      	cmp	r3, r4
 8020866:	d908      	bls.n	802087a <_free_r+0x46>
 8020868:	6825      	ldr	r5, [r4, #0]
 802086a:	1961      	adds	r1, r4, r5
 802086c:	428b      	cmp	r3, r1
 802086e:	bf01      	itttt	eq
 8020870:	6819      	ldreq	r1, [r3, #0]
 8020872:	685b      	ldreq	r3, [r3, #4]
 8020874:	1949      	addeq	r1, r1, r5
 8020876:	6021      	streq	r1, [r4, #0]
 8020878:	e7ed      	b.n	8020856 <_free_r+0x22>
 802087a:	461a      	mov	r2, r3
 802087c:	685b      	ldr	r3, [r3, #4]
 802087e:	b10b      	cbz	r3, 8020884 <_free_r+0x50>
 8020880:	42a3      	cmp	r3, r4
 8020882:	d9fa      	bls.n	802087a <_free_r+0x46>
 8020884:	6811      	ldr	r1, [r2, #0]
 8020886:	1855      	adds	r5, r2, r1
 8020888:	42a5      	cmp	r5, r4
 802088a:	d10b      	bne.n	80208a4 <_free_r+0x70>
 802088c:	6824      	ldr	r4, [r4, #0]
 802088e:	4421      	add	r1, r4
 8020890:	1854      	adds	r4, r2, r1
 8020892:	42a3      	cmp	r3, r4
 8020894:	6011      	str	r1, [r2, #0]
 8020896:	d1e0      	bne.n	802085a <_free_r+0x26>
 8020898:	681c      	ldr	r4, [r3, #0]
 802089a:	685b      	ldr	r3, [r3, #4]
 802089c:	6053      	str	r3, [r2, #4]
 802089e:	4421      	add	r1, r4
 80208a0:	6011      	str	r1, [r2, #0]
 80208a2:	e7da      	b.n	802085a <_free_r+0x26>
 80208a4:	d902      	bls.n	80208ac <_free_r+0x78>
 80208a6:	230c      	movs	r3, #12
 80208a8:	6003      	str	r3, [r0, #0]
 80208aa:	e7d6      	b.n	802085a <_free_r+0x26>
 80208ac:	6825      	ldr	r5, [r4, #0]
 80208ae:	1961      	adds	r1, r4, r5
 80208b0:	428b      	cmp	r3, r1
 80208b2:	bf04      	itt	eq
 80208b4:	6819      	ldreq	r1, [r3, #0]
 80208b6:	685b      	ldreq	r3, [r3, #4]
 80208b8:	6063      	str	r3, [r4, #4]
 80208ba:	bf04      	itt	eq
 80208bc:	1949      	addeq	r1, r1, r5
 80208be:	6021      	streq	r1, [r4, #0]
 80208c0:	6054      	str	r4, [r2, #4]
 80208c2:	e7ca      	b.n	802085a <_free_r+0x26>
 80208c4:	b003      	add	sp, #12
 80208c6:	bd30      	pop	{r4, r5, pc}
 80208c8:	20011f44 	.word	0x20011f44

080208cc <sbrk_aligned>:
 80208cc:	b570      	push	{r4, r5, r6, lr}
 80208ce:	4e0e      	ldr	r6, [pc, #56]	; (8020908 <sbrk_aligned+0x3c>)
 80208d0:	460c      	mov	r4, r1
 80208d2:	6831      	ldr	r1, [r6, #0]
 80208d4:	4605      	mov	r5, r0
 80208d6:	b911      	cbnz	r1, 80208de <sbrk_aligned+0x12>
 80208d8:	f000 fb7a 	bl	8020fd0 <_sbrk_r>
 80208dc:	6030      	str	r0, [r6, #0]
 80208de:	4621      	mov	r1, r4
 80208e0:	4628      	mov	r0, r5
 80208e2:	f000 fb75 	bl	8020fd0 <_sbrk_r>
 80208e6:	1c43      	adds	r3, r0, #1
 80208e8:	d00a      	beq.n	8020900 <sbrk_aligned+0x34>
 80208ea:	1cc4      	adds	r4, r0, #3
 80208ec:	f024 0403 	bic.w	r4, r4, #3
 80208f0:	42a0      	cmp	r0, r4
 80208f2:	d007      	beq.n	8020904 <sbrk_aligned+0x38>
 80208f4:	1a21      	subs	r1, r4, r0
 80208f6:	4628      	mov	r0, r5
 80208f8:	f000 fb6a 	bl	8020fd0 <_sbrk_r>
 80208fc:	3001      	adds	r0, #1
 80208fe:	d101      	bne.n	8020904 <sbrk_aligned+0x38>
 8020900:	f04f 34ff 	mov.w	r4, #4294967295
 8020904:	4620      	mov	r0, r4
 8020906:	bd70      	pop	{r4, r5, r6, pc}
 8020908:	20011f48 	.word	0x20011f48

0802090c <_malloc_r>:
 802090c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020910:	1ccd      	adds	r5, r1, #3
 8020912:	f025 0503 	bic.w	r5, r5, #3
 8020916:	3508      	adds	r5, #8
 8020918:	2d0c      	cmp	r5, #12
 802091a:	bf38      	it	cc
 802091c:	250c      	movcc	r5, #12
 802091e:	2d00      	cmp	r5, #0
 8020920:	4607      	mov	r7, r0
 8020922:	db01      	blt.n	8020928 <_malloc_r+0x1c>
 8020924:	42a9      	cmp	r1, r5
 8020926:	d905      	bls.n	8020934 <_malloc_r+0x28>
 8020928:	230c      	movs	r3, #12
 802092a:	603b      	str	r3, [r7, #0]
 802092c:	2600      	movs	r6, #0
 802092e:	4630      	mov	r0, r6
 8020930:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8020934:	4e2e      	ldr	r6, [pc, #184]	; (80209f0 <_malloc_r+0xe4>)
 8020936:	f000 fee1 	bl	80216fc <__malloc_lock>
 802093a:	6833      	ldr	r3, [r6, #0]
 802093c:	461c      	mov	r4, r3
 802093e:	bb34      	cbnz	r4, 802098e <_malloc_r+0x82>
 8020940:	4629      	mov	r1, r5
 8020942:	4638      	mov	r0, r7
 8020944:	f7ff ffc2 	bl	80208cc <sbrk_aligned>
 8020948:	1c43      	adds	r3, r0, #1
 802094a:	4604      	mov	r4, r0
 802094c:	d14d      	bne.n	80209ea <_malloc_r+0xde>
 802094e:	6834      	ldr	r4, [r6, #0]
 8020950:	4626      	mov	r6, r4
 8020952:	2e00      	cmp	r6, #0
 8020954:	d140      	bne.n	80209d8 <_malloc_r+0xcc>
 8020956:	6823      	ldr	r3, [r4, #0]
 8020958:	4631      	mov	r1, r6
 802095a:	4638      	mov	r0, r7
 802095c:	eb04 0803 	add.w	r8, r4, r3
 8020960:	f000 fb36 	bl	8020fd0 <_sbrk_r>
 8020964:	4580      	cmp	r8, r0
 8020966:	d13a      	bne.n	80209de <_malloc_r+0xd2>
 8020968:	6821      	ldr	r1, [r4, #0]
 802096a:	3503      	adds	r5, #3
 802096c:	1a6d      	subs	r5, r5, r1
 802096e:	f025 0503 	bic.w	r5, r5, #3
 8020972:	3508      	adds	r5, #8
 8020974:	2d0c      	cmp	r5, #12
 8020976:	bf38      	it	cc
 8020978:	250c      	movcc	r5, #12
 802097a:	4629      	mov	r1, r5
 802097c:	4638      	mov	r0, r7
 802097e:	f7ff ffa5 	bl	80208cc <sbrk_aligned>
 8020982:	3001      	adds	r0, #1
 8020984:	d02b      	beq.n	80209de <_malloc_r+0xd2>
 8020986:	6823      	ldr	r3, [r4, #0]
 8020988:	442b      	add	r3, r5
 802098a:	6023      	str	r3, [r4, #0]
 802098c:	e00e      	b.n	80209ac <_malloc_r+0xa0>
 802098e:	6822      	ldr	r2, [r4, #0]
 8020990:	1b52      	subs	r2, r2, r5
 8020992:	d41e      	bmi.n	80209d2 <_malloc_r+0xc6>
 8020994:	2a0b      	cmp	r2, #11
 8020996:	d916      	bls.n	80209c6 <_malloc_r+0xba>
 8020998:	1961      	adds	r1, r4, r5
 802099a:	42a3      	cmp	r3, r4
 802099c:	6025      	str	r5, [r4, #0]
 802099e:	bf18      	it	ne
 80209a0:	6059      	strne	r1, [r3, #4]
 80209a2:	6863      	ldr	r3, [r4, #4]
 80209a4:	bf08      	it	eq
 80209a6:	6031      	streq	r1, [r6, #0]
 80209a8:	5162      	str	r2, [r4, r5]
 80209aa:	604b      	str	r3, [r1, #4]
 80209ac:	4638      	mov	r0, r7
 80209ae:	f104 060b 	add.w	r6, r4, #11
 80209b2:	f000 fea9 	bl	8021708 <__malloc_unlock>
 80209b6:	f026 0607 	bic.w	r6, r6, #7
 80209ba:	1d23      	adds	r3, r4, #4
 80209bc:	1af2      	subs	r2, r6, r3
 80209be:	d0b6      	beq.n	802092e <_malloc_r+0x22>
 80209c0:	1b9b      	subs	r3, r3, r6
 80209c2:	50a3      	str	r3, [r4, r2]
 80209c4:	e7b3      	b.n	802092e <_malloc_r+0x22>
 80209c6:	6862      	ldr	r2, [r4, #4]
 80209c8:	42a3      	cmp	r3, r4
 80209ca:	bf0c      	ite	eq
 80209cc:	6032      	streq	r2, [r6, #0]
 80209ce:	605a      	strne	r2, [r3, #4]
 80209d0:	e7ec      	b.n	80209ac <_malloc_r+0xa0>
 80209d2:	4623      	mov	r3, r4
 80209d4:	6864      	ldr	r4, [r4, #4]
 80209d6:	e7b2      	b.n	802093e <_malloc_r+0x32>
 80209d8:	4634      	mov	r4, r6
 80209da:	6876      	ldr	r6, [r6, #4]
 80209dc:	e7b9      	b.n	8020952 <_malloc_r+0x46>
 80209de:	230c      	movs	r3, #12
 80209e0:	603b      	str	r3, [r7, #0]
 80209e2:	4638      	mov	r0, r7
 80209e4:	f000 fe90 	bl	8021708 <__malloc_unlock>
 80209e8:	e7a1      	b.n	802092e <_malloc_r+0x22>
 80209ea:	6025      	str	r5, [r4, #0]
 80209ec:	e7de      	b.n	80209ac <_malloc_r+0xa0>
 80209ee:	bf00      	nop
 80209f0:	20011f44 	.word	0x20011f44

080209f4 <__sfputc_r>:
 80209f4:	6893      	ldr	r3, [r2, #8]
 80209f6:	3b01      	subs	r3, #1
 80209f8:	2b00      	cmp	r3, #0
 80209fa:	b410      	push	{r4}
 80209fc:	6093      	str	r3, [r2, #8]
 80209fe:	da08      	bge.n	8020a12 <__sfputc_r+0x1e>
 8020a00:	6994      	ldr	r4, [r2, #24]
 8020a02:	42a3      	cmp	r3, r4
 8020a04:	db01      	blt.n	8020a0a <__sfputc_r+0x16>
 8020a06:	290a      	cmp	r1, #10
 8020a08:	d103      	bne.n	8020a12 <__sfputc_r+0x1e>
 8020a0a:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020a0e:	f000 bb33 	b.w	8021078 <__swbuf_r>
 8020a12:	6813      	ldr	r3, [r2, #0]
 8020a14:	1c58      	adds	r0, r3, #1
 8020a16:	6010      	str	r0, [r2, #0]
 8020a18:	7019      	strb	r1, [r3, #0]
 8020a1a:	4608      	mov	r0, r1
 8020a1c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8020a20:	4770      	bx	lr

08020a22 <__sfputs_r>:
 8020a22:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8020a24:	4606      	mov	r6, r0
 8020a26:	460f      	mov	r7, r1
 8020a28:	4614      	mov	r4, r2
 8020a2a:	18d5      	adds	r5, r2, r3
 8020a2c:	42ac      	cmp	r4, r5
 8020a2e:	d101      	bne.n	8020a34 <__sfputs_r+0x12>
 8020a30:	2000      	movs	r0, #0
 8020a32:	e007      	b.n	8020a44 <__sfputs_r+0x22>
 8020a34:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020a38:	463a      	mov	r2, r7
 8020a3a:	4630      	mov	r0, r6
 8020a3c:	f7ff ffda 	bl	80209f4 <__sfputc_r>
 8020a40:	1c43      	adds	r3, r0, #1
 8020a42:	d1f3      	bne.n	8020a2c <__sfputs_r+0xa>
 8020a44:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08020a48 <_vfiprintf_r>:
 8020a48:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020a4c:	460d      	mov	r5, r1
 8020a4e:	b09d      	sub	sp, #116	; 0x74
 8020a50:	4614      	mov	r4, r2
 8020a52:	4698      	mov	r8, r3
 8020a54:	4606      	mov	r6, r0
 8020a56:	b118      	cbz	r0, 8020a60 <_vfiprintf_r+0x18>
 8020a58:	6983      	ldr	r3, [r0, #24]
 8020a5a:	b90b      	cbnz	r3, 8020a60 <_vfiprintf_r+0x18>
 8020a5c:	f000 fd48 	bl	80214f0 <__sinit>
 8020a60:	4b89      	ldr	r3, [pc, #548]	; (8020c88 <_vfiprintf_r+0x240>)
 8020a62:	429d      	cmp	r5, r3
 8020a64:	d11b      	bne.n	8020a9e <_vfiprintf_r+0x56>
 8020a66:	6875      	ldr	r5, [r6, #4]
 8020a68:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020a6a:	07d9      	lsls	r1, r3, #31
 8020a6c:	d405      	bmi.n	8020a7a <_vfiprintf_r+0x32>
 8020a6e:	89ab      	ldrh	r3, [r5, #12]
 8020a70:	059a      	lsls	r2, r3, #22
 8020a72:	d402      	bmi.n	8020a7a <_vfiprintf_r+0x32>
 8020a74:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020a76:	f000 fdd9 	bl	802162c <__retarget_lock_acquire_recursive>
 8020a7a:	89ab      	ldrh	r3, [r5, #12]
 8020a7c:	071b      	lsls	r3, r3, #28
 8020a7e:	d501      	bpl.n	8020a84 <_vfiprintf_r+0x3c>
 8020a80:	692b      	ldr	r3, [r5, #16]
 8020a82:	b9eb      	cbnz	r3, 8020ac0 <_vfiprintf_r+0x78>
 8020a84:	4629      	mov	r1, r5
 8020a86:	4630      	mov	r0, r6
 8020a88:	f000 fb48 	bl	802111c <__swsetup_r>
 8020a8c:	b1c0      	cbz	r0, 8020ac0 <_vfiprintf_r+0x78>
 8020a8e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020a90:	07dc      	lsls	r4, r3, #31
 8020a92:	d50e      	bpl.n	8020ab2 <_vfiprintf_r+0x6a>
 8020a94:	f04f 30ff 	mov.w	r0, #4294967295
 8020a98:	b01d      	add	sp, #116	; 0x74
 8020a9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020a9e:	4b7b      	ldr	r3, [pc, #492]	; (8020c8c <_vfiprintf_r+0x244>)
 8020aa0:	429d      	cmp	r5, r3
 8020aa2:	d101      	bne.n	8020aa8 <_vfiprintf_r+0x60>
 8020aa4:	68b5      	ldr	r5, [r6, #8]
 8020aa6:	e7df      	b.n	8020a68 <_vfiprintf_r+0x20>
 8020aa8:	4b79      	ldr	r3, [pc, #484]	; (8020c90 <_vfiprintf_r+0x248>)
 8020aaa:	429d      	cmp	r5, r3
 8020aac:	bf08      	it	eq
 8020aae:	68f5      	ldreq	r5, [r6, #12]
 8020ab0:	e7da      	b.n	8020a68 <_vfiprintf_r+0x20>
 8020ab2:	89ab      	ldrh	r3, [r5, #12]
 8020ab4:	0598      	lsls	r0, r3, #22
 8020ab6:	d4ed      	bmi.n	8020a94 <_vfiprintf_r+0x4c>
 8020ab8:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020aba:	f000 fdb9 	bl	8021630 <__retarget_lock_release_recursive>
 8020abe:	e7e9      	b.n	8020a94 <_vfiprintf_r+0x4c>
 8020ac0:	2300      	movs	r3, #0
 8020ac2:	9309      	str	r3, [sp, #36]	; 0x24
 8020ac4:	2320      	movs	r3, #32
 8020ac6:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8020aca:	f8cd 800c 	str.w	r8, [sp, #12]
 8020ace:	2330      	movs	r3, #48	; 0x30
 8020ad0:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8020c94 <_vfiprintf_r+0x24c>
 8020ad4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8020ad8:	f04f 0901 	mov.w	r9, #1
 8020adc:	4623      	mov	r3, r4
 8020ade:	469a      	mov	sl, r3
 8020ae0:	f813 2b01 	ldrb.w	r2, [r3], #1
 8020ae4:	b10a      	cbz	r2, 8020aea <_vfiprintf_r+0xa2>
 8020ae6:	2a25      	cmp	r2, #37	; 0x25
 8020ae8:	d1f9      	bne.n	8020ade <_vfiprintf_r+0x96>
 8020aea:	ebba 0b04 	subs.w	fp, sl, r4
 8020aee:	d00b      	beq.n	8020b08 <_vfiprintf_r+0xc0>
 8020af0:	465b      	mov	r3, fp
 8020af2:	4622      	mov	r2, r4
 8020af4:	4629      	mov	r1, r5
 8020af6:	4630      	mov	r0, r6
 8020af8:	f7ff ff93 	bl	8020a22 <__sfputs_r>
 8020afc:	3001      	adds	r0, #1
 8020afe:	f000 80aa 	beq.w	8020c56 <_vfiprintf_r+0x20e>
 8020b02:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8020b04:	445a      	add	r2, fp
 8020b06:	9209      	str	r2, [sp, #36]	; 0x24
 8020b08:	f89a 3000 	ldrb.w	r3, [sl]
 8020b0c:	2b00      	cmp	r3, #0
 8020b0e:	f000 80a2 	beq.w	8020c56 <_vfiprintf_r+0x20e>
 8020b12:	2300      	movs	r3, #0
 8020b14:	f04f 32ff 	mov.w	r2, #4294967295
 8020b18:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8020b1c:	f10a 0a01 	add.w	sl, sl, #1
 8020b20:	9304      	str	r3, [sp, #16]
 8020b22:	9307      	str	r3, [sp, #28]
 8020b24:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8020b28:	931a      	str	r3, [sp, #104]	; 0x68
 8020b2a:	4654      	mov	r4, sl
 8020b2c:	2205      	movs	r2, #5
 8020b2e:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020b32:	4858      	ldr	r0, [pc, #352]	; (8020c94 <_vfiprintf_r+0x24c>)
 8020b34:	f7df fb64 	bl	8000200 <memchr>
 8020b38:	9a04      	ldr	r2, [sp, #16]
 8020b3a:	b9d8      	cbnz	r0, 8020b74 <_vfiprintf_r+0x12c>
 8020b3c:	06d1      	lsls	r1, r2, #27
 8020b3e:	bf44      	itt	mi
 8020b40:	2320      	movmi	r3, #32
 8020b42:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020b46:	0713      	lsls	r3, r2, #28
 8020b48:	bf44      	itt	mi
 8020b4a:	232b      	movmi	r3, #43	; 0x2b
 8020b4c:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8020b50:	f89a 3000 	ldrb.w	r3, [sl]
 8020b54:	2b2a      	cmp	r3, #42	; 0x2a
 8020b56:	d015      	beq.n	8020b84 <_vfiprintf_r+0x13c>
 8020b58:	9a07      	ldr	r2, [sp, #28]
 8020b5a:	4654      	mov	r4, sl
 8020b5c:	2000      	movs	r0, #0
 8020b5e:	f04f 0c0a 	mov.w	ip, #10
 8020b62:	4621      	mov	r1, r4
 8020b64:	f811 3b01 	ldrb.w	r3, [r1], #1
 8020b68:	3b30      	subs	r3, #48	; 0x30
 8020b6a:	2b09      	cmp	r3, #9
 8020b6c:	d94e      	bls.n	8020c0c <_vfiprintf_r+0x1c4>
 8020b6e:	b1b0      	cbz	r0, 8020b9e <_vfiprintf_r+0x156>
 8020b70:	9207      	str	r2, [sp, #28]
 8020b72:	e014      	b.n	8020b9e <_vfiprintf_r+0x156>
 8020b74:	eba0 0308 	sub.w	r3, r0, r8
 8020b78:	fa09 f303 	lsl.w	r3, r9, r3
 8020b7c:	4313      	orrs	r3, r2
 8020b7e:	9304      	str	r3, [sp, #16]
 8020b80:	46a2      	mov	sl, r4
 8020b82:	e7d2      	b.n	8020b2a <_vfiprintf_r+0xe2>
 8020b84:	9b03      	ldr	r3, [sp, #12]
 8020b86:	1d19      	adds	r1, r3, #4
 8020b88:	681b      	ldr	r3, [r3, #0]
 8020b8a:	9103      	str	r1, [sp, #12]
 8020b8c:	2b00      	cmp	r3, #0
 8020b8e:	bfbb      	ittet	lt
 8020b90:	425b      	neglt	r3, r3
 8020b92:	f042 0202 	orrlt.w	r2, r2, #2
 8020b96:	9307      	strge	r3, [sp, #28]
 8020b98:	9307      	strlt	r3, [sp, #28]
 8020b9a:	bfb8      	it	lt
 8020b9c:	9204      	strlt	r2, [sp, #16]
 8020b9e:	7823      	ldrb	r3, [r4, #0]
 8020ba0:	2b2e      	cmp	r3, #46	; 0x2e
 8020ba2:	d10c      	bne.n	8020bbe <_vfiprintf_r+0x176>
 8020ba4:	7863      	ldrb	r3, [r4, #1]
 8020ba6:	2b2a      	cmp	r3, #42	; 0x2a
 8020ba8:	d135      	bne.n	8020c16 <_vfiprintf_r+0x1ce>
 8020baa:	9b03      	ldr	r3, [sp, #12]
 8020bac:	1d1a      	adds	r2, r3, #4
 8020bae:	681b      	ldr	r3, [r3, #0]
 8020bb0:	9203      	str	r2, [sp, #12]
 8020bb2:	2b00      	cmp	r3, #0
 8020bb4:	bfb8      	it	lt
 8020bb6:	f04f 33ff 	movlt.w	r3, #4294967295
 8020bba:	3402      	adds	r4, #2
 8020bbc:	9305      	str	r3, [sp, #20]
 8020bbe:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8020ca4 <_vfiprintf_r+0x25c>
 8020bc2:	7821      	ldrb	r1, [r4, #0]
 8020bc4:	2203      	movs	r2, #3
 8020bc6:	4650      	mov	r0, sl
 8020bc8:	f7df fb1a 	bl	8000200 <memchr>
 8020bcc:	b140      	cbz	r0, 8020be0 <_vfiprintf_r+0x198>
 8020bce:	2340      	movs	r3, #64	; 0x40
 8020bd0:	eba0 000a 	sub.w	r0, r0, sl
 8020bd4:	fa03 f000 	lsl.w	r0, r3, r0
 8020bd8:	9b04      	ldr	r3, [sp, #16]
 8020bda:	4303      	orrs	r3, r0
 8020bdc:	3401      	adds	r4, #1
 8020bde:	9304      	str	r3, [sp, #16]
 8020be0:	f814 1b01 	ldrb.w	r1, [r4], #1
 8020be4:	482c      	ldr	r0, [pc, #176]	; (8020c98 <_vfiprintf_r+0x250>)
 8020be6:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8020bea:	2206      	movs	r2, #6
 8020bec:	f7df fb08 	bl	8000200 <memchr>
 8020bf0:	2800      	cmp	r0, #0
 8020bf2:	d03f      	beq.n	8020c74 <_vfiprintf_r+0x22c>
 8020bf4:	4b29      	ldr	r3, [pc, #164]	; (8020c9c <_vfiprintf_r+0x254>)
 8020bf6:	bb1b      	cbnz	r3, 8020c40 <_vfiprintf_r+0x1f8>
 8020bf8:	9b03      	ldr	r3, [sp, #12]
 8020bfa:	3307      	adds	r3, #7
 8020bfc:	f023 0307 	bic.w	r3, r3, #7
 8020c00:	3308      	adds	r3, #8
 8020c02:	9303      	str	r3, [sp, #12]
 8020c04:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8020c06:	443b      	add	r3, r7
 8020c08:	9309      	str	r3, [sp, #36]	; 0x24
 8020c0a:	e767      	b.n	8020adc <_vfiprintf_r+0x94>
 8020c0c:	fb0c 3202 	mla	r2, ip, r2, r3
 8020c10:	460c      	mov	r4, r1
 8020c12:	2001      	movs	r0, #1
 8020c14:	e7a5      	b.n	8020b62 <_vfiprintf_r+0x11a>
 8020c16:	2300      	movs	r3, #0
 8020c18:	3401      	adds	r4, #1
 8020c1a:	9305      	str	r3, [sp, #20]
 8020c1c:	4619      	mov	r1, r3
 8020c1e:	f04f 0c0a 	mov.w	ip, #10
 8020c22:	4620      	mov	r0, r4
 8020c24:	f810 2b01 	ldrb.w	r2, [r0], #1
 8020c28:	3a30      	subs	r2, #48	; 0x30
 8020c2a:	2a09      	cmp	r2, #9
 8020c2c:	d903      	bls.n	8020c36 <_vfiprintf_r+0x1ee>
 8020c2e:	2b00      	cmp	r3, #0
 8020c30:	d0c5      	beq.n	8020bbe <_vfiprintf_r+0x176>
 8020c32:	9105      	str	r1, [sp, #20]
 8020c34:	e7c3      	b.n	8020bbe <_vfiprintf_r+0x176>
 8020c36:	fb0c 2101 	mla	r1, ip, r1, r2
 8020c3a:	4604      	mov	r4, r0
 8020c3c:	2301      	movs	r3, #1
 8020c3e:	e7f0      	b.n	8020c22 <_vfiprintf_r+0x1da>
 8020c40:	ab03      	add	r3, sp, #12
 8020c42:	9300      	str	r3, [sp, #0]
 8020c44:	462a      	mov	r2, r5
 8020c46:	4b16      	ldr	r3, [pc, #88]	; (8020ca0 <_vfiprintf_r+0x258>)
 8020c48:	a904      	add	r1, sp, #16
 8020c4a:	4630      	mov	r0, r6
 8020c4c:	f3af 8000 	nop.w
 8020c50:	4607      	mov	r7, r0
 8020c52:	1c78      	adds	r0, r7, #1
 8020c54:	d1d6      	bne.n	8020c04 <_vfiprintf_r+0x1bc>
 8020c56:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8020c58:	07d9      	lsls	r1, r3, #31
 8020c5a:	d405      	bmi.n	8020c68 <_vfiprintf_r+0x220>
 8020c5c:	89ab      	ldrh	r3, [r5, #12]
 8020c5e:	059a      	lsls	r2, r3, #22
 8020c60:	d402      	bmi.n	8020c68 <_vfiprintf_r+0x220>
 8020c62:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8020c64:	f000 fce4 	bl	8021630 <__retarget_lock_release_recursive>
 8020c68:	89ab      	ldrh	r3, [r5, #12]
 8020c6a:	065b      	lsls	r3, r3, #25
 8020c6c:	f53f af12 	bmi.w	8020a94 <_vfiprintf_r+0x4c>
 8020c70:	9809      	ldr	r0, [sp, #36]	; 0x24
 8020c72:	e711      	b.n	8020a98 <_vfiprintf_r+0x50>
 8020c74:	ab03      	add	r3, sp, #12
 8020c76:	9300      	str	r3, [sp, #0]
 8020c78:	462a      	mov	r2, r5
 8020c7a:	4b09      	ldr	r3, [pc, #36]	; (8020ca0 <_vfiprintf_r+0x258>)
 8020c7c:	a904      	add	r1, sp, #16
 8020c7e:	4630      	mov	r0, r6
 8020c80:	f000 f880 	bl	8020d84 <_printf_i>
 8020c84:	e7e4      	b.n	8020c50 <_vfiprintf_r+0x208>
 8020c86:	bf00      	nop
 8020c88:	0802425c 	.word	0x0802425c
 8020c8c:	0802427c 	.word	0x0802427c
 8020c90:	0802423c 	.word	0x0802423c
 8020c94:	08024204 	.word	0x08024204
 8020c98:	0802420e 	.word	0x0802420e
 8020c9c:	00000000 	.word	0x00000000
 8020ca0:	08020a23 	.word	0x08020a23
 8020ca4:	0802420a 	.word	0x0802420a

08020ca8 <_printf_common>:
 8020ca8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8020cac:	4616      	mov	r6, r2
 8020cae:	4699      	mov	r9, r3
 8020cb0:	688a      	ldr	r2, [r1, #8]
 8020cb2:	690b      	ldr	r3, [r1, #16]
 8020cb4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8020cb8:	4293      	cmp	r3, r2
 8020cba:	bfb8      	it	lt
 8020cbc:	4613      	movlt	r3, r2
 8020cbe:	6033      	str	r3, [r6, #0]
 8020cc0:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8020cc4:	4607      	mov	r7, r0
 8020cc6:	460c      	mov	r4, r1
 8020cc8:	b10a      	cbz	r2, 8020cce <_printf_common+0x26>
 8020cca:	3301      	adds	r3, #1
 8020ccc:	6033      	str	r3, [r6, #0]
 8020cce:	6823      	ldr	r3, [r4, #0]
 8020cd0:	0699      	lsls	r1, r3, #26
 8020cd2:	bf42      	ittt	mi
 8020cd4:	6833      	ldrmi	r3, [r6, #0]
 8020cd6:	3302      	addmi	r3, #2
 8020cd8:	6033      	strmi	r3, [r6, #0]
 8020cda:	6825      	ldr	r5, [r4, #0]
 8020cdc:	f015 0506 	ands.w	r5, r5, #6
 8020ce0:	d106      	bne.n	8020cf0 <_printf_common+0x48>
 8020ce2:	f104 0a19 	add.w	sl, r4, #25
 8020ce6:	68e3      	ldr	r3, [r4, #12]
 8020ce8:	6832      	ldr	r2, [r6, #0]
 8020cea:	1a9b      	subs	r3, r3, r2
 8020cec:	42ab      	cmp	r3, r5
 8020cee:	dc26      	bgt.n	8020d3e <_printf_common+0x96>
 8020cf0:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8020cf4:	1e13      	subs	r3, r2, #0
 8020cf6:	6822      	ldr	r2, [r4, #0]
 8020cf8:	bf18      	it	ne
 8020cfa:	2301      	movne	r3, #1
 8020cfc:	0692      	lsls	r2, r2, #26
 8020cfe:	d42b      	bmi.n	8020d58 <_printf_common+0xb0>
 8020d00:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8020d04:	4649      	mov	r1, r9
 8020d06:	4638      	mov	r0, r7
 8020d08:	47c0      	blx	r8
 8020d0a:	3001      	adds	r0, #1
 8020d0c:	d01e      	beq.n	8020d4c <_printf_common+0xa4>
 8020d0e:	6823      	ldr	r3, [r4, #0]
 8020d10:	68e5      	ldr	r5, [r4, #12]
 8020d12:	6832      	ldr	r2, [r6, #0]
 8020d14:	f003 0306 	and.w	r3, r3, #6
 8020d18:	2b04      	cmp	r3, #4
 8020d1a:	bf08      	it	eq
 8020d1c:	1aad      	subeq	r5, r5, r2
 8020d1e:	68a3      	ldr	r3, [r4, #8]
 8020d20:	6922      	ldr	r2, [r4, #16]
 8020d22:	bf0c      	ite	eq
 8020d24:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8020d28:	2500      	movne	r5, #0
 8020d2a:	4293      	cmp	r3, r2
 8020d2c:	bfc4      	itt	gt
 8020d2e:	1a9b      	subgt	r3, r3, r2
 8020d30:	18ed      	addgt	r5, r5, r3
 8020d32:	2600      	movs	r6, #0
 8020d34:	341a      	adds	r4, #26
 8020d36:	42b5      	cmp	r5, r6
 8020d38:	d11a      	bne.n	8020d70 <_printf_common+0xc8>
 8020d3a:	2000      	movs	r0, #0
 8020d3c:	e008      	b.n	8020d50 <_printf_common+0xa8>
 8020d3e:	2301      	movs	r3, #1
 8020d40:	4652      	mov	r2, sl
 8020d42:	4649      	mov	r1, r9
 8020d44:	4638      	mov	r0, r7
 8020d46:	47c0      	blx	r8
 8020d48:	3001      	adds	r0, #1
 8020d4a:	d103      	bne.n	8020d54 <_printf_common+0xac>
 8020d4c:	f04f 30ff 	mov.w	r0, #4294967295
 8020d50:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020d54:	3501      	adds	r5, #1
 8020d56:	e7c6      	b.n	8020ce6 <_printf_common+0x3e>
 8020d58:	18e1      	adds	r1, r4, r3
 8020d5a:	1c5a      	adds	r2, r3, #1
 8020d5c:	2030      	movs	r0, #48	; 0x30
 8020d5e:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8020d62:	4422      	add	r2, r4
 8020d64:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8020d68:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8020d6c:	3302      	adds	r3, #2
 8020d6e:	e7c7      	b.n	8020d00 <_printf_common+0x58>
 8020d70:	2301      	movs	r3, #1
 8020d72:	4622      	mov	r2, r4
 8020d74:	4649      	mov	r1, r9
 8020d76:	4638      	mov	r0, r7
 8020d78:	47c0      	blx	r8
 8020d7a:	3001      	adds	r0, #1
 8020d7c:	d0e6      	beq.n	8020d4c <_printf_common+0xa4>
 8020d7e:	3601      	adds	r6, #1
 8020d80:	e7d9      	b.n	8020d36 <_printf_common+0x8e>
	...

08020d84 <_printf_i>:
 8020d84:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8020d88:	7e0f      	ldrb	r7, [r1, #24]
 8020d8a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8020d8c:	2f78      	cmp	r7, #120	; 0x78
 8020d8e:	4691      	mov	r9, r2
 8020d90:	4680      	mov	r8, r0
 8020d92:	460c      	mov	r4, r1
 8020d94:	469a      	mov	sl, r3
 8020d96:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8020d9a:	d807      	bhi.n	8020dac <_printf_i+0x28>
 8020d9c:	2f62      	cmp	r7, #98	; 0x62
 8020d9e:	d80a      	bhi.n	8020db6 <_printf_i+0x32>
 8020da0:	2f00      	cmp	r7, #0
 8020da2:	f000 80d8 	beq.w	8020f56 <_printf_i+0x1d2>
 8020da6:	2f58      	cmp	r7, #88	; 0x58
 8020da8:	f000 80a3 	beq.w	8020ef2 <_printf_i+0x16e>
 8020dac:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8020db0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8020db4:	e03a      	b.n	8020e2c <_printf_i+0xa8>
 8020db6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8020dba:	2b15      	cmp	r3, #21
 8020dbc:	d8f6      	bhi.n	8020dac <_printf_i+0x28>
 8020dbe:	a101      	add	r1, pc, #4	; (adr r1, 8020dc4 <_printf_i+0x40>)
 8020dc0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8020dc4:	08020e1d 	.word	0x08020e1d
 8020dc8:	08020e31 	.word	0x08020e31
 8020dcc:	08020dad 	.word	0x08020dad
 8020dd0:	08020dad 	.word	0x08020dad
 8020dd4:	08020dad 	.word	0x08020dad
 8020dd8:	08020dad 	.word	0x08020dad
 8020ddc:	08020e31 	.word	0x08020e31
 8020de0:	08020dad 	.word	0x08020dad
 8020de4:	08020dad 	.word	0x08020dad
 8020de8:	08020dad 	.word	0x08020dad
 8020dec:	08020dad 	.word	0x08020dad
 8020df0:	08020f3d 	.word	0x08020f3d
 8020df4:	08020e61 	.word	0x08020e61
 8020df8:	08020f1f 	.word	0x08020f1f
 8020dfc:	08020dad 	.word	0x08020dad
 8020e00:	08020dad 	.word	0x08020dad
 8020e04:	08020f5f 	.word	0x08020f5f
 8020e08:	08020dad 	.word	0x08020dad
 8020e0c:	08020e61 	.word	0x08020e61
 8020e10:	08020dad 	.word	0x08020dad
 8020e14:	08020dad 	.word	0x08020dad
 8020e18:	08020f27 	.word	0x08020f27
 8020e1c:	682b      	ldr	r3, [r5, #0]
 8020e1e:	1d1a      	adds	r2, r3, #4
 8020e20:	681b      	ldr	r3, [r3, #0]
 8020e22:	602a      	str	r2, [r5, #0]
 8020e24:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8020e28:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8020e2c:	2301      	movs	r3, #1
 8020e2e:	e0a3      	b.n	8020f78 <_printf_i+0x1f4>
 8020e30:	6820      	ldr	r0, [r4, #0]
 8020e32:	6829      	ldr	r1, [r5, #0]
 8020e34:	0606      	lsls	r6, r0, #24
 8020e36:	f101 0304 	add.w	r3, r1, #4
 8020e3a:	d50a      	bpl.n	8020e52 <_printf_i+0xce>
 8020e3c:	680e      	ldr	r6, [r1, #0]
 8020e3e:	602b      	str	r3, [r5, #0]
 8020e40:	2e00      	cmp	r6, #0
 8020e42:	da03      	bge.n	8020e4c <_printf_i+0xc8>
 8020e44:	232d      	movs	r3, #45	; 0x2d
 8020e46:	4276      	negs	r6, r6
 8020e48:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8020e4c:	485e      	ldr	r0, [pc, #376]	; (8020fc8 <_printf_i+0x244>)
 8020e4e:	230a      	movs	r3, #10
 8020e50:	e019      	b.n	8020e86 <_printf_i+0x102>
 8020e52:	680e      	ldr	r6, [r1, #0]
 8020e54:	602b      	str	r3, [r5, #0]
 8020e56:	f010 0f40 	tst.w	r0, #64	; 0x40
 8020e5a:	bf18      	it	ne
 8020e5c:	b236      	sxthne	r6, r6
 8020e5e:	e7ef      	b.n	8020e40 <_printf_i+0xbc>
 8020e60:	682b      	ldr	r3, [r5, #0]
 8020e62:	6820      	ldr	r0, [r4, #0]
 8020e64:	1d19      	adds	r1, r3, #4
 8020e66:	6029      	str	r1, [r5, #0]
 8020e68:	0601      	lsls	r1, r0, #24
 8020e6a:	d501      	bpl.n	8020e70 <_printf_i+0xec>
 8020e6c:	681e      	ldr	r6, [r3, #0]
 8020e6e:	e002      	b.n	8020e76 <_printf_i+0xf2>
 8020e70:	0646      	lsls	r6, r0, #25
 8020e72:	d5fb      	bpl.n	8020e6c <_printf_i+0xe8>
 8020e74:	881e      	ldrh	r6, [r3, #0]
 8020e76:	4854      	ldr	r0, [pc, #336]	; (8020fc8 <_printf_i+0x244>)
 8020e78:	2f6f      	cmp	r7, #111	; 0x6f
 8020e7a:	bf0c      	ite	eq
 8020e7c:	2308      	moveq	r3, #8
 8020e7e:	230a      	movne	r3, #10
 8020e80:	2100      	movs	r1, #0
 8020e82:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8020e86:	6865      	ldr	r5, [r4, #4]
 8020e88:	60a5      	str	r5, [r4, #8]
 8020e8a:	2d00      	cmp	r5, #0
 8020e8c:	bfa2      	ittt	ge
 8020e8e:	6821      	ldrge	r1, [r4, #0]
 8020e90:	f021 0104 	bicge.w	r1, r1, #4
 8020e94:	6021      	strge	r1, [r4, #0]
 8020e96:	b90e      	cbnz	r6, 8020e9c <_printf_i+0x118>
 8020e98:	2d00      	cmp	r5, #0
 8020e9a:	d04d      	beq.n	8020f38 <_printf_i+0x1b4>
 8020e9c:	4615      	mov	r5, r2
 8020e9e:	fbb6 f1f3 	udiv	r1, r6, r3
 8020ea2:	fb03 6711 	mls	r7, r3, r1, r6
 8020ea6:	5dc7      	ldrb	r7, [r0, r7]
 8020ea8:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8020eac:	4637      	mov	r7, r6
 8020eae:	42bb      	cmp	r3, r7
 8020eb0:	460e      	mov	r6, r1
 8020eb2:	d9f4      	bls.n	8020e9e <_printf_i+0x11a>
 8020eb4:	2b08      	cmp	r3, #8
 8020eb6:	d10b      	bne.n	8020ed0 <_printf_i+0x14c>
 8020eb8:	6823      	ldr	r3, [r4, #0]
 8020eba:	07de      	lsls	r6, r3, #31
 8020ebc:	d508      	bpl.n	8020ed0 <_printf_i+0x14c>
 8020ebe:	6923      	ldr	r3, [r4, #16]
 8020ec0:	6861      	ldr	r1, [r4, #4]
 8020ec2:	4299      	cmp	r1, r3
 8020ec4:	bfde      	ittt	le
 8020ec6:	2330      	movle	r3, #48	; 0x30
 8020ec8:	f805 3c01 	strble.w	r3, [r5, #-1]
 8020ecc:	f105 35ff 	addle.w	r5, r5, #4294967295
 8020ed0:	1b52      	subs	r2, r2, r5
 8020ed2:	6122      	str	r2, [r4, #16]
 8020ed4:	f8cd a000 	str.w	sl, [sp]
 8020ed8:	464b      	mov	r3, r9
 8020eda:	aa03      	add	r2, sp, #12
 8020edc:	4621      	mov	r1, r4
 8020ede:	4640      	mov	r0, r8
 8020ee0:	f7ff fee2 	bl	8020ca8 <_printf_common>
 8020ee4:	3001      	adds	r0, #1
 8020ee6:	d14c      	bne.n	8020f82 <_printf_i+0x1fe>
 8020ee8:	f04f 30ff 	mov.w	r0, #4294967295
 8020eec:	b004      	add	sp, #16
 8020eee:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8020ef2:	4835      	ldr	r0, [pc, #212]	; (8020fc8 <_printf_i+0x244>)
 8020ef4:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 8020ef8:	6829      	ldr	r1, [r5, #0]
 8020efa:	6823      	ldr	r3, [r4, #0]
 8020efc:	f851 6b04 	ldr.w	r6, [r1], #4
 8020f00:	6029      	str	r1, [r5, #0]
 8020f02:	061d      	lsls	r5, r3, #24
 8020f04:	d514      	bpl.n	8020f30 <_printf_i+0x1ac>
 8020f06:	07df      	lsls	r7, r3, #31
 8020f08:	bf44      	itt	mi
 8020f0a:	f043 0320 	orrmi.w	r3, r3, #32
 8020f0e:	6023      	strmi	r3, [r4, #0]
 8020f10:	b91e      	cbnz	r6, 8020f1a <_printf_i+0x196>
 8020f12:	6823      	ldr	r3, [r4, #0]
 8020f14:	f023 0320 	bic.w	r3, r3, #32
 8020f18:	6023      	str	r3, [r4, #0]
 8020f1a:	2310      	movs	r3, #16
 8020f1c:	e7b0      	b.n	8020e80 <_printf_i+0xfc>
 8020f1e:	6823      	ldr	r3, [r4, #0]
 8020f20:	f043 0320 	orr.w	r3, r3, #32
 8020f24:	6023      	str	r3, [r4, #0]
 8020f26:	2378      	movs	r3, #120	; 0x78
 8020f28:	4828      	ldr	r0, [pc, #160]	; (8020fcc <_printf_i+0x248>)
 8020f2a:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8020f2e:	e7e3      	b.n	8020ef8 <_printf_i+0x174>
 8020f30:	0659      	lsls	r1, r3, #25
 8020f32:	bf48      	it	mi
 8020f34:	b2b6      	uxthmi	r6, r6
 8020f36:	e7e6      	b.n	8020f06 <_printf_i+0x182>
 8020f38:	4615      	mov	r5, r2
 8020f3a:	e7bb      	b.n	8020eb4 <_printf_i+0x130>
 8020f3c:	682b      	ldr	r3, [r5, #0]
 8020f3e:	6826      	ldr	r6, [r4, #0]
 8020f40:	6961      	ldr	r1, [r4, #20]
 8020f42:	1d18      	adds	r0, r3, #4
 8020f44:	6028      	str	r0, [r5, #0]
 8020f46:	0635      	lsls	r5, r6, #24
 8020f48:	681b      	ldr	r3, [r3, #0]
 8020f4a:	d501      	bpl.n	8020f50 <_printf_i+0x1cc>
 8020f4c:	6019      	str	r1, [r3, #0]
 8020f4e:	e002      	b.n	8020f56 <_printf_i+0x1d2>
 8020f50:	0670      	lsls	r0, r6, #25
 8020f52:	d5fb      	bpl.n	8020f4c <_printf_i+0x1c8>
 8020f54:	8019      	strh	r1, [r3, #0]
 8020f56:	2300      	movs	r3, #0
 8020f58:	6123      	str	r3, [r4, #16]
 8020f5a:	4615      	mov	r5, r2
 8020f5c:	e7ba      	b.n	8020ed4 <_printf_i+0x150>
 8020f5e:	682b      	ldr	r3, [r5, #0]
 8020f60:	1d1a      	adds	r2, r3, #4
 8020f62:	602a      	str	r2, [r5, #0]
 8020f64:	681d      	ldr	r5, [r3, #0]
 8020f66:	6862      	ldr	r2, [r4, #4]
 8020f68:	2100      	movs	r1, #0
 8020f6a:	4628      	mov	r0, r5
 8020f6c:	f7df f948 	bl	8000200 <memchr>
 8020f70:	b108      	cbz	r0, 8020f76 <_printf_i+0x1f2>
 8020f72:	1b40      	subs	r0, r0, r5
 8020f74:	6060      	str	r0, [r4, #4]
 8020f76:	6863      	ldr	r3, [r4, #4]
 8020f78:	6123      	str	r3, [r4, #16]
 8020f7a:	2300      	movs	r3, #0
 8020f7c:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8020f80:	e7a8      	b.n	8020ed4 <_printf_i+0x150>
 8020f82:	6923      	ldr	r3, [r4, #16]
 8020f84:	462a      	mov	r2, r5
 8020f86:	4649      	mov	r1, r9
 8020f88:	4640      	mov	r0, r8
 8020f8a:	47d0      	blx	sl
 8020f8c:	3001      	adds	r0, #1
 8020f8e:	d0ab      	beq.n	8020ee8 <_printf_i+0x164>
 8020f90:	6823      	ldr	r3, [r4, #0]
 8020f92:	079b      	lsls	r3, r3, #30
 8020f94:	d413      	bmi.n	8020fbe <_printf_i+0x23a>
 8020f96:	68e0      	ldr	r0, [r4, #12]
 8020f98:	9b03      	ldr	r3, [sp, #12]
 8020f9a:	4298      	cmp	r0, r3
 8020f9c:	bfb8      	it	lt
 8020f9e:	4618      	movlt	r0, r3
 8020fa0:	e7a4      	b.n	8020eec <_printf_i+0x168>
 8020fa2:	2301      	movs	r3, #1
 8020fa4:	4632      	mov	r2, r6
 8020fa6:	4649      	mov	r1, r9
 8020fa8:	4640      	mov	r0, r8
 8020faa:	47d0      	blx	sl
 8020fac:	3001      	adds	r0, #1
 8020fae:	d09b      	beq.n	8020ee8 <_printf_i+0x164>
 8020fb0:	3501      	adds	r5, #1
 8020fb2:	68e3      	ldr	r3, [r4, #12]
 8020fb4:	9903      	ldr	r1, [sp, #12]
 8020fb6:	1a5b      	subs	r3, r3, r1
 8020fb8:	42ab      	cmp	r3, r5
 8020fba:	dcf2      	bgt.n	8020fa2 <_printf_i+0x21e>
 8020fbc:	e7eb      	b.n	8020f96 <_printf_i+0x212>
 8020fbe:	2500      	movs	r5, #0
 8020fc0:	f104 0619 	add.w	r6, r4, #25
 8020fc4:	e7f5      	b.n	8020fb2 <_printf_i+0x22e>
 8020fc6:	bf00      	nop
 8020fc8:	08024215 	.word	0x08024215
 8020fcc:	08024226 	.word	0x08024226

08020fd0 <_sbrk_r>:
 8020fd0:	b538      	push	{r3, r4, r5, lr}
 8020fd2:	4d06      	ldr	r5, [pc, #24]	; (8020fec <_sbrk_r+0x1c>)
 8020fd4:	2300      	movs	r3, #0
 8020fd6:	4604      	mov	r4, r0
 8020fd8:	4608      	mov	r0, r1
 8020fda:	602b      	str	r3, [r5, #0]
 8020fdc:	f7e2 f81a 	bl	8003014 <_sbrk>
 8020fe0:	1c43      	adds	r3, r0, #1
 8020fe2:	d102      	bne.n	8020fea <_sbrk_r+0x1a>
 8020fe4:	682b      	ldr	r3, [r5, #0]
 8020fe6:	b103      	cbz	r3, 8020fea <_sbrk_r+0x1a>
 8020fe8:	6023      	str	r3, [r4, #0]
 8020fea:	bd38      	pop	{r3, r4, r5, pc}
 8020fec:	200120e8 	.word	0x200120e8

08020ff0 <_raise_r>:
 8020ff0:	291f      	cmp	r1, #31
 8020ff2:	b538      	push	{r3, r4, r5, lr}
 8020ff4:	4604      	mov	r4, r0
 8020ff6:	460d      	mov	r5, r1
 8020ff8:	d904      	bls.n	8021004 <_raise_r+0x14>
 8020ffa:	2316      	movs	r3, #22
 8020ffc:	6003      	str	r3, [r0, #0]
 8020ffe:	f04f 30ff 	mov.w	r0, #4294967295
 8021002:	bd38      	pop	{r3, r4, r5, pc}
 8021004:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8021006:	b112      	cbz	r2, 802100e <_raise_r+0x1e>
 8021008:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802100c:	b94b      	cbnz	r3, 8021022 <_raise_r+0x32>
 802100e:	4620      	mov	r0, r4
 8021010:	f000 f830 	bl	8021074 <_getpid_r>
 8021014:	462a      	mov	r2, r5
 8021016:	4601      	mov	r1, r0
 8021018:	4620      	mov	r0, r4
 802101a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802101e:	f000 b817 	b.w	8021050 <_kill_r>
 8021022:	2b01      	cmp	r3, #1
 8021024:	d00a      	beq.n	802103c <_raise_r+0x4c>
 8021026:	1c59      	adds	r1, r3, #1
 8021028:	d103      	bne.n	8021032 <_raise_r+0x42>
 802102a:	2316      	movs	r3, #22
 802102c:	6003      	str	r3, [r0, #0]
 802102e:	2001      	movs	r0, #1
 8021030:	e7e7      	b.n	8021002 <_raise_r+0x12>
 8021032:	2400      	movs	r4, #0
 8021034:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8021038:	4628      	mov	r0, r5
 802103a:	4798      	blx	r3
 802103c:	2000      	movs	r0, #0
 802103e:	e7e0      	b.n	8021002 <_raise_r+0x12>

08021040 <raise>:
 8021040:	4b02      	ldr	r3, [pc, #8]	; (802104c <raise+0xc>)
 8021042:	4601      	mov	r1, r0
 8021044:	6818      	ldr	r0, [r3, #0]
 8021046:	f7ff bfd3 	b.w	8020ff0 <_raise_r>
 802104a:	bf00      	nop
 802104c:	200000d8 	.word	0x200000d8

08021050 <_kill_r>:
 8021050:	b538      	push	{r3, r4, r5, lr}
 8021052:	4d07      	ldr	r5, [pc, #28]	; (8021070 <_kill_r+0x20>)
 8021054:	2300      	movs	r3, #0
 8021056:	4604      	mov	r4, r0
 8021058:	4608      	mov	r0, r1
 802105a:	4611      	mov	r1, r2
 802105c:	602b      	str	r3, [r5, #0]
 802105e:	f7e1 ffa3 	bl	8002fa8 <_kill>
 8021062:	1c43      	adds	r3, r0, #1
 8021064:	d102      	bne.n	802106c <_kill_r+0x1c>
 8021066:	682b      	ldr	r3, [r5, #0]
 8021068:	b103      	cbz	r3, 802106c <_kill_r+0x1c>
 802106a:	6023      	str	r3, [r4, #0]
 802106c:	bd38      	pop	{r3, r4, r5, pc}
 802106e:	bf00      	nop
 8021070:	200120e8 	.word	0x200120e8

08021074 <_getpid_r>:
 8021074:	f7e1 bf96 	b.w	8002fa4 <_getpid>

08021078 <__swbuf_r>:
 8021078:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802107a:	460e      	mov	r6, r1
 802107c:	4614      	mov	r4, r2
 802107e:	4605      	mov	r5, r0
 8021080:	b118      	cbz	r0, 802108a <__swbuf_r+0x12>
 8021082:	6983      	ldr	r3, [r0, #24]
 8021084:	b90b      	cbnz	r3, 802108a <__swbuf_r+0x12>
 8021086:	f000 fa33 	bl	80214f0 <__sinit>
 802108a:	4b21      	ldr	r3, [pc, #132]	; (8021110 <__swbuf_r+0x98>)
 802108c:	429c      	cmp	r4, r3
 802108e:	d12b      	bne.n	80210e8 <__swbuf_r+0x70>
 8021090:	686c      	ldr	r4, [r5, #4]
 8021092:	69a3      	ldr	r3, [r4, #24]
 8021094:	60a3      	str	r3, [r4, #8]
 8021096:	89a3      	ldrh	r3, [r4, #12]
 8021098:	071a      	lsls	r2, r3, #28
 802109a:	d52f      	bpl.n	80210fc <__swbuf_r+0x84>
 802109c:	6923      	ldr	r3, [r4, #16]
 802109e:	b36b      	cbz	r3, 80210fc <__swbuf_r+0x84>
 80210a0:	6923      	ldr	r3, [r4, #16]
 80210a2:	6820      	ldr	r0, [r4, #0]
 80210a4:	1ac0      	subs	r0, r0, r3
 80210a6:	6963      	ldr	r3, [r4, #20]
 80210a8:	b2f6      	uxtb	r6, r6
 80210aa:	4283      	cmp	r3, r0
 80210ac:	4637      	mov	r7, r6
 80210ae:	dc04      	bgt.n	80210ba <__swbuf_r+0x42>
 80210b0:	4621      	mov	r1, r4
 80210b2:	4628      	mov	r0, r5
 80210b4:	f000 f988 	bl	80213c8 <_fflush_r>
 80210b8:	bb30      	cbnz	r0, 8021108 <__swbuf_r+0x90>
 80210ba:	68a3      	ldr	r3, [r4, #8]
 80210bc:	3b01      	subs	r3, #1
 80210be:	60a3      	str	r3, [r4, #8]
 80210c0:	6823      	ldr	r3, [r4, #0]
 80210c2:	1c5a      	adds	r2, r3, #1
 80210c4:	6022      	str	r2, [r4, #0]
 80210c6:	701e      	strb	r6, [r3, #0]
 80210c8:	6963      	ldr	r3, [r4, #20]
 80210ca:	3001      	adds	r0, #1
 80210cc:	4283      	cmp	r3, r0
 80210ce:	d004      	beq.n	80210da <__swbuf_r+0x62>
 80210d0:	89a3      	ldrh	r3, [r4, #12]
 80210d2:	07db      	lsls	r3, r3, #31
 80210d4:	d506      	bpl.n	80210e4 <__swbuf_r+0x6c>
 80210d6:	2e0a      	cmp	r6, #10
 80210d8:	d104      	bne.n	80210e4 <__swbuf_r+0x6c>
 80210da:	4621      	mov	r1, r4
 80210dc:	4628      	mov	r0, r5
 80210de:	f000 f973 	bl	80213c8 <_fflush_r>
 80210e2:	b988      	cbnz	r0, 8021108 <__swbuf_r+0x90>
 80210e4:	4638      	mov	r0, r7
 80210e6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80210e8:	4b0a      	ldr	r3, [pc, #40]	; (8021114 <__swbuf_r+0x9c>)
 80210ea:	429c      	cmp	r4, r3
 80210ec:	d101      	bne.n	80210f2 <__swbuf_r+0x7a>
 80210ee:	68ac      	ldr	r4, [r5, #8]
 80210f0:	e7cf      	b.n	8021092 <__swbuf_r+0x1a>
 80210f2:	4b09      	ldr	r3, [pc, #36]	; (8021118 <__swbuf_r+0xa0>)
 80210f4:	429c      	cmp	r4, r3
 80210f6:	bf08      	it	eq
 80210f8:	68ec      	ldreq	r4, [r5, #12]
 80210fa:	e7ca      	b.n	8021092 <__swbuf_r+0x1a>
 80210fc:	4621      	mov	r1, r4
 80210fe:	4628      	mov	r0, r5
 8021100:	f000 f80c 	bl	802111c <__swsetup_r>
 8021104:	2800      	cmp	r0, #0
 8021106:	d0cb      	beq.n	80210a0 <__swbuf_r+0x28>
 8021108:	f04f 37ff 	mov.w	r7, #4294967295
 802110c:	e7ea      	b.n	80210e4 <__swbuf_r+0x6c>
 802110e:	bf00      	nop
 8021110:	0802425c 	.word	0x0802425c
 8021114:	0802427c 	.word	0x0802427c
 8021118:	0802423c 	.word	0x0802423c

0802111c <__swsetup_r>:
 802111c:	4b32      	ldr	r3, [pc, #200]	; (80211e8 <__swsetup_r+0xcc>)
 802111e:	b570      	push	{r4, r5, r6, lr}
 8021120:	681d      	ldr	r5, [r3, #0]
 8021122:	4606      	mov	r6, r0
 8021124:	460c      	mov	r4, r1
 8021126:	b125      	cbz	r5, 8021132 <__swsetup_r+0x16>
 8021128:	69ab      	ldr	r3, [r5, #24]
 802112a:	b913      	cbnz	r3, 8021132 <__swsetup_r+0x16>
 802112c:	4628      	mov	r0, r5
 802112e:	f000 f9df 	bl	80214f0 <__sinit>
 8021132:	4b2e      	ldr	r3, [pc, #184]	; (80211ec <__swsetup_r+0xd0>)
 8021134:	429c      	cmp	r4, r3
 8021136:	d10f      	bne.n	8021158 <__swsetup_r+0x3c>
 8021138:	686c      	ldr	r4, [r5, #4]
 802113a:	89a3      	ldrh	r3, [r4, #12]
 802113c:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8021140:	0719      	lsls	r1, r3, #28
 8021142:	d42c      	bmi.n	802119e <__swsetup_r+0x82>
 8021144:	06dd      	lsls	r5, r3, #27
 8021146:	d411      	bmi.n	802116c <__swsetup_r+0x50>
 8021148:	2309      	movs	r3, #9
 802114a:	6033      	str	r3, [r6, #0]
 802114c:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 8021150:	81a3      	strh	r3, [r4, #12]
 8021152:	f04f 30ff 	mov.w	r0, #4294967295
 8021156:	e03e      	b.n	80211d6 <__swsetup_r+0xba>
 8021158:	4b25      	ldr	r3, [pc, #148]	; (80211f0 <__swsetup_r+0xd4>)
 802115a:	429c      	cmp	r4, r3
 802115c:	d101      	bne.n	8021162 <__swsetup_r+0x46>
 802115e:	68ac      	ldr	r4, [r5, #8]
 8021160:	e7eb      	b.n	802113a <__swsetup_r+0x1e>
 8021162:	4b24      	ldr	r3, [pc, #144]	; (80211f4 <__swsetup_r+0xd8>)
 8021164:	429c      	cmp	r4, r3
 8021166:	bf08      	it	eq
 8021168:	68ec      	ldreq	r4, [r5, #12]
 802116a:	e7e6      	b.n	802113a <__swsetup_r+0x1e>
 802116c:	0758      	lsls	r0, r3, #29
 802116e:	d512      	bpl.n	8021196 <__swsetup_r+0x7a>
 8021170:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8021172:	b141      	cbz	r1, 8021186 <__swsetup_r+0x6a>
 8021174:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8021178:	4299      	cmp	r1, r3
 802117a:	d002      	beq.n	8021182 <__swsetup_r+0x66>
 802117c:	4630      	mov	r0, r6
 802117e:	f7ff fb59 	bl	8020834 <_free_r>
 8021182:	2300      	movs	r3, #0
 8021184:	6363      	str	r3, [r4, #52]	; 0x34
 8021186:	89a3      	ldrh	r3, [r4, #12]
 8021188:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 802118c:	81a3      	strh	r3, [r4, #12]
 802118e:	2300      	movs	r3, #0
 8021190:	6063      	str	r3, [r4, #4]
 8021192:	6923      	ldr	r3, [r4, #16]
 8021194:	6023      	str	r3, [r4, #0]
 8021196:	89a3      	ldrh	r3, [r4, #12]
 8021198:	f043 0308 	orr.w	r3, r3, #8
 802119c:	81a3      	strh	r3, [r4, #12]
 802119e:	6923      	ldr	r3, [r4, #16]
 80211a0:	b94b      	cbnz	r3, 80211b6 <__swsetup_r+0x9a>
 80211a2:	89a3      	ldrh	r3, [r4, #12]
 80211a4:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80211a8:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80211ac:	d003      	beq.n	80211b6 <__swsetup_r+0x9a>
 80211ae:	4621      	mov	r1, r4
 80211b0:	4630      	mov	r0, r6
 80211b2:	f000 fa63 	bl	802167c <__smakebuf_r>
 80211b6:	89a0      	ldrh	r0, [r4, #12]
 80211b8:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80211bc:	f010 0301 	ands.w	r3, r0, #1
 80211c0:	d00a      	beq.n	80211d8 <__swsetup_r+0xbc>
 80211c2:	2300      	movs	r3, #0
 80211c4:	60a3      	str	r3, [r4, #8]
 80211c6:	6963      	ldr	r3, [r4, #20]
 80211c8:	425b      	negs	r3, r3
 80211ca:	61a3      	str	r3, [r4, #24]
 80211cc:	6923      	ldr	r3, [r4, #16]
 80211ce:	b943      	cbnz	r3, 80211e2 <__swsetup_r+0xc6>
 80211d0:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80211d4:	d1ba      	bne.n	802114c <__swsetup_r+0x30>
 80211d6:	bd70      	pop	{r4, r5, r6, pc}
 80211d8:	0781      	lsls	r1, r0, #30
 80211da:	bf58      	it	pl
 80211dc:	6963      	ldrpl	r3, [r4, #20]
 80211de:	60a3      	str	r3, [r4, #8]
 80211e0:	e7f4      	b.n	80211cc <__swsetup_r+0xb0>
 80211e2:	2000      	movs	r0, #0
 80211e4:	e7f7      	b.n	80211d6 <__swsetup_r+0xba>
 80211e6:	bf00      	nop
 80211e8:	200000d8 	.word	0x200000d8
 80211ec:	0802425c 	.word	0x0802425c
 80211f0:	0802427c 	.word	0x0802427c
 80211f4:	0802423c 	.word	0x0802423c

080211f8 <__register_exitproc>:
 80211f8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80211fc:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 80212b8 <__register_exitproc+0xc0>
 8021200:	4606      	mov	r6, r0
 8021202:	f8d8 0000 	ldr.w	r0, [r8]
 8021206:	461f      	mov	r7, r3
 8021208:	460d      	mov	r5, r1
 802120a:	4691      	mov	r9, r2
 802120c:	f000 fa0e 	bl	802162c <__retarget_lock_acquire_recursive>
 8021210:	4b25      	ldr	r3, [pc, #148]	; (80212a8 <__register_exitproc+0xb0>)
 8021212:	681c      	ldr	r4, [r3, #0]
 8021214:	b934      	cbnz	r4, 8021224 <__register_exitproc+0x2c>
 8021216:	4c25      	ldr	r4, [pc, #148]	; (80212ac <__register_exitproc+0xb4>)
 8021218:	601c      	str	r4, [r3, #0]
 802121a:	4b25      	ldr	r3, [pc, #148]	; (80212b0 <__register_exitproc+0xb8>)
 802121c:	b113      	cbz	r3, 8021224 <__register_exitproc+0x2c>
 802121e:	681b      	ldr	r3, [r3, #0]
 8021220:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 8021224:	6863      	ldr	r3, [r4, #4]
 8021226:	2b1f      	cmp	r3, #31
 8021228:	dd07      	ble.n	802123a <__register_exitproc+0x42>
 802122a:	f8d8 0000 	ldr.w	r0, [r8]
 802122e:	f000 f9ff 	bl	8021630 <__retarget_lock_release_recursive>
 8021232:	f04f 30ff 	mov.w	r0, #4294967295
 8021236:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802123a:	b34e      	cbz	r6, 8021290 <__register_exitproc+0x98>
 802123c:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 8021240:	b988      	cbnz	r0, 8021266 <__register_exitproc+0x6e>
 8021242:	4b1c      	ldr	r3, [pc, #112]	; (80212b4 <__register_exitproc+0xbc>)
 8021244:	b923      	cbnz	r3, 8021250 <__register_exitproc+0x58>
 8021246:	f8d8 0000 	ldr.w	r0, [r8]
 802124a:	f000 f9f0 	bl	802162e <__retarget_lock_release>
 802124e:	e7f0      	b.n	8021232 <__register_exitproc+0x3a>
 8021250:	f44f 7084 	mov.w	r0, #264	; 0x108
 8021254:	f7ff fac8 	bl	80207e8 <malloc>
 8021258:	2800      	cmp	r0, #0
 802125a:	d0f4      	beq.n	8021246 <__register_exitproc+0x4e>
 802125c:	2300      	movs	r3, #0
 802125e:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 8021262:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 8021266:	6863      	ldr	r3, [r4, #4]
 8021268:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 802126c:	2201      	movs	r2, #1
 802126e:	409a      	lsls	r2, r3
 8021270:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 8021274:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 8021278:	4313      	orrs	r3, r2
 802127a:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 802127e:	2e02      	cmp	r6, #2
 8021280:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 8021284:	bf02      	ittt	eq
 8021286:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 802128a:	4313      	orreq	r3, r2
 802128c:	f8c0 3104 	streq.w	r3, [r0, #260]	; 0x104
 8021290:	6863      	ldr	r3, [r4, #4]
 8021292:	f8d8 0000 	ldr.w	r0, [r8]
 8021296:	1c5a      	adds	r2, r3, #1
 8021298:	3302      	adds	r3, #2
 802129a:	6062      	str	r2, [r4, #4]
 802129c:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 80212a0:	f000 f9c6 	bl	8021630 <__retarget_lock_release_recursive>
 80212a4:	2000      	movs	r0, #0
 80212a6:	e7c6      	b.n	8021236 <__register_exitproc+0x3e>
 80212a8:	200120e0 	.word	0x200120e0
 80212ac:	20012054 	.word	0x20012054
 80212b0:	08024238 	.word	0x08024238
 80212b4:	080207e9 	.word	0x080207e9
 80212b8:	2000013c 	.word	0x2000013c

080212bc <__sflush_r>:
 80212bc:	898a      	ldrh	r2, [r1, #12]
 80212be:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80212c2:	4605      	mov	r5, r0
 80212c4:	0710      	lsls	r0, r2, #28
 80212c6:	460c      	mov	r4, r1
 80212c8:	d458      	bmi.n	802137c <__sflush_r+0xc0>
 80212ca:	684b      	ldr	r3, [r1, #4]
 80212cc:	2b00      	cmp	r3, #0
 80212ce:	dc05      	bgt.n	80212dc <__sflush_r+0x20>
 80212d0:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 80212d2:	2b00      	cmp	r3, #0
 80212d4:	dc02      	bgt.n	80212dc <__sflush_r+0x20>
 80212d6:	2000      	movs	r0, #0
 80212d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80212dc:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 80212de:	2e00      	cmp	r6, #0
 80212e0:	d0f9      	beq.n	80212d6 <__sflush_r+0x1a>
 80212e2:	2300      	movs	r3, #0
 80212e4:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 80212e8:	682f      	ldr	r7, [r5, #0]
 80212ea:	602b      	str	r3, [r5, #0]
 80212ec:	d032      	beq.n	8021354 <__sflush_r+0x98>
 80212ee:	6d60      	ldr	r0, [r4, #84]	; 0x54
 80212f0:	89a3      	ldrh	r3, [r4, #12]
 80212f2:	075a      	lsls	r2, r3, #29
 80212f4:	d505      	bpl.n	8021302 <__sflush_r+0x46>
 80212f6:	6863      	ldr	r3, [r4, #4]
 80212f8:	1ac0      	subs	r0, r0, r3
 80212fa:	6b63      	ldr	r3, [r4, #52]	; 0x34
 80212fc:	b10b      	cbz	r3, 8021302 <__sflush_r+0x46>
 80212fe:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8021300:	1ac0      	subs	r0, r0, r3
 8021302:	2300      	movs	r3, #0
 8021304:	4602      	mov	r2, r0
 8021306:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8021308:	6a21      	ldr	r1, [r4, #32]
 802130a:	4628      	mov	r0, r5
 802130c:	47b0      	blx	r6
 802130e:	1c43      	adds	r3, r0, #1
 8021310:	89a3      	ldrh	r3, [r4, #12]
 8021312:	d106      	bne.n	8021322 <__sflush_r+0x66>
 8021314:	6829      	ldr	r1, [r5, #0]
 8021316:	291d      	cmp	r1, #29
 8021318:	d82c      	bhi.n	8021374 <__sflush_r+0xb8>
 802131a:	4a2a      	ldr	r2, [pc, #168]	; (80213c4 <__sflush_r+0x108>)
 802131c:	40ca      	lsrs	r2, r1
 802131e:	07d6      	lsls	r6, r2, #31
 8021320:	d528      	bpl.n	8021374 <__sflush_r+0xb8>
 8021322:	2200      	movs	r2, #0
 8021324:	6062      	str	r2, [r4, #4]
 8021326:	04d9      	lsls	r1, r3, #19
 8021328:	6922      	ldr	r2, [r4, #16]
 802132a:	6022      	str	r2, [r4, #0]
 802132c:	d504      	bpl.n	8021338 <__sflush_r+0x7c>
 802132e:	1c42      	adds	r2, r0, #1
 8021330:	d101      	bne.n	8021336 <__sflush_r+0x7a>
 8021332:	682b      	ldr	r3, [r5, #0]
 8021334:	b903      	cbnz	r3, 8021338 <__sflush_r+0x7c>
 8021336:	6560      	str	r0, [r4, #84]	; 0x54
 8021338:	6b61      	ldr	r1, [r4, #52]	; 0x34
 802133a:	602f      	str	r7, [r5, #0]
 802133c:	2900      	cmp	r1, #0
 802133e:	d0ca      	beq.n	80212d6 <__sflush_r+0x1a>
 8021340:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8021344:	4299      	cmp	r1, r3
 8021346:	d002      	beq.n	802134e <__sflush_r+0x92>
 8021348:	4628      	mov	r0, r5
 802134a:	f7ff fa73 	bl	8020834 <_free_r>
 802134e:	2000      	movs	r0, #0
 8021350:	6360      	str	r0, [r4, #52]	; 0x34
 8021352:	e7c1      	b.n	80212d8 <__sflush_r+0x1c>
 8021354:	6a21      	ldr	r1, [r4, #32]
 8021356:	2301      	movs	r3, #1
 8021358:	4628      	mov	r0, r5
 802135a:	47b0      	blx	r6
 802135c:	1c41      	adds	r1, r0, #1
 802135e:	d1c7      	bne.n	80212f0 <__sflush_r+0x34>
 8021360:	682b      	ldr	r3, [r5, #0]
 8021362:	2b00      	cmp	r3, #0
 8021364:	d0c4      	beq.n	80212f0 <__sflush_r+0x34>
 8021366:	2b1d      	cmp	r3, #29
 8021368:	d001      	beq.n	802136e <__sflush_r+0xb2>
 802136a:	2b16      	cmp	r3, #22
 802136c:	d101      	bne.n	8021372 <__sflush_r+0xb6>
 802136e:	602f      	str	r7, [r5, #0]
 8021370:	e7b1      	b.n	80212d6 <__sflush_r+0x1a>
 8021372:	89a3      	ldrh	r3, [r4, #12]
 8021374:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8021378:	81a3      	strh	r3, [r4, #12]
 802137a:	e7ad      	b.n	80212d8 <__sflush_r+0x1c>
 802137c:	690f      	ldr	r7, [r1, #16]
 802137e:	2f00      	cmp	r7, #0
 8021380:	d0a9      	beq.n	80212d6 <__sflush_r+0x1a>
 8021382:	0793      	lsls	r3, r2, #30
 8021384:	680e      	ldr	r6, [r1, #0]
 8021386:	bf08      	it	eq
 8021388:	694b      	ldreq	r3, [r1, #20]
 802138a:	600f      	str	r7, [r1, #0]
 802138c:	bf18      	it	ne
 802138e:	2300      	movne	r3, #0
 8021390:	eba6 0807 	sub.w	r8, r6, r7
 8021394:	608b      	str	r3, [r1, #8]
 8021396:	f1b8 0f00 	cmp.w	r8, #0
 802139a:	dd9c      	ble.n	80212d6 <__sflush_r+0x1a>
 802139c:	6a21      	ldr	r1, [r4, #32]
 802139e:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 80213a0:	4643      	mov	r3, r8
 80213a2:	463a      	mov	r2, r7
 80213a4:	4628      	mov	r0, r5
 80213a6:	47b0      	blx	r6
 80213a8:	2800      	cmp	r0, #0
 80213aa:	dc06      	bgt.n	80213ba <__sflush_r+0xfe>
 80213ac:	89a3      	ldrh	r3, [r4, #12]
 80213ae:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80213b2:	81a3      	strh	r3, [r4, #12]
 80213b4:	f04f 30ff 	mov.w	r0, #4294967295
 80213b8:	e78e      	b.n	80212d8 <__sflush_r+0x1c>
 80213ba:	4407      	add	r7, r0
 80213bc:	eba8 0800 	sub.w	r8, r8, r0
 80213c0:	e7e9      	b.n	8021396 <__sflush_r+0xda>
 80213c2:	bf00      	nop
 80213c4:	20400001 	.word	0x20400001

080213c8 <_fflush_r>:
 80213c8:	b538      	push	{r3, r4, r5, lr}
 80213ca:	690b      	ldr	r3, [r1, #16]
 80213cc:	4605      	mov	r5, r0
 80213ce:	460c      	mov	r4, r1
 80213d0:	b913      	cbnz	r3, 80213d8 <_fflush_r+0x10>
 80213d2:	2500      	movs	r5, #0
 80213d4:	4628      	mov	r0, r5
 80213d6:	bd38      	pop	{r3, r4, r5, pc}
 80213d8:	b118      	cbz	r0, 80213e2 <_fflush_r+0x1a>
 80213da:	6983      	ldr	r3, [r0, #24]
 80213dc:	b90b      	cbnz	r3, 80213e2 <_fflush_r+0x1a>
 80213de:	f000 f887 	bl	80214f0 <__sinit>
 80213e2:	4b14      	ldr	r3, [pc, #80]	; (8021434 <_fflush_r+0x6c>)
 80213e4:	429c      	cmp	r4, r3
 80213e6:	d11b      	bne.n	8021420 <_fflush_r+0x58>
 80213e8:	686c      	ldr	r4, [r5, #4]
 80213ea:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80213ee:	2b00      	cmp	r3, #0
 80213f0:	d0ef      	beq.n	80213d2 <_fflush_r+0xa>
 80213f2:	6e62      	ldr	r2, [r4, #100]	; 0x64
 80213f4:	07d0      	lsls	r0, r2, #31
 80213f6:	d404      	bmi.n	8021402 <_fflush_r+0x3a>
 80213f8:	0599      	lsls	r1, r3, #22
 80213fa:	d402      	bmi.n	8021402 <_fflush_r+0x3a>
 80213fc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80213fe:	f000 f915 	bl	802162c <__retarget_lock_acquire_recursive>
 8021402:	4628      	mov	r0, r5
 8021404:	4621      	mov	r1, r4
 8021406:	f7ff ff59 	bl	80212bc <__sflush_r>
 802140a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 802140c:	07da      	lsls	r2, r3, #31
 802140e:	4605      	mov	r5, r0
 8021410:	d4e0      	bmi.n	80213d4 <_fflush_r+0xc>
 8021412:	89a3      	ldrh	r3, [r4, #12]
 8021414:	059b      	lsls	r3, r3, #22
 8021416:	d4dd      	bmi.n	80213d4 <_fflush_r+0xc>
 8021418:	6da0      	ldr	r0, [r4, #88]	; 0x58
 802141a:	f000 f909 	bl	8021630 <__retarget_lock_release_recursive>
 802141e:	e7d9      	b.n	80213d4 <_fflush_r+0xc>
 8021420:	4b05      	ldr	r3, [pc, #20]	; (8021438 <_fflush_r+0x70>)
 8021422:	429c      	cmp	r4, r3
 8021424:	d101      	bne.n	802142a <_fflush_r+0x62>
 8021426:	68ac      	ldr	r4, [r5, #8]
 8021428:	e7df      	b.n	80213ea <_fflush_r+0x22>
 802142a:	4b04      	ldr	r3, [pc, #16]	; (802143c <_fflush_r+0x74>)
 802142c:	429c      	cmp	r4, r3
 802142e:	bf08      	it	eq
 8021430:	68ec      	ldreq	r4, [r5, #12]
 8021432:	e7da      	b.n	80213ea <_fflush_r+0x22>
 8021434:	0802425c 	.word	0x0802425c
 8021438:	0802427c 	.word	0x0802427c
 802143c:	0802423c 	.word	0x0802423c

08021440 <std>:
 8021440:	2300      	movs	r3, #0
 8021442:	b510      	push	{r4, lr}
 8021444:	4604      	mov	r4, r0
 8021446:	e9c0 3300 	strd	r3, r3, [r0]
 802144a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802144e:	6083      	str	r3, [r0, #8]
 8021450:	8181      	strh	r1, [r0, #12]
 8021452:	6643      	str	r3, [r0, #100]	; 0x64
 8021454:	81c2      	strh	r2, [r0, #14]
 8021456:	6183      	str	r3, [r0, #24]
 8021458:	4619      	mov	r1, r3
 802145a:	2208      	movs	r2, #8
 802145c:	305c      	adds	r0, #92	; 0x5c
 802145e:	f7ff f9e1 	bl	8020824 <memset>
 8021462:	4b05      	ldr	r3, [pc, #20]	; (8021478 <std+0x38>)
 8021464:	6263      	str	r3, [r4, #36]	; 0x24
 8021466:	4b05      	ldr	r3, [pc, #20]	; (802147c <std+0x3c>)
 8021468:	62a3      	str	r3, [r4, #40]	; 0x28
 802146a:	4b05      	ldr	r3, [pc, #20]	; (8021480 <std+0x40>)
 802146c:	62e3      	str	r3, [r4, #44]	; 0x2c
 802146e:	4b05      	ldr	r3, [pc, #20]	; (8021484 <std+0x44>)
 8021470:	6224      	str	r4, [r4, #32]
 8021472:	6323      	str	r3, [r4, #48]	; 0x30
 8021474:	bd10      	pop	{r4, pc}
 8021476:	bf00      	nop
 8021478:	08021715 	.word	0x08021715
 802147c:	08021737 	.word	0x08021737
 8021480:	0802176f 	.word	0x0802176f
 8021484:	08021793 	.word	0x08021793

08021488 <_cleanup_r>:
 8021488:	4901      	ldr	r1, [pc, #4]	; (8021490 <_cleanup_r+0x8>)
 802148a:	f000 b8af 	b.w	80215ec <_fwalk_reent>
 802148e:	bf00      	nop
 8021490:	080213c9 	.word	0x080213c9

08021494 <__sfmoreglue>:
 8021494:	b570      	push	{r4, r5, r6, lr}
 8021496:	2268      	movs	r2, #104	; 0x68
 8021498:	1e4d      	subs	r5, r1, #1
 802149a:	4355      	muls	r5, r2
 802149c:	460e      	mov	r6, r1
 802149e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80214a2:	f7ff fa33 	bl	802090c <_malloc_r>
 80214a6:	4604      	mov	r4, r0
 80214a8:	b140      	cbz	r0, 80214bc <__sfmoreglue+0x28>
 80214aa:	2100      	movs	r1, #0
 80214ac:	e9c0 1600 	strd	r1, r6, [r0]
 80214b0:	300c      	adds	r0, #12
 80214b2:	60a0      	str	r0, [r4, #8]
 80214b4:	f105 0268 	add.w	r2, r5, #104	; 0x68
 80214b8:	f7ff f9b4 	bl	8020824 <memset>
 80214bc:	4620      	mov	r0, r4
 80214be:	bd70      	pop	{r4, r5, r6, pc}

080214c0 <__sfp_lock_acquire>:
 80214c0:	4801      	ldr	r0, [pc, #4]	; (80214c8 <__sfp_lock_acquire+0x8>)
 80214c2:	f000 b8b3 	b.w	802162c <__retarget_lock_acquire_recursive>
 80214c6:	bf00      	nop
 80214c8:	200120e6 	.word	0x200120e6

080214cc <__sfp_lock_release>:
 80214cc:	4801      	ldr	r0, [pc, #4]	; (80214d4 <__sfp_lock_release+0x8>)
 80214ce:	f000 b8af 	b.w	8021630 <__retarget_lock_release_recursive>
 80214d2:	bf00      	nop
 80214d4:	200120e6 	.word	0x200120e6

080214d8 <__sinit_lock_acquire>:
 80214d8:	4801      	ldr	r0, [pc, #4]	; (80214e0 <__sinit_lock_acquire+0x8>)
 80214da:	f000 b8a7 	b.w	802162c <__retarget_lock_acquire_recursive>
 80214de:	bf00      	nop
 80214e0:	200120e7 	.word	0x200120e7

080214e4 <__sinit_lock_release>:
 80214e4:	4801      	ldr	r0, [pc, #4]	; (80214ec <__sinit_lock_release+0x8>)
 80214e6:	f000 b8a3 	b.w	8021630 <__retarget_lock_release_recursive>
 80214ea:	bf00      	nop
 80214ec:	200120e7 	.word	0x200120e7

080214f0 <__sinit>:
 80214f0:	b510      	push	{r4, lr}
 80214f2:	4604      	mov	r4, r0
 80214f4:	f7ff fff0 	bl	80214d8 <__sinit_lock_acquire>
 80214f8:	69a3      	ldr	r3, [r4, #24]
 80214fa:	b11b      	cbz	r3, 8021504 <__sinit+0x14>
 80214fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8021500:	f7ff bff0 	b.w	80214e4 <__sinit_lock_release>
 8021504:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8021508:	6523      	str	r3, [r4, #80]	; 0x50
 802150a:	4b13      	ldr	r3, [pc, #76]	; (8021558 <__sinit+0x68>)
 802150c:	4a13      	ldr	r2, [pc, #76]	; (802155c <__sinit+0x6c>)
 802150e:	681b      	ldr	r3, [r3, #0]
 8021510:	62a2      	str	r2, [r4, #40]	; 0x28
 8021512:	42a3      	cmp	r3, r4
 8021514:	bf04      	itt	eq
 8021516:	2301      	moveq	r3, #1
 8021518:	61a3      	streq	r3, [r4, #24]
 802151a:	4620      	mov	r0, r4
 802151c:	f000 f820 	bl	8021560 <__sfp>
 8021520:	6060      	str	r0, [r4, #4]
 8021522:	4620      	mov	r0, r4
 8021524:	f000 f81c 	bl	8021560 <__sfp>
 8021528:	60a0      	str	r0, [r4, #8]
 802152a:	4620      	mov	r0, r4
 802152c:	f000 f818 	bl	8021560 <__sfp>
 8021530:	2200      	movs	r2, #0
 8021532:	60e0      	str	r0, [r4, #12]
 8021534:	2104      	movs	r1, #4
 8021536:	6860      	ldr	r0, [r4, #4]
 8021538:	f7ff ff82 	bl	8021440 <std>
 802153c:	68a0      	ldr	r0, [r4, #8]
 802153e:	2201      	movs	r2, #1
 8021540:	2109      	movs	r1, #9
 8021542:	f7ff ff7d 	bl	8021440 <std>
 8021546:	68e0      	ldr	r0, [r4, #12]
 8021548:	2202      	movs	r2, #2
 802154a:	2112      	movs	r1, #18
 802154c:	f7ff ff78 	bl	8021440 <std>
 8021550:	2301      	movs	r3, #1
 8021552:	61a3      	str	r3, [r4, #24]
 8021554:	e7d2      	b.n	80214fc <__sinit+0xc>
 8021556:	bf00      	nop
 8021558:	08024200 	.word	0x08024200
 802155c:	08021489 	.word	0x08021489

08021560 <__sfp>:
 8021560:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8021562:	4607      	mov	r7, r0
 8021564:	f7ff ffac 	bl	80214c0 <__sfp_lock_acquire>
 8021568:	4b1e      	ldr	r3, [pc, #120]	; (80215e4 <__sfp+0x84>)
 802156a:	681e      	ldr	r6, [r3, #0]
 802156c:	69b3      	ldr	r3, [r6, #24]
 802156e:	b913      	cbnz	r3, 8021576 <__sfp+0x16>
 8021570:	4630      	mov	r0, r6
 8021572:	f7ff ffbd 	bl	80214f0 <__sinit>
 8021576:	3648      	adds	r6, #72	; 0x48
 8021578:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 802157c:	3b01      	subs	r3, #1
 802157e:	d503      	bpl.n	8021588 <__sfp+0x28>
 8021580:	6833      	ldr	r3, [r6, #0]
 8021582:	b30b      	cbz	r3, 80215c8 <__sfp+0x68>
 8021584:	6836      	ldr	r6, [r6, #0]
 8021586:	e7f7      	b.n	8021578 <__sfp+0x18>
 8021588:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 802158c:	b9d5      	cbnz	r5, 80215c4 <__sfp+0x64>
 802158e:	4b16      	ldr	r3, [pc, #88]	; (80215e8 <__sfp+0x88>)
 8021590:	60e3      	str	r3, [r4, #12]
 8021592:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8021596:	6665      	str	r5, [r4, #100]	; 0x64
 8021598:	f000 f847 	bl	802162a <__retarget_lock_init_recursive>
 802159c:	f7ff ff96 	bl	80214cc <__sfp_lock_release>
 80215a0:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80215a4:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80215a8:	6025      	str	r5, [r4, #0]
 80215aa:	61a5      	str	r5, [r4, #24]
 80215ac:	2208      	movs	r2, #8
 80215ae:	4629      	mov	r1, r5
 80215b0:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 80215b4:	f7ff f936 	bl	8020824 <memset>
 80215b8:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 80215bc:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 80215c0:	4620      	mov	r0, r4
 80215c2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80215c4:	3468      	adds	r4, #104	; 0x68
 80215c6:	e7d9      	b.n	802157c <__sfp+0x1c>
 80215c8:	2104      	movs	r1, #4
 80215ca:	4638      	mov	r0, r7
 80215cc:	f7ff ff62 	bl	8021494 <__sfmoreglue>
 80215d0:	4604      	mov	r4, r0
 80215d2:	6030      	str	r0, [r6, #0]
 80215d4:	2800      	cmp	r0, #0
 80215d6:	d1d5      	bne.n	8021584 <__sfp+0x24>
 80215d8:	f7ff ff78 	bl	80214cc <__sfp_lock_release>
 80215dc:	230c      	movs	r3, #12
 80215de:	603b      	str	r3, [r7, #0]
 80215e0:	e7ee      	b.n	80215c0 <__sfp+0x60>
 80215e2:	bf00      	nop
 80215e4:	08024200 	.word	0x08024200
 80215e8:	ffff0001 	.word	0xffff0001

080215ec <_fwalk_reent>:
 80215ec:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80215f0:	4606      	mov	r6, r0
 80215f2:	4688      	mov	r8, r1
 80215f4:	f100 0448 	add.w	r4, r0, #72	; 0x48
 80215f8:	2700      	movs	r7, #0
 80215fa:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80215fe:	f1b9 0901 	subs.w	r9, r9, #1
 8021602:	d505      	bpl.n	8021610 <_fwalk_reent+0x24>
 8021604:	6824      	ldr	r4, [r4, #0]
 8021606:	2c00      	cmp	r4, #0
 8021608:	d1f7      	bne.n	80215fa <_fwalk_reent+0xe>
 802160a:	4638      	mov	r0, r7
 802160c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8021610:	89ab      	ldrh	r3, [r5, #12]
 8021612:	2b01      	cmp	r3, #1
 8021614:	d907      	bls.n	8021626 <_fwalk_reent+0x3a>
 8021616:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 802161a:	3301      	adds	r3, #1
 802161c:	d003      	beq.n	8021626 <_fwalk_reent+0x3a>
 802161e:	4629      	mov	r1, r5
 8021620:	4630      	mov	r0, r6
 8021622:	47c0      	blx	r8
 8021624:	4307      	orrs	r7, r0
 8021626:	3568      	adds	r5, #104	; 0x68
 8021628:	e7e9      	b.n	80215fe <_fwalk_reent+0x12>

0802162a <__retarget_lock_init_recursive>:
 802162a:	4770      	bx	lr

0802162c <__retarget_lock_acquire_recursive>:
 802162c:	4770      	bx	lr

0802162e <__retarget_lock_release>:
 802162e:	4770      	bx	lr

08021630 <__retarget_lock_release_recursive>:
 8021630:	4770      	bx	lr

08021632 <__swhatbuf_r>:
 8021632:	b570      	push	{r4, r5, r6, lr}
 8021634:	460e      	mov	r6, r1
 8021636:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802163a:	2900      	cmp	r1, #0
 802163c:	b096      	sub	sp, #88	; 0x58
 802163e:	4614      	mov	r4, r2
 8021640:	461d      	mov	r5, r3
 8021642:	da08      	bge.n	8021656 <__swhatbuf_r+0x24>
 8021644:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8021648:	2200      	movs	r2, #0
 802164a:	602a      	str	r2, [r5, #0]
 802164c:	061a      	lsls	r2, r3, #24
 802164e:	d410      	bmi.n	8021672 <__swhatbuf_r+0x40>
 8021650:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8021654:	e00e      	b.n	8021674 <__swhatbuf_r+0x42>
 8021656:	466a      	mov	r2, sp
 8021658:	f000 f8c2 	bl	80217e0 <_fstat_r>
 802165c:	2800      	cmp	r0, #0
 802165e:	dbf1      	blt.n	8021644 <__swhatbuf_r+0x12>
 8021660:	9a01      	ldr	r2, [sp, #4]
 8021662:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8021666:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 802166a:	425a      	negs	r2, r3
 802166c:	415a      	adcs	r2, r3
 802166e:	602a      	str	r2, [r5, #0]
 8021670:	e7ee      	b.n	8021650 <__swhatbuf_r+0x1e>
 8021672:	2340      	movs	r3, #64	; 0x40
 8021674:	2000      	movs	r0, #0
 8021676:	6023      	str	r3, [r4, #0]
 8021678:	b016      	add	sp, #88	; 0x58
 802167a:	bd70      	pop	{r4, r5, r6, pc}

0802167c <__smakebuf_r>:
 802167c:	898b      	ldrh	r3, [r1, #12]
 802167e:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8021680:	079d      	lsls	r5, r3, #30
 8021682:	4606      	mov	r6, r0
 8021684:	460c      	mov	r4, r1
 8021686:	d507      	bpl.n	8021698 <__smakebuf_r+0x1c>
 8021688:	f104 0347 	add.w	r3, r4, #71	; 0x47
 802168c:	6023      	str	r3, [r4, #0]
 802168e:	6123      	str	r3, [r4, #16]
 8021690:	2301      	movs	r3, #1
 8021692:	6163      	str	r3, [r4, #20]
 8021694:	b002      	add	sp, #8
 8021696:	bd70      	pop	{r4, r5, r6, pc}
 8021698:	ab01      	add	r3, sp, #4
 802169a:	466a      	mov	r2, sp
 802169c:	f7ff ffc9 	bl	8021632 <__swhatbuf_r>
 80216a0:	9900      	ldr	r1, [sp, #0]
 80216a2:	4605      	mov	r5, r0
 80216a4:	4630      	mov	r0, r6
 80216a6:	f7ff f931 	bl	802090c <_malloc_r>
 80216aa:	b948      	cbnz	r0, 80216c0 <__smakebuf_r+0x44>
 80216ac:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80216b0:	059a      	lsls	r2, r3, #22
 80216b2:	d4ef      	bmi.n	8021694 <__smakebuf_r+0x18>
 80216b4:	f023 0303 	bic.w	r3, r3, #3
 80216b8:	f043 0302 	orr.w	r3, r3, #2
 80216bc:	81a3      	strh	r3, [r4, #12]
 80216be:	e7e3      	b.n	8021688 <__smakebuf_r+0xc>
 80216c0:	4b0d      	ldr	r3, [pc, #52]	; (80216f8 <__smakebuf_r+0x7c>)
 80216c2:	62b3      	str	r3, [r6, #40]	; 0x28
 80216c4:	89a3      	ldrh	r3, [r4, #12]
 80216c6:	6020      	str	r0, [r4, #0]
 80216c8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80216cc:	81a3      	strh	r3, [r4, #12]
 80216ce:	9b00      	ldr	r3, [sp, #0]
 80216d0:	6163      	str	r3, [r4, #20]
 80216d2:	9b01      	ldr	r3, [sp, #4]
 80216d4:	6120      	str	r0, [r4, #16]
 80216d6:	b15b      	cbz	r3, 80216f0 <__smakebuf_r+0x74>
 80216d8:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80216dc:	4630      	mov	r0, r6
 80216de:	f000 f891 	bl	8021804 <_isatty_r>
 80216e2:	b128      	cbz	r0, 80216f0 <__smakebuf_r+0x74>
 80216e4:	89a3      	ldrh	r3, [r4, #12]
 80216e6:	f023 0303 	bic.w	r3, r3, #3
 80216ea:	f043 0301 	orr.w	r3, r3, #1
 80216ee:	81a3      	strh	r3, [r4, #12]
 80216f0:	89a0      	ldrh	r0, [r4, #12]
 80216f2:	4305      	orrs	r5, r0
 80216f4:	81a5      	strh	r5, [r4, #12]
 80216f6:	e7cd      	b.n	8021694 <__smakebuf_r+0x18>
 80216f8:	08021489 	.word	0x08021489

080216fc <__malloc_lock>:
 80216fc:	4801      	ldr	r0, [pc, #4]	; (8021704 <__malloc_lock+0x8>)
 80216fe:	f7ff bf95 	b.w	802162c <__retarget_lock_acquire_recursive>
 8021702:	bf00      	nop
 8021704:	200120e5 	.word	0x200120e5

08021708 <__malloc_unlock>:
 8021708:	4801      	ldr	r0, [pc, #4]	; (8021710 <__malloc_unlock+0x8>)
 802170a:	f7ff bf91 	b.w	8021630 <__retarget_lock_release_recursive>
 802170e:	bf00      	nop
 8021710:	200120e5 	.word	0x200120e5

08021714 <__sread>:
 8021714:	b510      	push	{r4, lr}
 8021716:	460c      	mov	r4, r1
 8021718:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802171c:	f000 f894 	bl	8021848 <_read_r>
 8021720:	2800      	cmp	r0, #0
 8021722:	bfab      	itete	ge
 8021724:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8021726:	89a3      	ldrhlt	r3, [r4, #12]
 8021728:	181b      	addge	r3, r3, r0
 802172a:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 802172e:	bfac      	ite	ge
 8021730:	6563      	strge	r3, [r4, #84]	; 0x54
 8021732:	81a3      	strhlt	r3, [r4, #12]
 8021734:	bd10      	pop	{r4, pc}

08021736 <__swrite>:
 8021736:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 802173a:	461f      	mov	r7, r3
 802173c:	898b      	ldrh	r3, [r1, #12]
 802173e:	05db      	lsls	r3, r3, #23
 8021740:	4605      	mov	r5, r0
 8021742:	460c      	mov	r4, r1
 8021744:	4616      	mov	r6, r2
 8021746:	d505      	bpl.n	8021754 <__swrite+0x1e>
 8021748:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802174c:	2302      	movs	r3, #2
 802174e:	2200      	movs	r2, #0
 8021750:	f000 f868 	bl	8021824 <_lseek_r>
 8021754:	89a3      	ldrh	r3, [r4, #12]
 8021756:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802175a:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 802175e:	81a3      	strh	r3, [r4, #12]
 8021760:	4632      	mov	r2, r6
 8021762:	463b      	mov	r3, r7
 8021764:	4628      	mov	r0, r5
 8021766:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802176a:	f000 b817 	b.w	802179c <_write_r>

0802176e <__sseek>:
 802176e:	b510      	push	{r4, lr}
 8021770:	460c      	mov	r4, r1
 8021772:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021776:	f000 f855 	bl	8021824 <_lseek_r>
 802177a:	1c43      	adds	r3, r0, #1
 802177c:	89a3      	ldrh	r3, [r4, #12]
 802177e:	bf15      	itete	ne
 8021780:	6560      	strne	r0, [r4, #84]	; 0x54
 8021782:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8021786:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 802178a:	81a3      	strheq	r3, [r4, #12]
 802178c:	bf18      	it	ne
 802178e:	81a3      	strhne	r3, [r4, #12]
 8021790:	bd10      	pop	{r4, pc}

08021792 <__sclose>:
 8021792:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8021796:	f000 b813 	b.w	80217c0 <_close_r>
	...

0802179c <_write_r>:
 802179c:	b538      	push	{r3, r4, r5, lr}
 802179e:	4d07      	ldr	r5, [pc, #28]	; (80217bc <_write_r+0x20>)
 80217a0:	4604      	mov	r4, r0
 80217a2:	4608      	mov	r0, r1
 80217a4:	4611      	mov	r1, r2
 80217a6:	2200      	movs	r2, #0
 80217a8:	602a      	str	r2, [r5, #0]
 80217aa:	461a      	mov	r2, r3
 80217ac:	f7e1 fc18 	bl	8002fe0 <_write>
 80217b0:	1c43      	adds	r3, r0, #1
 80217b2:	d102      	bne.n	80217ba <_write_r+0x1e>
 80217b4:	682b      	ldr	r3, [r5, #0]
 80217b6:	b103      	cbz	r3, 80217ba <_write_r+0x1e>
 80217b8:	6023      	str	r3, [r4, #0]
 80217ba:	bd38      	pop	{r3, r4, r5, pc}
 80217bc:	200120e8 	.word	0x200120e8

080217c0 <_close_r>:
 80217c0:	b538      	push	{r3, r4, r5, lr}
 80217c2:	4d06      	ldr	r5, [pc, #24]	; (80217dc <_close_r+0x1c>)
 80217c4:	2300      	movs	r3, #0
 80217c6:	4604      	mov	r4, r0
 80217c8:	4608      	mov	r0, r1
 80217ca:	602b      	str	r3, [r5, #0]
 80217cc:	f7e1 fc16 	bl	8002ffc <_close>
 80217d0:	1c43      	adds	r3, r0, #1
 80217d2:	d102      	bne.n	80217da <_close_r+0x1a>
 80217d4:	682b      	ldr	r3, [r5, #0]
 80217d6:	b103      	cbz	r3, 80217da <_close_r+0x1a>
 80217d8:	6023      	str	r3, [r4, #0]
 80217da:	bd38      	pop	{r3, r4, r5, pc}
 80217dc:	200120e8 	.word	0x200120e8

080217e0 <_fstat_r>:
 80217e0:	b538      	push	{r3, r4, r5, lr}
 80217e2:	4d07      	ldr	r5, [pc, #28]	; (8021800 <_fstat_r+0x20>)
 80217e4:	2300      	movs	r3, #0
 80217e6:	4604      	mov	r4, r0
 80217e8:	4608      	mov	r0, r1
 80217ea:	4611      	mov	r1, r2
 80217ec:	602b      	str	r3, [r5, #0]
 80217ee:	f7e1 fc08 	bl	8003002 <_fstat>
 80217f2:	1c43      	adds	r3, r0, #1
 80217f4:	d102      	bne.n	80217fc <_fstat_r+0x1c>
 80217f6:	682b      	ldr	r3, [r5, #0]
 80217f8:	b103      	cbz	r3, 80217fc <_fstat_r+0x1c>
 80217fa:	6023      	str	r3, [r4, #0]
 80217fc:	bd38      	pop	{r3, r4, r5, pc}
 80217fe:	bf00      	nop
 8021800:	200120e8 	.word	0x200120e8

08021804 <_isatty_r>:
 8021804:	b538      	push	{r3, r4, r5, lr}
 8021806:	4d06      	ldr	r5, [pc, #24]	; (8021820 <_isatty_r+0x1c>)
 8021808:	2300      	movs	r3, #0
 802180a:	4604      	mov	r4, r0
 802180c:	4608      	mov	r0, r1
 802180e:	602b      	str	r3, [r5, #0]
 8021810:	f7e1 fbfc 	bl	800300c <_isatty>
 8021814:	1c43      	adds	r3, r0, #1
 8021816:	d102      	bne.n	802181e <_isatty_r+0x1a>
 8021818:	682b      	ldr	r3, [r5, #0]
 802181a:	b103      	cbz	r3, 802181e <_isatty_r+0x1a>
 802181c:	6023      	str	r3, [r4, #0]
 802181e:	bd38      	pop	{r3, r4, r5, pc}
 8021820:	200120e8 	.word	0x200120e8

08021824 <_lseek_r>:
 8021824:	b538      	push	{r3, r4, r5, lr}
 8021826:	4d07      	ldr	r5, [pc, #28]	; (8021844 <_lseek_r+0x20>)
 8021828:	4604      	mov	r4, r0
 802182a:	4608      	mov	r0, r1
 802182c:	4611      	mov	r1, r2
 802182e:	2200      	movs	r2, #0
 8021830:	602a      	str	r2, [r5, #0]
 8021832:	461a      	mov	r2, r3
 8021834:	f7e1 fbec 	bl	8003010 <_lseek>
 8021838:	1c43      	adds	r3, r0, #1
 802183a:	d102      	bne.n	8021842 <_lseek_r+0x1e>
 802183c:	682b      	ldr	r3, [r5, #0]
 802183e:	b103      	cbz	r3, 8021842 <_lseek_r+0x1e>
 8021840:	6023      	str	r3, [r4, #0]
 8021842:	bd38      	pop	{r3, r4, r5, pc}
 8021844:	200120e8 	.word	0x200120e8

08021848 <_read_r>:
 8021848:	b538      	push	{r3, r4, r5, lr}
 802184a:	4d07      	ldr	r5, [pc, #28]	; (8021868 <_read_r+0x20>)
 802184c:	4604      	mov	r4, r0
 802184e:	4608      	mov	r0, r1
 8021850:	4611      	mov	r1, r2
 8021852:	2200      	movs	r2, #0
 8021854:	602a      	str	r2, [r5, #0]
 8021856:	461a      	mov	r2, r3
 8021858:	f7e1 fbb4 	bl	8002fc4 <_read>
 802185c:	1c43      	adds	r3, r0, #1
 802185e:	d102      	bne.n	8021866 <_read_r+0x1e>
 8021860:	682b      	ldr	r3, [r5, #0]
 8021862:	b103      	cbz	r3, 8021866 <_read_r+0x1e>
 8021864:	6023      	str	r3, [r4, #0]
 8021866:	bd38      	pop	{r3, r4, r5, pc}
 8021868:	200120e8 	.word	0x200120e8

0802186c <_init>:
 802186c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802186e:	bf00      	nop
 8021870:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8021872:	bc08      	pop	{r3}
 8021874:	469e      	mov	lr, r3
 8021876:	4770      	bx	lr

08021878 <_fini>:
 8021878:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 802187a:	bf00      	nop
 802187c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 802187e:	bc08      	pop	{r3}
 8021880:	469e      	mov	lr, r3
 8021882:	4770      	bx	lr
