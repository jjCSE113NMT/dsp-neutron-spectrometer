/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/pulsespectrum_screen/PulseSpectrumViewBase.hpp>
#include <touchgfx/canvas_widget_renderer/CanvasWidgetRenderer.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

PulseSpectrumViewBase::PulseSpectrumViewBase() :
    buttonCallback(this, &PulseSpectrumViewBase::buttonCallbackHandler)
{
    touchgfx::CanvasWidgetRenderer::setupBuffer(canvasBuffer, CANVAS_BUFFER_SIZE);
    
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(box1);

    histogram.setPosition(1, -5, 800, 430);
    histogram.setScaleX(1);
    histogram.setScaleY(1);
    histogram.setGraphAreaMargin(3, 68, 0, 29);
    histogram.setGraphAreaPadding(12, 5, 12, 3);
    histogram.setGraphRangeX(0, 999);
    histogram.setGraphRangeY(0, 200);
    histogramMajorXAxisGrid.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    histogramMajorXAxisGrid.setInterval(100);
    histogramMajorXAxisGrid.setLineWidth(1);
    histogramMajorXAxisGrid.setScale(1);
    histogram.addGraphElement(histogramMajorXAxisGrid);

    histogramMajorYAxisGrid.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    histogramMajorYAxisGrid.setInterval(50);
    histogramMajorYAxisGrid.setLineWidth(1);
    histogramMajorYAxisGrid.setScale(1);
    histogram.addGraphElement(histogramMajorYAxisGrid);

    histogramMajorXAxisLabel.setInterval(100);
    histogramMajorXAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_53PD));
    histogramMajorXAxisLabel.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    histogramMajorXAxisLabel.setScale(1);
    histogram.addBottomElement(histogramMajorXAxisLabel);

    histogramMajorYAxisLabel.setInterval(50);
    histogramMajorYAxisLabel.setLabelTypedText(touchgfx::TypedText(T___SINGLEUSE_B0JD));
    histogramMajorYAxisLabel.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    histogramMajorYAxisLabel.setScale(1);
    histogram.addLeftElement(histogramMajorYAxisLabel);

    histogramHistogram1.setColor(touchgfx::Color::getColorFromRGB(20, 151, 197));
    histogramHistogram1.setBarWidth(4);
    histogramHistogram1.setBaseline(0);
    histogram.addGraphElement(histogramHistogram1);


    add(histogram);

    xlabel.setXY(334, 443);
    xlabel.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    xlabel.setLinespacing(0);
    xlabel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ZVUC));
    add(xlabel);

    clearButton.setXY(561, 430);
    clearButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    clearButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_BBKA));
    clearButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    clearButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    clearButton.setAction(buttonCallback);
    add(clearButton);

    ylabel.setXY(1, 210);
    ylabel.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    ylabel.setLinespacing(0);
    ylabel.setRotation(touchgfx::TEXT_ROTATE_270);
    ylabel.setTypedText(touchgfx::TypedText(T___SINGLEUSE_ARHE));
    add(ylabel);

    backButton.setXY(0, 430);
    backButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    backButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_ZEHJ));
    backButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    backButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    backButton.setAction(buttonCallback);
    add(backButton);
}

PulseSpectrumViewBase::~PulseSpectrumViewBase()
{
    touchgfx::CanvasWidgetRenderer::resetBuffer();
}

void PulseSpectrumViewBase::setupScreen()
{

}

void PulseSpectrumViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &backButton)
    {
        //goBack
        //When backButton clicked change screen to Menu
        //Go to Menu with no screen transition
        application().gotoMenuScreenNoTransition();
    }
    if (&src == &clearButton)
    {
        //clearGraph
        //When clearButton clicked call virtual function
        //Call clearGraph
        clearGraph();
    }
}
