/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/pwmsetup_screen/pwmSetupViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

pwmSetupViewBase::pwmSetupViewBase() :
    buttonCallback(this, &pwmSetupViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &pwmSetupViewBase::sliderValueChangedCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(84, 26, 135));
    add(box1);

    backButton.setXY(0, 430);
    backButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    backButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_VHRG));
    backButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    backButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    backButton.setAction(buttonCallback);
    add(backButton);

    testPulseSlider.setXY(74, 92);
    testPulseSlider.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_TRACK_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_FILLER_MEDIUM_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_SLIDER_HORIZONTAL_THICK_ROUNDED_DARK_ID));
    testPulseSlider.setupHorizontalSlider(16, 11, 0, 0, 300);
    testPulseSlider.setValueRange(40, 32750);
    testPulseSlider.setValue(40);
    testPulseSlider.setNewValueCallback(sliderValueChangedCallback);
    add(testPulseSlider);

    pulseStart.setXY(73, 215);
    pulseStart.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    pulseStart.setLabelText(touchgfx::TypedText(T___SINGLEUSE_0JPU));
    pulseStart.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    pulseStart.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    pulseStart.setAction(buttonCallback);
    add(pulseStart);

    pulseStop.setXY(487, 215);
    pulseStop.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID));
    pulseStop.setLabelText(touchgfx::TypedText(T___SINGLEUSE_3GLX));
    pulseStop.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    pulseStop.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    pulseStop.setAction(buttonCallback);
    add(pulseStop);

    textArea1.setXY(500, 83);
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_HDOS));
    add(textArea1);
}

pwmSetupViewBase::~pwmSetupViewBase()
{

}

void pwmSetupViewBase::setupScreen()
{

}

void pwmSetupViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &backButton)
    {
        //Interaction1
        //When backButton clicked change screen to Menu
        //Go to Menu with no screen transition
        application().gotoMenuScreenNoTransition();
    }
    if (&src == &pulseStart)
    {
        //Interaction3
        //When pulseStart clicked call virtual function
        //Call pwmStart
        pwmStart();
    }
    if (&src == &pulseStop)
    {
        //Interaction4
        //When pulseStop clicked call virtual function
        //Call pwmStop
        pwmStop();
    }
}

void pwmSetupViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &testPulseSlider)
    {
        //Interaction2
        //When testPulseSlider value changed call virtual function
        //Call changePWMfreq
        changePWMfreq(value);
    }
}
