/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/menu_screen/MenuViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MenuViewBase::MenuViewBase() :
    buttonCallback(this, &MenuViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    box1.setPosition(0, 0, 800, 480);
    box1.setColor(touchgfx::Color::getColorFromRGB(84, 26, 135));
    add(box1);

    PS_button.setXY(215, 130);
    PS_button.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_LARGE_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_LARGE_ROUND_PRESSED_ID));
    PS_button.setLabelText(touchgfx::TypedText(T___SINGLEUSE_A72K));
    PS_button.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    PS_button.setLabelColorPressed(touchgfx::Color::getColorFromRGB(242, 242, 102));
    PS_button.setAction(buttonCallback);
    add(PS_button);

    pwmMenuButton.setXY(215, 300);
    pwmMenuButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_LARGE_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_LARGE_ROUND_PRESSED_ID));
    pwmMenuButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_P7HY));
    pwmMenuButton.setLabelColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    pwmMenuButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(230, 218, 55));
    pwmMenuButton.setAction(buttonCallback);
    add(pwmMenuButton);
}

MenuViewBase::~MenuViewBase()
{

}

void MenuViewBase::setupScreen()
{

}

void MenuViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &PS_button)
    {
        //Interaction1
        //When PS_button clicked change screen to PulseSpectrum
        //Go to PulseSpectrum with no screen transition
        application().gotoPulseSpectrumScreenNoTransition();
    }
    if (&src == &pwmMenuButton)
    {
        //Interaction2
        //When pwmMenuButton clicked change screen to pwmSetup
        //Go to pwmSetup with no screen transition
        application().gotopwmSetupScreenNoTransition();
    }
}
